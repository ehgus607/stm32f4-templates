; ModuleID = 'libstm32f4.a'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct.NVIC_InitTypeDef = type { i8, i8, i8, i32 }
%struct.DMA_Stream_TypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.DMA_InitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DMA_TypeDef = type { i32, i32, i32, i32 }
%struct.ADC_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ADC_InitTypeDef = type { i32, i32, i32, i32, i32, i32, i8 }
%struct.CAN_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [88 x i32], [3 x %struct.DMA_TypeDef], [2 x %struct.DMA_TypeDef], [12 x i32], i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], [28 x %struct.CAN_FilterRegister_TypeDef] }
%struct.CAN_FilterRegister_TypeDef = type { i32, i32 }
%struct.CAN_InitTypeDef = type { i16, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32 }
%struct.CAN_FilterInitTypeDef = type { i16, i16, i16, i16, i16, i8, i8, i8, i32 }
%struct.CanTxMsg = type { i32, i32, i8, i8, i8, [8 x i8] }
%struct.CanRxMsg = type { i32, i32, i8, i8, i8, [8 x i8], i8 }
%struct.RTC_InitTypeDef = type { i32, i32, i32 }
%struct.RTC_TimeTypeDef = type { i8, i8, i8, i8 }
%struct.RTC_AlarmTypeDef = type { %struct.RTC_TimeTypeDef, i32, i32, i8 }
%struct.FSMC_NORSRAMInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.FSMC_NORSRAMTimingInitTypeDef*, %struct.FSMC_NORSRAMTimingInitTypeDef* }
%struct.FSMC_NORSRAMTimingInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.FSMC_NANDInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, %struct.DMA_TypeDef*, %struct.DMA_TypeDef* }
%struct.FSMC_PCCARDInitTypeDef = type { i32, i32, i32, %struct.DMA_TypeDef*, %struct.DMA_TypeDef*, %struct.DMA_TypeDef* }
%struct.SDIO_InitTypeDef = type { i32, i32, i32, i32, i32, i8 }
%struct.SDIO_CmdInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.CRYP_InitTypeDef = type { i16, i16, i16, i16 }
%struct.CRYP_KeyInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i16, i16, i32, [2 x i32] }
%struct.SPI_TypeDef = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.SPI_InitTypeDef = type { i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.I2S_InitTypeDef = type { i16, i16, i16, i16, i32, i16 }
%struct.CRYP_Context = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.HASH_MsgDigest = type { [5 x i32] }
%struct.HASH_Context = type { i32, i32, i32, [51 x i32] }
%struct.TIM_TypeDef = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, i32, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TIM_TimeBaseInitTypeDef = type { i16, i16, i32, i16, i8 }
%struct.TIM_OCInitTypeDef = type { i16, i16, i16, i32, i16, i16, i16, i16 }
%struct.TIM_ICInitTypeDef = type { i16, i16, i16, i16, i16 }
%struct.TIM_BDTRInitTypeDef = type { i16, i16, i16, i16, i16, i16, i16 }
%struct.USART_TypeDef = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.USART_InitTypeDef = type { i32, i16, i16, i16, i16, i16 }

@APBAHBPrescTable = internal constant [16 x i8] c"\00\00\00\00\01\02\03\04\01\02\03\04\06\07\08\09", align 1, !dbg !0
@switch.table.CAN_TransmitStatus = private unnamed_addr constant [3 x i32] [i32 67108867, i32 134218496, i32 268632064], align 4
@switch.table.CAN_CancelTransmit = private unnamed_addr constant [3 x i32] [i32 128, i32 32768, i32 8388608], align 4
@switch.table.GPIO_DeInit.1 = private unnamed_addr constant [9 x i32] [i32 1, i32 2, i32 4, i32 8, i32 16, i32 32, i32 64, i32 128, i32 256], align 4

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @NVIC_PriorityGroupConfig(i32 %0) local_unnamed_addr #0 !dbg !830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !834, metadata !DIExpression()), !dbg !835
  %2 = or i32 %0, 100270080, !dbg !836
  store volatile i32 %2, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !837, !tbaa !838
  ret void, !dbg !843
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @NVIC_Init(%struct.NVIC_InitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !844 {
  call void @llvm.dbg.value(metadata %struct.NVIC_InitTypeDef* %0, metadata !858, metadata !DIExpression()), !dbg !862
  call void @llvm.dbg.value(metadata i8 0, metadata !859, metadata !DIExpression()), !dbg !862
  call void @llvm.dbg.value(metadata i8 0, metadata !860, metadata !DIExpression()), !dbg !862
  call void @llvm.dbg.value(metadata i8 15, metadata !861, metadata !DIExpression()), !dbg !862
  %2 = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %0, i32 0, i32 3, !dbg !863
  %3 = load i32, i32* %2, align 4, !dbg !863, !tbaa !865
  %4 = icmp eq i32 %3, 0, !dbg !867
  br i1 %4, label %28, label %5, !dbg !868

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !869, !tbaa !838
  %7 = lshr i32 %6, 8, !dbg !871
  %8 = and i32 %7, 7, !dbg !872
  %9 = xor i32 %8, 7, !dbg !872
  call void @llvm.dbg.value(metadata i32 %9, metadata !859, metadata !DIExpression()), !dbg !862
  %10 = sub nsw i32 4, %9, !dbg !873
  call void @llvm.dbg.value(metadata i8 undef, metadata !860, metadata !DIExpression()), !dbg !862
  %11 = lshr i32 15, %9, !dbg !874
  call void @llvm.dbg.value(metadata i32 %11, metadata !861, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !862
  %12 = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %0, i32 0, i32 1, !dbg !875
  %13 = load i8, i8* %12, align 1, !dbg !875, !tbaa !876
  %14 = zext i8 %13 to i32, !dbg !877
  %15 = and i32 %10, 255, !dbg !878
  %16 = shl i32 %14, %15, !dbg !879
  call void @llvm.dbg.value(metadata i32 %16, metadata !859, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !862
  %17 = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %0, i32 0, i32 2, !dbg !880
  %18 = load i8, i8* %17, align 2, !dbg !880, !tbaa !881
  %19 = trunc i32 %11 to i8, !dbg !882
  %20 = and i8 %18, %19, !dbg !882
  %21 = trunc i32 %16 to i8, !dbg !883
  %22 = or i8 %20, %21, !dbg !883
  call void @llvm.dbg.value(metadata i8 %22, metadata !859, metadata !DIExpression()), !dbg !862
  %23 = shl i8 %22, 4, !dbg !884
  call void @llvm.dbg.value(metadata i8 %23, metadata !859, metadata !DIExpression()), !dbg !862
  %24 = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %0, i32 0, i32 0, !dbg !885
  %25 = load i8, i8* %24, align 4, !dbg !885, !tbaa !886
  %26 = zext i8 %25 to i32, !dbg !887
  %27 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %26, !dbg !887
  store volatile i8 %23, i8* %27, align 1, !dbg !888, !tbaa !889
  br label %30, !dbg !890

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.NVIC_InitTypeDef, %struct.NVIC_InitTypeDef* %0, i32 0, i32 0, !dbg !891
  br label %30

30:                                               ; preds = %28, %5
  %31 = phi i8* [ %29, %28 ], [ %24, %5 ]
  %32 = phi [8 x i32]* [ inttoptr (i32 -536813184 to [8 x i32]*), %28 ], [ inttoptr (i32 -536813312 to [8 x i32]*), %5 ]
  %33 = load i8, i8* %31, align 4, !dbg !893, !tbaa !886
  %34 = zext i8 %33 to i32, !dbg !893
  %35 = and i32 %34, 31, !dbg !893
  %36 = shl nuw i32 1, %35, !dbg !893
  %37 = lshr i32 %34, 5, !dbg !893
  %38 = getelementptr inbounds [8 x i32], [8 x i32]* %32, i32 0, i32 %37, !dbg !893
  store volatile i32 %36, i32* %38, align 4, !dbg !893, !tbaa !894
  ret void, !dbg !895
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @NVIC_SetVectorTable(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !900, metadata !DIExpression()), !dbg !902
  call void @llvm.dbg.value(metadata i32 %1, metadata !901, metadata !DIExpression()), !dbg !902
  %3 = and i32 %1, 536870784, !dbg !903
  %4 = or i32 %3, %0, !dbg !904
  store volatile i32 %4, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !905, !tbaa !906
  ret void, !dbg !907
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @NVIC_SystemLPConfig(i8 zeroext %0, i32 %1) local_unnamed_addr #0 !dbg !908 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !912, metadata !DIExpression()), !dbg !914
  call void @llvm.dbg.value(metadata i32 %1, metadata !913, metadata !DIExpression()), !dbg !914
  %3 = icmp eq i32 %1, 0, !dbg !915
  %4 = zext i8 %0 to i32, !dbg !917
  br i1 %3, label %8, label %5, !dbg !918

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !919, !tbaa !921
  %7 = or i32 %6, %4, !dbg !919
  br label %12, !dbg !922

8:                                                ; preds = %2
  %9 = xor i32 %4, -1, !dbg !923
  %10 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !925, !tbaa !921
  %11 = and i32 %10, %9, !dbg !925
  br label %12

12:                                               ; preds = %8, %5
  %13 = phi i32 [ %11, %8 ], [ %7, %5 ]
  store volatile i32 %13, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !917, !tbaa !921
  ret void, !dbg !926
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SysTick_CLKSourceConfig(i32 %0) local_unnamed_addr #0 !dbg !927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !929, metadata !DIExpression()), !dbg !930
  %2 = icmp eq i32 %0, 4, !dbg !931
  %3 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !933, !tbaa !934
  %4 = and i32 %3, -5, !dbg !936
  %5 = select i1 %2, i32 4, i32 0, !dbg !936
  %6 = or i32 %4, %5, !dbg !936
  store volatile i32 %6, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !933, !tbaa !934
  ret void, !dbg !937
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_DeInit(%struct.DMA_Stream_TypeDef* %0) local_unnamed_addr #0 !dbg !938 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !942, metadata !DIExpression()), !dbg !943
  %2 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !944
  %3 = load volatile i32, i32* %2, align 4, !dbg !945, !tbaa !946
  %4 = and i32 %3, -2, !dbg !945
  store volatile i32 %4, i32* %2, align 4, !dbg !945, !tbaa !946
  store volatile i32 0, i32* %2, align 4, !dbg !948, !tbaa !946
  %5 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 1, !dbg !949
  store volatile i32 0, i32* %5, align 4, !dbg !950, !tbaa !951
  %6 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 2, !dbg !952
  store volatile i32 0, i32* %6, align 4, !dbg !953, !tbaa !954
  %7 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 3, !dbg !955
  store volatile i32 0, i32* %7, align 4, !dbg !956, !tbaa !957
  %8 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 4, !dbg !958
  store volatile i32 0, i32* %8, align 4, !dbg !959, !tbaa !960
  %9 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 5, !dbg !961
  store volatile i32 33, i32* %9, align 4, !dbg !962, !tbaa !963
  %10 = ptrtoint %struct.DMA_Stream_TypeDef* %0 to i32, !dbg !964
  switch i32 %10, label %27 [
    i32 1073897488, label %11
    i32 1073897512, label %12
    i32 1073897536, label %13
    i32 1073897560, label %14
    i32 1073897584, label %15
    i32 1073897608, label %16
    i32 1073897632, label %17
    i32 1073897656, label %18
    i32 1073898512, label %19
    i32 1073898536, label %20
    i32 1073898560, label %21
    i32 1073898584, label %22
    i32 1073898608, label %23
    i32 1073898632, label %24
    i32 1073898656, label %25
    i32 1073898680, label %26
  ], !dbg !964

11:                                               ; preds = %1
  store volatile i32 61, i32* inttoptr (i32 1073897480 to i32*), align 8, !dbg !965, !tbaa !968
  br label %27, !dbg !969

12:                                               ; preds = %1
  store volatile i32 3904, i32* inttoptr (i32 1073897480 to i32*), align 8, !dbg !970, !tbaa !968
  br label %27, !dbg !973

13:                                               ; preds = %1
  store volatile i32 3997696, i32* inttoptr (i32 1073897480 to i32*), align 8, !dbg !974, !tbaa !968
  br label %27, !dbg !977

14:                                               ; preds = %1
  store volatile i32 255852544, i32* inttoptr (i32 1073897480 to i32*), align 8, !dbg !978, !tbaa !968
  br label %27, !dbg !981

15:                                               ; preds = %1
  store volatile i32 536870973, i32* inttoptr (i32 1073897484 to i32*), align 4, !dbg !982, !tbaa !985
  br label %27, !dbg !986

16:                                               ; preds = %1
  store volatile i32 536874816, i32* inttoptr (i32 1073897484 to i32*), align 4, !dbg !987, !tbaa !985
  br label %27, !dbg !990

17:                                               ; preds = %1
  store volatile i32 540868608, i32* inttoptr (i32 1073897484 to i32*), align 4, !dbg !991, !tbaa !985
  br label %27, !dbg !994

18:                                               ; preds = %1
  store volatile i32 792723456, i32* inttoptr (i32 1073897484 to i32*), align 4, !dbg !995, !tbaa !985
  br label %27, !dbg !998

19:                                               ; preds = %1
  store volatile i32 61, i32* inttoptr (i32 1073898504 to i32*), align 8, !dbg !999, !tbaa !968
  br label %27, !dbg !1002

20:                                               ; preds = %1
  store volatile i32 3904, i32* inttoptr (i32 1073898504 to i32*), align 8, !dbg !1003, !tbaa !968
  br label %27, !dbg !1006

21:                                               ; preds = %1
  store volatile i32 3997696, i32* inttoptr (i32 1073898504 to i32*), align 8, !dbg !1007, !tbaa !968
  br label %27, !dbg !1010

22:                                               ; preds = %1
  store volatile i32 255852544, i32* inttoptr (i32 1073898504 to i32*), align 8, !dbg !1011, !tbaa !968
  br label %27, !dbg !1014

23:                                               ; preds = %1
  store volatile i32 536870973, i32* inttoptr (i32 1073898508 to i32*), align 4, !dbg !1015, !tbaa !985
  br label %27, !dbg !1018

24:                                               ; preds = %1
  store volatile i32 536874816, i32* inttoptr (i32 1073898508 to i32*), align 4, !dbg !1019, !tbaa !985
  br label %27, !dbg !1022

25:                                               ; preds = %1
  store volatile i32 540868608, i32* inttoptr (i32 1073898508 to i32*), align 4, !dbg !1023, !tbaa !985
  br label %27, !dbg !1026

26:                                               ; preds = %1
  store volatile i32 792723456, i32* inttoptr (i32 1073898508 to i32*), align 4, !dbg !1027, !tbaa !985
  br label %27, !dbg !1031

27:                                               ; preds = %1, %12, %14, %16, %18, %20, %22, %24, %26, %25, %23, %21, %19, %17, %15, %13, %11
  ret void, !dbg !1032
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_Init(%struct.DMA_Stream_TypeDef* %0, %struct.DMA_InitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !1033 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1057, metadata !DIExpression()), !dbg !1060
  call void @llvm.dbg.value(metadata %struct.DMA_InitTypeDef* %1, metadata !1058, metadata !DIExpression()), !dbg !1060
  call void @llvm.dbg.value(metadata i32 0, metadata !1059, metadata !DIExpression()), !dbg !1060
  %3 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1061
  %4 = load volatile i32, i32* %3, align 4, !dbg !1061, !tbaa !946
  call void @llvm.dbg.value(metadata i32 %4, metadata !1059, metadata !DIExpression()), !dbg !1060
  %5 = and i32 %4, -266567617, !dbg !1062
  call void @llvm.dbg.value(metadata i32 %5, metadata !1059, metadata !DIExpression()), !dbg !1060
  %6 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 0, !dbg !1063
  %7 = load i32, i32* %6, align 4, !dbg !1063, !tbaa !1064
  %8 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 3, !dbg !1066
  %9 = load i32, i32* %8, align 4, !dbg !1066, !tbaa !1067
  %10 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 5, !dbg !1068
  %11 = load i32, i32* %10, align 4, !dbg !1068, !tbaa !1069
  %12 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 6, !dbg !1070
  %13 = load i32, i32* %12, align 4, !dbg !1070, !tbaa !1071
  %14 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 7, !dbg !1072
  %15 = load i32, i32* %14, align 4, !dbg !1072, !tbaa !1073
  %16 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 8, !dbg !1074
  %17 = load i32, i32* %16, align 4, !dbg !1074, !tbaa !1075
  %18 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 9, !dbg !1076
  %19 = load i32, i32* %18, align 4, !dbg !1076, !tbaa !1077
  %20 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 10, !dbg !1078
  %21 = load i32, i32* %20, align 4, !dbg !1078, !tbaa !1079
  %22 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 13, !dbg !1080
  %23 = load i32, i32* %22, align 4, !dbg !1080, !tbaa !1081
  %24 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 14, !dbg !1082
  %25 = load i32, i32* %24, align 4, !dbg !1082, !tbaa !1083
  %26 = or i32 %5, %7, !dbg !1084
  %27 = or i32 %26, %9, !dbg !1085
  %28 = or i32 %27, %11, !dbg !1086
  %29 = or i32 %28, %13, !dbg !1087
  %30 = or i32 %29, %15, !dbg !1088
  %31 = or i32 %30, %17, !dbg !1089
  %32 = or i32 %31, %19, !dbg !1090
  %33 = or i32 %32, %21, !dbg !1091
  %34 = or i32 %33, %23, !dbg !1092
  %35 = or i32 %34, %25, !dbg !1093
  call void @llvm.dbg.value(metadata i32 %35, metadata !1059, metadata !DIExpression()), !dbg !1060
  store volatile i32 %35, i32* %3, align 4, !dbg !1094, !tbaa !946
  %36 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 5, !dbg !1095
  %37 = load volatile i32, i32* %36, align 4, !dbg !1095, !tbaa !963
  call void @llvm.dbg.value(metadata i32 %37, metadata !1059, metadata !DIExpression()), !dbg !1060
  %38 = and i32 %37, -8, !dbg !1096
  call void @llvm.dbg.value(metadata i32 %38, metadata !1059, metadata !DIExpression()), !dbg !1060
  %39 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 11, !dbg !1097
  %40 = load i32, i32* %39, align 4, !dbg !1097, !tbaa !1098
  %41 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 12, !dbg !1099
  %42 = load i32, i32* %41, align 4, !dbg !1099, !tbaa !1100
  %43 = or i32 %38, %40, !dbg !1101
  %44 = or i32 %43, %42, !dbg !1102
  call void @llvm.dbg.value(metadata i32 %44, metadata !1059, metadata !DIExpression()), !dbg !1060
  store volatile i32 %44, i32* %36, align 4, !dbg !1103, !tbaa !963
  %45 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 4, !dbg !1104
  %46 = load i32, i32* %45, align 4, !dbg !1104, !tbaa !1105
  %47 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 1, !dbg !1106
  store volatile i32 %46, i32* %47, align 4, !dbg !1107, !tbaa !951
  %48 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 1, !dbg !1108
  %49 = load i32, i32* %48, align 4, !dbg !1108, !tbaa !1109
  %50 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 2, !dbg !1110
  store volatile i32 %49, i32* %50, align 4, !dbg !1111, !tbaa !954
  %51 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %1, i32 0, i32 2, !dbg !1112
  %52 = load i32, i32* %51, align 4, !dbg !1112, !tbaa !1113
  %53 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 3, !dbg !1114
  store volatile i32 %52, i32* %53, align 4, !dbg !1115, !tbaa !957
  ret void, !dbg !1116
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @DMA_StructInit(%struct.DMA_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !1117 {
  call void @llvm.dbg.value(metadata %struct.DMA_InitTypeDef* %0, metadata !1121, metadata !DIExpression()), !dbg !1122
  %2 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 0, !dbg !1123
  store i32 0, i32* %2, align 4, !dbg !1124, !tbaa !1064
  %3 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 1, !dbg !1125
  store i32 0, i32* %3, align 4, !dbg !1126, !tbaa !1109
  %4 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 2, !dbg !1127
  store i32 0, i32* %4, align 4, !dbg !1128, !tbaa !1113
  %5 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 3, !dbg !1129
  store i32 0, i32* %5, align 4, !dbg !1130, !tbaa !1067
  %6 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 4, !dbg !1131
  store i32 0, i32* %6, align 4, !dbg !1132, !tbaa !1105
  %7 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 5, !dbg !1133
  store i32 0, i32* %7, align 4, !dbg !1134, !tbaa !1069
  %8 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 6, !dbg !1135
  store i32 0, i32* %8, align 4, !dbg !1136, !tbaa !1071
  %9 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 7, !dbg !1137
  store i32 0, i32* %9, align 4, !dbg !1138, !tbaa !1073
  %10 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 8, !dbg !1139
  store i32 0, i32* %10, align 4, !dbg !1140, !tbaa !1075
  %11 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 9, !dbg !1141
  store i32 0, i32* %11, align 4, !dbg !1142, !tbaa !1077
  %12 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 10, !dbg !1143
  store i32 0, i32* %12, align 4, !dbg !1144, !tbaa !1079
  %13 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 11, !dbg !1145
  store i32 0, i32* %13, align 4, !dbg !1146, !tbaa !1098
  %14 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 12, !dbg !1147
  store i32 0, i32* %14, align 4, !dbg !1148, !tbaa !1100
  %15 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 13, !dbg !1149
  store i32 0, i32* %15, align 4, !dbg !1150, !tbaa !1081
  %16 = getelementptr inbounds %struct.DMA_InitTypeDef, %struct.DMA_InitTypeDef* %0, i32 0, i32 14, !dbg !1151
  store i32 0, i32* %16, align 4, !dbg !1152, !tbaa !1083
  ret void, !dbg !1153
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_Cmd(%struct.DMA_Stream_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !1154 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1158, metadata !DIExpression()), !dbg !1160
  call void @llvm.dbg.value(metadata i32 %1, metadata !1159, metadata !DIExpression()), !dbg !1160
  %3 = icmp ne i32 %1, 0, !dbg !1161
  %4 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1163
  %5 = load volatile i32, i32* %4, align 4, !dbg !1163, !tbaa !946
  %6 = and i32 %5, -2, !dbg !1164
  %7 = zext i1 %3 to i32, !dbg !1164
  %8 = or i32 %6, %7, !dbg !1164
  store volatile i32 %8, i32* %4, align 4, !dbg !1163, !tbaa !946
  ret void, !dbg !1165
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_PeriphIncOffsetSizeConfig(%struct.DMA_Stream_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !1166 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1170, metadata !DIExpression()), !dbg !1172
  call void @llvm.dbg.value(metadata i32 %1, metadata !1171, metadata !DIExpression()), !dbg !1172
  %3 = icmp eq i32 %1, 0, !dbg !1173
  %4 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1175
  %5 = load volatile i32, i32* %4, align 4, !dbg !1175, !tbaa !946
  %6 = and i32 %5, -32769, !dbg !1176
  %7 = select i1 %3, i32 0, i32 32768, !dbg !1176
  %8 = or i32 %6, %7, !dbg !1176
  store volatile i32 %8, i32* %4, align 4, !dbg !1175, !tbaa !946
  ret void, !dbg !1177
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_FlowControllerConfig(%struct.DMA_Stream_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !1178 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1180, metadata !DIExpression()), !dbg !1182
  call void @llvm.dbg.value(metadata i32 %1, metadata !1181, metadata !DIExpression()), !dbg !1182
  %3 = icmp eq i32 %1, 0, !dbg !1183
  %4 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1185
  %5 = load volatile i32, i32* %4, align 4, !dbg !1185, !tbaa !946
  %6 = and i32 %5, -33, !dbg !1186
  %7 = select i1 %3, i32 0, i32 32, !dbg !1186
  %8 = or i32 %6, %7, !dbg !1186
  store volatile i32 %8, i32* %4, align 4, !dbg !1185, !tbaa !946
  ret void, !dbg !1187
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_SetCurrDataCounter(%struct.DMA_Stream_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !1188 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1192, metadata !DIExpression()), !dbg !1194
  call void @llvm.dbg.value(metadata i16 %1, metadata !1193, metadata !DIExpression()), !dbg !1194
  %3 = zext i16 %1 to i32, !dbg !1195
  %4 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 1, !dbg !1196
  store volatile i32 %3, i32* %4, align 4, !dbg !1197, !tbaa !951
  ret void, !dbg !1198
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @DMA_GetCurrDataCounter(%struct.DMA_Stream_TypeDef* %0) local_unnamed_addr #0 !dbg !1199 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1203, metadata !DIExpression()), !dbg !1204
  %2 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 1, !dbg !1205
  %3 = load volatile i32, i32* %2, align 4, !dbg !1205, !tbaa !951
  %4 = trunc i32 %3 to i16, !dbg !1206
  ret i16 %4, !dbg !1207
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_DoubleBufferModeConfig(%struct.DMA_Stream_TypeDef* %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !1208 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1212, metadata !DIExpression()), !dbg !1215
  call void @llvm.dbg.value(metadata i32 %1, metadata !1213, metadata !DIExpression()), !dbg !1215
  call void @llvm.dbg.value(metadata i32 %2, metadata !1214, metadata !DIExpression()), !dbg !1215
  %4 = icmp eq i32 %2, 0, !dbg !1216
  %5 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1218
  %6 = load volatile i32, i32* %5, align 4, !dbg !1218, !tbaa !946
  %7 = and i32 %6, -524289, !dbg !1219
  %8 = select i1 %4, i32 0, i32 524288, !dbg !1219
  %9 = or i32 %7, %8, !dbg !1219
  store volatile i32 %9, i32* %5, align 4, !dbg !1218, !tbaa !946
  %10 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 4, !dbg !1220
  store volatile i32 %1, i32* %10, align 4, !dbg !1221, !tbaa !960
  ret void, !dbg !1222
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_DoubleBufferModeCmd(%struct.DMA_Stream_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !1223 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1225, metadata !DIExpression()), !dbg !1227
  call void @llvm.dbg.value(metadata i32 %1, metadata !1226, metadata !DIExpression()), !dbg !1227
  %3 = icmp eq i32 %1, 0, !dbg !1228
  %4 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1230
  %5 = load volatile i32, i32* %4, align 4, !dbg !1230, !tbaa !946
  %6 = and i32 %5, -262145, !dbg !1231
  %7 = select i1 %3, i32 0, i32 262144, !dbg !1231
  %8 = or i32 %6, %7, !dbg !1231
  store volatile i32 %8, i32* %4, align 4, !dbg !1230, !tbaa !946
  ret void, !dbg !1232
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_MemoryTargetConfig(%struct.DMA_Stream_TypeDef* %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !1233 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1235, metadata !DIExpression()), !dbg !1238
  call void @llvm.dbg.value(metadata i32 %1, metadata !1236, metadata !DIExpression()), !dbg !1238
  call void @llvm.dbg.value(metadata i32 %2, metadata !1237, metadata !DIExpression()), !dbg !1238
  %4 = icmp eq i32 %2, 0, !dbg !1239
  %5 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 3, !dbg !1241
  %6 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 4, !dbg !1241
  %7 = select i1 %4, i32* %5, i32* %6, !dbg !1241
  store volatile i32 %1, i32* %7, align 4, !dbg !1242, !tbaa !894
  ret void, !dbg !1243
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DMA_GetCurrentMemoryTarget(%struct.DMA_Stream_TypeDef* %0) local_unnamed_addr #0 !dbg !1244 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1248, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i32 0, metadata !1249, metadata !DIExpression()), !dbg !1250
  %2 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1251
  %3 = load volatile i32, i32* %2, align 4, !dbg !1251, !tbaa !946
  %4 = lshr i32 %3, 19
  %5 = and i32 %4, 1
  call void @llvm.dbg.value(metadata i32 %5, metadata !1249, metadata !DIExpression()), !dbg !1250
  ret i32 %5, !dbg !1253
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DMA_GetCmdStatus(%struct.DMA_Stream_TypeDef* %0) local_unnamed_addr #0 !dbg !1254 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1258, metadata !DIExpression()), !dbg !1260
  call void @llvm.dbg.value(metadata i32 0, metadata !1259, metadata !DIExpression()), !dbg !1260
  %2 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1261
  %3 = load volatile i32, i32* %2, align 4, !dbg !1261, !tbaa !946
  %4 = and i32 %3, 1, !dbg !1263
  call void @llvm.dbg.value(metadata i32 %4, metadata !1259, metadata !DIExpression()), !dbg !1260
  ret i32 %4, !dbg !1264
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DMA_GetFIFOStatus(%struct.DMA_Stream_TypeDef* %0) local_unnamed_addr #0 !dbg !1265 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1267, metadata !DIExpression()), !dbg !1269
  call void @llvm.dbg.value(metadata i32 0, metadata !1268, metadata !DIExpression()), !dbg !1269
  %2 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 5, !dbg !1270
  %3 = load volatile i32, i32* %2, align 4, !dbg !1270, !tbaa !963
  %4 = and i32 %3, 56, !dbg !1271
  call void @llvm.dbg.value(metadata i32 %4, metadata !1268, metadata !DIExpression()), !dbg !1269
  ret i32 %4, !dbg !1272
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DMA_GetFlagStatus(%struct.DMA_Stream_TypeDef* readnone %0, i32 %1) local_unnamed_addr #0 !dbg !1273 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1278, metadata !DIExpression()), !dbg !1283
  call void @llvm.dbg.value(metadata i32 %1, metadata !1279, metadata !DIExpression()), !dbg !1283
  call void @llvm.dbg.value(metadata i32 0, metadata !1280, metadata !DIExpression()), !dbg !1283
  call void @llvm.dbg.value(metadata i32 0, metadata !1282, metadata !DIExpression()), !dbg !1283
  %3 = icmp ult %struct.DMA_Stream_TypeDef* %0, inttoptr (i32 1073898512 to %struct.DMA_Stream_TypeDef*), !dbg !1284
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* undef, metadata !1281, metadata !DIExpression()), !dbg !1283
  %4 = and i32 %1, 536870912, !dbg !1286
  %5 = icmp eq i32 %4, 0, !dbg !1288
  %6 = select i1 %3, i32* inttoptr (i32 1073897476 to i32*), i32* inttoptr (i32 1073898500 to i32*), !dbg !1289
  %7 = select i1 %3, i32* inttoptr (i32 1073897472 to i32*), i32* inttoptr (i32 1073898496 to i32*), !dbg !1289
  %8 = select i1 %5, i32* %7, i32* %6, !dbg !1289
  %9 = load volatile i32, i32* %8, align 4, !dbg !1290, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %9, metadata !1282, metadata !DIExpression()), !dbg !1283
  call void @llvm.dbg.value(metadata i32 undef, metadata !1282, metadata !DIExpression()), !dbg !1283
  %10 = and i32 %1, 259854205, !dbg !1291
  %11 = and i32 %10, %9, !dbg !1292
  %12 = icmp ne i32 %11, 0, !dbg !1294
  %13 = zext i1 %12 to i32
  call void @llvm.dbg.value(metadata i32 %13, metadata !1280, metadata !DIExpression()), !dbg !1283
  ret i32 %13, !dbg !1295
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_ClearFlag(%struct.DMA_Stream_TypeDef* readnone %0, i32 %1) local_unnamed_addr #0 !dbg !1296 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1298, metadata !DIExpression()), !dbg !1301
  call void @llvm.dbg.value(metadata i32 %1, metadata !1299, metadata !DIExpression()), !dbg !1301
  %3 = icmp ult %struct.DMA_Stream_TypeDef* %0, inttoptr (i32 1073898512 to %struct.DMA_Stream_TypeDef*), !dbg !1302
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* undef, metadata !1300, metadata !DIExpression()), !dbg !1301
  %4 = and i32 %1, 536870912, !dbg !1304
  %5 = icmp eq i32 %4, 0, !dbg !1306
  %6 = and i32 %1, 259854205, !dbg !1307
  br i1 %5, label %9, label %7, !dbg !1308

7:                                                ; preds = %2
  %8 = select i1 %3, i32* inttoptr (i32 1073897484 to i32*), i32* inttoptr (i32 1073898508 to i32*), !dbg !1309
  store volatile i32 %6, i32* %8, align 4, !dbg !1311, !tbaa !985
  br label %11, !dbg !1312

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* undef, metadata !1300, metadata !DIExpression()), !dbg !1301
  %10 = select i1 %3, i32* inttoptr (i32 1073897480 to i32*), i32* inttoptr (i32 1073898504 to i32*), !dbg !1313
  store volatile i32 %6, i32* %10, align 8, !dbg !1315, !tbaa !968
  br label %11

11:                                               ; preds = %9, %7
  ret void, !dbg !1316
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_ITConfig(%struct.DMA_Stream_TypeDef* %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !1317 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1321, metadata !DIExpression()), !dbg !1324
  call void @llvm.dbg.value(metadata i32 %1, metadata !1322, metadata !DIExpression()), !dbg !1324
  call void @llvm.dbg.value(metadata i32 %2, metadata !1323, metadata !DIExpression()), !dbg !1324
  %4 = and i32 %1, 128, !dbg !1325
  %5 = icmp eq i32 %4, 0, !dbg !1327
  br i1 %5, label %12, label %6, !dbg !1328

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 0, !dbg !1329
  %8 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 5, !dbg !1332
  %9 = load volatile i32, i32* %8, align 4, !dbg !1332, !tbaa !963
  br i1 %7, label %14, label %10, !dbg !1333

10:                                               ; preds = %6
  %11 = or i32 %9, 128, !dbg !1334
  store volatile i32 %11, i32* %8, align 4, !dbg !1334, !tbaa !963
  br label %12, !dbg !1336

12:                                               ; preds = %3, %10
  %13 = icmp eq i32 %1, 128, !dbg !1337
  br i1 %13, label %32, label %19, !dbg !1339

14:                                               ; preds = %6
  %15 = and i32 %9, -129, !dbg !1340
  store volatile i32 %15, i32* %8, align 4, !dbg !1340, !tbaa !963
  %16 = icmp eq i32 %1, 128, !dbg !1337
  br i1 %16, label %32, label %17, !dbg !1339

17:                                               ; preds = %14
  %18 = and i32 %1, 30, !dbg !1342
  br label %26, !dbg !1345

19:                                               ; preds = %12
  %20 = icmp eq i32 %2, 0, !dbg !1346
  %21 = and i32 %1, 30, !dbg !1342
  br i1 %20, label %26, label %22, !dbg !1345

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1347
  %24 = load volatile i32, i32* %23, align 4, !dbg !1349, !tbaa !946
  %25 = or i32 %24, %21, !dbg !1349
  store volatile i32 %25, i32* %23, align 4, !dbg !1349, !tbaa !946
  br label %32, !dbg !1350

26:                                               ; preds = %17, %19
  %27 = phi i32 [ %18, %17 ], [ %21, %19 ]
  %28 = xor i32 %27, -1, !dbg !1351
  %29 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1353
  %30 = load volatile i32, i32* %29, align 4, !dbg !1354, !tbaa !946
  %31 = and i32 %30, %28, !dbg !1354
  store volatile i32 %31, i32* %29, align 4, !dbg !1354, !tbaa !946
  br label %32

32:                                               ; preds = %14, %12, %22, %26
  ret void, !dbg !1355
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DMA_GetITStatus(%struct.DMA_Stream_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !1356 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1361, metadata !DIExpression()), !dbg !1367
  call void @llvm.dbg.value(metadata i32 %1, metadata !1362, metadata !DIExpression()), !dbg !1367
  call void @llvm.dbg.value(metadata i32 0, metadata !1363, metadata !DIExpression()), !dbg !1367
  call void @llvm.dbg.value(metadata i32 0, metadata !1365, metadata !DIExpression()), !dbg !1367
  call void @llvm.dbg.value(metadata i32 0, metadata !1366, metadata !DIExpression()), !dbg !1367
  %3 = icmp ult %struct.DMA_Stream_TypeDef* %0, inttoptr (i32 1073898512 to %struct.DMA_Stream_TypeDef*), !dbg !1368
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* undef, metadata !1364, metadata !DIExpression()), !dbg !1367
  %4 = and i32 %1, 255594300, !dbg !1370
  %5 = icmp eq i32 %4, 0, !dbg !1372
  br i1 %5, label %11, label %6, !dbg !1373

6:                                                ; preds = %2
  %7 = lshr i32 %1, 11, !dbg !1374
  %8 = and i32 %7, 30, !dbg !1376
  call void @llvm.dbg.value(metadata i32 %8, metadata !1365, metadata !DIExpression()), !dbg !1367
  %9 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !1377
  %10 = load volatile i32, i32* %9, align 4, !dbg !1377, !tbaa !946
  call void @llvm.dbg.value(metadata i32 undef, metadata !1366, metadata !DIExpression()), !dbg !1367
  br label %14, !dbg !1378

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 5, !dbg !1379
  %13 = load volatile i32, i32* %12, align 4, !dbg !1379, !tbaa !963
  call void @llvm.dbg.value(metadata i32 %17, metadata !1366, metadata !DIExpression()), !dbg !1367
  br label %14

14:                                               ; preds = %11, %6
  %15 = phi i32 [ 128, %11 ], [ %10, %6 ]
  %16 = phi i32 [ %13, %11 ], [ %8, %6 ]
  %17 = and i32 %16, %15, !dbg !1381
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* undef, metadata !1364, metadata !DIExpression()), !dbg !1367
  call void @llvm.dbg.value(metadata i32 %17, metadata !1366, metadata !DIExpression()), !dbg !1367
  %18 = and i32 %1, 536870912, !dbg !1382
  %19 = icmp eq i32 %18, 0, !dbg !1384
  %20 = select i1 %3, i32* inttoptr (i32 1073897476 to i32*), i32* inttoptr (i32 1073898500 to i32*), !dbg !1385
  %21 = select i1 %3, i32* inttoptr (i32 1073897472 to i32*), i32* inttoptr (i32 1073898496 to i32*), !dbg !1385
  %22 = select i1 %19, i32* %21, i32* %20, !dbg !1385
  %23 = load volatile i32, i32* %22, align 4, !dbg !1386, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %23, metadata !1365, metadata !DIExpression()), !dbg !1367
  call void @llvm.dbg.value(metadata i32 undef, metadata !1365, metadata !DIExpression()), !dbg !1367
  %24 = and i32 %1, 259854205, !dbg !1387
  %25 = and i32 %24, %23, !dbg !1388
  %26 = icmp ne i32 %25, 0, !dbg !1390
  %27 = icmp ne i32 %17, 0
  %28 = and i1 %27, %26, !dbg !1391
  %29 = zext i1 %28 to i32
  call void @llvm.dbg.value(metadata i32 %29, metadata !1363, metadata !DIExpression()), !dbg !1367
  ret i32 %29, !dbg !1392
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DMA_ClearITPendingBit(%struct.DMA_Stream_TypeDef* readnone %0, i32 %1) local_unnamed_addr #0 !dbg !1393 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !1395, metadata !DIExpression()), !dbg !1398
  call void @llvm.dbg.value(metadata i32 %1, metadata !1396, metadata !DIExpression()), !dbg !1398
  %3 = icmp ult %struct.DMA_Stream_TypeDef* %0, inttoptr (i32 1073898512 to %struct.DMA_Stream_TypeDef*), !dbg !1399
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* undef, metadata !1397, metadata !DIExpression()), !dbg !1398
  %4 = and i32 %1, 536870912, !dbg !1401
  %5 = icmp eq i32 %4, 0, !dbg !1403
  %6 = and i32 %1, 259854205, !dbg !1404
  br i1 %5, label %9, label %7, !dbg !1405

7:                                                ; preds = %2
  %8 = select i1 %3, i32* inttoptr (i32 1073897484 to i32*), i32* inttoptr (i32 1073898508 to i32*), !dbg !1406
  store volatile i32 %6, i32* %8, align 4, !dbg !1408, !tbaa !985
  br label %11, !dbg !1409

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* undef, metadata !1397, metadata !DIExpression()), !dbg !1398
  %10 = select i1 %3, i32* inttoptr (i32 1073897480 to i32*), i32* inttoptr (i32 1073898504 to i32*), !dbg !1410
  store volatile i32 %6, i32* %10, align 8, !dbg !1412, !tbaa !968
  br label %11

11:                                               ; preds = %9, %7
  ret void, !dbg !1413
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_DeInit() local_unnamed_addr #0 !dbg !1414 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1417, !tbaa !1418
  %2 = or i32 %1, 1, !dbg !1417
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1417, !tbaa !1418
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1420, !tbaa !1421
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1422, !tbaa !1418
  %4 = and i32 %3, -17367041, !dbg !1422
  store volatile i32 %4, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1422, !tbaa !1418
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1423, !tbaa !1424
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1425, !tbaa !1418
  %6 = and i32 %5, -262145, !dbg !1425
  store volatile i32 %6, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1425, !tbaa !1418
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !1426, !tbaa !1427
  ret void, !dbg !1428
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_HSEConfig(i8 zeroext %0) local_unnamed_addr #0 !dbg !1429 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1433, metadata !DIExpression()), !dbg !1434
  store volatile i8 0, i8* inttoptr (i32 1073887234 to i8*), align 2, !dbg !1435, !tbaa !889
  store volatile i8 %0, i8* inttoptr (i32 1073887234 to i8*), align 2, !dbg !1436, !tbaa !889
  ret void, !dbg !1437
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RCC_WaitForHSEStartUp() local_unnamed_addr #3 !dbg !1438 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !1445
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !1445
  call void @llvm.dbg.declare(metadata i32* %1, metadata !1442, metadata !DIExpression()), !dbg !1446
  store volatile i32 0, i32* %1, align 4, !dbg !1446, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !1443, metadata !DIExpression()), !dbg !1447
  call void @llvm.dbg.value(metadata i32 0, metadata !1444, metadata !DIExpression()), !dbg !1447
  br label %3, !dbg !1448

3:                                                ; preds = %34, %0
  call void @llvm.dbg.value(metadata i8 49, metadata !1449, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1454, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1455, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1456, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 1, metadata !1454, metadata !DIExpression()), !dbg !1457
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1460, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %4, metadata !1455, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 17, metadata !1454, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 %4, metadata !1456, metadata !DIExpression(DW_OP_constu, 17, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1457
  call void @llvm.dbg.value(metadata i32 %4, metadata !1444, metadata !DIExpression(DW_OP_constu, 17, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1447
  %5 = load volatile i32, i32* %1, align 4, !dbg !1462, !tbaa !894
  %6 = add i32 %5, 1, !dbg !1462
  store volatile i32 %6, i32* %1, align 4, !dbg !1462, !tbaa !894
  %7 = load volatile i32, i32* %1, align 4, !dbg !1463, !tbaa !894
  %8 = icmp ne i32 %7, 1280, !dbg !1464
  %9 = and i32 %4, 131072, !dbg !1465
  %10 = icmp eq i32 %9, 0, !dbg !1465
  %11 = and i1 %10, %8, !dbg !1465
  br i1 %11, label %16, label %12, !dbg !1466, !llvm.loop !1467

12:                                               ; preds = %34, %25, %16, %3
  call void @llvm.dbg.value(metadata i8 49, metadata !1449, metadata !DIExpression()), !dbg !1469
  call void @llvm.dbg.value(metadata i32 0, metadata !1454, metadata !DIExpression()), !dbg !1469
  call void @llvm.dbg.value(metadata i32 0, metadata !1455, metadata !DIExpression()), !dbg !1469
  call void @llvm.dbg.value(metadata i32 0, metadata !1456, metadata !DIExpression()), !dbg !1469
  call void @llvm.dbg.value(metadata i32 1, metadata !1454, metadata !DIExpression()), !dbg !1469
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1472, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %13, metadata !1455, metadata !DIExpression()), !dbg !1469
  call void @llvm.dbg.value(metadata i32 17, metadata !1454, metadata !DIExpression()), !dbg !1469
  call void @llvm.dbg.value(metadata i32 %13, metadata !1456, metadata !DIExpression(DW_OP_constu, 17, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1469
  %14 = lshr i32 %13, 17
  %15 = and i32 %14, 1
  call void @llvm.dbg.value(metadata i32 %15, metadata !1443, metadata !DIExpression()), !dbg !1447
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !1473
  ret i32 %15, !dbg !1474

16:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8 49, metadata !1449, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1454, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1455, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1456, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 1, metadata !1454, metadata !DIExpression()), !dbg !1457
  %17 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1460, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %17, metadata !1455, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 17, metadata !1454, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 %17, metadata !1456, metadata !DIExpression(DW_OP_constu, 17, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1457
  call void @llvm.dbg.value(metadata i32 %17, metadata !1444, metadata !DIExpression(DW_OP_constu, 17, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1447
  %18 = load volatile i32, i32* %1, align 4, !dbg !1462, !tbaa !894
  %19 = add i32 %18, 1, !dbg !1462
  store volatile i32 %19, i32* %1, align 4, !dbg !1462, !tbaa !894
  %20 = load volatile i32, i32* %1, align 4, !dbg !1463, !tbaa !894
  %21 = icmp ne i32 %20, 1280, !dbg !1464
  %22 = and i32 %17, 131072, !dbg !1465
  %23 = icmp eq i32 %22, 0, !dbg !1465
  %24 = and i1 %23, %21, !dbg !1465
  br i1 %24, label %25, label %12, !dbg !1466, !llvm.loop !1467

25:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i8 49, metadata !1449, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1454, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1455, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1456, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 1, metadata !1454, metadata !DIExpression()), !dbg !1457
  %26 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1460, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %26, metadata !1455, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 17, metadata !1454, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 %26, metadata !1456, metadata !DIExpression(DW_OP_constu, 17, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1457
  call void @llvm.dbg.value(metadata i32 %26, metadata !1444, metadata !DIExpression(DW_OP_constu, 17, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1447
  %27 = load volatile i32, i32* %1, align 4, !dbg !1462, !tbaa !894
  %28 = add i32 %27, 1, !dbg !1462
  store volatile i32 %28, i32* %1, align 4, !dbg !1462, !tbaa !894
  %29 = load volatile i32, i32* %1, align 4, !dbg !1463, !tbaa !894
  %30 = icmp ne i32 %29, 1280, !dbg !1464
  %31 = and i32 %26, 131072, !dbg !1465
  %32 = icmp eq i32 %31, 0, !dbg !1465
  %33 = and i1 %32, %30, !dbg !1465
  br i1 %33, label %34, label %12, !dbg !1466, !llvm.loop !1467

34:                                               ; preds = %25
  call void @llvm.dbg.value(metadata i8 49, metadata !1449, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1454, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1455, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 0, metadata !1456, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 1, metadata !1454, metadata !DIExpression()), !dbg !1457
  %35 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1460, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %35, metadata !1455, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 17, metadata !1454, metadata !DIExpression()), !dbg !1457
  call void @llvm.dbg.value(metadata i32 %35, metadata !1456, metadata !DIExpression(DW_OP_constu, 17, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1457
  call void @llvm.dbg.value(metadata i32 %35, metadata !1444, metadata !DIExpression(DW_OP_constu, 17, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1447
  %36 = load volatile i32, i32* %1, align 4, !dbg !1462, !tbaa !894
  %37 = add i32 %36, 1, !dbg !1462
  store volatile i32 %37, i32* %1, align 4, !dbg !1462, !tbaa !894
  %38 = load volatile i32, i32* %1, align 4, !dbg !1463, !tbaa !894
  %39 = icmp ne i32 %38, 1280, !dbg !1464
  %40 = and i32 %35, 131072, !dbg !1465
  %41 = icmp eq i32 %40, 0, !dbg !1465
  %42 = and i1 %41, %39, !dbg !1465
  br i1 %42, label %3, label %12, !dbg !1466, !llvm.loop !1467
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RCC_GetFlagStatus(i8 zeroext %0) local_unnamed_addr #0 !dbg !1450 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1449, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i32 0, metadata !1454, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i32 0, metadata !1455, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i32 0, metadata !1456, metadata !DIExpression()), !dbg !1475
  %2 = zext i8 %0 to i32, !dbg !1476
  %3 = lshr i32 %2, 5, !dbg !1477
  call void @llvm.dbg.value(metadata i32 %3, metadata !1454, metadata !DIExpression()), !dbg !1475
  switch i32 %3, label %5 [
    i32 1, label %6
    i32 2, label %4
  ], !dbg !1478

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !1455, metadata !DIExpression()), !dbg !1475
  br label %6, !dbg !1479

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !1455, metadata !DIExpression()), !dbg !1475
  br label %6

6:                                                ; preds = %1, %4, %5
  %7 = phi i32* [ inttoptr (i32 1073887344 to i32*), %4 ], [ inttoptr (i32 1073887348 to i32*), %5 ], [ inttoptr (i32 1073887232 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 4, !dbg !1482, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %8, metadata !1455, metadata !DIExpression()), !dbg !1475
  %9 = and i32 %2, 31, !dbg !1483
  call void @llvm.dbg.value(metadata i32 %9, metadata !1454, metadata !DIExpression()), !dbg !1475
  %10 = shl nuw i32 1, %9, !dbg !1484
  %11 = and i32 %8, %10, !dbg !1486
  %12 = icmp ne i32 %11, 0, !dbg !1487
  %13 = zext i1 %12 to i32
  call void @llvm.dbg.value(metadata i32 %13, metadata !1456, metadata !DIExpression()), !dbg !1475
  ret i32 %13, !dbg !1488
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AdjustHSICalibrationValue(i8 zeroext %0) local_unnamed_addr #0 !dbg !1489 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1491, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i32 0, metadata !1492, metadata !DIExpression()), !dbg !1493
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1494, !tbaa !1418
  call void @llvm.dbg.value(metadata i32 %2, metadata !1492, metadata !DIExpression()), !dbg !1493
  %3 = and i32 %2, -249, !dbg !1495
  call void @llvm.dbg.value(metadata i32 %3, metadata !1492, metadata !DIExpression()), !dbg !1493
  %4 = zext i8 %0 to i32, !dbg !1496
  %5 = shl nuw nsw i32 %4, 3, !dbg !1497
  %6 = or i32 %3, %5, !dbg !1498
  call void @llvm.dbg.value(metadata i32 %6, metadata !1492, metadata !DIExpression()), !dbg !1493
  store volatile i32 %6, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !1499, !tbaa !1418
  ret void, !dbg !1500
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_HSICmd(i32 %0) local_unnamed_addr #0 !dbg !1501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1505, metadata !DIExpression()), !dbg !1506
  store volatile i32 %0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !1507, !tbaa !894
  ret void, !dbg !1508
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_LSEConfig(i8 zeroext %0) local_unnamed_addr #0 !dbg !1509 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1511, metadata !DIExpression()), !dbg !1512
  store volatile i8 0, i8* inttoptr (i32 1073887344 to i8*), align 16, !dbg !1513, !tbaa !889
  store volatile i8 0, i8* inttoptr (i32 1073887344 to i8*), align 16, !dbg !1514, !tbaa !889
  switch i8 %0, label %5 [
    i8 1, label %3
    i8 4, label %2
  ], !dbg !1515

2:                                                ; preds = %1
  br label %3, !dbg !1516

3:                                                ; preds = %1, %2
  %4 = phi i8 [ 5, %2 ], [ %0, %1 ]
  store volatile i8 %4, i8* inttoptr (i32 1073887344 to i8*), align 16, !dbg !1518, !tbaa !889
  br label %5, !dbg !1519

5:                                                ; preds = %3, %1
  ret void, !dbg !1519
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_LSICmd(i32 %0) local_unnamed_addr #0 !dbg !1520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1522, metadata !DIExpression()), !dbg !1523
  store volatile i32 %0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !1524, !tbaa !894
  ret void, !dbg !1525
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_PLLConfig(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 !dbg !1526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1530, metadata !DIExpression()), !dbg !1535
  call void @llvm.dbg.value(metadata i32 %1, metadata !1531, metadata !DIExpression()), !dbg !1535
  call void @llvm.dbg.value(metadata i32 %2, metadata !1532, metadata !DIExpression()), !dbg !1535
  call void @llvm.dbg.value(metadata i32 %3, metadata !1533, metadata !DIExpression()), !dbg !1535
  call void @llvm.dbg.value(metadata i32 %4, metadata !1534, metadata !DIExpression()), !dbg !1535
  %6 = shl i32 %2, 6, !dbg !1536
  %7 = lshr i32 %3, 1, !dbg !1537
  %8 = shl i32 %7, 16, !dbg !1538
  %9 = add i32 %8, -65536, !dbg !1538
  %10 = shl i32 %4, 24, !dbg !1539
  %11 = or i32 %1, %0, !dbg !1540
  %12 = or i32 %11, %6, !dbg !1541
  %13 = or i32 %12, %10, !dbg !1542
  %14 = or i32 %13, %9, !dbg !1543
  store volatile i32 %14, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1544, !tbaa !1424
  ret void, !dbg !1545
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_PLLCmd(i32 %0) local_unnamed_addr #0 !dbg !1546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1548, metadata !DIExpression()), !dbg !1549
  store volatile i32 %0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !1550, !tbaa !894
  ret void, !dbg !1551
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_PLLI2SConfig(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1554, metadata !DIExpression()), !dbg !1556
  call void @llvm.dbg.value(metadata i32 %1, metadata !1555, metadata !DIExpression()), !dbg !1556
  %3 = shl i32 %0, 6, !dbg !1557
  %4 = shl i32 %1, 28, !dbg !1558
  %5 = or i32 %4, %3, !dbg !1559
  store volatile i32 %5, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !1560, !tbaa !1561
  ret void, !dbg !1562
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_PLLI2SCmd(i32 %0) local_unnamed_addr #0 !dbg !1563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1565, metadata !DIExpression()), !dbg !1566
  store volatile i32 %0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !1567, !tbaa !894
  ret void, !dbg !1568
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_ClockSecuritySystemCmd(i32 %0) local_unnamed_addr #0 !dbg !1569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1571, metadata !DIExpression()), !dbg !1572
  store volatile i32 %0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !1573, !tbaa !894
  ret void, !dbg !1574
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_MCO1Config(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1577, metadata !DIExpression()), !dbg !1580
  call void @llvm.dbg.value(metadata i32 %1, metadata !1578, metadata !DIExpression()), !dbg !1580
  call void @llvm.dbg.value(metadata i32 0, metadata !1579, metadata !DIExpression()), !dbg !1580
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1581, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %3, metadata !1579, metadata !DIExpression()), !dbg !1580
  %4 = and i32 %3, -123731969, !dbg !1582
  call void @llvm.dbg.value(metadata i32 %4, metadata !1579, metadata !DIExpression()), !dbg !1580
  %5 = or i32 %1, %0, !dbg !1583
  %6 = or i32 %5, %4, !dbg !1584
  call void @llvm.dbg.value(metadata i32 %6, metadata !1579, metadata !DIExpression()), !dbg !1580
  store volatile i32 %6, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1585, !tbaa !1421
  ret void, !dbg !1586
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_MCO2Config(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1589, metadata !DIExpression()), !dbg !1592
  call void @llvm.dbg.value(metadata i32 %1, metadata !1590, metadata !DIExpression()), !dbg !1592
  call void @llvm.dbg.value(metadata i32 0, metadata !1591, metadata !DIExpression()), !dbg !1592
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1593, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %3, metadata !1591, metadata !DIExpression()), !dbg !1592
  %4 = and i32 %3, 134217727, !dbg !1594
  call void @llvm.dbg.value(metadata i32 %4, metadata !1591, metadata !DIExpression()), !dbg !1592
  %5 = or i32 %1, %0, !dbg !1595
  %6 = or i32 %5, %4, !dbg !1596
  call void @llvm.dbg.value(metadata i32 %6, metadata !1591, metadata !DIExpression()), !dbg !1592
  store volatile i32 %6, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1597, !tbaa !1421
  ret void, !dbg !1598
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_SYSCLKConfig(i32 %0) local_unnamed_addr #0 !dbg !1599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1601, metadata !DIExpression()), !dbg !1603
  call void @llvm.dbg.value(metadata i32 0, metadata !1602, metadata !DIExpression()), !dbg !1603
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1604, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %2, metadata !1602, metadata !DIExpression()), !dbg !1603
  %3 = and i32 %2, -4, !dbg !1605
  call void @llvm.dbg.value(metadata i32 %3, metadata !1602, metadata !DIExpression()), !dbg !1603
  %4 = or i32 %3, %0, !dbg !1606
  call void @llvm.dbg.value(metadata i32 %4, metadata !1602, metadata !DIExpression()), !dbg !1603
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1607, !tbaa !1421
  ret void, !dbg !1608
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @RCC_GetSYSCLKSource() local_unnamed_addr #0 !dbg !1609 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1612, !tbaa !1421
  %2 = trunc i32 %1 to i8, !dbg !1613
  %3 = and i8 %2, 12, !dbg !1613
  ret i8 %3, !dbg !1614
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_HCLKConfig(i32 %0) local_unnamed_addr #0 !dbg !1615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1617, metadata !DIExpression()), !dbg !1619
  call void @llvm.dbg.value(metadata i32 0, metadata !1618, metadata !DIExpression()), !dbg !1619
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1620, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %2, metadata !1618, metadata !DIExpression()), !dbg !1619
  %3 = and i32 %2, -241, !dbg !1621
  call void @llvm.dbg.value(metadata i32 %3, metadata !1618, metadata !DIExpression()), !dbg !1619
  %4 = or i32 %3, %0, !dbg !1622
  call void @llvm.dbg.value(metadata i32 %4, metadata !1618, metadata !DIExpression()), !dbg !1619
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1623, !tbaa !1421
  ret void, !dbg !1624
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_PCLK1Config(i32 %0) local_unnamed_addr #0 !dbg !1625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1627, metadata !DIExpression()), !dbg !1629
  call void @llvm.dbg.value(metadata i32 0, metadata !1628, metadata !DIExpression()), !dbg !1629
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1630, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %2, metadata !1628, metadata !DIExpression()), !dbg !1629
  %3 = and i32 %2, -7169, !dbg !1631
  call void @llvm.dbg.value(metadata i32 %3, metadata !1628, metadata !DIExpression()), !dbg !1629
  %4 = or i32 %3, %0, !dbg !1632
  call void @llvm.dbg.value(metadata i32 %4, metadata !1628, metadata !DIExpression()), !dbg !1629
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1633, !tbaa !1421
  ret void, !dbg !1634
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_PCLK2Config(i32 %0) local_unnamed_addr #0 !dbg !1635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1637, metadata !DIExpression()), !dbg !1639
  call void @llvm.dbg.value(metadata i32 0, metadata !1638, metadata !DIExpression()), !dbg !1639
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1640, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %2, metadata !1638, metadata !DIExpression()), !dbg !1639
  %3 = and i32 %2, -57345, !dbg !1641
  call void @llvm.dbg.value(metadata i32 %3, metadata !1638, metadata !DIExpression()), !dbg !1639
  %4 = shl i32 %0, 3, !dbg !1642
  %5 = or i32 %3, %4, !dbg !1643
  call void @llvm.dbg.value(metadata i32 %5, metadata !1638, metadata !DIExpression()), !dbg !1639
  store volatile i32 %5, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1644, !tbaa !1421
  ret void, !dbg !1645
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_GetClocksFreq(%struct.DMA_TypeDef* nocapture %0) local_unnamed_addr #0 !dbg !1646 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !1659, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.value(metadata i32 0, metadata !1660, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.value(metadata i32 0, metadata !1661, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.value(metadata i32 0, metadata !1662, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.value(metadata i32 2, metadata !1663, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.value(metadata i32 0, metadata !1664, metadata !DIExpression()), !dbg !1666
  call void @llvm.dbg.value(metadata i32 2, metadata !1665, metadata !DIExpression()), !dbg !1666
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1667, !tbaa !1421
  %3 = and i32 %2, 12, !dbg !1668
  call void @llvm.dbg.value(metadata i32 %3, metadata !1660, metadata !DIExpression()), !dbg !1666
  switch i32 %3, label %22 [
    i32 8, label %5
    i32 4, label %4
  ], !dbg !1669

4:                                                ; preds = %1
  br label %22, !dbg !1670

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1672, !tbaa !1424
  call void @llvm.dbg.value(metadata i32 %6, metadata !1664, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1666
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1673, !tbaa !1424
  %8 = and i32 %7, 63, !dbg !1674
  call void @llvm.dbg.value(metadata i32 %8, metadata !1665, metadata !DIExpression()), !dbg !1666
  %9 = and i32 %6, 4194304, !dbg !1675
  %10 = icmp eq i32 %9, 0, !dbg !1675
  %11 = select i1 %10, i32 16000000, i32 25000000, !dbg !1677
  %12 = udiv i32 %11, %8, !dbg !1678
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1678, !tbaa !1424
  %14 = lshr i32 %13, 6, !dbg !1678
  %15 = and i32 %14, 511, !dbg !1678
  %16 = mul i32 %15, %12, !dbg !1678
  call void @llvm.dbg.value(metadata i32 %16, metadata !1662, metadata !DIExpression()), !dbg !1666
  %17 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1679, !tbaa !1424
  %18 = lshr i32 %17, 15, !dbg !1680
  %19 = and i32 %18, 6, !dbg !1680
  %20 = add nuw nsw i32 %19, 2, !dbg !1680
  call void @llvm.dbg.value(metadata i32 %20, metadata !1663, metadata !DIExpression()), !dbg !1666
  %21 = udiv i32 %16, %20, !dbg !1681
  br label %22, !dbg !1682

22:                                               ; preds = %1, %5, %4
  %23 = phi i32 [ %21, %5 ], [ 25000000, %4 ], [ 16000000, %1 ]
  %24 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !1683
  store i32 %23, i32* %24, align 4, !dbg !1683, !tbaa !934
  %25 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1684, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %25, metadata !1660, metadata !DIExpression(DW_OP_constu, 240, DW_OP_and, DW_OP_stack_value)), !dbg !1666
  %26 = lshr i32 %25, 4, !dbg !1685
  %27 = and i32 %26, 15, !dbg !1685
  call void @llvm.dbg.value(metadata i32 %27, metadata !1660, metadata !DIExpression()), !dbg !1666
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* @APBAHBPrescTable, i32 0, i32 %27, !dbg !1686
  %29 = load volatile i8, i8* %28, align 1, !dbg !1686, !tbaa !889
  %30 = zext i8 %29 to i32, !dbg !1686
  call void @llvm.dbg.value(metadata i32 %30, metadata !1661, metadata !DIExpression()), !dbg !1666
  %31 = lshr i32 %23, %30, !dbg !1687
  %32 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !1688
  store i32 %31, i32* %32, align 4, !dbg !1689, !tbaa !1690
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1691, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %33, metadata !1660, metadata !DIExpression(DW_OP_constu, 7168, DW_OP_and, DW_OP_stack_value)), !dbg !1666
  %34 = lshr i32 %33, 10, !dbg !1692
  %35 = and i32 %34, 7, !dbg !1692
  call void @llvm.dbg.value(metadata i32 %35, metadata !1660, metadata !DIExpression()), !dbg !1666
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @APBAHBPrescTable, i32 0, i32 %35, !dbg !1693
  %37 = load volatile i8, i8* %36, align 1, !dbg !1693, !tbaa !889
  %38 = zext i8 %37 to i32, !dbg !1693
  call void @llvm.dbg.value(metadata i32 %38, metadata !1661, metadata !DIExpression()), !dbg !1666
  %39 = lshr i32 %31, %38, !dbg !1694
  %40 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !1695
  store i32 %39, i32* %40, align 4, !dbg !1696, !tbaa !968
  %41 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1697, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %41, metadata !1660, metadata !DIExpression(DW_OP_constu, 57344, DW_OP_and, DW_OP_stack_value)), !dbg !1666
  %42 = lshr i32 %41, 13, !dbg !1698
  %43 = and i32 %42, 7, !dbg !1698
  call void @llvm.dbg.value(metadata i32 %43, metadata !1660, metadata !DIExpression()), !dbg !1666
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* @APBAHBPrescTable, i32 0, i32 %43, !dbg !1699
  %45 = load volatile i8, i8* %44, align 1, !dbg !1699, !tbaa !889
  %46 = zext i8 %45 to i32, !dbg !1699
  call void @llvm.dbg.value(metadata i32 %46, metadata !1661, metadata !DIExpression()), !dbg !1666
  %47 = lshr i32 %31, %46, !dbg !1700
  %48 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !1701
  store i32 %47, i32* %48, align 4, !dbg !1702, !tbaa !985
  ret void, !dbg !1703
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_RTCCLKConfig(i32 %0) local_unnamed_addr #0 !dbg !1704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1706, metadata !DIExpression()), !dbg !1708
  call void @llvm.dbg.value(metadata i32 0, metadata !1707, metadata !DIExpression()), !dbg !1708
  %2 = and i32 %0, 768, !dbg !1709
  %3 = icmp eq i32 %2, 768, !dbg !1711
  br i1 %3, label %4, label %9, !dbg !1712

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1713, !tbaa !1421
  call void @llvm.dbg.value(metadata i32 %5, metadata !1707, metadata !DIExpression()), !dbg !1708
  %6 = and i32 %5, -2031617, !dbg !1715
  call void @llvm.dbg.value(metadata i32 %6, metadata !1707, metadata !DIExpression()), !dbg !1708
  %7 = and i32 %0, 268434687, !dbg !1716
  %8 = or i32 %6, %7, !dbg !1717
  call void @llvm.dbg.value(metadata i32 %8, metadata !1707, metadata !DIExpression()), !dbg !1708
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1718, !tbaa !1421
  br label %9, !dbg !1719

9:                                                ; preds = %4, %1
  %10 = and i32 %0, 4095, !dbg !1720
  %11 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !1721, !tbaa !1722
  %12 = or i32 %11, %10, !dbg !1721
  store volatile i32 %12, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !1721, !tbaa !1722
  ret void, !dbg !1723
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_RTCCLKCmd(i32 %0) local_unnamed_addr #0 !dbg !1724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1726, metadata !DIExpression()), !dbg !1727
  store volatile i32 %0, i32* inttoptr (i32 1111952956 to i32*), align 4, !dbg !1728, !tbaa !894
  ret void, !dbg !1729
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_BackupResetCmd(i32 %0) local_unnamed_addr #0 !dbg !1730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1732, metadata !DIExpression()), !dbg !1733
  store volatile i32 %0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !1734, !tbaa !894
  ret void, !dbg !1735
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_I2SCLKConfig(i32 %0) local_unnamed_addr #0 !dbg !1736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1738, metadata !DIExpression()), !dbg !1739
  store volatile i32 %0, i32* inttoptr (i32 1111949660 to i32*), align 4, !dbg !1740, !tbaa !894
  ret void, !dbg !1741
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AHB1PeriphClockCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1746, metadata !DIExpression()), !dbg !1748
  call void @llvm.dbg.value(metadata i32 %1, metadata !1747, metadata !DIExpression()), !dbg !1748
  %3 = icmp eq i32 %1, 0, !dbg !1749
  br i1 %3, label %7, label %4, !dbg !1751

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !1752, !tbaa !1754
  %6 = or i32 %5, %0, !dbg !1752
  br label %11, !dbg !1755

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1756
  %9 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !1758, !tbaa !1754
  %10 = and i32 %9, %8, !dbg !1758
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !1759, !tbaa !1754
  ret void, !dbg !1760
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AHB2PeriphClockCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1763, metadata !DIExpression()), !dbg !1765
  call void @llvm.dbg.value(metadata i32 %1, metadata !1764, metadata !DIExpression()), !dbg !1765
  %3 = icmp eq i32 %1, 0, !dbg !1766
  br i1 %3, label %7, label %4, !dbg !1768

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !1769, !tbaa !1771
  %6 = or i32 %5, %0, !dbg !1769
  br label %11, !dbg !1772

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1773
  %9 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !1775, !tbaa !1771
  %10 = and i32 %9, %8, !dbg !1775
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !1776, !tbaa !1771
  ret void, !dbg !1777
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AHB3PeriphClockCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1780, metadata !DIExpression()), !dbg !1782
  call void @llvm.dbg.value(metadata i32 %1, metadata !1781, metadata !DIExpression()), !dbg !1782
  %3 = icmp eq i32 %1, 0, !dbg !1783
  br i1 %3, label %7, label %4, !dbg !1785

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887288 to i32*), align 8, !dbg !1786, !tbaa !1788
  %6 = or i32 %5, %0, !dbg !1786
  br label %11, !dbg !1789

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1790
  %9 = load volatile i32, i32* inttoptr (i32 1073887288 to i32*), align 8, !dbg !1792, !tbaa !1788
  %10 = and i32 %9, %8, !dbg !1792
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887288 to i32*), align 8, !dbg !1793, !tbaa !1788
  ret void, !dbg !1794
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_APB1PeriphClockCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1797, metadata !DIExpression()), !dbg !1799
  call void @llvm.dbg.value(metadata i32 %1, metadata !1798, metadata !DIExpression()), !dbg !1799
  %3 = icmp eq i32 %1, 0, !dbg !1800
  br i1 %3, label %7, label %4, !dbg !1802

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !1803, !tbaa !1805
  %6 = or i32 %5, %0, !dbg !1803
  br label %11, !dbg !1806

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1807
  %9 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !1809, !tbaa !1805
  %10 = and i32 %9, %8, !dbg !1809
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !1810, !tbaa !1805
  ret void, !dbg !1811
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_APB2PeriphClockCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1814, metadata !DIExpression()), !dbg !1816
  call void @llvm.dbg.value(metadata i32 %1, metadata !1815, metadata !DIExpression()), !dbg !1816
  %3 = icmp eq i32 %1, 0, !dbg !1817
  br i1 %3, label %7, label %4, !dbg !1819

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !1820, !tbaa !1822
  %6 = or i32 %5, %0, !dbg !1820
  br label %11, !dbg !1823

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1824
  %9 = load volatile i32, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !1826, !tbaa !1822
  %10 = and i32 %9, %8, !dbg !1826
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !1827, !tbaa !1822
  ret void, !dbg !1828
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AHB1PeriphResetCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1831, metadata !DIExpression()), !dbg !1833
  call void @llvm.dbg.value(metadata i32 %1, metadata !1832, metadata !DIExpression()), !dbg !1833
  %3 = icmp eq i32 %1, 0, !dbg !1834
  br i1 %3, label %7, label %4, !dbg !1836

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887248 to i32*), align 16, !dbg !1837, !tbaa !1839
  %6 = or i32 %5, %0, !dbg !1837
  br label %11, !dbg !1840

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1841
  %9 = load volatile i32, i32* inttoptr (i32 1073887248 to i32*), align 16, !dbg !1843, !tbaa !1839
  %10 = and i32 %9, %8, !dbg !1843
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887248 to i32*), align 16, !dbg !1844, !tbaa !1839
  ret void, !dbg !1845
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AHB2PeriphResetCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1848, metadata !DIExpression()), !dbg !1850
  call void @llvm.dbg.value(metadata i32 %1, metadata !1849, metadata !DIExpression()), !dbg !1850
  %3 = icmp eq i32 %1, 0, !dbg !1851
  br i1 %3, label %7, label %4, !dbg !1853

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887252 to i32*), align 4, !dbg !1854, !tbaa !1856
  %6 = or i32 %5, %0, !dbg !1854
  br label %11, !dbg !1857

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1858
  %9 = load volatile i32, i32* inttoptr (i32 1073887252 to i32*), align 4, !dbg !1860, !tbaa !1856
  %10 = and i32 %9, %8, !dbg !1860
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887252 to i32*), align 4, !dbg !1861, !tbaa !1856
  ret void, !dbg !1862
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AHB3PeriphResetCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1865, metadata !DIExpression()), !dbg !1867
  call void @llvm.dbg.value(metadata i32 %1, metadata !1866, metadata !DIExpression()), !dbg !1867
  %3 = icmp eq i32 %1, 0, !dbg !1868
  br i1 %3, label %7, label %4, !dbg !1870

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887256 to i32*), align 8, !dbg !1871, !tbaa !1873
  %6 = or i32 %5, %0, !dbg !1871
  br label %11, !dbg !1874

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1875
  %9 = load volatile i32, i32* inttoptr (i32 1073887256 to i32*), align 8, !dbg !1877, !tbaa !1873
  %10 = and i32 %9, %8, !dbg !1877
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887256 to i32*), align 8, !dbg !1878, !tbaa !1873
  ret void, !dbg !1879
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1882, metadata !DIExpression()), !dbg !1884
  call void @llvm.dbg.value(metadata i32 %1, metadata !1883, metadata !DIExpression()), !dbg !1884
  %3 = icmp eq i32 %1, 0, !dbg !1885
  br i1 %3, label %7, label %4, !dbg !1887

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !1888, !tbaa !1890
  %6 = or i32 %5, %0, !dbg !1888
  br label %11, !dbg !1891

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1892
  %9 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !1894, !tbaa !1890
  %10 = and i32 %9, %8, !dbg !1894
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !1895, !tbaa !1890
  ret void, !dbg !1896
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1899, metadata !DIExpression()), !dbg !1901
  call void @llvm.dbg.value(metadata i32 %1, metadata !1900, metadata !DIExpression()), !dbg !1901
  %3 = icmp eq i32 %1, 0, !dbg !1902
  br i1 %3, label %7, label %4, !dbg !1904

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !1905, !tbaa !1907
  %6 = or i32 %5, %0, !dbg !1905
  br label %11, !dbg !1908

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1909
  %9 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !1911, !tbaa !1907
  %10 = and i32 %9, %8, !dbg !1911
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !1912, !tbaa !1907
  ret void, !dbg !1913
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AHB1PeriphClockLPModeCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1916, metadata !DIExpression()), !dbg !1918
  call void @llvm.dbg.value(metadata i32 %1, metadata !1917, metadata !DIExpression()), !dbg !1918
  %3 = icmp eq i32 %1, 0, !dbg !1919
  br i1 %3, label %7, label %4, !dbg !1921

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887312 to i32*), align 16, !dbg !1922, !tbaa !1924
  %6 = or i32 %5, %0, !dbg !1922
  br label %11, !dbg !1925

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1926
  %9 = load volatile i32, i32* inttoptr (i32 1073887312 to i32*), align 16, !dbg !1928, !tbaa !1924
  %10 = and i32 %9, %8, !dbg !1928
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887312 to i32*), align 16, !dbg !1929, !tbaa !1924
  ret void, !dbg !1930
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AHB2PeriphClockLPModeCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1933, metadata !DIExpression()), !dbg !1935
  call void @llvm.dbg.value(metadata i32 %1, metadata !1934, metadata !DIExpression()), !dbg !1935
  %3 = icmp eq i32 %1, 0, !dbg !1936
  br i1 %3, label %7, label %4, !dbg !1938

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887316 to i32*), align 4, !dbg !1939, !tbaa !1941
  %6 = or i32 %5, %0, !dbg !1939
  br label %11, !dbg !1942

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1943
  %9 = load volatile i32, i32* inttoptr (i32 1073887316 to i32*), align 4, !dbg !1945, !tbaa !1941
  %10 = and i32 %9, %8, !dbg !1945
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887316 to i32*), align 4, !dbg !1946, !tbaa !1941
  ret void, !dbg !1947
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_AHB3PeriphClockLPModeCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1950, metadata !DIExpression()), !dbg !1952
  call void @llvm.dbg.value(metadata i32 %1, metadata !1951, metadata !DIExpression()), !dbg !1952
  %3 = icmp eq i32 %1, 0, !dbg !1953
  br i1 %3, label %7, label %4, !dbg !1955

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887320 to i32*), align 8, !dbg !1956, !tbaa !1958
  %6 = or i32 %5, %0, !dbg !1956
  br label %11, !dbg !1959

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1960
  %9 = load volatile i32, i32* inttoptr (i32 1073887320 to i32*), align 8, !dbg !1962, !tbaa !1958
  %10 = and i32 %9, %8, !dbg !1962
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887320 to i32*), align 8, !dbg !1963, !tbaa !1958
  ret void, !dbg !1964
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_APB1PeriphClockLPModeCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1967, metadata !DIExpression()), !dbg !1969
  call void @llvm.dbg.value(metadata i32 %1, metadata !1968, metadata !DIExpression()), !dbg !1969
  %3 = icmp eq i32 %1, 0, !dbg !1970
  br i1 %3, label %7, label %4, !dbg !1972

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887328 to i32*), align 32, !dbg !1973, !tbaa !1975
  %6 = or i32 %5, %0, !dbg !1973
  br label %11, !dbg !1976

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1977
  %9 = load volatile i32, i32* inttoptr (i32 1073887328 to i32*), align 32, !dbg !1979, !tbaa !1975
  %10 = and i32 %9, %8, !dbg !1979
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887328 to i32*), align 32, !dbg !1980, !tbaa !1975
  ret void, !dbg !1981
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_APB2PeriphClockLPModeCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !1982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1984, metadata !DIExpression()), !dbg !1986
  call void @llvm.dbg.value(metadata i32 %1, metadata !1985, metadata !DIExpression()), !dbg !1986
  %3 = icmp eq i32 %1, 0, !dbg !1987
  br i1 %3, label %7, label %4, !dbg !1989

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073887332 to i32*), align 4, !dbg !1990, !tbaa !1992
  %6 = or i32 %5, %0, !dbg !1990
  br label %11, !dbg !1993

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !1994
  %9 = load volatile i32, i32* inttoptr (i32 1073887332 to i32*), align 4, !dbg !1996, !tbaa !1992
  %10 = and i32 %9, %8, !dbg !1996
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073887332 to i32*), align 4, !dbg !1997, !tbaa !1992
  ret void, !dbg !1998
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_ITConfig(i8 zeroext %0, i32 %1) local_unnamed_addr #0 !dbg !1999 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2001, metadata !DIExpression()), !dbg !2003
  call void @llvm.dbg.value(metadata i32 %1, metadata !2002, metadata !DIExpression()), !dbg !2003
  %3 = icmp eq i32 %1, 0, !dbg !2004
  br i1 %3, label %7, label %4, !dbg !2006

4:                                                ; preds = %2
  %5 = load volatile i8, i8* inttoptr (i32 1073887245 to i8*), align 1, !dbg !2007, !tbaa !889
  %6 = or i8 %5, %0, !dbg !2007
  br label %11, !dbg !2009

7:                                                ; preds = %2
  %8 = xor i8 %0, -1, !dbg !2010
  %9 = load volatile i8, i8* inttoptr (i32 1073887245 to i8*), align 1, !dbg !2012, !tbaa !889
  %10 = and i8 %9, %8, !dbg !2012
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i8 [ %10, %7 ], [ %6, %4 ]
  store volatile i8 %12, i8* inttoptr (i32 1073887245 to i8*), align 1, !dbg !2013, !tbaa !889
  ret void, !dbg !2014
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_ClearFlag() local_unnamed_addr #0 !dbg !2015 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !2016, !tbaa !2017
  %2 = or i32 %1, 16777216, !dbg !2016
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !2016, !tbaa !2017
  ret void, !dbg !2018
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RCC_GetITStatus(i8 zeroext %0) local_unnamed_addr #0 !dbg !2019 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2023, metadata !DIExpression()), !dbg !2025
  call void @llvm.dbg.value(metadata i32 0, metadata !2024, metadata !DIExpression()), !dbg !2025
  %2 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !2026, !tbaa !1427
  %3 = zext i8 %0 to i32, !dbg !2028
  %4 = and i32 %2, %3, !dbg !2029
  %5 = icmp ne i32 %4, 0, !dbg !2030
  %6 = zext i1 %5 to i32
  call void @llvm.dbg.value(metadata i32 %6, metadata !2024, metadata !DIExpression()), !dbg !2025
  ret i32 %6, !dbg !2031
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RCC_ClearITPendingBit(i8 zeroext %0) local_unnamed_addr #0 !dbg !2032 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2034, metadata !DIExpression()), !dbg !2035
  store volatile i8 %0, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !2036, !tbaa !889
  ret void, !dbg !2037
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @ADC_DeInit() local_unnamed_addr #3 !dbg !2038 {
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 256, i32 1) #5, !dbg !2039
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 256, i32 0) #5, !dbg !2040
  ret void, !dbg !2041
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_Init(%struct.ADC_TypeDef* %0, %struct.ADC_InitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !2042 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2082, metadata !DIExpression()), !dbg !2086
  call void @llvm.dbg.value(metadata %struct.ADC_InitTypeDef* %1, metadata !2083, metadata !DIExpression()), !dbg !2086
  call void @llvm.dbg.value(metadata i32 0, metadata !2084, metadata !DIExpression()), !dbg !2086
  call void @llvm.dbg.value(metadata i8 0, metadata !2085, metadata !DIExpression()), !dbg !2086
  %3 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2087
  %4 = load volatile i32, i32* %3, align 4, !dbg !2087, !tbaa !2088
  call void @llvm.dbg.value(metadata i32 %4, metadata !2084, metadata !DIExpression()), !dbg !2086
  %5 = and i32 %4, -50331905, !dbg !2090
  call void @llvm.dbg.value(metadata i32 %5, metadata !2084, metadata !DIExpression()), !dbg !2086
  %6 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %1, i32 0, i32 1, !dbg !2091
  %7 = load i32, i32* %6, align 4, !dbg !2091, !tbaa !2092
  %8 = shl i32 %7, 8, !dbg !2094
  %9 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %1, i32 0, i32 0, !dbg !2095
  %10 = load i32, i32* %9, align 4, !dbg !2095, !tbaa !2096
  %11 = or i32 %10, %5, !dbg !2097
  %12 = or i32 %11, %8, !dbg !2098
  call void @llvm.dbg.value(metadata i32 %12, metadata !2084, metadata !DIExpression()), !dbg !2086
  store volatile i32 %12, i32* %3, align 4, !dbg !2099, !tbaa !2088
  %13 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2100
  %14 = load volatile i32, i32* %13, align 4, !dbg !2100, !tbaa !2101
  call void @llvm.dbg.value(metadata i32 %14, metadata !2084, metadata !DIExpression()), !dbg !2086
  %15 = and i32 %14, -1056966659, !dbg !2102
  call void @llvm.dbg.value(metadata i32 %15, metadata !2084, metadata !DIExpression()), !dbg !2086
  %16 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %1, i32 0, i32 5, !dbg !2103
  %17 = load i32, i32* %16, align 4, !dbg !2103, !tbaa !2104
  %18 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %1, i32 0, i32 4, !dbg !2105
  %19 = load i32, i32* %18, align 4, !dbg !2105, !tbaa !2106
  %20 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %1, i32 0, i32 3, !dbg !2107
  %21 = load i32, i32* %20, align 4, !dbg !2107, !tbaa !2108
  %22 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %1, i32 0, i32 2, !dbg !2109
  %23 = load i32, i32* %22, align 4, !dbg !2109, !tbaa !2110
  %24 = shl i32 %23, 1, !dbg !2111
  %25 = or i32 %15, %17, !dbg !2112
  %26 = or i32 %25, %19, !dbg !2113
  %27 = or i32 %26, %21, !dbg !2114
  %28 = or i32 %27, %24, !dbg !2115
  call void @llvm.dbg.value(metadata i32 %28, metadata !2084, metadata !DIExpression()), !dbg !2086
  store volatile i32 %28, i32* %13, align 4, !dbg !2116, !tbaa !2101
  %29 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 11, !dbg !2117
  %30 = load volatile i32, i32* %29, align 4, !dbg !2117, !tbaa !2118
  call void @llvm.dbg.value(metadata i32 %30, metadata !2084, metadata !DIExpression()), !dbg !2086
  %31 = and i32 %30, -15728641, !dbg !2119
  call void @llvm.dbg.value(metadata i32 %31, metadata !2084, metadata !DIExpression()), !dbg !2086
  %32 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %1, i32 0, i32 6, !dbg !2120
  %33 = load i8, i8* %32, align 4, !dbg !2120, !tbaa !2121
  %34 = add i8 %33, -1, !dbg !2122
  %35 = zext i8 %34 to i32, !dbg !2123
  call void @llvm.dbg.value(metadata i8 %34, metadata !2085, metadata !DIExpression()), !dbg !2086
  %36 = shl nuw nsw i32 %35, 20, !dbg !2124
  %37 = or i32 %36, %31, !dbg !2125
  call void @llvm.dbg.value(metadata i32 %37, metadata !2084, metadata !DIExpression()), !dbg !2086
  store volatile i32 %37, i32* %29, align 4, !dbg !2126, !tbaa !2118
  ret void, !dbg !2127
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @ADC_StructInit(%struct.ADC_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !2128 {
  call void @llvm.dbg.value(metadata %struct.ADC_InitTypeDef* %0, metadata !2132, metadata !DIExpression()), !dbg !2133
  %2 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %0, i32 0, i32 0, !dbg !2134
  store i32 0, i32* %2, align 4, !dbg !2135, !tbaa !2096
  %3 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %0, i32 0, i32 1, !dbg !2136
  store i32 0, i32* %3, align 4, !dbg !2137, !tbaa !2092
  %4 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %0, i32 0, i32 2, !dbg !2138
  store i32 0, i32* %4, align 4, !dbg !2139, !tbaa !2110
  %5 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %0, i32 0, i32 3, !dbg !2140
  store i32 0, i32* %5, align 4, !dbg !2141, !tbaa !2108
  %6 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %0, i32 0, i32 4, !dbg !2142
  store i32 0, i32* %6, align 4, !dbg !2143, !tbaa !2106
  %7 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %0, i32 0, i32 5, !dbg !2144
  store i32 0, i32* %7, align 4, !dbg !2145, !tbaa !2104
  %8 = getelementptr inbounds %struct.ADC_InitTypeDef, %struct.ADC_InitTypeDef* %0, i32 0, i32 6, !dbg !2146
  store i8 1, i8* %8, align 4, !dbg !2147, !tbaa !2121
  ret void, !dbg !2148
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_CommonInit(%struct.DMA_TypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !2149 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !2161, metadata !DIExpression()), !dbg !2163
  call void @llvm.dbg.value(metadata i32 0, metadata !2162, metadata !DIExpression()), !dbg !2163
  %2 = load volatile i32, i32* inttoptr (i32 1073816324 to i32*), align 4, !dbg !2164, !tbaa !2165
  call void @llvm.dbg.value(metadata i32 %2, metadata !2162, metadata !DIExpression()), !dbg !2163
  %3 = and i32 %2, -249632, !dbg !2167
  call void @llvm.dbg.value(metadata i32 %3, metadata !2162, metadata !DIExpression()), !dbg !2163
  %4 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !2168
  %5 = load i32, i32* %4, align 4, !dbg !2168, !tbaa !934
  %6 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !2169
  %7 = load i32, i32* %6, align 4, !dbg !2169, !tbaa !1690
  %8 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !2170
  %9 = load i32, i32* %8, align 4, !dbg !2170, !tbaa !968
  %10 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !2171
  %11 = load i32, i32* %10, align 4, !dbg !2171, !tbaa !985
  %12 = or i32 %3, %5, !dbg !2172
  %13 = or i32 %12, %7, !dbg !2173
  %14 = or i32 %13, %9, !dbg !2174
  %15 = or i32 %14, %11, !dbg !2175
  call void @llvm.dbg.value(metadata i32 %15, metadata !2162, metadata !DIExpression()), !dbg !2163
  store volatile i32 %15, i32* inttoptr (i32 1073816324 to i32*), align 4, !dbg !2176, !tbaa !2165
  ret void, !dbg !2177
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @ADC_CommonStructInit(%struct.DMA_TypeDef* nocapture %0) local_unnamed_addr #2 !dbg !2178 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !2180, metadata !DIExpression()), !dbg !2181
  %2 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !2182
  store i32 0, i32* %2, align 4, !dbg !2183, !tbaa !934
  %3 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !2184
  store i32 0, i32* %3, align 4, !dbg !2185, !tbaa !1690
  %4 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !2186
  store i32 0, i32* %4, align 4, !dbg !2187, !tbaa !968
  %5 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !2188
  store i32 0, i32* %5, align 4, !dbg !2189, !tbaa !985
  ret void, !dbg !2190
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_Cmd(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2191 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2195, metadata !DIExpression()), !dbg !2197
  call void @llvm.dbg.value(metadata i32 %1, metadata !2196, metadata !DIExpression()), !dbg !2197
  %3 = icmp ne i32 %1, 0, !dbg !2198
  %4 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2200
  %5 = load volatile i32, i32* %4, align 4, !dbg !2200, !tbaa !2101
  %6 = and i32 %5, -2, !dbg !2201
  %7 = zext i1 %3 to i32, !dbg !2201
  %8 = or i32 %6, %7, !dbg !2201
  store volatile i32 %8, i32* %4, align 4, !dbg !2200, !tbaa !2101
  ret void, !dbg !2202
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_AnalogWatchdogCmd(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2203 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2207, metadata !DIExpression()), !dbg !2210
  call void @llvm.dbg.value(metadata i32 %1, metadata !2208, metadata !DIExpression()), !dbg !2210
  call void @llvm.dbg.value(metadata i32 0, metadata !2209, metadata !DIExpression()), !dbg !2210
  %3 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2211
  %4 = load volatile i32, i32* %3, align 4, !dbg !2211, !tbaa !2088
  call void @llvm.dbg.value(metadata i32 %4, metadata !2209, metadata !DIExpression()), !dbg !2210
  %5 = and i32 %4, -12583425, !dbg !2212
  call void @llvm.dbg.value(metadata i32 %5, metadata !2209, metadata !DIExpression()), !dbg !2210
  %6 = or i32 %5, %1, !dbg !2213
  call void @llvm.dbg.value(metadata i32 %6, metadata !2209, metadata !DIExpression()), !dbg !2210
  store volatile i32 %6, i32* %3, align 4, !dbg !2214, !tbaa !2088
  ret void, !dbg !2215
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_AnalogWatchdogThresholdsConfig(%struct.ADC_TypeDef* %0, i16 zeroext %1, i16 zeroext %2) local_unnamed_addr #0 !dbg !2216 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2220, metadata !DIExpression()), !dbg !2223
  call void @llvm.dbg.value(metadata i16 %1, metadata !2221, metadata !DIExpression()), !dbg !2223
  call void @llvm.dbg.value(metadata i16 %2, metadata !2222, metadata !DIExpression()), !dbg !2223
  %4 = zext i16 %1 to i32, !dbg !2224
  %5 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 9, !dbg !2225
  store volatile i32 %4, i32* %5, align 4, !dbg !2226, !tbaa !2227
  %6 = zext i16 %2 to i32, !dbg !2228
  %7 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 10, !dbg !2229
  store volatile i32 %6, i32* %7, align 4, !dbg !2230, !tbaa !2231
  ret void, !dbg !2232
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_AnalogWatchdogSingleChannelConfig(%struct.ADC_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !2233 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2237, metadata !DIExpression()), !dbg !2240
  call void @llvm.dbg.value(metadata i8 %1, metadata !2238, metadata !DIExpression()), !dbg !2240
  call void @llvm.dbg.value(metadata i32 0, metadata !2239, metadata !DIExpression()), !dbg !2240
  %3 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2241
  %4 = load volatile i32, i32* %3, align 4, !dbg !2241, !tbaa !2088
  call void @llvm.dbg.value(metadata i32 %4, metadata !2239, metadata !DIExpression()), !dbg !2240
  %5 = and i32 %4, -32, !dbg !2242
  call void @llvm.dbg.value(metadata i32 %5, metadata !2239, metadata !DIExpression()), !dbg !2240
  %6 = zext i8 %1 to i32, !dbg !2243
  %7 = or i32 %5, %6, !dbg !2244
  call void @llvm.dbg.value(metadata i32 %7, metadata !2239, metadata !DIExpression()), !dbg !2240
  store volatile i32 %7, i32* %3, align 4, !dbg !2245, !tbaa !2088
  ret void, !dbg !2246
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_TempSensorVrefintCmd(i32 %0) local_unnamed_addr #0 !dbg !2247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2249, metadata !DIExpression()), !dbg !2250
  %2 = icmp eq i32 %0, 0, !dbg !2251
  %3 = load volatile i32, i32* inttoptr (i32 1073816324 to i32*), align 4, !dbg !2253, !tbaa !2165
  %4 = and i32 %3, -8388609, !dbg !2254
  %5 = select i1 %2, i32 0, i32 8388608, !dbg !2254
  %6 = or i32 %4, %5, !dbg !2254
  store volatile i32 %6, i32* inttoptr (i32 1073816324 to i32*), align 4, !dbg !2253, !tbaa !2165
  ret void, !dbg !2255
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_VBATCmd(i32 %0) local_unnamed_addr #0 !dbg !2256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2258, metadata !DIExpression()), !dbg !2259
  %2 = icmp eq i32 %0, 0, !dbg !2260
  %3 = load volatile i32, i32* inttoptr (i32 1073816324 to i32*), align 4, !dbg !2262, !tbaa !2165
  %4 = and i32 %3, -4194305, !dbg !2263
  %5 = select i1 %2, i32 0, i32 4194304, !dbg !2263
  %6 = or i32 %4, %5, !dbg !2263
  store volatile i32 %6, i32* inttoptr (i32 1073816324 to i32*), align 4, !dbg !2262, !tbaa !2165
  ret void, !dbg !2264
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_RegularChannelConfig(%struct.ADC_TypeDef* %0, i8 zeroext %1, i8 zeroext %2, i8 zeroext %3) local_unnamed_addr #0 !dbg !2265 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2269, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i8 %1, metadata !2270, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i8 %2, metadata !2271, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i8 %3, metadata !2272, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 0, metadata !2273, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 0, metadata !2274, metadata !DIExpression()), !dbg !2275
  %5 = zext i8 %1 to i32, !dbg !2276
  %6 = icmp ugt i8 %1, 9, !dbg !2278
  %7 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 4, !dbg !2279
  %8 = mul nuw nsw i32 %5, 3, !dbg !2279
  %9 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 3, !dbg !2279
  %10 = mul nuw nsw i32 %5, 3, !dbg !2279
  %11 = add nsw i32 %10, -30, !dbg !2279
  %12 = select i1 %6, i32 %11, i32 %8, !dbg !2279
  %13 = select i1 %6, i32* %9, i32* %7, !dbg !2279
  %14 = load volatile i32, i32* %13, align 4, !dbg !2280, !tbaa !894
  %15 = shl i32 7, %12, !dbg !2280
  %16 = xor i32 %15, -1, !dbg !2280
  %17 = and i32 %14, %16, !dbg !2280
  %18 = zext i8 %3 to i32, !dbg !2280
  %19 = shl i32 %18, %12, !dbg !2280
  %20 = or i32 %17, %19, !dbg !2280
  store volatile i32 %20, i32* %13, align 4, !dbg !2280, !tbaa !894
  %21 = icmp ult i8 %2, 7, !dbg !2281
  br i1 %21, label %22, label %24, !dbg !2283

22:                                               ; preds = %4
  %23 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 13, !dbg !2284
  call void @llvm.dbg.value(metadata i32 undef, metadata !2273, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 undef, metadata !2274, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 undef, metadata !2273, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 undef, metadata !2274, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 undef, metadata !2273, metadata !DIExpression()), !dbg !2275
  br label %30, !dbg !2286

24:                                               ; preds = %4
  %25 = icmp ult i8 %2, 13, !dbg !2287
  br i1 %25, label %26, label %28, !dbg !2289

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 12, !dbg !2290
  call void @llvm.dbg.value(metadata i32 %34, metadata !2273, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 %37, metadata !2274, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 %39, metadata !2273, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 %40, metadata !2274, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 %41, metadata !2273, metadata !DIExpression()), !dbg !2275
  br label %30, !dbg !2292

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 11, !dbg !2293
  call void @llvm.dbg.value(metadata i32 undef, metadata !2273, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 undef, metadata !2274, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 undef, metadata !2273, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 undef, metadata !2274, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 undef, metadata !2273, metadata !DIExpression()), !dbg !2275
  br label %30

30:                                               ; preds = %26, %28, %22
  %31 = phi i32* [ %27, %26 ], [ %29, %28 ], [ %23, %22 ]
  %32 = phi i32 [ -35, %26 ], [ -65, %28 ], [ -5, %22 ]
  %33 = zext i8 %2 to i32, !dbg !2295
  %34 = load volatile i32, i32* %31, align 4, !dbg !2296, !tbaa !894
  %35 = mul nuw nsw i32 %33, 5, !dbg !2296
  %36 = add nsw i32 %35, %32, !dbg !2296
  %37 = shl i32 31, %36, !dbg !2296
  %38 = xor i32 %37, -1, !dbg !2296
  %39 = and i32 %34, %38, !dbg !2296
  %40 = shl i32 %5, %36, !dbg !2296
  %41 = or i32 %39, %40, !dbg !2296
  store volatile i32 %41, i32* %31, align 4, !dbg !2296, !tbaa !894
  ret void, !dbg !2297
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_SoftwareStartConv(%struct.ADC_TypeDef* %0) local_unnamed_addr #0 !dbg !2298 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2302, metadata !DIExpression()), !dbg !2303
  %2 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2304
  %3 = load volatile i32, i32* %2, align 4, !dbg !2305, !tbaa !2101
  %4 = or i32 %3, 1073741824, !dbg !2305
  store volatile i32 %4, i32* %2, align 4, !dbg !2305, !tbaa !2101
  ret void, !dbg !2306
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @ADC_GetSoftwareStartConvStatus(%struct.ADC_TypeDef* %0) local_unnamed_addr #0 !dbg !2307 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2311, metadata !DIExpression()), !dbg !2313
  call void @llvm.dbg.value(metadata i32 0, metadata !2312, metadata !DIExpression()), !dbg !2313
  %2 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2314
  %3 = load volatile i32, i32* %2, align 4, !dbg !2314, !tbaa !2101
  %4 = lshr i32 %3, 22
  %5 = and i32 %4, 1
  call void @llvm.dbg.value(metadata i32 %5, metadata !2312, metadata !DIExpression()), !dbg !2313
  ret i32 %5, !dbg !2316
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_EOCOnEachRegularChannelCmd(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2317 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2319, metadata !DIExpression()), !dbg !2321
  call void @llvm.dbg.value(metadata i32 %1, metadata !2320, metadata !DIExpression()), !dbg !2321
  %3 = icmp eq i32 %1, 0, !dbg !2322
  %4 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2324
  %5 = load volatile i32, i32* %4, align 4, !dbg !2324, !tbaa !2101
  %6 = and i32 %5, -1025, !dbg !2325
  %7 = select i1 %3, i32 0, i32 1024, !dbg !2325
  %8 = or i32 %6, %7, !dbg !2325
  store volatile i32 %8, i32* %4, align 4, !dbg !2324, !tbaa !2101
  ret void, !dbg !2326
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_ContinuousModeCmd(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2327 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2329, metadata !DIExpression()), !dbg !2331
  call void @llvm.dbg.value(metadata i32 %1, metadata !2330, metadata !DIExpression()), !dbg !2331
  %3 = icmp eq i32 %1, 0, !dbg !2332
  %4 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2334
  %5 = load volatile i32, i32* %4, align 4, !dbg !2334, !tbaa !2101
  %6 = and i32 %5, -3, !dbg !2335
  %7 = select i1 %3, i32 0, i32 2, !dbg !2335
  %8 = or i32 %6, %7, !dbg !2335
  store volatile i32 %8, i32* %4, align 4, !dbg !2334, !tbaa !2101
  ret void, !dbg !2336
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_DiscModeChannelCountConfig(%struct.ADC_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !2337 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2339, metadata !DIExpression()), !dbg !2343
  call void @llvm.dbg.value(metadata i8 %1, metadata !2340, metadata !DIExpression()), !dbg !2343
  call void @llvm.dbg.value(metadata i32 0, metadata !2341, metadata !DIExpression()), !dbg !2343
  call void @llvm.dbg.value(metadata i32 0, metadata !2342, metadata !DIExpression()), !dbg !2343
  %3 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2344
  %4 = load volatile i32, i32* %3, align 4, !dbg !2344, !tbaa !2088
  call void @llvm.dbg.value(metadata i32 %4, metadata !2341, metadata !DIExpression()), !dbg !2343
  %5 = and i32 %4, -57345, !dbg !2345
  call void @llvm.dbg.value(metadata i32 %5, metadata !2341, metadata !DIExpression()), !dbg !2343
  %6 = zext i8 %1 to i32, !dbg !2346
  call void @llvm.dbg.value(metadata i32 %6, metadata !2342, metadata !DIExpression(DW_OP_plus_uconst, 524287, DW_OP_stack_value)), !dbg !2343
  %7 = shl nuw nsw i32 %6, 13, !dbg !2347
  %8 = add nsw i32 %7, -8192, !dbg !2347
  %9 = or i32 %5, %8, !dbg !2348
  call void @llvm.dbg.value(metadata i32 %9, metadata !2341, metadata !DIExpression()), !dbg !2343
  store volatile i32 %9, i32* %3, align 4, !dbg !2349, !tbaa !2088
  ret void, !dbg !2350
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_DiscModeCmd(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2351 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2353, metadata !DIExpression()), !dbg !2355
  call void @llvm.dbg.value(metadata i32 %1, metadata !2354, metadata !DIExpression()), !dbg !2355
  %3 = icmp eq i32 %1, 0, !dbg !2356
  %4 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2358
  %5 = load volatile i32, i32* %4, align 4, !dbg !2358, !tbaa !2088
  %6 = and i32 %5, -2049, !dbg !2359
  %7 = select i1 %3, i32 0, i32 2048, !dbg !2359
  %8 = or i32 %6, %7, !dbg !2359
  store volatile i32 %8, i32* %4, align 4, !dbg !2358, !tbaa !2088
  ret void, !dbg !2360
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @ADC_GetConversionValue(%struct.ADC_TypeDef* %0) local_unnamed_addr #0 !dbg !2361 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2365, metadata !DIExpression()), !dbg !2366
  %2 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 19, !dbg !2367
  %3 = load volatile i32, i32* %2, align 4, !dbg !2367, !tbaa !2368
  %4 = trunc i32 %3 to i16, !dbg !2369
  ret i16 %4, !dbg !2370
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @ADC_GetMultiModeConversionValue() local_unnamed_addr #0 !dbg !2371 {
  %1 = load volatile i32, i32* inttoptr (i32 1073816328 to i32*), align 8, !dbg !2374, !tbaa !894
  ret i32 %1, !dbg !2375
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_DMACmd(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2376 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2378, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.value(metadata i32 %1, metadata !2379, metadata !DIExpression()), !dbg !2380
  %3 = icmp eq i32 %1, 0, !dbg !2381
  %4 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2383
  %5 = load volatile i32, i32* %4, align 4, !dbg !2383, !tbaa !2101
  %6 = and i32 %5, -257, !dbg !2384
  %7 = select i1 %3, i32 0, i32 256, !dbg !2384
  %8 = or i32 %6, %7, !dbg !2384
  store volatile i32 %8, i32* %4, align 4, !dbg !2383, !tbaa !2101
  ret void, !dbg !2385
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_DMARequestAfterLastTransferCmd(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2386 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2388, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.value(metadata i32 %1, metadata !2389, metadata !DIExpression()), !dbg !2390
  %3 = icmp eq i32 %1, 0, !dbg !2391
  %4 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2393
  %5 = load volatile i32, i32* %4, align 4, !dbg !2393, !tbaa !2101
  %6 = and i32 %5, -513, !dbg !2394
  %7 = select i1 %3, i32 0, i32 512, !dbg !2394
  %8 = or i32 %6, %7, !dbg !2394
  store volatile i32 %8, i32* %4, align 4, !dbg !2393, !tbaa !2101
  ret void, !dbg !2395
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_MultiModeDMARequestAfterLastTransferCmd(i32 %0) local_unnamed_addr #0 !dbg !2396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2398, metadata !DIExpression()), !dbg !2399
  %2 = icmp eq i32 %0, 0, !dbg !2400
  %3 = load volatile i32, i32* inttoptr (i32 1073816324 to i32*), align 4, !dbg !2402, !tbaa !2165
  %4 = and i32 %3, -8193, !dbg !2403
  %5 = select i1 %2, i32 0, i32 8192, !dbg !2403
  %6 = or i32 %4, %5, !dbg !2403
  store volatile i32 %6, i32* inttoptr (i32 1073816324 to i32*), align 4, !dbg !2402, !tbaa !2165
  ret void, !dbg !2404
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_InjectedChannelConfig(%struct.ADC_TypeDef* %0, i8 zeroext %1, i8 zeroext %2, i8 zeroext %3) local_unnamed_addr #0 !dbg !2405 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2407, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i8 %1, metadata !2408, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i8 %2, metadata !2409, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i8 %3, metadata !2410, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i32 0, metadata !2411, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i32 0, metadata !2412, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i32 0, metadata !2413, metadata !DIExpression()), !dbg !2414
  %5 = zext i8 %1 to i32, !dbg !2415
  %6 = icmp ugt i8 %1, 9, !dbg !2417
  %7 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 4, !dbg !2418
  %8 = mul nuw nsw i32 %5, 3, !dbg !2418
  %9 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 3, !dbg !2418
  %10 = mul nuw nsw i32 %5, 3, !dbg !2418
  %11 = add nsw i32 %10, -30, !dbg !2418
  %12 = select i1 %6, i32 %11, i32 %8, !dbg !2418
  %13 = select i1 %6, i32* %9, i32* %7, !dbg !2418
  %14 = load volatile i32, i32* %13, align 4, !dbg !2419, !tbaa !894
  %15 = shl i32 7, %12, !dbg !2419
  %16 = xor i32 %15, -1, !dbg !2419
  %17 = and i32 %14, %16, !dbg !2419
  %18 = zext i8 %3 to i32, !dbg !2419
  %19 = shl i32 %18, %12, !dbg !2419
  %20 = or i32 %17, %19, !dbg !2419
  store volatile i32 %20, i32* %13, align 4, !dbg !2419, !tbaa !894
  %21 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 14, !dbg !2420
  %22 = load volatile i32, i32* %21, align 4, !dbg !2420, !tbaa !2421
  call void @llvm.dbg.value(metadata i32 %22, metadata !2411, metadata !DIExpression()), !dbg !2414
  %23 = lshr i32 %22, 20, !dbg !2422
  %24 = and i32 %23, 3, !dbg !2422
  call void @llvm.dbg.value(metadata i32 %24, metadata !2413, metadata !DIExpression()), !dbg !2414
  %25 = zext i8 %2 to i32, !dbg !2423
  %26 = add nuw nsw i32 %25, 3, !dbg !2424
  %27 = xor i32 %24, 255, !dbg !2425
  %28 = add nuw nsw i32 %26, %27, !dbg !2426
  %29 = and i32 %28, 255, !dbg !2427
  %30 = mul nuw nsw i32 %29, 5, !dbg !2428
  %31 = shl i32 31, %30, !dbg !2429
  call void @llvm.dbg.value(metadata i32 %31, metadata !2412, metadata !DIExpression()), !dbg !2414
  %32 = xor i32 %31, -1, !dbg !2430
  %33 = and i32 %22, %32, !dbg !2431
  call void @llvm.dbg.value(metadata i32 %33, metadata !2411, metadata !DIExpression()), !dbg !2414
  %34 = shl i32 %5, %30, !dbg !2432
  call void @llvm.dbg.value(metadata i32 %34, metadata !2412, metadata !DIExpression()), !dbg !2414
  %35 = or i32 %33, %34, !dbg !2433
  call void @llvm.dbg.value(metadata i32 %35, metadata !2411, metadata !DIExpression()), !dbg !2414
  store volatile i32 %35, i32* %21, align 4, !dbg !2434, !tbaa !2421
  ret void, !dbg !2435
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_InjectedSequencerLengthConfig(%struct.ADC_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !2436 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2438, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata i8 %1, metadata !2439, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata i32 0, metadata !2440, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata i32 0, metadata !2441, metadata !DIExpression()), !dbg !2442
  %3 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 14, !dbg !2443
  %4 = load volatile i32, i32* %3, align 4, !dbg !2443, !tbaa !2421
  call void @llvm.dbg.value(metadata i32 %4, metadata !2440, metadata !DIExpression()), !dbg !2442
  %5 = and i32 %4, -3145729, !dbg !2444
  call void @llvm.dbg.value(metadata i32 %5, metadata !2440, metadata !DIExpression()), !dbg !2442
  %6 = zext i8 %1 to i32, !dbg !2445
  call void @llvm.dbg.value(metadata i32 %6, metadata !2441, metadata !DIExpression(DW_OP_plus_uconst, 4095, DW_OP_stack_value)), !dbg !2442
  %7 = shl nuw nsw i32 %6, 20, !dbg !2446
  %8 = add nsw i32 %7, -1048576, !dbg !2446
  %9 = or i32 %5, %8, !dbg !2447
  call void @llvm.dbg.value(metadata i32 %9, metadata !2440, metadata !DIExpression()), !dbg !2442
  store volatile i32 %9, i32* %3, align 4, !dbg !2448, !tbaa !2421
  ret void, !dbg !2449
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @ADC_SetInjectedOffset(%struct.ADC_TypeDef* %0, i8 zeroext %1, i16 zeroext %2) local_unnamed_addr #3 !dbg !2450 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2454, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i8 %1, metadata !2455, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i16 %2, metadata !2456, metadata !DIExpression()), !dbg !2458
  %5 = bitcast i32* %4 to i8*, !dbg !2459
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !2459
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2457, metadata !DIExpression()), !dbg !2460
  store volatile i32 0, i32* %4, align 4, !dbg !2460, !tbaa !894
  %6 = ptrtoint %struct.ADC_TypeDef* %0 to i32, !dbg !2461
  store volatile i32 %6, i32* %4, align 4, !dbg !2462, !tbaa !894
  %7 = zext i8 %1 to i32, !dbg !2463
  %8 = load volatile i32, i32* %4, align 4, !dbg !2464, !tbaa !894
  %9 = add i32 %8, %7, !dbg !2464
  store volatile i32 %9, i32* %4, align 4, !dbg !2464, !tbaa !894
  %10 = zext i16 %2 to i32, !dbg !2465
  %11 = load volatile i32, i32* %4, align 4, !dbg !2466, !tbaa !894
  %12 = inttoptr i32 %11 to i32*, !dbg !2467
  store volatile i32 %10, i32* %12, align 4, !dbg !2468, !tbaa !894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !2469
  ret void, !dbg !2469
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_ExternalTrigInjectedConvConfig(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2470 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2472, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.value(metadata i32 %1, metadata !2473, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.value(metadata i32 0, metadata !2474, metadata !DIExpression()), !dbg !2475
  %3 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2476
  %4 = load volatile i32, i32* %3, align 4, !dbg !2476, !tbaa !2101
  call void @llvm.dbg.value(metadata i32 %4, metadata !2474, metadata !DIExpression()), !dbg !2475
  %5 = and i32 %4, -983041, !dbg !2477
  call void @llvm.dbg.value(metadata i32 %5, metadata !2474, metadata !DIExpression()), !dbg !2475
  %6 = or i32 %5, %1, !dbg !2478
  call void @llvm.dbg.value(metadata i32 %6, metadata !2474, metadata !DIExpression()), !dbg !2475
  store volatile i32 %6, i32* %3, align 4, !dbg !2479, !tbaa !2101
  ret void, !dbg !2480
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_ExternalTrigInjectedConvEdgeConfig(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2481 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2483, metadata !DIExpression()), !dbg !2486
  call void @llvm.dbg.value(metadata i32 %1, metadata !2484, metadata !DIExpression()), !dbg !2486
  call void @llvm.dbg.value(metadata i32 0, metadata !2485, metadata !DIExpression()), !dbg !2486
  %3 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2487
  %4 = load volatile i32, i32* %3, align 4, !dbg !2487, !tbaa !2101
  call void @llvm.dbg.value(metadata i32 %4, metadata !2485, metadata !DIExpression()), !dbg !2486
  %5 = and i32 %4, -3145729, !dbg !2488
  call void @llvm.dbg.value(metadata i32 %5, metadata !2485, metadata !DIExpression()), !dbg !2486
  %6 = or i32 %5, %1, !dbg !2489
  call void @llvm.dbg.value(metadata i32 %6, metadata !2485, metadata !DIExpression()), !dbg !2486
  store volatile i32 %6, i32* %3, align 4, !dbg !2490, !tbaa !2101
  ret void, !dbg !2491
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_SoftwareStartInjectedConv(%struct.ADC_TypeDef* %0) local_unnamed_addr #0 !dbg !2492 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2494, metadata !DIExpression()), !dbg !2495
  %2 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2496
  %3 = load volatile i32, i32* %2, align 4, !dbg !2497, !tbaa !2101
  %4 = or i32 %3, 4194304, !dbg !2497
  store volatile i32 %4, i32* %2, align 4, !dbg !2497, !tbaa !2101
  ret void, !dbg !2498
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @ADC_GetSoftwareStartInjectedConvCmdStatus(%struct.ADC_TypeDef* %0) local_unnamed_addr #0 !dbg !2499 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2501, metadata !DIExpression()), !dbg !2503
  call void @llvm.dbg.value(metadata i32 0, metadata !2502, metadata !DIExpression()), !dbg !2503
  %2 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 2, !dbg !2504
  %3 = load volatile i32, i32* %2, align 4, !dbg !2504, !tbaa !2101
  %4 = lshr i32 %3, 22
  %5 = and i32 %4, 1
  call void @llvm.dbg.value(metadata i32 %5, metadata !2502, metadata !DIExpression()), !dbg !2503
  ret i32 %5, !dbg !2506
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_AutoInjectedConvCmd(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2507 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2509, metadata !DIExpression()), !dbg !2511
  call void @llvm.dbg.value(metadata i32 %1, metadata !2510, metadata !DIExpression()), !dbg !2511
  %3 = icmp eq i32 %1, 0, !dbg !2512
  %4 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2514
  %5 = load volatile i32, i32* %4, align 4, !dbg !2514, !tbaa !2088
  %6 = and i32 %5, -1025, !dbg !2515
  %7 = select i1 %3, i32 0, i32 1024, !dbg !2515
  %8 = or i32 %6, %7, !dbg !2515
  store volatile i32 %8, i32* %4, align 4, !dbg !2514, !tbaa !2088
  ret void, !dbg !2516
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_InjectedDiscModeCmd(%struct.ADC_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !2517 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2519, metadata !DIExpression()), !dbg !2521
  call void @llvm.dbg.value(metadata i32 %1, metadata !2520, metadata !DIExpression()), !dbg !2521
  %3 = icmp eq i32 %1, 0, !dbg !2522
  %4 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2524
  %5 = load volatile i32, i32* %4, align 4, !dbg !2524, !tbaa !2088
  %6 = and i32 %5, -4097, !dbg !2525
  %7 = select i1 %3, i32 0, i32 4096, !dbg !2525
  %8 = or i32 %6, %7, !dbg !2525
  store volatile i32 %8, i32* %4, align 4, !dbg !2524, !tbaa !2088
  ret void, !dbg !2526
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @ADC_GetInjectedConversionValue(%struct.ADC_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #3 !dbg !2527 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2531, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata i8 %1, metadata !2532, metadata !DIExpression()), !dbg !2534
  %4 = bitcast i32* %3 to i8*, !dbg !2535
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !2535
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2533, metadata !DIExpression()), !dbg !2536
  store volatile i32 0, i32* %3, align 4, !dbg !2536, !tbaa !894
  %5 = ptrtoint %struct.ADC_TypeDef* %0 to i32, !dbg !2537
  store volatile i32 %5, i32* %3, align 4, !dbg !2538, !tbaa !894
  %6 = zext i8 %1 to i32, !dbg !2539
  %7 = add nuw nsw i32 %6, 40, !dbg !2540
  %8 = load volatile i32, i32* %3, align 4, !dbg !2541, !tbaa !894
  %9 = add i32 %7, %8, !dbg !2541
  store volatile i32 %9, i32* %3, align 4, !dbg !2541, !tbaa !894
  %10 = load volatile i32, i32* %3, align 4, !dbg !2542, !tbaa !894
  %11 = inttoptr i32 %10 to i32*, !dbg !2543
  %12 = load volatile i32, i32* %11, align 4, !dbg !2544, !tbaa !894
  %13 = trunc i32 %12 to i16, !dbg !2545
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !2546
  ret i16 %13, !dbg !2547
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_ITConfig(%struct.ADC_TypeDef* %0, i16 zeroext %1, i32 %2) local_unnamed_addr #0 !dbg !2548 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2552, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i16 %1, metadata !2553, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i32 %2, metadata !2554, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i32 0, metadata !2555, metadata !DIExpression()), !dbg !2556
  %4 = and i16 %1, 255, !dbg !2557
  %5 = zext i16 %4 to i32, !dbg !2557
  call void @llvm.dbg.value(metadata i32 %5, metadata !2555, metadata !DIExpression()), !dbg !2556
  %6 = shl nuw i32 1, %5, !dbg !2558
  call void @llvm.dbg.value(metadata i32 %6, metadata !2555, metadata !DIExpression()), !dbg !2556
  %7 = icmp eq i32 %2, 0, !dbg !2559
  br i1 %7, label %12, label %8, !dbg !2561

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2562
  %10 = load volatile i32, i32* %9, align 4, !dbg !2564, !tbaa !2088
  %11 = or i32 %10, %6, !dbg !2564
  store volatile i32 %11, i32* %9, align 4, !dbg !2564, !tbaa !2088
  br label %17, !dbg !2565

12:                                               ; preds = %3
  %13 = xor i32 %6, -1, !dbg !2566
  %14 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2568
  %15 = load volatile i32, i32* %14, align 4, !dbg !2569, !tbaa !2088
  %16 = and i32 %15, %13, !dbg !2569
  store volatile i32 %16, i32* %14, align 4, !dbg !2569, !tbaa !2088
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !2570
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @ADC_GetFlagStatus(%struct.ADC_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !2571 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2575, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i8 %1, metadata !2576, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i32 0, metadata !2577, metadata !DIExpression()), !dbg !2578
  %3 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 0, !dbg !2579
  %4 = load volatile i32, i32* %3, align 4, !dbg !2579, !tbaa !2581
  %5 = zext i8 %1 to i32, !dbg !2582
  %6 = and i32 %4, %5, !dbg !2583
  %7 = icmp ne i32 %6, 0, !dbg !2584
  %8 = zext i1 %7 to i32
  call void @llvm.dbg.value(metadata i32 %8, metadata !2577, metadata !DIExpression()), !dbg !2578
  ret i32 %8, !dbg !2585
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_ClearFlag(%struct.ADC_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !2586 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2588, metadata !DIExpression()), !dbg !2590
  call void @llvm.dbg.value(metadata i8 %1, metadata !2589, metadata !DIExpression()), !dbg !2590
  %3 = zext i8 %1 to i32, !dbg !2591
  %4 = xor i32 %3, -1, !dbg !2592
  %5 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 0, !dbg !2593
  store volatile i32 %4, i32* %5, align 4, !dbg !2594, !tbaa !2581
  ret void, !dbg !2595
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @ADC_GetITStatus(%struct.ADC_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !2596 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2600, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.value(metadata i16 %1, metadata !2601, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.value(metadata i32 0, metadata !2602, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.value(metadata i32 0, metadata !2603, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.value(metadata i32 0, metadata !2604, metadata !DIExpression()), !dbg !2605
  %3 = lshr i16 %1, 8, !dbg !2606
  %4 = zext i16 %3 to i32, !dbg !2606
  call void @llvm.dbg.value(metadata i32 %4, metadata !2603, metadata !DIExpression()), !dbg !2605
  %5 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 1, !dbg !2607
  %6 = load volatile i32, i32* %5, align 4, !dbg !2607, !tbaa !2088
  %7 = and i16 %1, 255, !dbg !2608
  %8 = zext i16 %7 to i32, !dbg !2608
  %9 = shl nuw i32 1, %8, !dbg !2609
  %10 = and i32 %6, %9, !dbg !2610
  call void @llvm.dbg.value(metadata i32 %10, metadata !2604, metadata !DIExpression()), !dbg !2605
  %11 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 0, !dbg !2611
  %12 = load volatile i32, i32* %11, align 4, !dbg !2611, !tbaa !2581
  %13 = and i32 %12, %4, !dbg !2613
  %14 = icmp ne i32 %13, 0, !dbg !2614
  %15 = icmp ne i32 %10, 0
  %16 = and i1 %15, %14, !dbg !2615
  %17 = zext i1 %16 to i32
  call void @llvm.dbg.value(metadata i32 %17, metadata !2602, metadata !DIExpression()), !dbg !2605
  ret i32 %17, !dbg !2616
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @ADC_ClearITPendingBit(%struct.ADC_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !2617 {
  call void @llvm.dbg.value(metadata %struct.ADC_TypeDef* %0, metadata !2621, metadata !DIExpression()), !dbg !2624
  call void @llvm.dbg.value(metadata i16 %1, metadata !2622, metadata !DIExpression()), !dbg !2624
  call void @llvm.dbg.value(metadata i8 0, metadata !2623, metadata !DIExpression()), !dbg !2624
  %3 = lshr i16 %1, 8, !dbg !2625
  %4 = zext i16 %3 to i32, !dbg !2626
  call void @llvm.dbg.value(metadata i32 %4, metadata !2623, metadata !DIExpression()), !dbg !2624
  %5 = xor i32 %4, -1, !dbg !2627
  %6 = getelementptr inbounds %struct.ADC_TypeDef, %struct.ADC_TypeDef* %0, i32 0, i32 0, !dbg !2628
  store volatile i32 %5, i32* %6, align 4, !dbg !2629, !tbaa !2581
  ret void, !dbg !2630
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @EXTI_DeInit() local_unnamed_addr #0 !dbg !2631 {
  store volatile i32 0, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !2632, !tbaa !946
  store volatile i32 0, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !2633, !tbaa !951
  store volatile i32 0, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !2634, !tbaa !954
  store volatile i32 0, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !2635, !tbaa !957
  store volatile i32 8388607, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !2636, !tbaa !963
  ret void, !dbg !2637
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @EXTI_Init(%struct.DMA_TypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !2638 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !2652, metadata !DIExpression()), !dbg !2654
  call void @llvm.dbg.value(metadata i32 0, metadata !2653, metadata !DIExpression()), !dbg !2654
  call void @llvm.dbg.value(metadata i32 1073822720, metadata !2653, metadata !DIExpression()), !dbg !2654
  %2 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !2655
  %3 = load i32, i32* %2, align 4, !dbg !2655, !tbaa !2657
  %4 = icmp eq i32 %3, 0, !dbg !2659
  br i1 %4, label %38, label %5, !dbg !2660

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !2661
  %7 = load i32, i32* %6, align 4, !dbg !2661, !tbaa !2663
  %8 = xor i32 %7, -1, !dbg !2664
  %9 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !2665, !tbaa !946
  %10 = and i32 %9, %8, !dbg !2665
  store volatile i32 %10, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !2665, !tbaa !946
  %11 = load volatile i32, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !2666, !tbaa !951
  %12 = and i32 %11, %8, !dbg !2666
  store volatile i32 %12, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !2666, !tbaa !951
  %13 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !2667
  %14 = load i32, i32* %13, align 4, !dbg !2667, !tbaa !2668
  %15 = add i32 %14, 1073822720, !dbg !2669
  call void @llvm.dbg.value(metadata i32 %15, metadata !2653, metadata !DIExpression()), !dbg !2654
  %16 = inttoptr i32 %15 to i32*, !dbg !2670
  %17 = load volatile i32, i32* %16, align 4, !dbg !2671, !tbaa !894
  %18 = or i32 %17, %7, !dbg !2671
  store volatile i32 %18, i32* %16, align 4, !dbg !2671, !tbaa !894
  %19 = load i32, i32* %6, align 4, !dbg !2672, !tbaa !2663
  %20 = xor i32 %19, -1, !dbg !2673
  %21 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !2674, !tbaa !954
  %22 = and i32 %21, %20, !dbg !2674
  store volatile i32 %22, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !2674, !tbaa !954
  %23 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !2675, !tbaa !957
  %24 = and i32 %23, %20, !dbg !2675
  store volatile i32 %24, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !2675, !tbaa !957
  %25 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !2676
  %26 = load i32, i32* %25, align 4, !dbg !2676, !tbaa !2678
  %27 = icmp eq i32 %26, 16, !dbg !2679
  br i1 %27, label %28, label %33, !dbg !2680

28:                                               ; preds = %5
  %29 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !2681, !tbaa !954
  %30 = or i32 %29, %19, !dbg !2681
  store volatile i32 %30, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !2681, !tbaa !954
  %31 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !2683, !tbaa !957
  %32 = or i32 %31, %19, !dbg !2683
  store volatile i32 %32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !2683, !tbaa !957
  br label %48, !dbg !2684

33:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 1073822720, metadata !2653, metadata !DIExpression()), !dbg !2654
  %34 = add i32 %26, 1073822720, !dbg !2685
  call void @llvm.dbg.value(metadata i32 %34, metadata !2653, metadata !DIExpression()), !dbg !2654
  %35 = inttoptr i32 %34 to i32*, !dbg !2687
  %36 = load volatile i32, i32* %35, align 4, !dbg !2688, !tbaa !894
  %37 = or i32 %36, %19, !dbg !2688
  store volatile i32 %37, i32* %35, align 4, !dbg !2688, !tbaa !894
  br label %48

38:                                               ; preds = %1
  %39 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !2689
  %40 = load i32, i32* %39, align 4, !dbg !2689, !tbaa !2668
  %41 = add i32 %40, 1073822720, !dbg !2691
  call void @llvm.dbg.value(metadata i32 %41, metadata !2653, metadata !DIExpression()), !dbg !2654
  %42 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !2692
  %43 = load i32, i32* %42, align 4, !dbg !2692, !tbaa !2663
  %44 = xor i32 %43, -1, !dbg !2693
  %45 = inttoptr i32 %41 to i32*, !dbg !2694
  %46 = load volatile i32, i32* %45, align 4, !dbg !2695, !tbaa !894
  %47 = and i32 %46, %44, !dbg !2695
  store volatile i32 %47, i32* %45, align 4, !dbg !2695, !tbaa !894
  br label %48

48:                                               ; preds = %28, %33, %38
  ret void, !dbg !2696
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @EXTI_StructInit(%struct.DMA_TypeDef* nocapture %0) local_unnamed_addr #2 !dbg !2697 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !2699, metadata !DIExpression()), !dbg !2700
  %2 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !2701
  store i32 0, i32* %2, align 4, !dbg !2702, !tbaa !2663
  %3 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !2703
  store i32 0, i32* %3, align 4, !dbg !2704, !tbaa !2668
  %4 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !2705
  store i32 12, i32* %4, align 4, !dbg !2706, !tbaa !2678
  %5 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !2707
  store i32 0, i32* %5, align 4, !dbg !2708, !tbaa !2657
  ret void, !dbg !2709
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @EXTI_GenerateSWInterrupt(i32 %0) local_unnamed_addr #0 !dbg !2710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2712, metadata !DIExpression()), !dbg !2713
  %2 = load volatile i32, i32* inttoptr (i32 1073822736 to i32*), align 16, !dbg !2714, !tbaa !960
  %3 = or i32 %2, %0, !dbg !2714
  store volatile i32 %3, i32* inttoptr (i32 1073822736 to i32*), align 16, !dbg !2714, !tbaa !960
  ret void, !dbg !2715
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @EXTI_GetFlagStatus(i32 %0) local_unnamed_addr #0 !dbg !2716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2720, metadata !DIExpression()), !dbg !2722
  call void @llvm.dbg.value(metadata i32 0, metadata !2721, metadata !DIExpression()), !dbg !2722
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !2723, !tbaa !963
  %3 = and i32 %2, %0, !dbg !2725
  %4 = icmp ne i32 %3, 0, !dbg !2726
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !2721, metadata !DIExpression()), !dbg !2722
  ret i32 %5, !dbg !2727
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @EXTI_ClearFlag(i32 %0) local_unnamed_addr #0 !dbg !2728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2730, metadata !DIExpression()), !dbg !2731
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !2732, !tbaa !963
  ret void, !dbg !2733
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @EXTI_GetITStatus(i32 %0) local_unnamed_addr #0 !dbg !2734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2738, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i32 0, metadata !2739, metadata !DIExpression()), !dbg !2741
  call void @llvm.dbg.value(metadata i32 0, metadata !2740, metadata !DIExpression()), !dbg !2741
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !2742, !tbaa !946
  %3 = and i32 %2, %0, !dbg !2743
  call void @llvm.dbg.value(metadata i32 %3, metadata !2740, metadata !DIExpression()), !dbg !2741
  %4 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !2744, !tbaa !963
  %5 = and i32 %4, %0, !dbg !2746
  %6 = icmp ne i32 %5, 0, !dbg !2747
  %7 = icmp ne i32 %3, 0
  %8 = and i1 %7, %6, !dbg !2748
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !2739, metadata !DIExpression()), !dbg !2741
  ret i32 %9, !dbg !2749
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @EXTI_ClearITPendingBit(i32 %0) local_unnamed_addr #0 !dbg !2750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2752, metadata !DIExpression()), !dbg !2753
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !2754, !tbaa !963
  ret void, !dbg !2755
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @RNG_DeInit() local_unnamed_addr #3 !dbg !2756 {
  tail call arm_aapcs_vfpcc void @RCC_AHB2PeriphResetCmd(i32 64, i32 1) #5, !dbg !2757
  tail call arm_aapcs_vfpcc void @RCC_AHB2PeriphResetCmd(i32 64, i32 0) #5, !dbg !2758
  ret void, !dbg !2759
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RNG_Cmd(i32 %0) local_unnamed_addr #0 !dbg !2760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2762, metadata !DIExpression()), !dbg !2763
  %2 = icmp eq i32 %0, 0, !dbg !2764
  %3 = load volatile i32, i32* inttoptr (i32 1342572544 to i32*), align 2048, !dbg !2766, !tbaa !2767
  %4 = and i32 %3, -5, !dbg !2768
  %5 = select i1 %2, i32 0, i32 4, !dbg !2768
  %6 = or i32 %4, %5, !dbg !2768
  store volatile i32 %6, i32* inttoptr (i32 1342572544 to i32*), align 2048, !dbg !2766, !tbaa !2767
  ret void, !dbg !2769
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RNG_GetRandomNumber() local_unnamed_addr #0 !dbg !2770 {
  %1 = load volatile i32, i32* inttoptr (i32 1342572552 to i32*), align 8, !dbg !2771, !tbaa !2772
  ret i32 %1, !dbg !2773
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RNG_ITConfig(i32 %0) local_unnamed_addr #0 !dbg !2774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2776, metadata !DIExpression()), !dbg !2777
  %2 = icmp eq i32 %0, 0, !dbg !2778
  %3 = load volatile i32, i32* inttoptr (i32 1342572544 to i32*), align 2048, !dbg !2780, !tbaa !2767
  %4 = and i32 %3, -9, !dbg !2781
  %5 = select i1 %2, i32 0, i32 8, !dbg !2781
  %6 = or i32 %4, %5, !dbg !2781
  store volatile i32 %6, i32* inttoptr (i32 1342572544 to i32*), align 2048, !dbg !2780, !tbaa !2767
  ret void, !dbg !2782
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RNG_GetFlagStatus(i8 zeroext %0) local_unnamed_addr #0 !dbg !2783 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2785, metadata !DIExpression()), !dbg !2787
  call void @llvm.dbg.value(metadata i32 0, metadata !2786, metadata !DIExpression()), !dbg !2787
  %2 = load volatile i32, i32* inttoptr (i32 1342572548 to i32*), align 4, !dbg !2788, !tbaa !2165
  %3 = zext i8 %0 to i32, !dbg !2790
  %4 = and i32 %2, %3, !dbg !2791
  %5 = icmp ne i32 %4, 0, !dbg !2792
  %6 = zext i1 %5 to i32
  call void @llvm.dbg.value(metadata i32 %6, metadata !2786, metadata !DIExpression()), !dbg !2787
  ret i32 %6, !dbg !2793
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RNG_ClearFlag(i8 zeroext %0) local_unnamed_addr #0 !dbg !2794 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2796, metadata !DIExpression()), !dbg !2797
  %2 = zext i8 %0 to i32, !dbg !2798
  %3 = shl nuw nsw i32 %2, 4, !dbg !2799
  %4 = xor i32 %3, -1, !dbg !2800
  store volatile i32 %4, i32* inttoptr (i32 1342572548 to i32*), align 4, !dbg !2801, !tbaa !2165
  ret void, !dbg !2802
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RNG_GetITStatus(i8 zeroext %0) local_unnamed_addr #0 !dbg !2803 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2805, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 0, metadata !2806, metadata !DIExpression()), !dbg !2807
  %2 = load volatile i32, i32* inttoptr (i32 1342572548 to i32*), align 4, !dbg !2808, !tbaa !2165
  %3 = zext i8 %0 to i32, !dbg !2810
  %4 = and i32 %2, %3, !dbg !2811
  %5 = icmp ne i32 %4, 0, !dbg !2812
  %6 = zext i1 %5 to i32
  call void @llvm.dbg.value(metadata i32 %6, metadata !2806, metadata !DIExpression()), !dbg !2807
  ret i32 %6, !dbg !2813
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RNG_ClearITPendingBit(i8 zeroext %0) local_unnamed_addr #0 !dbg !2814 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2816, metadata !DIExpression()), !dbg !2817
  %2 = xor i8 %0, -1, !dbg !2818
  %3 = zext i8 %2 to i32, !dbg !2819
  store volatile i32 %3, i32* inttoptr (i32 1342572548 to i32*), align 4, !dbg !2820, !tbaa !2165
  ret void, !dbg !2821
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @CAN_DeInit(%struct.CAN_TypeDef* readnone %0) local_unnamed_addr #3 !dbg !2822 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !2826, metadata !DIExpression()), !dbg !2827
  %2 = icmp eq %struct.CAN_TypeDef* %0, inttoptr (i32 1073767424 to %struct.CAN_TypeDef*), !dbg !2828
  %3 = select i1 %2, i32 33554432, i32 67108864, !dbg !2830
  %4 = select i1 %2, i32 33554432, i32 67108864, !dbg !2830
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 %3, i32 1) #5, !dbg !2831
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 %4, i32 0) #5, !dbg !2831
  ret void, !dbg !2832
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_Init(%struct.CAN_TypeDef* %0, %struct.CAN_InitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !2833 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !2853, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata %struct.CAN_InitTypeDef* %1, metadata !2854, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i8 0, metadata !2855, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i32 0, metadata !2856, metadata !DIExpression()), !dbg !2857
  %3 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 0, !dbg !2858
  %4 = load volatile i32, i32* %3, align 4, !dbg !2859, !tbaa !2860
  %5 = and i32 %4, -3, !dbg !2859
  store volatile i32 %5, i32* %3, align 4, !dbg !2859, !tbaa !2860
  %6 = load volatile i32, i32* %3, align 4, !dbg !2862, !tbaa !2860
  %7 = or i32 %6, 1, !dbg !2862
  store volatile i32 %7, i32* %3, align 4, !dbg !2862, !tbaa !2860
  %8 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !2857
  br label %9, !dbg !2863

9:                                                ; preds = %123, %2
  %10 = phi i32 [ 0, %2 ], [ %129, %123 ], !dbg !2857
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression()), !dbg !2857
  %11 = load volatile i32, i32* %8, align 4, !dbg !2864, !tbaa !2865
  %12 = and i32 %11, 1, !dbg !2866
  %13 = icmp eq i32 %12, 0, !dbg !2867
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  br i1 %13, label %115, label %14, !dbg !2863, !llvm.loop !2868

14:                                               ; preds = %123, %119, %115, %9
  %15 = load volatile i32, i32* %8, align 4, !dbg !2870, !tbaa !2865
  %16 = and i32 %15, 1, !dbg !2872
  %17 = icmp eq i32 %16, 0, !dbg !2873
  br i1 %17, label %98, label %18, !dbg !2874

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 5, !dbg !2875
  %20 = load i32, i32* %19, align 4, !dbg !2875, !tbaa !2878
  %21 = icmp eq i32 %20, 1, !dbg !2881
  %22 = load volatile i32, i32* %3, align 4, !dbg !2882, !tbaa !2860
  %23 = and i32 %22, -129, !dbg !2883
  %24 = select i1 %21, i32 128, i32 0, !dbg !2883
  %25 = or i32 %23, %24, !dbg !2883
  store volatile i32 %25, i32* %3, align 4, !dbg !2882, !tbaa !2860
  %26 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 6, !dbg !2884
  %27 = load i32, i32* %26, align 4, !dbg !2884, !tbaa !2886
  %28 = icmp eq i32 %27, 1, !dbg !2887
  %29 = load volatile i32, i32* %3, align 4, !dbg !2888, !tbaa !2860
  %30 = and i32 %29, -65, !dbg !2889
  %31 = select i1 %28, i32 64, i32 0, !dbg !2889
  %32 = or i32 %30, %31, !dbg !2889
  store volatile i32 %32, i32* %3, align 4, !dbg !2888, !tbaa !2860
  %33 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 7, !dbg !2890
  %34 = load i32, i32* %33, align 4, !dbg !2890, !tbaa !2892
  %35 = icmp eq i32 %34, 1, !dbg !2893
  %36 = load volatile i32, i32* %3, align 4, !dbg !2894, !tbaa !2860
  %37 = and i32 %36, -33, !dbg !2895
  %38 = select i1 %35, i32 32, i32 0, !dbg !2895
  %39 = or i32 %37, %38, !dbg !2895
  store volatile i32 %39, i32* %3, align 4, !dbg !2894, !tbaa !2860
  %40 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 8, !dbg !2896
  %41 = load i32, i32* %40, align 4, !dbg !2896, !tbaa !2898
  %42 = icmp eq i32 %41, 1, !dbg !2899
  %43 = load volatile i32, i32* %3, align 4, !dbg !2900, !tbaa !2860
  %44 = and i32 %43, -17, !dbg !2901
  %45 = select i1 %42, i32 16, i32 0, !dbg !2901
  %46 = or i32 %44, %45, !dbg !2901
  store volatile i32 %46, i32* %3, align 4, !dbg !2900, !tbaa !2860
  %47 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 9, !dbg !2902
  %48 = load i32, i32* %47, align 4, !dbg !2902, !tbaa !2904
  %49 = icmp eq i32 %48, 1, !dbg !2905
  %50 = load volatile i32, i32* %3, align 4, !dbg !2906, !tbaa !2860
  %51 = and i32 %50, -9, !dbg !2907
  %52 = select i1 %49, i32 8, i32 0, !dbg !2907
  %53 = or i32 %51, %52, !dbg !2907
  store volatile i32 %53, i32* %3, align 4, !dbg !2906, !tbaa !2860
  %54 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 10, !dbg !2908
  %55 = load i32, i32* %54, align 4, !dbg !2908, !tbaa !2910
  %56 = icmp eq i32 %55, 1, !dbg !2911
  %57 = load volatile i32, i32* %3, align 4, !dbg !2912, !tbaa !2860
  %58 = and i32 %57, -5, !dbg !2913
  %59 = select i1 %56, i32 4, i32 0, !dbg !2913
  %60 = or i32 %58, %59, !dbg !2913
  store volatile i32 %60, i32* %3, align 4, !dbg !2912, !tbaa !2860
  %61 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 1, !dbg !2914
  %62 = load i8, i8* %61, align 2, !dbg !2914, !tbaa !2915
  %63 = zext i8 %62 to i32, !dbg !2916
  %64 = shl i32 %63, 30, !dbg !2917
  %65 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 2, !dbg !2918
  %66 = load i8, i8* %65, align 1, !dbg !2918, !tbaa !2919
  %67 = zext i8 %66 to i32, !dbg !2920
  %68 = shl nuw i32 %67, 24, !dbg !2921
  %69 = or i32 %68, %64, !dbg !2922
  %70 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 3, !dbg !2923
  %71 = load i8, i8* %70, align 4, !dbg !2923, !tbaa !2924
  %72 = zext i8 %71 to i32, !dbg !2925
  %73 = shl nuw nsw i32 %72, 16, !dbg !2926
  %74 = or i32 %69, %73, !dbg !2927
  %75 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 4, !dbg !2928
  %76 = load i8, i8* %75, align 1, !dbg !2928, !tbaa !2929
  %77 = zext i8 %76 to i32, !dbg !2930
  %78 = shl nuw nsw i32 %77, 20, !dbg !2931
  %79 = or i32 %74, %78, !dbg !2932
  %80 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %1, i32 0, i32 0, !dbg !2933
  %81 = load i16, i16* %80, align 4, !dbg !2933, !tbaa !2934
  %82 = zext i16 %81 to i32, !dbg !2935
  %83 = add nsw i32 %82, -1, !dbg !2936
  %84 = or i32 %79, %83, !dbg !2937
  %85 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 7, !dbg !2938
  store volatile i32 %84, i32* %85, align 4, !dbg !2939, !tbaa !2940
  %86 = load volatile i32, i32* %3, align 4, !dbg !2941, !tbaa !2860
  %87 = and i32 %86, -2, !dbg !2941
  store volatile i32 %87, i32* %3, align 4, !dbg !2941, !tbaa !2860
  call void @llvm.dbg.value(metadata i32 0, metadata !2856, metadata !DIExpression()), !dbg !2857
  br label %88, !dbg !2942

88:                                               ; preds = %108, %18
  %89 = phi i32 [ 0, %18 ], [ %114, %108 ], !dbg !2943
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression()), !dbg !2857
  %90 = load volatile i32, i32* %8, align 4, !dbg !2944, !tbaa !2865
  %91 = and i32 %90, 1, !dbg !2945
  %92 = icmp eq i32 %91, 0, !dbg !2946
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  br i1 %92, label %93, label %100, !dbg !2942, !llvm.loop !2947

93:                                               ; preds = %104, %100, %88, %108
  %94 = load volatile i32, i32* %8, align 4, !dbg !2949, !tbaa !2865
  %95 = trunc i32 %94 to i8
  %96 = and i8 %95, 1
  %97 = xor i8 %96, 1
  br label %98

98:                                               ; preds = %93, %14
  %99 = phi i8 [ 0, %14 ], [ %97, %93 ], !dbg !2951
  call void @llvm.dbg.value(metadata i8 %99, metadata !2855, metadata !DIExpression()), !dbg !2857
  ret i8 %99, !dbg !2952

100:                                              ; preds = %88
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  %101 = load volatile i32, i32* %8, align 4, !dbg !2944, !tbaa !2865
  %102 = and i32 %101, 1, !dbg !2945
  %103 = icmp eq i32 %102, 0, !dbg !2946
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  br i1 %103, label %93, label %104, !dbg !2942, !llvm.loop !2947

104:                                              ; preds = %100
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !2857
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  %105 = load volatile i32, i32* %8, align 4, !dbg !2944, !tbaa !2865
  %106 = and i32 %105, 1, !dbg !2945
  %107 = icmp eq i32 %106, 0, !dbg !2946
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !2857
  br i1 %107, label %93, label %108, !dbg !2942, !llvm.loop !2947

108:                                              ; preds = %104
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression(DW_OP_constu, 3, DW_OP_or, DW_OP_stack_value)), !dbg !2857
  call void @llvm.dbg.value(metadata i32 %89, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !2857
  %109 = load volatile i32, i32* %8, align 4, !dbg !2944, !tbaa !2865
  %110 = and i32 %109, 1, !dbg !2945
  %111 = icmp ne i32 %110, 0, !dbg !2946
  %112 = icmp ne i32 %89, 65532, !dbg !2953
  %113 = and i1 %112, %111, !dbg !2953
  %114 = add nuw nsw i32 %89, 4, !dbg !2954
  call void @llvm.dbg.value(metadata i32 %114, metadata !2856, metadata !DIExpression()), !dbg !2857
  br i1 %113, label %88, label %93, !dbg !2942, !llvm.loop !2947

115:                                              ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  %116 = load volatile i32, i32* %8, align 4, !dbg !2864, !tbaa !2865
  %117 = and i32 %116, 1, !dbg !2866
  %118 = icmp eq i32 %117, 0, !dbg !2867
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  br i1 %118, label %119, label %14, !dbg !2863, !llvm.loop !2868

119:                                              ; preds = %115
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !2857
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2857
  %120 = load volatile i32, i32* %8, align 4, !dbg !2864, !tbaa !2865
  %121 = and i32 %120, 1, !dbg !2866
  %122 = icmp eq i32 %121, 0, !dbg !2867
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !2857
  br i1 %122, label %123, label %14, !dbg !2863, !llvm.loop !2868

123:                                              ; preds = %119
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression(DW_OP_constu, 3, DW_OP_or, DW_OP_stack_value)), !dbg !2857
  call void @llvm.dbg.value(metadata i32 %10, metadata !2856, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !2857
  %124 = load volatile i32, i32* %8, align 4, !dbg !2864, !tbaa !2865
  %125 = and i32 %124, 1, !dbg !2866
  %126 = icmp eq i32 %125, 0, !dbg !2867
  %127 = icmp ne i32 %10, 65532, !dbg !2956
  %128 = and i1 %127, %126, !dbg !2956
  %129 = add nuw nsw i32 %10, 4, !dbg !2957
  call void @llvm.dbg.value(metadata i32 %129, metadata !2856, metadata !DIExpression()), !dbg !2857
  br i1 %128, label %9, label %14, !dbg !2863, !llvm.loop !2868
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_FilterInit(%struct.CAN_FilterInitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !2959 {
  call void @llvm.dbg.value(metadata %struct.CAN_FilterInitTypeDef* %0, metadata !2976, metadata !DIExpression()), !dbg !2978
  call void @llvm.dbg.value(metadata i32 0, metadata !2977, metadata !DIExpression()), !dbg !2978
  %2 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 5, !dbg !2979
  %3 = load i8, i8* %2, align 2, !dbg !2979, !tbaa !2980
  %4 = zext i8 %3 to i32, !dbg !2982
  %5 = shl nuw i32 1, %4, !dbg !2983
  call void @llvm.dbg.value(metadata i32 %5, metadata !2977, metadata !DIExpression()), !dbg !2978
  %6 = load volatile i32, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !2984, !tbaa !2985
  %7 = or i32 %6, 1, !dbg !2984
  store volatile i32 %7, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !2984, !tbaa !2985
  %8 = xor i32 %5, -1, !dbg !2986
  %9 = load volatile i32, i32* inttoptr (i32 1073767964 to i32*), align 4, !dbg !2987, !tbaa !2988
  %10 = and i32 %9, %8, !dbg !2987
  store volatile i32 %10, i32* inttoptr (i32 1073767964 to i32*), align 4, !dbg !2987, !tbaa !2988
  %11 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 7, !dbg !2989
  %12 = load i8, i8* %11, align 4, !dbg !2989, !tbaa !2991
  switch i8 %12, label %49 [
    i8 0, label %13
    i8 1, label %26
  ], !dbg !2992

13:                                               ; preds = %1
  %14 = load volatile i32, i32* inttoptr (i32 1073767948 to i32*), align 4, !dbg !2993, !tbaa !2995
  %15 = and i32 %14, %8, !dbg !2993
  store volatile i32 %15, i32* inttoptr (i32 1073767948 to i32*), align 4, !dbg !2993, !tbaa !2995
  %16 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 3, !dbg !2996
  %17 = load i16, i16* %16, align 2, !dbg !2996, !tbaa !2997
  %18 = zext i16 %17 to i32, !dbg !2998
  %19 = shl nuw i32 %18, 16, !dbg !2999
  %20 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 1, !dbg !3000
  %21 = load i16, i16* %20, align 2, !dbg !3000, !tbaa !3001
  %22 = zext i16 %21 to i32, !dbg !3002
  %23 = or i32 %19, %22, !dbg !3003
  %24 = getelementptr inbounds [28 x %struct.CAN_FilterRegister_TypeDef], [28 x %struct.CAN_FilterRegister_TypeDef]* inttoptr (i32 1073768000 to [28 x %struct.CAN_FilterRegister_TypeDef]*), i32 0, i32 %4, i32 0, !dbg !3004
  store volatile i32 %23, i32* %24, align 8, !dbg !3005, !tbaa !3006
  %25 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 0, !dbg !3008
  br label %39, !dbg !3009

26:                                               ; preds = %1
  %27 = load volatile i32, i32* inttoptr (i32 1073767948 to i32*), align 4, !dbg !3010, !tbaa !2995
  %28 = or i32 %27, %5, !dbg !3010
  store volatile i32 %28, i32* inttoptr (i32 1073767948 to i32*), align 4, !dbg !3010, !tbaa !2995
  %29 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 0, !dbg !3013
  %30 = load i16, i16* %29, align 4, !dbg !3013, !tbaa !3014
  %31 = zext i16 %30 to i32, !dbg !3015
  %32 = shl nuw i32 %31, 16, !dbg !3016
  %33 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 1, !dbg !3017
  %34 = load i16, i16* %33, align 2, !dbg !3017, !tbaa !3001
  %35 = zext i16 %34 to i32, !dbg !3018
  %36 = or i32 %32, %35, !dbg !3019
  %37 = getelementptr inbounds [28 x %struct.CAN_FilterRegister_TypeDef], [28 x %struct.CAN_FilterRegister_TypeDef]* inttoptr (i32 1073768000 to [28 x %struct.CAN_FilterRegister_TypeDef]*), i32 0, i32 %4, i32 0, !dbg !3020
  store volatile i32 %36, i32* %37, align 8, !dbg !3021, !tbaa !3006
  %38 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 3, !dbg !3022
  br label %39, !dbg !3023

39:                                               ; preds = %26, %13
  %40 = phi i16* [ %25, %13 ], [ %38, %26 ]
  %41 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 2, !dbg !2978
  %42 = load i16, i16* %41, align 4, !dbg !2978, !tbaa !3024
  %43 = zext i16 %42 to i32, !dbg !2978
  %44 = shl nuw i32 %43, 16, !dbg !2978
  %45 = load i16, i16* %40, align 2, !dbg !2978, !tbaa !3025
  %46 = zext i16 %45 to i32, !dbg !2978
  %47 = or i32 %44, %46, !dbg !2978
  %48 = getelementptr inbounds [28 x %struct.CAN_FilterRegister_TypeDef], [28 x %struct.CAN_FilterRegister_TypeDef]* inttoptr (i32 1073768000 to [28 x %struct.CAN_FilterRegister_TypeDef]*), i32 0, i32 %4, i32 1, !dbg !2978
  store volatile i32 %47, i32* %48, align 4, !dbg !2978, !tbaa !3026
  br label %49, !dbg !3027

49:                                               ; preds = %39, %1
  %50 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 6, !dbg !3027
  %51 = load i8, i8* %50, align 1, !dbg !3027, !tbaa !3029
  %52 = icmp eq i8 %51, 0, !dbg !3030
  %53 = load volatile i32, i32* inttoptr (i32 1073767940 to i32*), align 4, !dbg !3031, !tbaa !3032
  %54 = or i32 %53, %5, !dbg !3033
  %55 = and i32 %53, %8, !dbg !3033
  %56 = select i1 %52, i32 %55, i32 %54, !dbg !3033
  store volatile i32 %56, i32* inttoptr (i32 1073767940 to i32*), align 4, !dbg !3031, !tbaa !3032
  %57 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 4, !dbg !3034
  %58 = load i16, i16* %57, align 4, !dbg !3034, !tbaa !3036
  switch i16 %58, label %67 [
    i16 0, label %59
    i16 1, label %62
  ], !dbg !3037

59:                                               ; preds = %49
  %60 = load volatile i32, i32* inttoptr (i32 1073767956 to i32*), align 4, !dbg !3038, !tbaa !3040
  %61 = and i32 %60, %8, !dbg !3038
  br label %65, !dbg !3041

62:                                               ; preds = %49
  %63 = load volatile i32, i32* inttoptr (i32 1073767956 to i32*), align 4, !dbg !3042, !tbaa !3040
  %64 = or i32 %63, %5, !dbg !3042
  br label %65, !dbg !3045

65:                                               ; preds = %62, %59
  %66 = phi i32 [ %61, %59 ], [ %64, %62 ]
  store volatile i32 %66, i32* inttoptr (i32 1073767956 to i32*), align 4, !dbg !2978, !tbaa !3040
  br label %67, !dbg !3046

67:                                               ; preds = %65, %49
  %68 = getelementptr inbounds %struct.CAN_FilterInitTypeDef, %struct.CAN_FilterInitTypeDef* %0, i32 0, i32 8, !dbg !3046
  %69 = load i32, i32* %68, align 4, !dbg !3046, !tbaa !3048
  %70 = icmp eq i32 %69, 1, !dbg !3049
  br i1 %70, label %71, label %74, !dbg !3050

71:                                               ; preds = %67
  %72 = load volatile i32, i32* inttoptr (i32 1073767964 to i32*), align 4, !dbg !3051, !tbaa !2988
  %73 = or i32 %72, %5, !dbg !3051
  store volatile i32 %73, i32* inttoptr (i32 1073767964 to i32*), align 4, !dbg !3051, !tbaa !2988
  br label %74, !dbg !3053

74:                                               ; preds = %71, %67
  %75 = load volatile i32, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3054, !tbaa !2985
  %76 = and i32 %75, -2, !dbg !3054
  store volatile i32 %76, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3054, !tbaa !2985
  ret void, !dbg !3055
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @CAN_StructInit(%struct.CAN_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !3056 {
  call void @llvm.dbg.value(metadata %struct.CAN_InitTypeDef* %0, metadata !3060, metadata !DIExpression()), !dbg !3061
  %2 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 5, !dbg !3062
  store i32 0, i32* %2, align 4, !dbg !3063, !tbaa !2878
  %3 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 6, !dbg !3064
  store i32 0, i32* %3, align 4, !dbg !3065, !tbaa !2886
  %4 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 7, !dbg !3066
  store i32 0, i32* %4, align 4, !dbg !3067, !tbaa !2892
  %5 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 8, !dbg !3068
  store i32 0, i32* %5, align 4, !dbg !3069, !tbaa !2898
  %6 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 9, !dbg !3070
  store i32 0, i32* %6, align 4, !dbg !3071, !tbaa !2904
  %7 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 10, !dbg !3072
  store i32 0, i32* %7, align 4, !dbg !3073, !tbaa !2910
  %8 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 1, !dbg !3074
  store i8 0, i8* %8, align 2, !dbg !3075, !tbaa !2915
  %9 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 2, !dbg !3076
  store i8 0, i8* %9, align 1, !dbg !3077, !tbaa !2919
  %10 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 3, !dbg !3078
  store i8 3, i8* %10, align 4, !dbg !3079, !tbaa !2924
  %11 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 4, !dbg !3080
  store i8 2, i8* %11, align 1, !dbg !3081, !tbaa !2929
  %12 = getelementptr inbounds %struct.CAN_InitTypeDef, %struct.CAN_InitTypeDef* %0, i32 0, i32 0, !dbg !3082
  store i16 1, i16* %12, align 4, !dbg !3083, !tbaa !2934
  ret void, !dbg !3084
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_SlaveStartBank(i8 zeroext %0) local_unnamed_addr #0 !dbg !3085 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3087, metadata !DIExpression()), !dbg !3088
  %2 = load volatile i32, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3089, !tbaa !2985
  %3 = or i32 %2, 1, !dbg !3089
  store volatile i32 %3, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3089, !tbaa !2985
  %4 = load volatile i32, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3090, !tbaa !2985
  %5 = and i32 %4, -16143, !dbg !3090
  store volatile i32 %5, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3090, !tbaa !2985
  %6 = zext i8 %0 to i32, !dbg !3091
  %7 = shl nuw nsw i32 %6, 8, !dbg !3092
  %8 = load volatile i32, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3093, !tbaa !2985
  %9 = or i32 %8, %7, !dbg !3093
  store volatile i32 %9, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3093, !tbaa !2985
  %10 = load volatile i32, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3094, !tbaa !2985
  %11 = and i32 %10, -2, !dbg !3094
  store volatile i32 %11, i32* inttoptr (i32 1073767936 to i32*), align 512, !dbg !3094, !tbaa !2985
  ret void, !dbg !3095
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_DBGFreeze(%struct.CAN_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !3096 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3100, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.value(metadata i32 %1, metadata !3101, metadata !DIExpression()), !dbg !3102
  %3 = icmp eq i32 %1, 0, !dbg !3103
  %4 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 0, !dbg !3105
  %5 = load volatile i32, i32* %4, align 4, !dbg !3105, !tbaa !2860
  %6 = and i32 %5, -65537, !dbg !3106
  %7 = select i1 %3, i32 0, i32 65536, !dbg !3106
  %8 = or i32 %6, %7, !dbg !3106
  store volatile i32 %8, i32* %4, align 4, !dbg !3105, !tbaa !2860
  ret void, !dbg !3107
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_TTComModeCmd(%struct.CAN_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !3108 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3110, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i32 %1, metadata !3111, metadata !DIExpression()), !dbg !3112
  %3 = icmp eq i32 %1, 0, !dbg !3113
  %4 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 0, !dbg !3115
  %5 = load volatile i32, i32* %4, align 4, !dbg !3115, !tbaa !2860
  br i1 %3, label %17, label %6, !dbg !3116

6:                                                ; preds = %2
  %7 = or i32 %5, 128, !dbg !3117
  store volatile i32 %7, i32* %4, align 4, !dbg !3117, !tbaa !2860
  %8 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 0, i32 1, !dbg !3119
  %9 = load volatile i32, i32* %8, align 4, !dbg !3120, !tbaa !1690
  %10 = or i32 %9, 256, !dbg !3120
  store volatile i32 %10, i32* %8, align 4, !dbg !3120, !tbaa !1690
  %11 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 1, i32 1, !dbg !3121
  %12 = load volatile i32, i32* %11, align 4, !dbg !3122, !tbaa !1690
  %13 = or i32 %12, 256, !dbg !3122
  store volatile i32 %13, i32* %11, align 4, !dbg !3122, !tbaa !1690
  %14 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 2, i32 1, !dbg !3123
  %15 = load volatile i32, i32* %14, align 4, !dbg !3124, !tbaa !1690
  %16 = or i32 %15, 256, !dbg !3124
  store volatile i32 %16, i32* %14, align 4, !dbg !3124, !tbaa !1690
  br label %28, !dbg !3125

17:                                               ; preds = %2
  %18 = and i32 %5, -129, !dbg !3126
  store volatile i32 %18, i32* %4, align 4, !dbg !3126, !tbaa !2860
  %19 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 0, i32 1, !dbg !3128
  %20 = load volatile i32, i32* %19, align 4, !dbg !3129, !tbaa !1690
  %21 = and i32 %20, -257, !dbg !3129
  store volatile i32 %21, i32* %19, align 4, !dbg !3129, !tbaa !1690
  %22 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 1, i32 1, !dbg !3130
  %23 = load volatile i32, i32* %22, align 4, !dbg !3131, !tbaa !1690
  %24 = and i32 %23, -257, !dbg !3131
  store volatile i32 %24, i32* %22, align 4, !dbg !3131, !tbaa !1690
  %25 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 2, i32 1, !dbg !3132
  %26 = load volatile i32, i32* %25, align 4, !dbg !3133, !tbaa !1690
  %27 = and i32 %26, -257, !dbg !3133
  store volatile i32 %27, i32* %25, align 4, !dbg !3133, !tbaa !1690
  br label %28

28:                                               ; preds = %17, %6
  ret void, !dbg !3134
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_Transmit(%struct.CAN_TypeDef* %0, %struct.CanTxMsg* nocapture %1) local_unnamed_addr #0 !dbg !3135 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3150, metadata !DIExpression()), !dbg !3153
  call void @llvm.dbg.value(metadata %struct.CanTxMsg* %1, metadata !3151, metadata !DIExpression()), !dbg !3153
  call void @llvm.dbg.value(metadata i8 0, metadata !3152, metadata !DIExpression()), !dbg !3153
  %3 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 2, !dbg !3154
  %4 = load volatile i32, i32* %3, align 4, !dbg !3154, !tbaa !3156
  %5 = and i32 %4, 67108864, !dbg !3157
  %6 = icmp eq i32 %5, 0, !dbg !3158
  br i1 %6, label %7, label %15, !dbg !3159

7:                                                ; preds = %2
  %8 = load volatile i32, i32* %3, align 4, !dbg !3160, !tbaa !3156
  %9 = and i32 %8, 134217728, !dbg !3162
  %10 = icmp eq i32 %9, 0, !dbg !3163
  br i1 %10, label %11, label %15, !dbg !3164

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %3, align 4, !dbg !3165, !tbaa !3156
  %13 = and i32 %12, 268435456, !dbg !3167
  %14 = icmp eq i32 %13, 0, !dbg !3168
  call void @llvm.dbg.value(metadata i8 undef, metadata !3152, metadata !DIExpression()), !dbg !3153
  br i1 %14, label %91, label %15, !dbg !3169

15:                                               ; preds = %7, %2, %11
  %16 = phi i8 [ 2, %11 ], [ 1, %7 ], [ 0, %2 ]
  %17 = zext i8 %16 to i32, !dbg !3170
  %18 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 %17, i32 0, !dbg !3172
  %19 = load volatile i32, i32* %18, align 4, !dbg !3174, !tbaa !934
  %20 = and i32 %19, 1, !dbg !3174
  store volatile i32 %20, i32* %18, align 4, !dbg !3174, !tbaa !934
  %21 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 2, !dbg !3175
  %22 = load i8, i8* %21, align 4, !dbg !3175, !tbaa !3177
  %23 = icmp eq i8 %22, 0, !dbg !3179
  br i1 %23, label %24, label %28, !dbg !3180

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 0, !dbg !3181
  %26 = load i32, i32* %25, align 4, !dbg !3181, !tbaa !3183
  %27 = shl i32 %26, 21, !dbg !3184
  br label %34, !dbg !3185

28:                                               ; preds = %15
  %29 = zext i8 %22 to i32, !dbg !3186
  %30 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 1, !dbg !3187
  %31 = load i32, i32* %30, align 4, !dbg !3187, !tbaa !3189
  %32 = shl i32 %31, 3, !dbg !3190
  %33 = or i32 %32, %29, !dbg !3191
  br label %34

34:                                               ; preds = %28, %24
  %35 = phi i32 [ %33, %28 ], [ %27, %24 ]
  %36 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 3, !dbg !3192
  %37 = load i8, i8* %36, align 1, !dbg !3192, !tbaa !3193
  %38 = zext i8 %37 to i32, !dbg !3192
  %39 = or i32 %35, %38, !dbg !3192
  %40 = load volatile i32, i32* %18, align 4, !dbg !3192, !tbaa !934
  %41 = or i32 %39, %40, !dbg !3192
  store volatile i32 %41, i32* %18, align 4, !dbg !3192, !tbaa !934
  %42 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 4, !dbg !3194
  %43 = load i8, i8* %42, align 2, !dbg !3195, !tbaa !3196
  %44 = and i8 %43, 15, !dbg !3195
  store i8 %44, i8* %42, align 2, !dbg !3195, !tbaa !3196
  %45 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 %17, i32 1, !dbg !3197
  %46 = load volatile i32, i32* %45, align 4, !dbg !3198, !tbaa !1690
  %47 = and i32 %46, -16, !dbg !3198
  store volatile i32 %47, i32* %45, align 4, !dbg !3198, !tbaa !1690
  %48 = zext i8 %44 to i32, !dbg !3199
  %49 = load volatile i32, i32* %45, align 4, !dbg !3200, !tbaa !1690
  %50 = or i32 %49, %48, !dbg !3200
  store volatile i32 %50, i32* %45, align 4, !dbg !3200, !tbaa !1690
  %51 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 5, i32 3, !dbg !3201
  %52 = load i8, i8* %51, align 1, !dbg !3201, !tbaa !889
  %53 = zext i8 %52 to i32, !dbg !3202
  %54 = shl nuw i32 %53, 24, !dbg !3203
  %55 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 5, i32 2, !dbg !3204
  %56 = load i8, i8* %55, align 1, !dbg !3204, !tbaa !889
  %57 = zext i8 %56 to i32, !dbg !3205
  %58 = shl nuw nsw i32 %57, 16, !dbg !3206
  %59 = or i32 %58, %54, !dbg !3207
  %60 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 5, i32 1, !dbg !3208
  %61 = load i8, i8* %60, align 1, !dbg !3208, !tbaa !889
  %62 = zext i8 %61 to i32, !dbg !3209
  %63 = shl nuw nsw i32 %62, 8, !dbg !3210
  %64 = or i32 %59, %63, !dbg !3211
  %65 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 5, i32 0, !dbg !3212
  %66 = load i8, i8* %65, align 1, !dbg !3212, !tbaa !889
  %67 = zext i8 %66 to i32, !dbg !3213
  %68 = or i32 %64, %67, !dbg !3214
  %69 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 %17, i32 2, !dbg !3215
  store volatile i32 %68, i32* %69, align 4, !dbg !3216, !tbaa !968
  %70 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 5, i32 7, !dbg !3217
  %71 = load i8, i8* %70, align 1, !dbg !3217, !tbaa !889
  %72 = zext i8 %71 to i32, !dbg !3218
  %73 = shl nuw i32 %72, 24, !dbg !3219
  %74 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 5, i32 6, !dbg !3220
  %75 = load i8, i8* %74, align 1, !dbg !3220, !tbaa !889
  %76 = zext i8 %75 to i32, !dbg !3221
  %77 = shl nuw nsw i32 %76, 16, !dbg !3222
  %78 = or i32 %77, %73, !dbg !3223
  %79 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 5, i32 5, !dbg !3224
  %80 = load i8, i8* %79, align 1, !dbg !3224, !tbaa !889
  %81 = zext i8 %80 to i32, !dbg !3225
  %82 = shl nuw nsw i32 %81, 8, !dbg !3226
  %83 = or i32 %78, %82, !dbg !3227
  %84 = getelementptr inbounds %struct.CanTxMsg, %struct.CanTxMsg* %1, i32 0, i32 5, i32 4, !dbg !3228
  %85 = load i8, i8* %84, align 1, !dbg !3228, !tbaa !889
  %86 = zext i8 %85 to i32, !dbg !3229
  %87 = or i32 %83, %86, !dbg !3230
  %88 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 9, i32 %17, i32 3, !dbg !3231
  store volatile i32 %87, i32* %88, align 4, !dbg !3232, !tbaa !985
  %89 = load volatile i32, i32* %18, align 4, !dbg !3233, !tbaa !934
  %90 = or i32 %89, 1, !dbg !3233
  store volatile i32 %90, i32* %18, align 4, !dbg !3233, !tbaa !934
  br label %91, !dbg !3234

91:                                               ; preds = %11, %34
  %92 = phi i8 [ 4, %11 ], [ %16, %34 ]
  ret i8 %92, !dbg !3235
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_TransmitStatus(%struct.CAN_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !3236 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3240, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i8 %1, metadata !3241, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i32 0, metadata !3242, metadata !DIExpression()), !dbg !3243
  %3 = icmp ult i8 %1, 3, !dbg !3244
  br i1 %3, label %4, label %18, !dbg !3244

4:                                                ; preds = %2
  %5 = sext i8 %1 to i32, !dbg !3244
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.CAN_TransmitStatus, i32 0, i32 %5, !dbg !3244
  %7 = load i32, i32* %6, align 4, !dbg !3244
  %8 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 2, !dbg !3245
  %9 = load volatile i32, i32* %8, align 4, !dbg !3245, !tbaa !3156
  %10 = and i32 %9, %7, !dbg !3245
  call void @llvm.dbg.value(metadata i32 %10, metadata !3242, metadata !DIExpression()), !dbg !3243
  switch i32 %10, label %17 [
    i32 0, label %18
    i32 67108865, label %11
    i32 134217984, label %12
    i32 268500992, label %13
    i32 67108867, label %14
    i32 134218496, label %15
    i32 268632064, label %16
  ], !dbg !3247

11:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 0, metadata !3242, metadata !DIExpression()), !dbg !3243
  br label %18, !dbg !3248

12:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 0, metadata !3242, metadata !DIExpression()), !dbg !3243
  br label %18, !dbg !3250

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 0, metadata !3242, metadata !DIExpression()), !dbg !3243
  br label %18, !dbg !3251

14:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 1, metadata !3242, metadata !DIExpression()), !dbg !3243
  br label %18, !dbg !3252

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 1, metadata !3242, metadata !DIExpression()), !dbg !3243
  br label %18, !dbg !3253

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 1, metadata !3242, metadata !DIExpression()), !dbg !3243
  br label %18, !dbg !3254

17:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 0, metadata !3242, metadata !DIExpression()), !dbg !3243
  br label %18, !dbg !3255

18:                                               ; preds = %2, %4, %17, %16, %15, %14, %13, %12, %11
  %19 = phi i8 [ 0, %17 ], [ 1, %16 ], [ 1, %15 ], [ 1, %14 ], [ 0, %13 ], [ 0, %12 ], [ 0, %11 ], [ 2, %4 ], [ 2, %2 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3242, metadata !DIExpression()), !dbg !3243
  ret i8 %19, !dbg !3256
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_CancelTransmit(%struct.CAN_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !3257 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3261, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.value(metadata i8 %1, metadata !3262, metadata !DIExpression()), !dbg !3263
  %3 = icmp ult i8 %1, 3, !dbg !3264
  br i1 %3, label %4, label %11, !dbg !3264

4:                                                ; preds = %2
  %5 = sext i8 %1 to i32, !dbg !3264
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.CAN_CancelTransmit, i32 0, i32 %5, !dbg !3264
  %7 = load i32, i32* %6, align 4, !dbg !3264
  %8 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 2, !dbg !3265
  %9 = load volatile i32, i32* %8, align 4, !dbg !3265, !tbaa !3156
  %10 = or i32 %9, %7, !dbg !3265
  store volatile i32 %10, i32* %8, align 4, !dbg !3265, !tbaa !3156
  br label %11, !dbg !3267

11:                                               ; preds = %2, %4
  ret void, !dbg !3267
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_Receive(%struct.CAN_TypeDef* %0, i8 zeroext %1, %struct.CanRxMsg* nocapture %2) local_unnamed_addr #0 !dbg !3268 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3283, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %1, metadata !3284, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.CanRxMsg* %2, metadata !3285, metadata !DIExpression()), !dbg !3286
  %4 = zext i8 %1 to i32, !dbg !3287
  %5 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 10, i32 %4, i32 0, !dbg !3288
  %6 = load volatile i32, i32* %5, align 4, !dbg !3288, !tbaa !934
  %7 = trunc i32 %6 to i8, !dbg !3289
  %8 = and i8 %7, 4, !dbg !3289
  %9 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 2, !dbg !3290
  store i8 %8, i8* %9, align 4, !dbg !3291, !tbaa !3292
  %10 = icmp eq i8 %8, 0, !dbg !3294
  %11 = load volatile i32, i32* %5, align 4, !dbg !3296, !tbaa !934
  br i1 %10, label %12, label %15, !dbg !3297

12:                                               ; preds = %3
  %13 = lshr i32 %11, 21, !dbg !3298
  %14 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 0, !dbg !3300
  store i32 %13, i32* %14, align 4, !dbg !3301, !tbaa !3302
  br label %18, !dbg !3303

15:                                               ; preds = %3
  %16 = lshr i32 %11, 3, !dbg !3304
  %17 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 1, !dbg !3306
  store i32 %16, i32* %17, align 4, !dbg !3307, !tbaa !3308
  br label %18

18:                                               ; preds = %15, %12
  %19 = load volatile i32, i32* %5, align 4, !dbg !3309, !tbaa !934
  %20 = trunc i32 %19 to i8, !dbg !3310
  %21 = and i8 %20, 2, !dbg !3310
  %22 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 3, !dbg !3311
  store i8 %21, i8* %22, align 1, !dbg !3312, !tbaa !3313
  %23 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 10, i32 %4, i32 1, !dbg !3314
  %24 = load volatile i32, i32* %23, align 4, !dbg !3314, !tbaa !1690
  %25 = trunc i32 %24 to i8, !dbg !3315
  %26 = and i8 %25, 15, !dbg !3315
  %27 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 4, !dbg !3316
  store i8 %26, i8* %27, align 2, !dbg !3317, !tbaa !3318
  %28 = load volatile i32, i32* %23, align 4, !dbg !3319, !tbaa !1690
  %29 = lshr i32 %28, 8, !dbg !3320
  %30 = trunc i32 %29 to i8, !dbg !3321
  %31 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 6, !dbg !3322
  store i8 %30, i8* %31, align 1, !dbg !3323, !tbaa !3324
  %32 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 10, i32 %4, i32 2, !dbg !3325
  %33 = load volatile i32, i32* %32, align 4, !dbg !3325, !tbaa !968
  %34 = trunc i32 %33 to i8, !dbg !3326
  %35 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 5, i32 0, !dbg !3327
  store i8 %34, i8* %35, align 1, !dbg !3328, !tbaa !889
  %36 = load volatile i32, i32* %32, align 4, !dbg !3329, !tbaa !968
  %37 = lshr i32 %36, 8, !dbg !3330
  %38 = trunc i32 %37 to i8, !dbg !3331
  %39 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 5, i32 1, !dbg !3332
  store i8 %38, i8* %39, align 1, !dbg !3333, !tbaa !889
  %40 = load volatile i32, i32* %32, align 4, !dbg !3334, !tbaa !968
  %41 = lshr i32 %40, 16, !dbg !3335
  %42 = trunc i32 %41 to i8, !dbg !3336
  %43 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 5, i32 2, !dbg !3337
  store i8 %42, i8* %43, align 1, !dbg !3338, !tbaa !889
  %44 = load volatile i32, i32* %32, align 4, !dbg !3339, !tbaa !968
  %45 = lshr i32 %44, 24, !dbg !3340
  %46 = trunc i32 %45 to i8, !dbg !3341
  %47 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 5, i32 3, !dbg !3342
  store i8 %46, i8* %47, align 1, !dbg !3343, !tbaa !889
  %48 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 10, i32 %4, i32 3, !dbg !3344
  %49 = load volatile i32, i32* %48, align 4, !dbg !3344, !tbaa !985
  %50 = trunc i32 %49 to i8, !dbg !3345
  %51 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 5, i32 4, !dbg !3346
  store i8 %50, i8* %51, align 1, !dbg !3347, !tbaa !889
  %52 = load volatile i32, i32* %48, align 4, !dbg !3348, !tbaa !985
  %53 = lshr i32 %52, 8, !dbg !3349
  %54 = trunc i32 %53 to i8, !dbg !3350
  %55 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 5, i32 5, !dbg !3351
  store i8 %54, i8* %55, align 1, !dbg !3352, !tbaa !889
  %56 = load volatile i32, i32* %48, align 4, !dbg !3353, !tbaa !985
  %57 = lshr i32 %56, 16, !dbg !3354
  %58 = trunc i32 %57 to i8, !dbg !3355
  %59 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 5, i32 6, !dbg !3356
  store i8 %58, i8* %59, align 1, !dbg !3357, !tbaa !889
  %60 = load volatile i32, i32* %48, align 4, !dbg !3358, !tbaa !985
  %61 = lshr i32 %60, 24, !dbg !3359
  %62 = trunc i32 %61 to i8, !dbg !3360
  %63 = getelementptr inbounds %struct.CanRxMsg, %struct.CanRxMsg* %2, i32 0, i32 5, i32 7, !dbg !3361
  store i8 %62, i8* %63, align 1, !dbg !3362, !tbaa !889
  %64 = icmp eq i8 %1, 0, !dbg !3363
  %65 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3365
  %66 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3365
  %67 = select i1 %64, i32* %66, i32* %65, !dbg !3365
  %68 = select i1 %64, i32* %66, i32* %65, !dbg !3365
  %69 = load volatile i32, i32* %67, align 4, !dbg !3366, !tbaa !894
  %70 = or i32 %69, 32, !dbg !3366
  store volatile i32 %70, i32* %68, align 4, !dbg !3366, !tbaa !894
  ret void, !dbg !3367
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_FIFORelease(%struct.CAN_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !3368 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3370, metadata !DIExpression()), !dbg !3372
  call void @llvm.dbg.value(metadata i8 %1, metadata !3371, metadata !DIExpression()), !dbg !3372
  %3 = icmp eq i8 %1, 0, !dbg !3373
  %4 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3375
  %5 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3375
  %6 = select i1 %3, i32* %5, i32* %4, !dbg !3375
  %7 = select i1 %3, i32* %5, i32* %4, !dbg !3375
  %8 = load volatile i32, i32* %6, align 4, !dbg !3376, !tbaa !894
  %9 = or i32 %8, 32, !dbg !3376
  store volatile i32 %9, i32* %7, align 4, !dbg !3376, !tbaa !894
  ret void, !dbg !3377
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_MessagePending(%struct.CAN_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !3378 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3380, metadata !DIExpression()), !dbg !3383
  call void @llvm.dbg.value(metadata i8 %1, metadata !3381, metadata !DIExpression()), !dbg !3383
  call void @llvm.dbg.value(metadata i8 0, metadata !3382, metadata !DIExpression()), !dbg !3383
  switch i8 %1, label %12 [
    i8 0, label %3
    i8 1, label %5
  ], !dbg !3384

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3385
  call void @llvm.dbg.value(metadata i8 undef, metadata !3382, metadata !DIExpression()), !dbg !3383
  br label %7, !dbg !3388

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3389
  call void @llvm.dbg.value(metadata i8 %11, metadata !3382, metadata !DIExpression()), !dbg !3383
  br label %7, !dbg !3392

7:                                                ; preds = %3, %5
  %8 = phi i32* [ %6, %5 ], [ %4, %3 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !3393, !tbaa !894
  %10 = trunc i32 %9 to i8, !dbg !3393
  %11 = and i8 %10, 3, !dbg !3393
  br label %12, !dbg !3394

12:                                               ; preds = %7, %2
  %13 = phi i8 [ 0, %2 ], [ %11, %7 ], !dbg !3393
  call void @llvm.dbg.value(metadata i8 %13, metadata !3382, metadata !DIExpression()), !dbg !3383
  ret i8 %13, !dbg !3394
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_OperatingModeRequest(%struct.CAN_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !3395 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3397, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i8 %1, metadata !3398, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i8 0, metadata !3399, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i32 65535, metadata !3400, metadata !DIExpression()), !dbg !3401
  switch i8 %1, label %41 [
    i8 0, label %3
    i8 1, label %14
    i8 2, label %24
  ], !dbg !3402

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 0, !dbg !3403
  %5 = load volatile i32, i32* %4, align 4, !dbg !3403, !tbaa !2860
  %6 = and i32 %5, -4, !dbg !3406
  %7 = or i32 %6, 1, !dbg !3407
  store volatile i32 %7, i32* %4, align 4, !dbg !3408, !tbaa !2860
  %8 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3409
  br label %9, !dbg !3410

9:                                                ; preds = %52, %3
  %10 = phi i32 [ 65535, %3 ], [ %58, %52 ], !dbg !3401
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression()), !dbg !3401
  %11 = load volatile i32, i32* %8, align 4, !dbg !3411, !tbaa !2865
  %12 = and i32 %11, 3, !dbg !3412
  %13 = icmp eq i32 %12, 1, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  br i1 %13, label %35, label %44, !dbg !3410, !llvm.loop !3414

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 0, !dbg !3416
  %16 = load volatile i32, i32* %15, align 4, !dbg !3419, !tbaa !2860
  %17 = and i32 %16, -4, !dbg !3419
  store volatile i32 %17, i32* %15, align 4, !dbg !3419, !tbaa !2860
  %18 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3420
  br label %19, !dbg !3421

19:                                               ; preds = %67, %14
  %20 = phi i32 [ 65535, %14 ], [ %73, %67 ], !dbg !3401
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression()), !dbg !3401
  %21 = load volatile i32, i32* %18, align 4, !dbg !3422, !tbaa !2865
  %22 = and i32 %21, 3, !dbg !3423
  %23 = icmp eq i32 %22, 0, !dbg !3424
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  br i1 %23, label %35, label %59, !dbg !3421, !llvm.loop !3425

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 0, !dbg !3427
  %26 = load volatile i32, i32* %25, align 4, !dbg !3427, !tbaa !2860
  %27 = and i32 %26, -4, !dbg !3430
  %28 = or i32 %27, 2, !dbg !3431
  store volatile i32 %28, i32* %25, align 4, !dbg !3432, !tbaa !2860
  %29 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3433
  br label %30, !dbg !3434

30:                                               ; preds = %82, %24
  %31 = phi i32 [ 65535, %24 ], [ %88, %82 ], !dbg !3401
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression()), !dbg !3401
  %32 = load volatile i32, i32* %29, align 4, !dbg !3435, !tbaa !2865
  %33 = and i32 %32, 3, !dbg !3436
  %34 = icmp eq i32 %33, 2, !dbg !3437
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  br i1 %34, label %35, label %74, !dbg !3434, !llvm.loop !3438

35:                                               ; preds = %82, %30, %74, %78, %67, %19, %59, %63, %52, %9, %44, %48
  %36 = phi i32* [ %8, %48 ], [ %8, %44 ], [ %8, %9 ], [ %8, %52 ], [ %18, %63 ], [ %18, %59 ], [ %18, %19 ], [ %18, %67 ], [ %29, %78 ], [ %29, %74 ], [ %29, %30 ], [ %29, %82 ]
  %37 = phi i32 [ 1, %48 ], [ 1, %44 ], [ 1, %9 ], [ 1, %52 ], [ 0, %63 ], [ 0, %59 ], [ 0, %19 ], [ 0, %67 ], [ 2, %78 ], [ 2, %74 ], [ 2, %30 ], [ 2, %82 ]
  %38 = load volatile i32, i32* %36, align 4, !dbg !3440, !tbaa !2865
  %39 = and i32 %38, 3, !dbg !3440
  %40 = icmp eq i32 %39, %37, !dbg !3440
  br label %41, !dbg !3440

41:                                               ; preds = %35, %2
  %42 = phi i1 [ false, %2 ], [ %40, %35 ]
  %43 = zext i1 %42 to i8, !dbg !3440
  call void @llvm.dbg.value(metadata i8 %43, metadata !3399, metadata !DIExpression()), !dbg !3401
  ret i8 %43, !dbg !3441

44:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  %45 = load volatile i32, i32* %8, align 4, !dbg !3411, !tbaa !2865
  %46 = and i32 %45, 3, !dbg !3412
  %47 = icmp eq i32 %46, 1, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  br i1 %47, label %35, label %48, !dbg !3410, !llvm.loop !3414

48:                                               ; preds = %44
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression(DW_OP_constu, 2, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  %49 = load volatile i32, i32* %8, align 4, !dbg !3411, !tbaa !2865
  %50 = and i32 %49, 3, !dbg !3412
  %51 = icmp eq i32 %50, 1, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  br i1 %51, label %35, label %52, !dbg !3410, !llvm.loop !3414

52:                                               ; preds = %48
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %10, metadata !3400, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  %53 = load volatile i32, i32* %8, align 4, !dbg !3411, !tbaa !2865
  %54 = and i32 %53, 3, !dbg !3412
  %55 = icmp ne i32 %54, 1, !dbg !3413
  %56 = icmp ne i32 %10, 3, !dbg !3442
  %57 = and i1 %56, %55, !dbg !3442
  %58 = add nsw i32 %10, -4, !dbg !3443
  call void @llvm.dbg.value(metadata i32 %58, metadata !3400, metadata !DIExpression()), !dbg !3401
  br i1 %57, label %9, label %35, !dbg !3410, !llvm.loop !3414

59:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  %60 = load volatile i32, i32* %18, align 4, !dbg !3422, !tbaa !2865
  %61 = and i32 %60, 3, !dbg !3423
  %62 = icmp eq i32 %61, 0, !dbg !3424
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  br i1 %62, label %35, label %63, !dbg !3421, !llvm.loop !3425

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression(DW_OP_constu, 2, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  %64 = load volatile i32, i32* %18, align 4, !dbg !3422, !tbaa !2865
  %65 = and i32 %64, 3, !dbg !3423
  %66 = icmp eq i32 %65, 0, !dbg !3424
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  br i1 %66, label %35, label %67, !dbg !3421, !llvm.loop !3425

67:                                               ; preds = %63
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %20, metadata !3400, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  %68 = load volatile i32, i32* %18, align 4, !dbg !3422, !tbaa !2865
  %69 = and i32 %68, 3, !dbg !3423
  %70 = icmp ne i32 %69, 0, !dbg !3424
  %71 = icmp ne i32 %20, 3, !dbg !3445
  %72 = and i1 %71, %70, !dbg !3445
  %73 = add nsw i32 %20, -4, !dbg !3446
  call void @llvm.dbg.value(metadata i32 %73, metadata !3400, metadata !DIExpression()), !dbg !3401
  br i1 %72, label %19, label %35, !dbg !3421, !llvm.loop !3425

74:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  %75 = load volatile i32, i32* %29, align 4, !dbg !3435, !tbaa !2865
  %76 = and i32 %75, 3, !dbg !3436
  %77 = icmp eq i32 %76, 2, !dbg !3437
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  br i1 %77, label %35, label %78, !dbg !3434, !llvm.loop !3438

78:                                               ; preds = %74
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression(DW_OP_constu, 2, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  %79 = load volatile i32, i32* %29, align 4, !dbg !3435, !tbaa !2865
  %80 = and i32 %79, 3, !dbg !3436
  %81 = icmp eq i32 %80, 2, !dbg !3437
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  br i1 %81, label %35, label %82, !dbg !3434, !llvm.loop !3438

82:                                               ; preds = %78
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %31, metadata !3400, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3401
  %83 = load volatile i32, i32* %29, align 4, !dbg !3435, !tbaa !2865
  %84 = and i32 %83, 3, !dbg !3436
  %85 = icmp ne i32 %84, 2, !dbg !3437
  %86 = icmp ne i32 %31, 3, !dbg !3448
  %87 = and i1 %86, %85, !dbg !3448
  %88 = add nsw i32 %31, -4, !dbg !3449
  call void @llvm.dbg.value(metadata i32 %88, metadata !3400, metadata !DIExpression()), !dbg !3401
  br i1 %87, label %30, label %35, !dbg !3434, !llvm.loop !3438
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_Sleep(%struct.CAN_TypeDef* %0) local_unnamed_addr #0 !dbg !3451 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3455, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i8 0, metadata !3456, metadata !DIExpression()), !dbg !3457
  %2 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 0, !dbg !3458
  %3 = load volatile i32, i32* %2, align 4, !dbg !3458, !tbaa !2860
  %4 = and i32 %3, -4, !dbg !3459
  %5 = or i32 %4, 2, !dbg !3460
  store volatile i32 %5, i32* %2, align 4, !dbg !3461, !tbaa !2860
  %6 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3462
  %7 = load volatile i32, i32* %6, align 4, !dbg !3462, !tbaa !2865
  %8 = and i32 %7, 3, !dbg !3464
  %9 = icmp eq i32 %8, 2, !dbg !3465
  %10 = zext i1 %9 to i8, !dbg !3466
  call void @llvm.dbg.value(metadata i8 %10, metadata !3456, metadata !DIExpression()), !dbg !3457
  ret i8 %10, !dbg !3467
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_WakeUp(%struct.CAN_TypeDef* %0) local_unnamed_addr #0 !dbg !3468 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3470, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i32 65535, metadata !3471, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i8 0, metadata !3472, metadata !DIExpression()), !dbg !3473
  %2 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 0, !dbg !3474
  %3 = load volatile i32, i32* %2, align 4, !dbg !3475, !tbaa !2860
  %4 = and i32 %3, -3, !dbg !3475
  store volatile i32 %4, i32* %2, align 4, !dbg !3475, !tbaa !2860
  %5 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3473
  br label %6, !dbg !3476

6:                                                ; preds = %25, %1
  %7 = phi i32 [ 65535, %1 ], [ %31, %25 ], !dbg !3473
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression()), !dbg !3473
  %8 = load volatile i32, i32* %5, align 4, !dbg !3477, !tbaa !2865
  %9 = and i32 %8, 2, !dbg !3478
  %10 = icmp eq i32 %9, 0, !dbg !3479
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3473
  br i1 %10, label %11, label %17, !dbg !3476, !llvm.loop !3480

11:                                               ; preds = %21, %17, %6, %25
  %12 = load volatile i32, i32* %5, align 4, !dbg !3482, !tbaa !2865
  %13 = lshr i32 %12, 1, !dbg !3484
  %14 = trunc i32 %13 to i8, !dbg !3484
  %15 = and i8 %14, 1, !dbg !3484
  %16 = xor i8 %15, 1, !dbg !3484
  call void @llvm.dbg.value(metadata i8 %16, metadata !3472, metadata !DIExpression()), !dbg !3473
  ret i8 %16, !dbg !3485

17:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3473
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3473
  %18 = load volatile i32, i32* %5, align 4, !dbg !3477, !tbaa !2865
  %19 = and i32 %18, 2, !dbg !3478
  %20 = icmp eq i32 %19, 0, !dbg !3479
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3473
  br i1 %20, label %11, label %21, !dbg !3476, !llvm.loop !3480

21:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression(DW_OP_constu, 2, DW_OP_minus, DW_OP_stack_value)), !dbg !3473
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3473
  %22 = load volatile i32, i32* %5, align 4, !dbg !3477, !tbaa !2865
  %23 = and i32 %22, 2, !dbg !3478
  %24 = icmp eq i32 %23, 0, !dbg !3479
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3473
  br i1 %24, label %11, label %25, !dbg !3476, !llvm.loop !3480

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3473
  call void @llvm.dbg.value(metadata i32 %7, metadata !3471, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg !3473
  %26 = load volatile i32, i32* %5, align 4, !dbg !3477, !tbaa !2865
  %27 = and i32 %26, 2, !dbg !3478
  %28 = icmp ne i32 %27, 0, !dbg !3479
  %29 = icmp ne i32 %7, 3, !dbg !3486
  %30 = and i1 %29, %28, !dbg !3486
  %31 = add nsw i32 %7, -4, !dbg !3487
  call void @llvm.dbg.value(metadata i32 %31, metadata !3471, metadata !DIExpression()), !dbg !3473
  br i1 %30, label %6, label %11, !dbg !3476, !llvm.loop !3480
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_GetLastErrorCode(%struct.CAN_TypeDef* %0) local_unnamed_addr #0 !dbg !3489 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3491, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i8 0, metadata !3492, metadata !DIExpression()), !dbg !3493
  %2 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3494
  %3 = load volatile i32, i32* %2, align 4, !dbg !3494, !tbaa !3495
  %4 = trunc i32 %3 to i8, !dbg !3496
  %5 = and i8 %4, 112, !dbg !3496
  call void @llvm.dbg.value(metadata i8 %5, metadata !3492, metadata !DIExpression()), !dbg !3493
  ret i8 %5, !dbg !3497
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_GetReceiveErrorCounter(%struct.CAN_TypeDef* %0) local_unnamed_addr #0 !dbg !3498 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3500, metadata !DIExpression()), !dbg !3502
  call void @llvm.dbg.value(metadata i8 0, metadata !3501, metadata !DIExpression()), !dbg !3502
  %2 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3503
  %3 = load volatile i32, i32* %2, align 4, !dbg !3503, !tbaa !3495
  %4 = lshr i32 %3, 24, !dbg !3504
  %5 = trunc i32 %4 to i8, !dbg !3505
  call void @llvm.dbg.value(metadata i8 %5, metadata !3501, metadata !DIExpression()), !dbg !3502
  ret i8 %5, !dbg !3506
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CAN_GetLSBTransmitErrorCounter(%struct.CAN_TypeDef* %0) local_unnamed_addr #0 !dbg !3507 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3509, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.value(metadata i8 0, metadata !3510, metadata !DIExpression()), !dbg !3511
  %2 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3512
  %3 = load volatile i32, i32* %2, align 4, !dbg !3512, !tbaa !3495
  %4 = lshr i32 %3, 16, !dbg !3513
  %5 = trunc i32 %4 to i8, !dbg !3514
  call void @llvm.dbg.value(metadata i8 %5, metadata !3510, metadata !DIExpression()), !dbg !3511
  ret i8 %5, !dbg !3515
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_ITConfig(%struct.CAN_TypeDef* %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !3516 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3520, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i32 %1, metadata !3521, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i32 %2, metadata !3522, metadata !DIExpression()), !dbg !3523
  %4 = icmp eq i32 %2, 0, !dbg !3524
  br i1 %4, label %9, label %5, !dbg !3526

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 5, !dbg !3527
  %7 = load volatile i32, i32* %6, align 4, !dbg !3529, !tbaa !3530
  %8 = or i32 %7, %1, !dbg !3529
  store volatile i32 %8, i32* %6, align 4, !dbg !3529, !tbaa !3530
  br label %14, !dbg !3531

9:                                                ; preds = %3
  %10 = xor i32 %1, -1, !dbg !3532
  %11 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 5, !dbg !3534
  %12 = load volatile i32, i32* %11, align 4, !dbg !3535, !tbaa !3530
  %13 = and i32 %12, %10, !dbg !3535
  store volatile i32 %13, i32* %11, align 4, !dbg !3535, !tbaa !3530
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !3536
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @CAN_GetFlagStatus(%struct.CAN_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !3537 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3541, metadata !DIExpression()), !dbg !3544
  call void @llvm.dbg.value(metadata i32 %1, metadata !3542, metadata !DIExpression()), !dbg !3544
  call void @llvm.dbg.value(metadata i32 0, metadata !3543, metadata !DIExpression()), !dbg !3544
  %3 = and i32 %1, 15728640, !dbg !3545
  %4 = icmp eq i32 %3, 0, !dbg !3547
  br i1 %4, label %7, label %5, !dbg !3548

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3549
  br label %24

7:                                                ; preds = %2
  %8 = and i32 %1, 16777216, !dbg !3552
  %9 = icmp eq i32 %8, 0, !dbg !3554
  br i1 %9, label %12, label %10, !dbg !3555

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3556
  br label %24

12:                                               ; preds = %7
  %13 = and i32 %1, 134217728, !dbg !3559
  %14 = icmp eq i32 %13, 0, !dbg !3561
  br i1 %14, label %17, label %15, !dbg !3562

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 2, !dbg !3563
  br label %24

17:                                               ; preds = %12
  %18 = and i32 %1, 33554432, !dbg !3566
  %19 = icmp eq i32 %18, 0, !dbg !3568
  br i1 %19, label %22, label %20, !dbg !3569

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3570
  br label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3573
  br label %24

24:                                               ; preds = %22, %20, %15, %10, %5
  %25 = phi i32* [ %23, %22 ], [ %21, %20 ], [ %16, %15 ], [ %11, %10 ], [ %6, %5 ]
  %26 = load volatile i32, i32* %25, align 4, !dbg !3576, !tbaa !894
  %27 = and i32 %1, 1048575, !dbg !3576
  %28 = and i32 %27, %26, !dbg !3576
  %29 = icmp ne i32 %28, 0, !dbg !3576
  %30 = zext i1 %29 to i32, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %30, metadata !3543, metadata !DIExpression()), !dbg !3544
  ret i32 %30, !dbg !3577
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_ClearFlag(%struct.CAN_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !3578 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3582, metadata !DIExpression()), !dbg !3585
  call void @llvm.dbg.value(metadata i32 %1, metadata !3583, metadata !DIExpression()), !dbg !3585
  call void @llvm.dbg.value(metadata i32 0, metadata !3584, metadata !DIExpression()), !dbg !3585
  %3 = icmp eq i32 %1, 821035120, !dbg !3586
  br i1 %3, label %4, label %6, !dbg !3588

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3589
  store volatile i32 0, i32* %5, align 4, !dbg !3591, !tbaa !3495
  br label %24, !dbg !3592

6:                                                ; preds = %2
  %7 = and i32 %1, 1048575, !dbg !3593
  call void @llvm.dbg.value(metadata i32 %7, metadata !3584, metadata !DIExpression()), !dbg !3585
  %8 = and i32 %1, 33554432, !dbg !3595
  %9 = icmp eq i32 %8, 0, !dbg !3597
  br i1 %9, label %12, label %10, !dbg !3598

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3599
  store volatile i32 %7, i32* %11, align 4, !dbg !3601, !tbaa !3602
  br label %24, !dbg !3603

12:                                               ; preds = %6
  %13 = and i32 %1, 67108864, !dbg !3604
  %14 = icmp eq i32 %13, 0, !dbg !3606
  br i1 %14, label %17, label %15, !dbg !3607

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3608
  store volatile i32 %7, i32* %16, align 4, !dbg !3610, !tbaa !3611
  br label %24, !dbg !3612

17:                                               ; preds = %12
  %18 = and i32 %1, 134217728, !dbg !3613
  %19 = icmp eq i32 %18, 0, !dbg !3615
  br i1 %19, label %22, label %20, !dbg !3616

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 2, !dbg !3617
  store volatile i32 %7, i32* %21, align 4, !dbg !3619, !tbaa !3156
  br label %24, !dbg !3620

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3621
  store volatile i32 %7, i32* %23, align 4, !dbg !3623, !tbaa !2865
  br label %24

24:                                               ; preds = %10, %20, %22, %15, %4
  ret void, !dbg !3624
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @CAN_GetITStatus(%struct.CAN_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !3625 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3629, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i32 %1, metadata !3630, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i32 0, metadata !3631, metadata !DIExpression()), !dbg !3632
  %3 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 5, !dbg !3633
  %4 = load volatile i32, i32* %3, align 4, !dbg !3633, !tbaa !3530
  %5 = and i32 %4, %1, !dbg !3635
  %6 = icmp eq i32 %5, 0, !dbg !3636
  br i1 %6, label %81, label %7, !dbg !3637

7:                                                ; preds = %2
  switch i32 %1, label %81 [
    i32 1, label %8
    i32 2, label %14
    i32 4, label %20
    i32 8, label %25
    i32 16, label %30
    i32 32, label %36
    i32 64, label %41
    i32 65536, label %46
    i32 131072, label %51
    i32 256, label %56
    i32 512, label %60
    i32 1024, label %65
    i32 2048, label %70
    i32 32768, label %76
  ], !dbg !3638

8:                                                ; preds = %7
  %9 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 2, !dbg !3640
  %10 = load volatile i32, i32* %9, align 4, !dbg !3640, !tbaa !3156
  call void @llvm.dbg.value(metadata i32 %10, metadata !3642, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i32 65793, metadata !3647, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3649
  %11 = and i32 %10, 65793, !dbg !3651
  %12 = icmp ne i32 %11, 0, !dbg !3653
  %13 = zext i1 %12 to i32
  call void @llvm.dbg.value(metadata i32 %13, metadata !3648, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i32 %13, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3654

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3655
  %16 = load volatile i32, i32* %15, align 4, !dbg !3655, !tbaa !3602
  call void @llvm.dbg.value(metadata i32 %16, metadata !3642, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata i32 3, metadata !3647, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3656
  %17 = and i32 %16, 3, !dbg !3658
  %18 = icmp ne i32 %17, 0, !dbg !3659
  %19 = zext i1 %18 to i32
  call void @llvm.dbg.value(metadata i32 %19, metadata !3648, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata i32 %19, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3660

20:                                               ; preds = %7
  %21 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3661
  %22 = load volatile i32, i32* %21, align 4, !dbg !3661, !tbaa !3602
  call void @llvm.dbg.value(metadata i32 %22, metadata !3642, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.value(metadata i32 8, metadata !3647, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3662
  %23 = lshr i32 %22, 3
  %24 = and i32 %23, 1
  call void @llvm.dbg.value(metadata i32 %24, metadata !3648, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.value(metadata i32 %24, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3664

25:                                               ; preds = %7
  %26 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3665
  %27 = load volatile i32, i32* %26, align 4, !dbg !3665, !tbaa !3602
  call void @llvm.dbg.value(metadata i32 %27, metadata !3642, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i32 16, metadata !3647, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3666
  %28 = lshr i32 %27, 4
  %29 = and i32 %28, 1
  call void @llvm.dbg.value(metadata i32 %29, metadata !3648, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i32 %29, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3668

30:                                               ; preds = %7
  %31 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3669
  %32 = load volatile i32, i32* %31, align 4, !dbg !3669, !tbaa !3611
  call void @llvm.dbg.value(metadata i32 %32, metadata !3642, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32 3, metadata !3647, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3670
  %33 = and i32 %32, 3, !dbg !3672
  %34 = icmp ne i32 %33, 0, !dbg !3673
  %35 = zext i1 %34 to i32
  call void @llvm.dbg.value(metadata i32 %35, metadata !3648, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32 %35, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3674

36:                                               ; preds = %7
  %37 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3675
  %38 = load volatile i32, i32* %37, align 4, !dbg !3675, !tbaa !3611
  call void @llvm.dbg.value(metadata i32 %38, metadata !3642, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i32 8, metadata !3647, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3676
  %39 = lshr i32 %38, 3
  %40 = and i32 %39, 1
  call void @llvm.dbg.value(metadata i32 %40, metadata !3648, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i32 %40, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3678

41:                                               ; preds = %7
  %42 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3679
  %43 = load volatile i32, i32* %42, align 4, !dbg !3679, !tbaa !3611
  call void @llvm.dbg.value(metadata i32 %43, metadata !3642, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i32 16, metadata !3647, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3680
  %44 = lshr i32 %43, 4
  %45 = and i32 %44, 1
  call void @llvm.dbg.value(metadata i32 %45, metadata !3648, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i32 %45, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3682

46:                                               ; preds = %7
  %47 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3683
  %48 = load volatile i32, i32* %47, align 4, !dbg !3683, !tbaa !2865
  call void @llvm.dbg.value(metadata i32 %48, metadata !3642, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata i32 8, metadata !3647, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3684
  %49 = lshr i32 %48, 3
  %50 = and i32 %49, 1
  call void @llvm.dbg.value(metadata i32 %50, metadata !3648, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata i32 %50, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3686

51:                                               ; preds = %7
  %52 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3687
  %53 = load volatile i32, i32* %52, align 4, !dbg !3687, !tbaa !2865
  call void @llvm.dbg.value(metadata i32 %53, metadata !3642, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.value(metadata i32 16, metadata !3647, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3688
  %54 = lshr i32 %53, 4
  %55 = and i32 %54, 1
  call void @llvm.dbg.value(metadata i32 %55, metadata !3648, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.value(metadata i32 %55, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3690

56:                                               ; preds = %7
  %57 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3691
  %58 = load volatile i32, i32* %57, align 4, !dbg !3691, !tbaa !3495
  call void @llvm.dbg.value(metadata i32 %58, metadata !3642, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata i32 1, metadata !3647, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3692
  %59 = and i32 %58, 1, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %59, metadata !3648, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata i32 %59, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3695

60:                                               ; preds = %7
  %61 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3696
  %62 = load volatile i32, i32* %61, align 4, !dbg !3696, !tbaa !3495
  call void @llvm.dbg.value(metadata i32 %62, metadata !3642, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 2, metadata !3647, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3697
  %63 = lshr i32 %62, 1
  %64 = and i32 %63, 1
  call void @llvm.dbg.value(metadata i32 %64, metadata !3648, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %64, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3699

65:                                               ; preds = %7
  %66 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3700
  %67 = load volatile i32, i32* %66, align 4, !dbg !3700, !tbaa !3495
  call void @llvm.dbg.value(metadata i32 %67, metadata !3642, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.value(metadata i32 4, metadata !3647, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3701
  %68 = lshr i32 %67, 2
  %69 = and i32 %68, 1
  call void @llvm.dbg.value(metadata i32 %69, metadata !3648, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.value(metadata i32 %69, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3703

70:                                               ; preds = %7
  %71 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3704
  %72 = load volatile i32, i32* %71, align 4, !dbg !3704, !tbaa !3495
  call void @llvm.dbg.value(metadata i32 %72, metadata !3642, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.value(metadata i32 112, metadata !3647, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3705
  %73 = and i32 %72, 112, !dbg !3707
  %74 = icmp ne i32 %73, 0, !dbg !3708
  %75 = zext i1 %74 to i32
  call void @llvm.dbg.value(metadata i32 %75, metadata !3648, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.value(metadata i32 %75, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3709

76:                                               ; preds = %7
  %77 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3710
  %78 = load volatile i32, i32* %77, align 4, !dbg !3710, !tbaa !2865
  call void @llvm.dbg.value(metadata i32 %78, metadata !3642, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata i32 4, metadata !3647, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata i32 0, metadata !3648, metadata !DIExpression()), !dbg !3711
  %79 = lshr i32 %78, 2
  %80 = and i32 %79, 1
  call void @llvm.dbg.value(metadata i32 %80, metadata !3648, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata i32 %80, metadata !3631, metadata !DIExpression()), !dbg !3632
  br label %81, !dbg !3713

81:                                               ; preds = %2, %7, %8, %14, %20, %25, %30, %36, %41, %46, %51, %56, %60, %65, %70, %76
  %82 = phi i32 [ %80, %76 ], [ %75, %70 ], [ %69, %65 ], [ %64, %60 ], [ %59, %56 ], [ %55, %51 ], [ %50, %46 ], [ %45, %41 ], [ %40, %36 ], [ %35, %30 ], [ %29, %25 ], [ %24, %20 ], [ %19, %14 ], [ %13, %8 ], [ 0, %7 ], [ 0, %2 ], !dbg !3714
  call void @llvm.dbg.value(metadata i32 %82, metadata !3631, metadata !DIExpression()), !dbg !3632
  ret i32 %82, !dbg !3715
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CAN_ClearITPendingBit(%struct.CAN_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !3716 {
  call void @llvm.dbg.value(metadata %struct.CAN_TypeDef* %0, metadata !3718, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i32 %1, metadata !3719, metadata !DIExpression()), !dbg !3720
  switch i32 %1, label %29 [
    i32 1, label %3
    i32 4, label %5
    i32 8, label %7
    i32 32, label %9
    i32 64, label %11
    i32 65536, label %13
    i32 131072, label %15
    i32 256, label %17
    i32 512, label %19
    i32 1024, label %21
    i32 2048, label %23
    i32 32768, label %26
  ], !dbg !3721

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 2, !dbg !3722
  store volatile i32 65793, i32* %4, align 4, !dbg !3724, !tbaa !3156
  br label %29, !dbg !3725

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3726
  store volatile i32 8, i32* %6, align 4, !dbg !3727, !tbaa !3602
  br label %29, !dbg !3728

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 3, !dbg !3729
  store volatile i32 16, i32* %8, align 4, !dbg !3730, !tbaa !3602
  br label %29, !dbg !3731

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3732
  store volatile i32 8, i32* %10, align 4, !dbg !3733, !tbaa !3611
  br label %29, !dbg !3734

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 4, !dbg !3735
  store volatile i32 16, i32* %12, align 4, !dbg !3736, !tbaa !3611
  br label %29, !dbg !3737

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3738
  store volatile i32 8, i32* %14, align 4, !dbg !3739, !tbaa !2865
  br label %29, !dbg !3740

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3741
  store volatile i32 16, i32* %16, align 4, !dbg !3742, !tbaa !2865
  br label %29, !dbg !3743

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3744
  store volatile i32 4, i32* %18, align 4, !dbg !3745, !tbaa !2865
  br label %29, !dbg !3746

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3747
  store volatile i32 4, i32* %20, align 4, !dbg !3748, !tbaa !2865
  br label %29, !dbg !3749

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3750
  store volatile i32 4, i32* %22, align 4, !dbg !3751, !tbaa !2865
  br label %29, !dbg !3752

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3753
  store volatile i32 0, i32* %24, align 4, !dbg !3754, !tbaa !3495
  %25 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3755
  store volatile i32 4, i32* %25, align 4, !dbg !3756, !tbaa !2865
  br label %29, !dbg !3757

26:                                               ; preds = %2
  %27 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 6, !dbg !3758
  store volatile i32 0, i32* %27, align 4, !dbg !3759, !tbaa !3495
  %28 = getelementptr inbounds %struct.CAN_TypeDef, %struct.CAN_TypeDef* %0, i32 0, i32 1, !dbg !3760
  store volatile i32 4, i32* %28, align 4, !dbg !3761, !tbaa !2865
  br label %29, !dbg !3762

29:                                               ; preds = %2, %26, %23, %21, %19, %17, %15, %13, %11, %9, %7, %5, %3
  ret void, !dbg !3763
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_SetLatency(i32 %0) local_unnamed_addr #0 !dbg !3764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3766, metadata !DIExpression()), !dbg !3767
  %2 = trunc i32 %0 to i8, !dbg !3768
  store volatile i8 %2, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !3769, !tbaa !889
  ret void, !dbg !3770
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_PrefetchBufferCmd(i32 %0) local_unnamed_addr #0 !dbg !3771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3773, metadata !DIExpression()), !dbg !3774
  %2 = icmp eq i32 %0, 0, !dbg !3775
  %3 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3777, !tbaa !946
  %4 = and i32 %3, -257, !dbg !3778
  %5 = select i1 %2, i32 0, i32 256, !dbg !3778
  %6 = or i32 %4, %5, !dbg !3778
  store volatile i32 %6, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3777, !tbaa !946
  ret void, !dbg !3779
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_InstructionCacheCmd(i32 %0) local_unnamed_addr #0 !dbg !3780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3782, metadata !DIExpression()), !dbg !3783
  %2 = icmp eq i32 %0, 0, !dbg !3784
  %3 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3786, !tbaa !946
  %4 = and i32 %3, -513, !dbg !3787
  %5 = select i1 %2, i32 0, i32 512, !dbg !3787
  %6 = or i32 %4, %5, !dbg !3787
  store volatile i32 %6, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3786, !tbaa !946
  ret void, !dbg !3788
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_DataCacheCmd(i32 %0) local_unnamed_addr #0 !dbg !3789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3791, metadata !DIExpression()), !dbg !3792
  %2 = icmp eq i32 %0, 0, !dbg !3793
  %3 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3795, !tbaa !946
  %4 = and i32 %3, -1025, !dbg !3796
  %5 = select i1 %2, i32 0, i32 1024, !dbg !3796
  %6 = or i32 %4, %5, !dbg !3796
  store volatile i32 %6, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3795, !tbaa !946
  ret void, !dbg !3797
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_InstructionCacheReset() local_unnamed_addr #0 !dbg !3798 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3799, !tbaa !946
  %2 = or i32 %1, 2048, !dbg !3799
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3799, !tbaa !946
  ret void, !dbg !3800
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_DataCacheReset() local_unnamed_addr #0 !dbg !3801 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3802, !tbaa !946
  %2 = or i32 %1, 4096, !dbg !3802
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !3802, !tbaa !946
  ret void, !dbg !3803
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_Unlock() local_unnamed_addr #0 !dbg !3804 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3805, !tbaa !960
  %2 = icmp sgt i32 %1, -1, !dbg !3807
  br i1 %2, label %4, label %3, !dbg !3808

3:                                                ; preds = %0
  store volatile i32 1164378403, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !3809, !tbaa !951
  store volatile i32 -839939669, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !3811, !tbaa !951
  br label %4, !dbg !3812

4:                                                ; preds = %0, %3
  ret void, !dbg !3813
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_Lock() local_unnamed_addr #0 !dbg !3814 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3815, !tbaa !960
  %2 = or i32 %1, -2147483648, !dbg !3815
  store volatile i32 %2, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3815, !tbaa !960
  ret void, !dbg !3816
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_EraseSector(i32 %0, i8 zeroext %1) local_unnamed_addr #3 !dbg !3817 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3822, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i8 %1, metadata !3823, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i32 0, metadata !3824, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i32 8, metadata !3825, metadata !DIExpression()), !dbg !3826
  %5 = icmp ult i8 %1, 3, !dbg !3827
  %6 = zext i8 %1 to i32, !dbg !3827
  %7 = shl nuw nsw i32 %6, 8, !dbg !3827
  %8 = select i1 %5, i32 %7, i32 768, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %8, metadata !3824, metadata !DIExpression()), !dbg !3826
  %9 = bitcast i32* %4 to i8*, !dbg !3828
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !3828
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3833, metadata !DIExpression()) #6, !dbg !3836
  store volatile i32 8, i32* %4, align 4, !dbg !3836, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !3840
  %10 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3842, !tbaa !957
  %11 = and i32 %10, 65536, !dbg !3844
  %12 = icmp eq i32 %11, 0, !dbg !3845
  br i1 %12, label %13, label %26, !dbg !3846

13:                                               ; preds = %2
  %14 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3847, !tbaa !957
  %15 = and i32 %14, 16, !dbg !3850
  %16 = icmp eq i32 %15, 0, !dbg !3851
  br i1 %16, label %17, label %26, !dbg !3852

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3853, !tbaa !957
  %19 = and i32 %18, 239, !dbg !3856
  %20 = icmp eq i32 %19, 0, !dbg !3857
  br i1 %20, label %21, label %26, !dbg !3858

21:                                               ; preds = %17
  %22 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3859, !tbaa !957
  %23 = and i32 %22, 2, !dbg !3862
  %24 = icmp eq i32 %23, 0, !dbg !3863
  %25 = select i1 %24, i32 8, i32 7
  br label %26

26:                                               ; preds = %21, %17, %13, %2
  %27 = phi i32 [ 1, %2 ], [ 5, %13 ], [ 6, %17 ], [ %25, %21 ], !dbg !3864
  call void @llvm.dbg.value(metadata i32 %27, metadata !3837, metadata !DIExpression()) #6, !dbg !3840
  store volatile i32 %27, i32* %4, align 4, !dbg !3865, !tbaa !889
  %28 = load volatile i32, i32* %4, align 4, !dbg !3866, !tbaa !889
  %29 = icmp eq i32 %28, 1, !dbg !3867
  br i1 %29, label %30, label %51, !dbg !3868

30:                                               ; preds = %26, %47
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !3869
  %31 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3872, !tbaa !957
  %32 = and i32 %31, 65536, !dbg !3873
  %33 = icmp eq i32 %32, 0, !dbg !3874
  br i1 %33, label %34, label %47, !dbg !3875

34:                                               ; preds = %30
  %35 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3876, !tbaa !957
  %36 = and i32 %35, 16, !dbg !3877
  %37 = icmp eq i32 %36, 0, !dbg !3878
  br i1 %37, label %38, label %47, !dbg !3879

38:                                               ; preds = %34
  %39 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3880, !tbaa !957
  %40 = and i32 %39, 239, !dbg !3881
  %41 = icmp eq i32 %40, 0, !dbg !3882
  br i1 %41, label %42, label %47, !dbg !3883

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3884, !tbaa !957
  %44 = and i32 %43, 2, !dbg !3885
  %45 = icmp eq i32 %44, 0, !dbg !3886
  %46 = select i1 %45, i32 8, i32 7
  br label %47

47:                                               ; preds = %42, %38, %34, %30
  %48 = phi i32 [ 1, %30 ], [ 5, %34 ], [ 6, %38 ], [ %46, %42 ], !dbg !3887
  call void @llvm.dbg.value(metadata i32 %48, metadata !3837, metadata !DIExpression()) #6, !dbg !3869
  store volatile i32 %48, i32* %4, align 4, !dbg !3888, !tbaa !889
  %49 = load volatile i32, i32* %4, align 4, !dbg !3866, !tbaa !889
  %50 = icmp eq i32 %49, 1, !dbg !3867
  br i1 %50, label %30, label %51, !dbg !3868, !llvm.loop !3889

51:                                               ; preds = %47, %26
  %52 = load volatile i32, i32* %4, align 4, !dbg !3891, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !3892
  call void @llvm.dbg.value(metadata i32 %52, metadata !3825, metadata !DIExpression()), !dbg !3826
  %53 = icmp eq i32 %52, 8, !dbg !3893
  br i1 %53, label %54, label %114, !dbg !3895

54:                                               ; preds = %51
  %55 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3896, !tbaa !960
  %56 = and i32 %55, -769, !dbg !3896
  store volatile i32 %56, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3896, !tbaa !960
  %57 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3898, !tbaa !960
  %58 = or i32 %57, %8, !dbg !3898
  store volatile i32 %58, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3898, !tbaa !960
  %59 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3899, !tbaa !960
  %60 = and i32 %59, -249, !dbg !3899
  store volatile i32 %60, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3899, !tbaa !960
  %61 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3900, !tbaa !960
  %62 = or i32 %61, %0, !dbg !3900
  %63 = or i32 %62, 2, !dbg !3900
  store volatile i32 %63, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3900, !tbaa !960
  %64 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3901, !tbaa !960
  %65 = or i32 %64, 65536, !dbg !3901
  store volatile i32 %65, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3901, !tbaa !960
  %66 = bitcast i32* %3 to i8*, !dbg !3902
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66), !dbg !3902
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3833, metadata !DIExpression()) #6, !dbg !3904
  store volatile i32 8, i32* %3, align 4, !dbg !3904, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !3905
  %67 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3907, !tbaa !957
  %68 = and i32 %67, 65536, !dbg !3908
  %69 = icmp eq i32 %68, 0, !dbg !3909
  br i1 %69, label %70, label %83, !dbg !3910

70:                                               ; preds = %54
  %71 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3911, !tbaa !957
  %72 = and i32 %71, 16, !dbg !3912
  %73 = icmp eq i32 %72, 0, !dbg !3913
  br i1 %73, label %74, label %83, !dbg !3914

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3915, !tbaa !957
  %76 = and i32 %75, 239, !dbg !3916
  %77 = icmp eq i32 %76, 0, !dbg !3917
  br i1 %77, label %78, label %83, !dbg !3918

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3919, !tbaa !957
  %80 = and i32 %79, 2, !dbg !3920
  %81 = icmp eq i32 %80, 0, !dbg !3921
  %82 = select i1 %81, i32 8, i32 7
  br label %83

83:                                               ; preds = %78, %74, %70, %54
  %84 = phi i32 [ 1, %54 ], [ 5, %70 ], [ 6, %74 ], [ %82, %78 ], !dbg !3922
  call void @llvm.dbg.value(metadata i32 %84, metadata !3837, metadata !DIExpression()) #6, !dbg !3905
  store volatile i32 %84, i32* %3, align 4, !dbg !3923, !tbaa !889
  %85 = load volatile i32, i32* %3, align 4, !dbg !3924, !tbaa !889
  %86 = icmp eq i32 %85, 1, !dbg !3925
  br i1 %86, label %87, label %108, !dbg !3926

87:                                               ; preds = %83, %104
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !3927
  %88 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3929, !tbaa !957
  %89 = and i32 %88, 65536, !dbg !3930
  %90 = icmp eq i32 %89, 0, !dbg !3931
  br i1 %90, label %91, label %104, !dbg !3932

91:                                               ; preds = %87
  %92 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3933, !tbaa !957
  %93 = and i32 %92, 16, !dbg !3934
  %94 = icmp eq i32 %93, 0, !dbg !3935
  br i1 %94, label %95, label %104, !dbg !3936

95:                                               ; preds = %91
  %96 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3937, !tbaa !957
  %97 = and i32 %96, 239, !dbg !3938
  %98 = icmp eq i32 %97, 0, !dbg !3939
  br i1 %98, label %99, label %104, !dbg !3940

99:                                               ; preds = %95
  %100 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3941, !tbaa !957
  %101 = and i32 %100, 2, !dbg !3942
  %102 = icmp eq i32 %101, 0, !dbg !3943
  %103 = select i1 %102, i32 8, i32 7
  br label %104

104:                                              ; preds = %99, %95, %91, %87
  %105 = phi i32 [ 1, %87 ], [ 5, %91 ], [ 6, %95 ], [ %103, %99 ], !dbg !3944
  call void @llvm.dbg.value(metadata i32 %105, metadata !3837, metadata !DIExpression()) #6, !dbg !3927
  store volatile i32 %105, i32* %3, align 4, !dbg !3945, !tbaa !889
  %106 = load volatile i32, i32* %3, align 4, !dbg !3924, !tbaa !889
  %107 = icmp eq i32 %106, 1, !dbg !3925
  br i1 %107, label %87, label %108, !dbg !3926, !llvm.loop !3946

108:                                              ; preds = %104, %83
  %109 = load volatile i32, i32* %3, align 4, !dbg !3948, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66), !dbg !3949
  call void @llvm.dbg.value(metadata i32 %109, metadata !3825, metadata !DIExpression()), !dbg !3826
  %110 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3950, !tbaa !960
  %111 = and i32 %110, -3, !dbg !3950
  store volatile i32 %111, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3950, !tbaa !960
  %112 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3951, !tbaa !960
  %113 = and i32 %112, -249, !dbg !3951
  store volatile i32 %113, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !3951, !tbaa !960
  br label %114, !dbg !3952

114:                                              ; preds = %108, %51
  %115 = phi i32 [ %109, %108 ], [ %52, %51 ], !dbg !3826
  call void @llvm.dbg.value(metadata i32 %115, metadata !3825, metadata !DIExpression()), !dbg !3826
  ret i32 %115, !dbg !3953
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_WaitForLastOperation() local_unnamed_addr #3 !dbg !3829 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !3954
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !3954
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3833, metadata !DIExpression()), !dbg !3955
  store volatile i32 8, i32* %1, align 4, !dbg !3955, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()), !dbg !3956
  %3 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3958, !tbaa !957
  %4 = and i32 %3, 65536, !dbg !3959
  %5 = icmp eq i32 %4, 0, !dbg !3960
  br i1 %5, label %6, label %19, !dbg !3961

6:                                                ; preds = %0
  %7 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3962, !tbaa !957
  %8 = and i32 %7, 16, !dbg !3963
  %9 = icmp eq i32 %8, 0, !dbg !3964
  br i1 %9, label %10, label %19, !dbg !3965

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3966, !tbaa !957
  %12 = and i32 %11, 239, !dbg !3967
  %13 = icmp eq i32 %12, 0, !dbg !3968
  br i1 %13, label %14, label %19, !dbg !3969

14:                                               ; preds = %10
  %15 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3970, !tbaa !957
  %16 = and i32 %15, 2, !dbg !3971
  %17 = icmp eq i32 %16, 0, !dbg !3972
  %18 = select i1 %17, i32 8, i32 7
  br label %19

19:                                               ; preds = %0, %6, %10, %14
  %20 = phi i32 [ 1, %0 ], [ 5, %6 ], [ 6, %10 ], [ %18, %14 ], !dbg !3973
  call void @llvm.dbg.value(metadata i32 %20, metadata !3837, metadata !DIExpression()), !dbg !3956
  store volatile i32 %20, i32* %1, align 4, !dbg !3974, !tbaa !889
  %21 = load volatile i32, i32* %1, align 4, !dbg !3975, !tbaa !889
  %22 = icmp eq i32 %21, 1, !dbg !3976
  br i1 %22, label %23, label %44, !dbg !3977

23:                                               ; preds = %19, %40
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()), !dbg !3978
  %24 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3980, !tbaa !957
  %25 = and i32 %24, 65536, !dbg !3981
  %26 = icmp eq i32 %25, 0, !dbg !3982
  br i1 %26, label %27, label %40, !dbg !3983

27:                                               ; preds = %23
  %28 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3984, !tbaa !957
  %29 = and i32 %28, 16, !dbg !3985
  %30 = icmp eq i32 %29, 0, !dbg !3986
  br i1 %30, label %31, label %40, !dbg !3987

31:                                               ; preds = %27
  %32 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3988, !tbaa !957
  %33 = and i32 %32, 239, !dbg !3989
  %34 = icmp eq i32 %33, 0, !dbg !3990
  br i1 %34, label %35, label %40, !dbg !3991

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !3992, !tbaa !957
  %37 = and i32 %36, 2, !dbg !3993
  %38 = icmp eq i32 %37, 0, !dbg !3994
  %39 = select i1 %38, i32 8, i32 7
  br label %40

40:                                               ; preds = %23, %27, %31, %35
  %41 = phi i32 [ 1, %23 ], [ 5, %27 ], [ 6, %31 ], [ %39, %35 ], !dbg !3995
  call void @llvm.dbg.value(metadata i32 %41, metadata !3837, metadata !DIExpression()), !dbg !3978
  store volatile i32 %41, i32* %1, align 4, !dbg !3996, !tbaa !889
  %42 = load volatile i32, i32* %1, align 4, !dbg !3975, !tbaa !889
  %43 = icmp eq i32 %42, 1, !dbg !3976
  br i1 %43, label %23, label %44, !dbg !3977, !llvm.loop !3997

44:                                               ; preds = %40, %19
  %45 = load volatile i32, i32* %1, align 4, !dbg !3999, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4000
  ret i32 %45, !dbg !4001
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_EraseAllSectors(i8 zeroext %0) local_unnamed_addr #3 !dbg !4002 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !4006, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata i32 0, metadata !4007, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata i32 8, metadata !4008, metadata !DIExpression()), !dbg !4009
  %4 = bitcast i32* %3 to i8*, !dbg !4010
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4010
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3833, metadata !DIExpression()) #6, !dbg !4012
  store volatile i32 8, i32* %3, align 4, !dbg !4012, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4013
  %5 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4015, !tbaa !957
  %6 = and i32 %5, 65536, !dbg !4016
  %7 = icmp eq i32 %6, 0, !dbg !4017
  br i1 %7, label %8, label %21, !dbg !4018

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4019, !tbaa !957
  %10 = and i32 %9, 16, !dbg !4020
  %11 = icmp eq i32 %10, 0, !dbg !4021
  br i1 %11, label %12, label %21, !dbg !4022

12:                                               ; preds = %8
  %13 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4023, !tbaa !957
  %14 = and i32 %13, 239, !dbg !4024
  %15 = icmp eq i32 %14, 0, !dbg !4025
  br i1 %15, label %16, label %21, !dbg !4026

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4027, !tbaa !957
  %18 = and i32 %17, 2, !dbg !4028
  %19 = icmp eq i32 %18, 0, !dbg !4029
  %20 = select i1 %19, i32 8, i32 7
  br label %21

21:                                               ; preds = %16, %12, %8, %1
  %22 = phi i32 [ 1, %1 ], [ 5, %8 ], [ 6, %12 ], [ %20, %16 ], !dbg !4030
  call void @llvm.dbg.value(metadata i32 %22, metadata !3837, metadata !DIExpression()) #6, !dbg !4013
  store volatile i32 %22, i32* %3, align 4, !dbg !4031, !tbaa !889
  %23 = load volatile i32, i32* %3, align 4, !dbg !4032, !tbaa !889
  %24 = icmp eq i32 %23, 1, !dbg !4033
  br i1 %24, label %25, label %46, !dbg !4034

25:                                               ; preds = %21, %42
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4035
  %26 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4037, !tbaa !957
  %27 = and i32 %26, 65536, !dbg !4038
  %28 = icmp eq i32 %27, 0, !dbg !4039
  br i1 %28, label %29, label %42, !dbg !4040

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4041, !tbaa !957
  %31 = and i32 %30, 16, !dbg !4042
  %32 = icmp eq i32 %31, 0, !dbg !4043
  br i1 %32, label %33, label %42, !dbg !4044

33:                                               ; preds = %29
  %34 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4045, !tbaa !957
  %35 = and i32 %34, 239, !dbg !4046
  %36 = icmp eq i32 %35, 0, !dbg !4047
  br i1 %36, label %37, label %42, !dbg !4048

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4049, !tbaa !957
  %39 = and i32 %38, 2, !dbg !4050
  %40 = icmp eq i32 %39, 0, !dbg !4051
  %41 = select i1 %40, i32 8, i32 7
  br label %42

42:                                               ; preds = %37, %33, %29, %25
  %43 = phi i32 [ 1, %25 ], [ 5, %29 ], [ 6, %33 ], [ %41, %37 ], !dbg !4052
  call void @llvm.dbg.value(metadata i32 %43, metadata !3837, metadata !DIExpression()) #6, !dbg !4035
  store volatile i32 %43, i32* %3, align 4, !dbg !4053, !tbaa !889
  %44 = load volatile i32, i32* %3, align 4, !dbg !4032, !tbaa !889
  %45 = icmp eq i32 %44, 1, !dbg !4033
  br i1 %45, label %25, label %46, !dbg !4034, !llvm.loop !4054

46:                                               ; preds = %42, %21
  %47 = load volatile i32, i32* %3, align 4, !dbg !4056, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4057
  call void @llvm.dbg.value(metadata i32 %47, metadata !4008, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata i32 undef, metadata !4007, metadata !DIExpression()), !dbg !4009
  %48 = icmp eq i32 %47, 8, !dbg !4058
  br i1 %48, label %49, label %108, !dbg !4060

49:                                               ; preds = %46
  %50 = icmp ult i8 %0, 3, !dbg !4061
  %51 = zext i8 %0 to i32, !dbg !4061
  %52 = shl nuw nsw i32 %51, 8, !dbg !4061
  %53 = select i1 %50, i32 %52, i32 768, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %53, metadata !4007, metadata !DIExpression()), !dbg !4009
  %54 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4062, !tbaa !960
  %55 = and i32 %54, -769, !dbg !4062
  store volatile i32 %55, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4062, !tbaa !960
  %56 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4064, !tbaa !960
  %57 = or i32 %56, %53, !dbg !4064
  store volatile i32 %57, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4064, !tbaa !960
  %58 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4065, !tbaa !960
  %59 = or i32 %58, 4, !dbg !4065
  store volatile i32 %59, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4065, !tbaa !960
  %60 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4066, !tbaa !960
  %61 = or i32 %60, 65536, !dbg !4066
  store volatile i32 %61, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4066, !tbaa !960
  %62 = bitcast i32* %2 to i8*, !dbg !4067
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62), !dbg !4067
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3833, metadata !DIExpression()) #6, !dbg !4069
  store volatile i32 8, i32* %2, align 4, !dbg !4069, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4070
  %63 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4072, !tbaa !957
  %64 = and i32 %63, 65536, !dbg !4073
  %65 = icmp eq i32 %64, 0, !dbg !4074
  br i1 %65, label %66, label %79, !dbg !4075

66:                                               ; preds = %49
  %67 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4076, !tbaa !957
  %68 = and i32 %67, 16, !dbg !4077
  %69 = icmp eq i32 %68, 0, !dbg !4078
  br i1 %69, label %70, label %79, !dbg !4079

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4080, !tbaa !957
  %72 = and i32 %71, 239, !dbg !4081
  %73 = icmp eq i32 %72, 0, !dbg !4082
  br i1 %73, label %74, label %79, !dbg !4083

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4084, !tbaa !957
  %76 = and i32 %75, 2, !dbg !4085
  %77 = icmp eq i32 %76, 0, !dbg !4086
  %78 = select i1 %77, i32 8, i32 7
  br label %79

79:                                               ; preds = %74, %70, %66, %49
  %80 = phi i32 [ 1, %49 ], [ 5, %66 ], [ 6, %70 ], [ %78, %74 ], !dbg !4087
  call void @llvm.dbg.value(metadata i32 %80, metadata !3837, metadata !DIExpression()) #6, !dbg !4070
  store volatile i32 %80, i32* %2, align 4, !dbg !4088, !tbaa !889
  %81 = load volatile i32, i32* %2, align 4, !dbg !4089, !tbaa !889
  %82 = icmp eq i32 %81, 1, !dbg !4090
  br i1 %82, label %83, label %104, !dbg !4091

83:                                               ; preds = %79, %100
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4092
  %84 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4094, !tbaa !957
  %85 = and i32 %84, 65536, !dbg !4095
  %86 = icmp eq i32 %85, 0, !dbg !4096
  br i1 %86, label %87, label %100, !dbg !4097

87:                                               ; preds = %83
  %88 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4098, !tbaa !957
  %89 = and i32 %88, 16, !dbg !4099
  %90 = icmp eq i32 %89, 0, !dbg !4100
  br i1 %90, label %91, label %100, !dbg !4101

91:                                               ; preds = %87
  %92 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4102, !tbaa !957
  %93 = and i32 %92, 239, !dbg !4103
  %94 = icmp eq i32 %93, 0, !dbg !4104
  br i1 %94, label %95, label %100, !dbg !4105

95:                                               ; preds = %91
  %96 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4106, !tbaa !957
  %97 = and i32 %96, 2, !dbg !4107
  %98 = icmp eq i32 %97, 0, !dbg !4108
  %99 = select i1 %98, i32 8, i32 7
  br label %100

100:                                              ; preds = %95, %91, %87, %83
  %101 = phi i32 [ 1, %83 ], [ 5, %87 ], [ 6, %91 ], [ %99, %95 ], !dbg !4109
  call void @llvm.dbg.value(metadata i32 %101, metadata !3837, metadata !DIExpression()) #6, !dbg !4092
  store volatile i32 %101, i32* %2, align 4, !dbg !4110, !tbaa !889
  %102 = load volatile i32, i32* %2, align 4, !dbg !4089, !tbaa !889
  %103 = icmp eq i32 %102, 1, !dbg !4090
  br i1 %103, label %83, label %104, !dbg !4091, !llvm.loop !4111

104:                                              ; preds = %100, %79
  %105 = load volatile i32, i32* %2, align 4, !dbg !4113, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %105, metadata !4008, metadata !DIExpression()), !dbg !4009
  %106 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4115, !tbaa !960
  %107 = and i32 %106, -5, !dbg !4115
  store volatile i32 %107, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4115, !tbaa !960
  br label %108, !dbg !4116

108:                                              ; preds = %104, %46
  %109 = phi i32 [ %105, %104 ], [ %47, %46 ], !dbg !4009
  call void @llvm.dbg.value(metadata i32 %109, metadata !4008, metadata !DIExpression()), !dbg !4009
  ret i32 %109, !dbg !4117
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_ProgramDoubleWord(i32 %0, i64 %1) local_unnamed_addr #3 !dbg !4118 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4122, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i64 %1, metadata !4123, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 8, metadata !4124, metadata !DIExpression()), !dbg !4125
  %5 = bitcast i32* %4 to i8*, !dbg !4126
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4126
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3833, metadata !DIExpression()) #6, !dbg !4128
  store volatile i32 8, i32* %4, align 4, !dbg !4128, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4129
  %6 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4131, !tbaa !957
  %7 = and i32 %6, 65536, !dbg !4132
  %8 = icmp eq i32 %7, 0, !dbg !4133
  br i1 %8, label %9, label %22, !dbg !4134

9:                                                ; preds = %2
  %10 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4135, !tbaa !957
  %11 = and i32 %10, 16, !dbg !4136
  %12 = icmp eq i32 %11, 0, !dbg !4137
  br i1 %12, label %13, label %22, !dbg !4138

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4139, !tbaa !957
  %15 = and i32 %14, 239, !dbg !4140
  %16 = icmp eq i32 %15, 0, !dbg !4141
  br i1 %16, label %17, label %22, !dbg !4142

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4143, !tbaa !957
  %19 = and i32 %18, 2, !dbg !4144
  %20 = icmp eq i32 %19, 0, !dbg !4145
  %21 = select i1 %20, i32 8, i32 7
  br label %22

22:                                               ; preds = %17, %13, %9, %2
  %23 = phi i32 [ 1, %2 ], [ 5, %9 ], [ 6, %13 ], [ %21, %17 ], !dbg !4146
  call void @llvm.dbg.value(metadata i32 %23, metadata !3837, metadata !DIExpression()) #6, !dbg !4129
  store volatile i32 %23, i32* %4, align 4, !dbg !4147, !tbaa !889
  %24 = load volatile i32, i32* %4, align 4, !dbg !4148, !tbaa !889
  %25 = icmp eq i32 %24, 1, !dbg !4149
  br i1 %25, label %26, label %47, !dbg !4150

26:                                               ; preds = %22, %43
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4151
  %27 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4153, !tbaa !957
  %28 = and i32 %27, 65536, !dbg !4154
  %29 = icmp eq i32 %28, 0, !dbg !4155
  br i1 %29, label %30, label %43, !dbg !4156

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4157, !tbaa !957
  %32 = and i32 %31, 16, !dbg !4158
  %33 = icmp eq i32 %32, 0, !dbg !4159
  br i1 %33, label %34, label %43, !dbg !4160

34:                                               ; preds = %30
  %35 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4161, !tbaa !957
  %36 = and i32 %35, 239, !dbg !4162
  %37 = icmp eq i32 %36, 0, !dbg !4163
  br i1 %37, label %38, label %43, !dbg !4164

38:                                               ; preds = %34
  %39 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4165, !tbaa !957
  %40 = and i32 %39, 2, !dbg !4166
  %41 = icmp eq i32 %40, 0, !dbg !4167
  %42 = select i1 %41, i32 8, i32 7
  br label %43

43:                                               ; preds = %38, %34, %30, %26
  %44 = phi i32 [ 1, %26 ], [ 5, %30 ], [ 6, %34 ], [ %42, %38 ], !dbg !4168
  call void @llvm.dbg.value(metadata i32 %44, metadata !3837, metadata !DIExpression()) #6, !dbg !4151
  store volatile i32 %44, i32* %4, align 4, !dbg !4169, !tbaa !889
  %45 = load volatile i32, i32* %4, align 4, !dbg !4148, !tbaa !889
  %46 = icmp eq i32 %45, 1, !dbg !4149
  br i1 %46, label %26, label %47, !dbg !4150, !llvm.loop !4170

47:                                               ; preds = %43, %22
  %48 = load volatile i32, i32* %4, align 4, !dbg !4172, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4173
  call void @llvm.dbg.value(metadata i32 %48, metadata !4124, metadata !DIExpression()), !dbg !4125
  %49 = icmp eq i32 %48, 8, !dbg !4174
  br i1 %49, label %50, label %104, !dbg !4176

50:                                               ; preds = %47
  %51 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4177, !tbaa !960
  %52 = and i32 %51, -769, !dbg !4177
  store volatile i32 %52, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4177, !tbaa !960
  %53 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4179, !tbaa !960
  %54 = or i32 %53, 768, !dbg !4179
  store volatile i32 %54, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4179, !tbaa !960
  %55 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4180, !tbaa !960
  %56 = or i32 %55, 1, !dbg !4180
  store volatile i32 %56, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4180, !tbaa !960
  %57 = inttoptr i32 %0 to i64*, !dbg !4181
  store volatile i64 %1, i64* %57, align 8, !dbg !4182, !tbaa !4183
  %58 = bitcast i32* %3 to i8*, !dbg !4185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58), !dbg !4185
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3833, metadata !DIExpression()) #6, !dbg !4187
  store volatile i32 8, i32* %3, align 4, !dbg !4187, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4188
  %59 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4190, !tbaa !957
  %60 = and i32 %59, 65536, !dbg !4191
  %61 = icmp eq i32 %60, 0, !dbg !4192
  br i1 %61, label %62, label %75, !dbg !4193

62:                                               ; preds = %50
  %63 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4194, !tbaa !957
  %64 = and i32 %63, 16, !dbg !4195
  %65 = icmp eq i32 %64, 0, !dbg !4196
  br i1 %65, label %66, label %75, !dbg !4197

66:                                               ; preds = %62
  %67 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4198, !tbaa !957
  %68 = and i32 %67, 239, !dbg !4199
  %69 = icmp eq i32 %68, 0, !dbg !4200
  br i1 %69, label %70, label %75, !dbg !4201

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4202, !tbaa !957
  %72 = and i32 %71, 2, !dbg !4203
  %73 = icmp eq i32 %72, 0, !dbg !4204
  %74 = select i1 %73, i32 8, i32 7
  br label %75

75:                                               ; preds = %70, %66, %62, %50
  %76 = phi i32 [ 1, %50 ], [ 5, %62 ], [ 6, %66 ], [ %74, %70 ], !dbg !4205
  call void @llvm.dbg.value(metadata i32 %76, metadata !3837, metadata !DIExpression()) #6, !dbg !4188
  store volatile i32 %76, i32* %3, align 4, !dbg !4206, !tbaa !889
  %77 = load volatile i32, i32* %3, align 4, !dbg !4207, !tbaa !889
  %78 = icmp eq i32 %77, 1, !dbg !4208
  br i1 %78, label %79, label %100, !dbg !4209

79:                                               ; preds = %75, %96
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4210
  %80 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4212, !tbaa !957
  %81 = and i32 %80, 65536, !dbg !4213
  %82 = icmp eq i32 %81, 0, !dbg !4214
  br i1 %82, label %83, label %96, !dbg !4215

83:                                               ; preds = %79
  %84 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4216, !tbaa !957
  %85 = and i32 %84, 16, !dbg !4217
  %86 = icmp eq i32 %85, 0, !dbg !4218
  br i1 %86, label %87, label %96, !dbg !4219

87:                                               ; preds = %83
  %88 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4220, !tbaa !957
  %89 = and i32 %88, 239, !dbg !4221
  %90 = icmp eq i32 %89, 0, !dbg !4222
  br i1 %90, label %91, label %96, !dbg !4223

91:                                               ; preds = %87
  %92 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4224, !tbaa !957
  %93 = and i32 %92, 2, !dbg !4225
  %94 = icmp eq i32 %93, 0, !dbg !4226
  %95 = select i1 %94, i32 8, i32 7
  br label %96

96:                                               ; preds = %91, %87, %83, %79
  %97 = phi i32 [ 1, %79 ], [ 5, %83 ], [ 6, %87 ], [ %95, %91 ], !dbg !4227
  call void @llvm.dbg.value(metadata i32 %97, metadata !3837, metadata !DIExpression()) #6, !dbg !4210
  store volatile i32 %97, i32* %3, align 4, !dbg !4228, !tbaa !889
  %98 = load volatile i32, i32* %3, align 4, !dbg !4207, !tbaa !889
  %99 = icmp eq i32 %98, 1, !dbg !4208
  br i1 %99, label %79, label %100, !dbg !4209, !llvm.loop !4229

100:                                              ; preds = %96, %75
  %101 = load volatile i32, i32* %3, align 4, !dbg !4231, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58), !dbg !4232
  call void @llvm.dbg.value(metadata i32 %101, metadata !4124, metadata !DIExpression()), !dbg !4125
  %102 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4233, !tbaa !960
  %103 = and i32 %102, -2, !dbg !4233
  store volatile i32 %103, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4233, !tbaa !960
  br label %104, !dbg !4234

104:                                              ; preds = %100, %47
  %105 = phi i32 [ %101, %100 ], [ %48, %47 ], !dbg !4125
  call void @llvm.dbg.value(metadata i32 %105, metadata !4124, metadata !DIExpression()), !dbg !4125
  ret i32 %105, !dbg !4235
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_ProgramWord(i32 %0, i32 %1) local_unnamed_addr #3 !dbg !4236 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4240, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.value(metadata i32 %1, metadata !4241, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.value(metadata i32 8, metadata !4242, metadata !DIExpression()), !dbg !4243
  %5 = bitcast i32* %4 to i8*, !dbg !4244
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4244
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3833, metadata !DIExpression()) #6, !dbg !4246
  store volatile i32 8, i32* %4, align 4, !dbg !4246, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4247
  %6 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4249, !tbaa !957
  %7 = and i32 %6, 65536, !dbg !4250
  %8 = icmp eq i32 %7, 0, !dbg !4251
  br i1 %8, label %9, label %22, !dbg !4252

9:                                                ; preds = %2
  %10 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4253, !tbaa !957
  %11 = and i32 %10, 16, !dbg !4254
  %12 = icmp eq i32 %11, 0, !dbg !4255
  br i1 %12, label %13, label %22, !dbg !4256

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4257, !tbaa !957
  %15 = and i32 %14, 239, !dbg !4258
  %16 = icmp eq i32 %15, 0, !dbg !4259
  br i1 %16, label %17, label %22, !dbg !4260

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4261, !tbaa !957
  %19 = and i32 %18, 2, !dbg !4262
  %20 = icmp eq i32 %19, 0, !dbg !4263
  %21 = select i1 %20, i32 8, i32 7
  br label %22

22:                                               ; preds = %17, %13, %9, %2
  %23 = phi i32 [ 1, %2 ], [ 5, %9 ], [ 6, %13 ], [ %21, %17 ], !dbg !4264
  call void @llvm.dbg.value(metadata i32 %23, metadata !3837, metadata !DIExpression()) #6, !dbg !4247
  store volatile i32 %23, i32* %4, align 4, !dbg !4265, !tbaa !889
  %24 = load volatile i32, i32* %4, align 4, !dbg !4266, !tbaa !889
  %25 = icmp eq i32 %24, 1, !dbg !4267
  br i1 %25, label %26, label %47, !dbg !4268

26:                                               ; preds = %22, %43
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4269
  %27 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4271, !tbaa !957
  %28 = and i32 %27, 65536, !dbg !4272
  %29 = icmp eq i32 %28, 0, !dbg !4273
  br i1 %29, label %30, label %43, !dbg !4274

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4275, !tbaa !957
  %32 = and i32 %31, 16, !dbg !4276
  %33 = icmp eq i32 %32, 0, !dbg !4277
  br i1 %33, label %34, label %43, !dbg !4278

34:                                               ; preds = %30
  %35 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4279, !tbaa !957
  %36 = and i32 %35, 239, !dbg !4280
  %37 = icmp eq i32 %36, 0, !dbg !4281
  br i1 %37, label %38, label %43, !dbg !4282

38:                                               ; preds = %34
  %39 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4283, !tbaa !957
  %40 = and i32 %39, 2, !dbg !4284
  %41 = icmp eq i32 %40, 0, !dbg !4285
  %42 = select i1 %41, i32 8, i32 7
  br label %43

43:                                               ; preds = %38, %34, %30, %26
  %44 = phi i32 [ 1, %26 ], [ 5, %30 ], [ 6, %34 ], [ %42, %38 ], !dbg !4286
  call void @llvm.dbg.value(metadata i32 %44, metadata !3837, metadata !DIExpression()) #6, !dbg !4269
  store volatile i32 %44, i32* %4, align 4, !dbg !4287, !tbaa !889
  %45 = load volatile i32, i32* %4, align 4, !dbg !4266, !tbaa !889
  %46 = icmp eq i32 %45, 1, !dbg !4267
  br i1 %46, label %26, label %47, !dbg !4268, !llvm.loop !4288

47:                                               ; preds = %43, %22
  %48 = load volatile i32, i32* %4, align 4, !dbg !4290, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4291
  call void @llvm.dbg.value(metadata i32 %48, metadata !4242, metadata !DIExpression()), !dbg !4243
  %49 = icmp eq i32 %48, 8, !dbg !4292
  br i1 %49, label %50, label %104, !dbg !4294

50:                                               ; preds = %47
  %51 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4295, !tbaa !960
  %52 = and i32 %51, -769, !dbg !4295
  store volatile i32 %52, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4295, !tbaa !960
  %53 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4297, !tbaa !960
  %54 = or i32 %53, 512, !dbg !4297
  store volatile i32 %54, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4297, !tbaa !960
  %55 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4298, !tbaa !960
  %56 = or i32 %55, 1, !dbg !4298
  store volatile i32 %56, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4298, !tbaa !960
  %57 = inttoptr i32 %0 to i32*, !dbg !4299
  store volatile i32 %1, i32* %57, align 4, !dbg !4300, !tbaa !894
  %58 = bitcast i32* %3 to i8*, !dbg !4301
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58), !dbg !4301
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3833, metadata !DIExpression()) #6, !dbg !4303
  store volatile i32 8, i32* %3, align 4, !dbg !4303, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4304
  %59 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4306, !tbaa !957
  %60 = and i32 %59, 65536, !dbg !4307
  %61 = icmp eq i32 %60, 0, !dbg !4308
  br i1 %61, label %62, label %75, !dbg !4309

62:                                               ; preds = %50
  %63 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4310, !tbaa !957
  %64 = and i32 %63, 16, !dbg !4311
  %65 = icmp eq i32 %64, 0, !dbg !4312
  br i1 %65, label %66, label %75, !dbg !4313

66:                                               ; preds = %62
  %67 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4314, !tbaa !957
  %68 = and i32 %67, 239, !dbg !4315
  %69 = icmp eq i32 %68, 0, !dbg !4316
  br i1 %69, label %70, label %75, !dbg !4317

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4318, !tbaa !957
  %72 = and i32 %71, 2, !dbg !4319
  %73 = icmp eq i32 %72, 0, !dbg !4320
  %74 = select i1 %73, i32 8, i32 7
  br label %75

75:                                               ; preds = %70, %66, %62, %50
  %76 = phi i32 [ 1, %50 ], [ 5, %62 ], [ 6, %66 ], [ %74, %70 ], !dbg !4321
  call void @llvm.dbg.value(metadata i32 %76, metadata !3837, metadata !DIExpression()) #6, !dbg !4304
  store volatile i32 %76, i32* %3, align 4, !dbg !4322, !tbaa !889
  %77 = load volatile i32, i32* %3, align 4, !dbg !4323, !tbaa !889
  %78 = icmp eq i32 %77, 1, !dbg !4324
  br i1 %78, label %79, label %100, !dbg !4325

79:                                               ; preds = %75, %96
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4326
  %80 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4328, !tbaa !957
  %81 = and i32 %80, 65536, !dbg !4329
  %82 = icmp eq i32 %81, 0, !dbg !4330
  br i1 %82, label %83, label %96, !dbg !4331

83:                                               ; preds = %79
  %84 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4332, !tbaa !957
  %85 = and i32 %84, 16, !dbg !4333
  %86 = icmp eq i32 %85, 0, !dbg !4334
  br i1 %86, label %87, label %96, !dbg !4335

87:                                               ; preds = %83
  %88 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4336, !tbaa !957
  %89 = and i32 %88, 239, !dbg !4337
  %90 = icmp eq i32 %89, 0, !dbg !4338
  br i1 %90, label %91, label %96, !dbg !4339

91:                                               ; preds = %87
  %92 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4340, !tbaa !957
  %93 = and i32 %92, 2, !dbg !4341
  %94 = icmp eq i32 %93, 0, !dbg !4342
  %95 = select i1 %94, i32 8, i32 7
  br label %96

96:                                               ; preds = %91, %87, %83, %79
  %97 = phi i32 [ 1, %79 ], [ 5, %83 ], [ 6, %87 ], [ %95, %91 ], !dbg !4343
  call void @llvm.dbg.value(metadata i32 %97, metadata !3837, metadata !DIExpression()) #6, !dbg !4326
  store volatile i32 %97, i32* %3, align 4, !dbg !4344, !tbaa !889
  %98 = load volatile i32, i32* %3, align 4, !dbg !4323, !tbaa !889
  %99 = icmp eq i32 %98, 1, !dbg !4324
  br i1 %99, label %79, label %100, !dbg !4325, !llvm.loop !4345

100:                                              ; preds = %96, %75
  %101 = load volatile i32, i32* %3, align 4, !dbg !4347, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58), !dbg !4348
  call void @llvm.dbg.value(metadata i32 %101, metadata !4242, metadata !DIExpression()), !dbg !4243
  %102 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4349, !tbaa !960
  %103 = and i32 %102, -2, !dbg !4349
  store volatile i32 %103, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4349, !tbaa !960
  br label %104, !dbg !4350

104:                                              ; preds = %100, %47
  %105 = phi i32 [ %101, %100 ], [ %48, %47 ], !dbg !4243
  call void @llvm.dbg.value(metadata i32 %105, metadata !4242, metadata !DIExpression()), !dbg !4243
  ret i32 %105, !dbg !4351
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_ProgramHalfWord(i32 %0, i16 zeroext %1) local_unnamed_addr #3 !dbg !4352 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4356, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.value(metadata i16 %1, metadata !4357, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.value(metadata i32 8, metadata !4358, metadata !DIExpression()), !dbg !4359
  %5 = bitcast i32* %4 to i8*, !dbg !4360
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4360
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3833, metadata !DIExpression()) #6, !dbg !4362
  store volatile i32 8, i32* %4, align 4, !dbg !4362, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4363
  %6 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4365, !tbaa !957
  %7 = and i32 %6, 65536, !dbg !4366
  %8 = icmp eq i32 %7, 0, !dbg !4367
  br i1 %8, label %9, label %22, !dbg !4368

9:                                                ; preds = %2
  %10 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4369, !tbaa !957
  %11 = and i32 %10, 16, !dbg !4370
  %12 = icmp eq i32 %11, 0, !dbg !4371
  br i1 %12, label %13, label %22, !dbg !4372

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4373, !tbaa !957
  %15 = and i32 %14, 239, !dbg !4374
  %16 = icmp eq i32 %15, 0, !dbg !4375
  br i1 %16, label %17, label %22, !dbg !4376

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4377, !tbaa !957
  %19 = and i32 %18, 2, !dbg !4378
  %20 = icmp eq i32 %19, 0, !dbg !4379
  %21 = select i1 %20, i32 8, i32 7
  br label %22

22:                                               ; preds = %17, %13, %9, %2
  %23 = phi i32 [ 1, %2 ], [ 5, %9 ], [ 6, %13 ], [ %21, %17 ], !dbg !4380
  call void @llvm.dbg.value(metadata i32 %23, metadata !3837, metadata !DIExpression()) #6, !dbg !4363
  store volatile i32 %23, i32* %4, align 4, !dbg !4381, !tbaa !889
  %24 = load volatile i32, i32* %4, align 4, !dbg !4382, !tbaa !889
  %25 = icmp eq i32 %24, 1, !dbg !4383
  br i1 %25, label %26, label %47, !dbg !4384

26:                                               ; preds = %22, %43
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4385
  %27 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4387, !tbaa !957
  %28 = and i32 %27, 65536, !dbg !4388
  %29 = icmp eq i32 %28, 0, !dbg !4389
  br i1 %29, label %30, label %43, !dbg !4390

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4391, !tbaa !957
  %32 = and i32 %31, 16, !dbg !4392
  %33 = icmp eq i32 %32, 0, !dbg !4393
  br i1 %33, label %34, label %43, !dbg !4394

34:                                               ; preds = %30
  %35 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4395, !tbaa !957
  %36 = and i32 %35, 239, !dbg !4396
  %37 = icmp eq i32 %36, 0, !dbg !4397
  br i1 %37, label %38, label %43, !dbg !4398

38:                                               ; preds = %34
  %39 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4399, !tbaa !957
  %40 = and i32 %39, 2, !dbg !4400
  %41 = icmp eq i32 %40, 0, !dbg !4401
  %42 = select i1 %41, i32 8, i32 7
  br label %43

43:                                               ; preds = %38, %34, %30, %26
  %44 = phi i32 [ 1, %26 ], [ 5, %30 ], [ 6, %34 ], [ %42, %38 ], !dbg !4402
  call void @llvm.dbg.value(metadata i32 %44, metadata !3837, metadata !DIExpression()) #6, !dbg !4385
  store volatile i32 %44, i32* %4, align 4, !dbg !4403, !tbaa !889
  %45 = load volatile i32, i32* %4, align 4, !dbg !4382, !tbaa !889
  %46 = icmp eq i32 %45, 1, !dbg !4383
  br i1 %46, label %26, label %47, !dbg !4384, !llvm.loop !4404

47:                                               ; preds = %43, %22
  %48 = load volatile i32, i32* %4, align 4, !dbg !4406, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4407
  call void @llvm.dbg.value(metadata i32 %48, metadata !4358, metadata !DIExpression()), !dbg !4359
  %49 = icmp eq i32 %48, 8, !dbg !4408
  br i1 %49, label %50, label %104, !dbg !4410

50:                                               ; preds = %47
  %51 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4411, !tbaa !960
  %52 = and i32 %51, -769, !dbg !4411
  store volatile i32 %52, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4411, !tbaa !960
  %53 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4413, !tbaa !960
  %54 = or i32 %53, 256, !dbg !4413
  store volatile i32 %54, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4413, !tbaa !960
  %55 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4414, !tbaa !960
  %56 = or i32 %55, 1, !dbg !4414
  store volatile i32 %56, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4414, !tbaa !960
  %57 = inttoptr i32 %0 to i16*, !dbg !4415
  store volatile i16 %1, i16* %57, align 2, !dbg !4416, !tbaa !3025
  %58 = bitcast i32* %3 to i8*, !dbg !4417
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58), !dbg !4417
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3833, metadata !DIExpression()) #6, !dbg !4419
  store volatile i32 8, i32* %3, align 4, !dbg !4419, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4420
  %59 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4422, !tbaa !957
  %60 = and i32 %59, 65536, !dbg !4423
  %61 = icmp eq i32 %60, 0, !dbg !4424
  br i1 %61, label %62, label %75, !dbg !4425

62:                                               ; preds = %50
  %63 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4426, !tbaa !957
  %64 = and i32 %63, 16, !dbg !4427
  %65 = icmp eq i32 %64, 0, !dbg !4428
  br i1 %65, label %66, label %75, !dbg !4429

66:                                               ; preds = %62
  %67 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4430, !tbaa !957
  %68 = and i32 %67, 239, !dbg !4431
  %69 = icmp eq i32 %68, 0, !dbg !4432
  br i1 %69, label %70, label %75, !dbg !4433

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4434, !tbaa !957
  %72 = and i32 %71, 2, !dbg !4435
  %73 = icmp eq i32 %72, 0, !dbg !4436
  %74 = select i1 %73, i32 8, i32 7
  br label %75

75:                                               ; preds = %70, %66, %62, %50
  %76 = phi i32 [ 1, %50 ], [ 5, %62 ], [ 6, %66 ], [ %74, %70 ], !dbg !4437
  call void @llvm.dbg.value(metadata i32 %76, metadata !3837, metadata !DIExpression()) #6, !dbg !4420
  store volatile i32 %76, i32* %3, align 4, !dbg !4438, !tbaa !889
  %77 = load volatile i32, i32* %3, align 4, !dbg !4439, !tbaa !889
  %78 = icmp eq i32 %77, 1, !dbg !4440
  br i1 %78, label %79, label %100, !dbg !4441

79:                                               ; preds = %75, %96
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4442
  %80 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4444, !tbaa !957
  %81 = and i32 %80, 65536, !dbg !4445
  %82 = icmp eq i32 %81, 0, !dbg !4446
  br i1 %82, label %83, label %96, !dbg !4447

83:                                               ; preds = %79
  %84 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4448, !tbaa !957
  %85 = and i32 %84, 16, !dbg !4449
  %86 = icmp eq i32 %85, 0, !dbg !4450
  br i1 %86, label %87, label %96, !dbg !4451

87:                                               ; preds = %83
  %88 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4452, !tbaa !957
  %89 = and i32 %88, 239, !dbg !4453
  %90 = icmp eq i32 %89, 0, !dbg !4454
  br i1 %90, label %91, label %96, !dbg !4455

91:                                               ; preds = %87
  %92 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4456, !tbaa !957
  %93 = and i32 %92, 2, !dbg !4457
  %94 = icmp eq i32 %93, 0, !dbg !4458
  %95 = select i1 %94, i32 8, i32 7
  br label %96

96:                                               ; preds = %91, %87, %83, %79
  %97 = phi i32 [ 1, %79 ], [ 5, %83 ], [ 6, %87 ], [ %95, %91 ], !dbg !4459
  call void @llvm.dbg.value(metadata i32 %97, metadata !3837, metadata !DIExpression()) #6, !dbg !4442
  store volatile i32 %97, i32* %3, align 4, !dbg !4460, !tbaa !889
  %98 = load volatile i32, i32* %3, align 4, !dbg !4439, !tbaa !889
  %99 = icmp eq i32 %98, 1, !dbg !4440
  br i1 %99, label %79, label %100, !dbg !4441, !llvm.loop !4461

100:                                              ; preds = %96, %75
  %101 = load volatile i32, i32* %3, align 4, !dbg !4463, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58), !dbg !4464
  call void @llvm.dbg.value(metadata i32 %101, metadata !4358, metadata !DIExpression()), !dbg !4359
  %102 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4465, !tbaa !960
  %103 = and i32 %102, -2, !dbg !4465
  store volatile i32 %103, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4465, !tbaa !960
  br label %104, !dbg !4466

104:                                              ; preds = %100, %47
  %105 = phi i32 [ %101, %100 ], [ %48, %47 ], !dbg !4359
  call void @llvm.dbg.value(metadata i32 %105, metadata !4358, metadata !DIExpression()), !dbg !4359
  ret i32 %105, !dbg !4467
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_ProgramByte(i32 %0, i8 zeroext %1) local_unnamed_addr #3 !dbg !4468 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4470, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i8 %1, metadata !4471, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i32 8, metadata !4472, metadata !DIExpression()), !dbg !4473
  %5 = bitcast i32* %4 to i8*, !dbg !4474
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4474
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3833, metadata !DIExpression()) #6, !dbg !4476
  store volatile i32 8, i32* %4, align 4, !dbg !4476, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4477
  %6 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4479, !tbaa !957
  %7 = and i32 %6, 65536, !dbg !4480
  %8 = icmp eq i32 %7, 0, !dbg !4481
  br i1 %8, label %9, label %22, !dbg !4482

9:                                                ; preds = %2
  %10 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4483, !tbaa !957
  %11 = and i32 %10, 16, !dbg !4484
  %12 = icmp eq i32 %11, 0, !dbg !4485
  br i1 %12, label %13, label %22, !dbg !4486

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4487, !tbaa !957
  %15 = and i32 %14, 239, !dbg !4488
  %16 = icmp eq i32 %15, 0, !dbg !4489
  br i1 %16, label %17, label %22, !dbg !4490

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4491, !tbaa !957
  %19 = and i32 %18, 2, !dbg !4492
  %20 = icmp eq i32 %19, 0, !dbg !4493
  %21 = select i1 %20, i32 8, i32 7
  br label %22

22:                                               ; preds = %17, %13, %9, %2
  %23 = phi i32 [ 1, %2 ], [ 5, %9 ], [ 6, %13 ], [ %21, %17 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %23, metadata !3837, metadata !DIExpression()) #6, !dbg !4477
  store volatile i32 %23, i32* %4, align 4, !dbg !4495, !tbaa !889
  %24 = load volatile i32, i32* %4, align 4, !dbg !4496, !tbaa !889
  %25 = icmp eq i32 %24, 1, !dbg !4497
  br i1 %25, label %26, label %47, !dbg !4498

26:                                               ; preds = %22, %43
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4499
  %27 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4501, !tbaa !957
  %28 = and i32 %27, 65536, !dbg !4502
  %29 = icmp eq i32 %28, 0, !dbg !4503
  br i1 %29, label %30, label %43, !dbg !4504

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4505, !tbaa !957
  %32 = and i32 %31, 16, !dbg !4506
  %33 = icmp eq i32 %32, 0, !dbg !4507
  br i1 %33, label %34, label %43, !dbg !4508

34:                                               ; preds = %30
  %35 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4509, !tbaa !957
  %36 = and i32 %35, 239, !dbg !4510
  %37 = icmp eq i32 %36, 0, !dbg !4511
  br i1 %37, label %38, label %43, !dbg !4512

38:                                               ; preds = %34
  %39 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4513, !tbaa !957
  %40 = and i32 %39, 2, !dbg !4514
  %41 = icmp eq i32 %40, 0, !dbg !4515
  %42 = select i1 %41, i32 8, i32 7
  br label %43

43:                                               ; preds = %38, %34, %30, %26
  %44 = phi i32 [ 1, %26 ], [ 5, %30 ], [ 6, %34 ], [ %42, %38 ], !dbg !4516
  call void @llvm.dbg.value(metadata i32 %44, metadata !3837, metadata !DIExpression()) #6, !dbg !4499
  store volatile i32 %44, i32* %4, align 4, !dbg !4517, !tbaa !889
  %45 = load volatile i32, i32* %4, align 4, !dbg !4496, !tbaa !889
  %46 = icmp eq i32 %45, 1, !dbg !4497
  br i1 %46, label %26, label %47, !dbg !4498, !llvm.loop !4518

47:                                               ; preds = %43, %22
  %48 = load volatile i32, i32* %4, align 4, !dbg !4520, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4521
  call void @llvm.dbg.value(metadata i32 %48, metadata !4472, metadata !DIExpression()), !dbg !4473
  %49 = icmp eq i32 %48, 8, !dbg !4522
  br i1 %49, label %50, label %103, !dbg !4524

50:                                               ; preds = %47
  %51 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4525, !tbaa !960
  %52 = and i32 %51, -769, !dbg !4525
  store volatile i32 %52, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4525, !tbaa !960
  %53 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4527, !tbaa !960
  store volatile i32 %53, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4527, !tbaa !960
  %54 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4528, !tbaa !960
  %55 = or i32 %54, 1, !dbg !4528
  store volatile i32 %55, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4528, !tbaa !960
  %56 = inttoptr i32 %0 to i8*, !dbg !4529
  store volatile i8 %1, i8* %56, align 1, !dbg !4530, !tbaa !889
  %57 = bitcast i32* %3 to i8*, !dbg !4531
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57), !dbg !4531
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3833, metadata !DIExpression()) #6, !dbg !4533
  store volatile i32 8, i32* %3, align 4, !dbg !4533, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4534
  %58 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4536, !tbaa !957
  %59 = and i32 %58, 65536, !dbg !4537
  %60 = icmp eq i32 %59, 0, !dbg !4538
  br i1 %60, label %61, label %74, !dbg !4539

61:                                               ; preds = %50
  %62 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4540, !tbaa !957
  %63 = and i32 %62, 16, !dbg !4541
  %64 = icmp eq i32 %63, 0, !dbg !4542
  br i1 %64, label %65, label %74, !dbg !4543

65:                                               ; preds = %61
  %66 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4544, !tbaa !957
  %67 = and i32 %66, 239, !dbg !4545
  %68 = icmp eq i32 %67, 0, !dbg !4546
  br i1 %68, label %69, label %74, !dbg !4547

69:                                               ; preds = %65
  %70 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4548, !tbaa !957
  %71 = and i32 %70, 2, !dbg !4549
  %72 = icmp eq i32 %71, 0, !dbg !4550
  %73 = select i1 %72, i32 8, i32 7
  br label %74

74:                                               ; preds = %69, %65, %61, %50
  %75 = phi i32 [ 1, %50 ], [ 5, %61 ], [ 6, %65 ], [ %73, %69 ], !dbg !4551
  call void @llvm.dbg.value(metadata i32 %75, metadata !3837, metadata !DIExpression()) #6, !dbg !4534
  store volatile i32 %75, i32* %3, align 4, !dbg !4552, !tbaa !889
  %76 = load volatile i32, i32* %3, align 4, !dbg !4553, !tbaa !889
  %77 = icmp eq i32 %76, 1, !dbg !4554
  br i1 %77, label %78, label %99, !dbg !4555

78:                                               ; preds = %74, %95
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4556
  %79 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4558, !tbaa !957
  %80 = and i32 %79, 65536, !dbg !4559
  %81 = icmp eq i32 %80, 0, !dbg !4560
  br i1 %81, label %82, label %95, !dbg !4561

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4562, !tbaa !957
  %84 = and i32 %83, 16, !dbg !4563
  %85 = icmp eq i32 %84, 0, !dbg !4564
  br i1 %85, label %86, label %95, !dbg !4565

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4566, !tbaa !957
  %88 = and i32 %87, 239, !dbg !4567
  %89 = icmp eq i32 %88, 0, !dbg !4568
  br i1 %89, label %90, label %95, !dbg !4569

90:                                               ; preds = %86
  %91 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4570, !tbaa !957
  %92 = and i32 %91, 2, !dbg !4571
  %93 = icmp eq i32 %92, 0, !dbg !4572
  %94 = select i1 %93, i32 8, i32 7
  br label %95

95:                                               ; preds = %90, %86, %82, %78
  %96 = phi i32 [ 1, %78 ], [ 5, %82 ], [ 6, %86 ], [ %94, %90 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %96, metadata !3837, metadata !DIExpression()) #6, !dbg !4556
  store volatile i32 %96, i32* %3, align 4, !dbg !4574, !tbaa !889
  %97 = load volatile i32, i32* %3, align 4, !dbg !4553, !tbaa !889
  %98 = icmp eq i32 %97, 1, !dbg !4554
  br i1 %98, label %78, label %99, !dbg !4555, !llvm.loop !4575

99:                                               ; preds = %95, %74
  %100 = load volatile i32, i32* %3, align 4, !dbg !4577, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %100, metadata !4472, metadata !DIExpression()), !dbg !4473
  %101 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4579, !tbaa !960
  %102 = and i32 %101, -2, !dbg !4579
  store volatile i32 %102, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4579, !tbaa !960
  br label %103, !dbg !4580

103:                                              ; preds = %99, %47
  %104 = phi i32 [ %100, %99 ], [ %48, %47 ], !dbg !4473
  call void @llvm.dbg.value(metadata i32 %104, metadata !4472, metadata !DIExpression()), !dbg !4473
  ret i32 %104, !dbg !4581
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_OB_Unlock() local_unnamed_addr #0 !dbg !4582 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888276 to i32*), align 4, !dbg !4583, !tbaa !963
  %2 = and i32 %1, 1, !dbg !4585
  %3 = icmp eq i32 %2, 0, !dbg !4586
  br i1 %3, label %5, label %4, !dbg !4587

4:                                                ; preds = %0
  store volatile i32 135866939, i32* inttoptr (i32 1073888264 to i32*), align 8, !dbg !4588, !tbaa !954
  store volatile i32 1281191551, i32* inttoptr (i32 1073888264 to i32*), align 8, !dbg !4590, !tbaa !954
  br label %5, !dbg !4591

5:                                                ; preds = %0, %4
  ret void, !dbg !4592
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_OB_Lock() local_unnamed_addr #0 !dbg !4593 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888276 to i32*), align 4, !dbg !4594, !tbaa !963
  %2 = or i32 %1, 1, !dbg !4594
  store volatile i32 %2, i32* inttoptr (i32 1073888276 to i32*), align 4, !dbg !4594, !tbaa !963
  ret void, !dbg !4595
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_OB_WRPConfig(i32 %0, i32 %1) local_unnamed_addr #3 !dbg !4596 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4598, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata i32 %1, metadata !4599, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata i32 8, metadata !4600, metadata !DIExpression()), !dbg !4601
  %4 = bitcast i32* %3 to i8*, !dbg !4602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4602
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3833, metadata !DIExpression()) #6, !dbg !4604
  store volatile i32 8, i32* %3, align 4, !dbg !4604, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4605
  %5 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4607, !tbaa !957
  %6 = and i32 %5, 65536, !dbg !4608
  %7 = icmp eq i32 %6, 0, !dbg !4609
  br i1 %7, label %8, label %21, !dbg !4610

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4611, !tbaa !957
  %10 = and i32 %9, 16, !dbg !4612
  %11 = icmp eq i32 %10, 0, !dbg !4613
  br i1 %11, label %12, label %21, !dbg !4614

12:                                               ; preds = %8
  %13 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4615, !tbaa !957
  %14 = and i32 %13, 239, !dbg !4616
  %15 = icmp eq i32 %14, 0, !dbg !4617
  br i1 %15, label %16, label %21, !dbg !4618

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4619, !tbaa !957
  %18 = and i32 %17, 2, !dbg !4620
  %19 = icmp eq i32 %18, 0, !dbg !4621
  %20 = select i1 %19, i32 8, i32 7
  br label %21

21:                                               ; preds = %16, %12, %8, %2
  %22 = phi i32 [ 1, %2 ], [ 5, %8 ], [ 6, %12 ], [ %20, %16 ], !dbg !4622
  call void @llvm.dbg.value(metadata i32 %22, metadata !3837, metadata !DIExpression()) #6, !dbg !4605
  store volatile i32 %22, i32* %3, align 4, !dbg !4623, !tbaa !889
  %23 = load volatile i32, i32* %3, align 4, !dbg !4624, !tbaa !889
  %24 = icmp eq i32 %23, 1, !dbg !4625
  br i1 %24, label %25, label %46, !dbg !4626

25:                                               ; preds = %21, %42
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4627
  %26 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4629, !tbaa !957
  %27 = and i32 %26, 65536, !dbg !4630
  %28 = icmp eq i32 %27, 0, !dbg !4631
  br i1 %28, label %29, label %42, !dbg !4632

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4633, !tbaa !957
  %31 = and i32 %30, 16, !dbg !4634
  %32 = icmp eq i32 %31, 0, !dbg !4635
  br i1 %32, label %33, label %42, !dbg !4636

33:                                               ; preds = %29
  %34 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4637, !tbaa !957
  %35 = and i32 %34, 239, !dbg !4638
  %36 = icmp eq i32 %35, 0, !dbg !4639
  br i1 %36, label %37, label %42, !dbg !4640

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4641, !tbaa !957
  %39 = and i32 %38, 2, !dbg !4642
  %40 = icmp eq i32 %39, 0, !dbg !4643
  %41 = select i1 %40, i32 8, i32 7
  br label %42

42:                                               ; preds = %37, %33, %29, %25
  %43 = phi i32 [ 1, %25 ], [ 5, %29 ], [ 6, %33 ], [ %41, %37 ], !dbg !4644
  call void @llvm.dbg.value(metadata i32 %43, metadata !3837, metadata !DIExpression()) #6, !dbg !4627
  store volatile i32 %43, i32* %3, align 4, !dbg !4645, !tbaa !889
  %44 = load volatile i32, i32* %3, align 4, !dbg !4624, !tbaa !889
  %45 = icmp eq i32 %44, 1, !dbg !4625
  br i1 %45, label %25, label %46, !dbg !4626, !llvm.loop !4646

46:                                               ; preds = %42, %21
  %47 = load volatile i32, i32* %3, align 4, !dbg !4648, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4649
  call void @llvm.dbg.value(metadata i32 %47, metadata !4600, metadata !DIExpression()), !dbg !4601
  %48 = icmp eq i32 %47, 8, !dbg !4650
  br i1 %48, label %49, label %57, !dbg !4652

49:                                               ; preds = %46
  %50 = icmp eq i32 %1, 0, !dbg !4653
  %51 = load volatile i16, i16* inttoptr (i32 1073888278 to i16*), align 2, !dbg !4656, !tbaa !3025
  %52 = trunc i32 %0 to i16, !dbg !4656
  %53 = xor i16 %52, -1, !dbg !4657
  %54 = and i16 %51, %53, !dbg !4657
  %55 = or i16 %51, %52, !dbg !4657
  %56 = select i1 %50, i16 %55, i16 %54, !dbg !4657
  store volatile i16 %56, i16* inttoptr (i32 1073888278 to i16*), align 2, !dbg !4656, !tbaa !3025
  br label %57, !dbg !4658

57:                                               ; preds = %49, %46
  ret void, !dbg !4658
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_OB_RDPConfig(i8 zeroext %0) local_unnamed_addr #3 !dbg !4659 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !4661, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.value(metadata i32 8, metadata !4662, metadata !DIExpression()), !dbg !4663
  %3 = bitcast i32* %2 to i8*, !dbg !4664
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4664
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3833, metadata !DIExpression()) #6, !dbg !4666
  store volatile i32 8, i32* %2, align 4, !dbg !4666, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4667
  %4 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4669, !tbaa !957
  %5 = and i32 %4, 65536, !dbg !4670
  %6 = icmp eq i32 %5, 0, !dbg !4671
  br i1 %6, label %7, label %20, !dbg !4672

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4673, !tbaa !957
  %9 = and i32 %8, 16, !dbg !4674
  %10 = icmp eq i32 %9, 0, !dbg !4675
  br i1 %10, label %11, label %20, !dbg !4676

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4677, !tbaa !957
  %13 = and i32 %12, 239, !dbg !4678
  %14 = icmp eq i32 %13, 0, !dbg !4679
  br i1 %14, label %15, label %20, !dbg !4680

15:                                               ; preds = %11
  %16 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4681, !tbaa !957
  %17 = and i32 %16, 2, !dbg !4682
  %18 = icmp eq i32 %17, 0, !dbg !4683
  %19 = select i1 %18, i32 8, i32 7
  br label %20

20:                                               ; preds = %15, %11, %7, %1
  %21 = phi i32 [ 1, %1 ], [ 5, %7 ], [ 6, %11 ], [ %19, %15 ], !dbg !4684
  call void @llvm.dbg.value(metadata i32 %21, metadata !3837, metadata !DIExpression()) #6, !dbg !4667
  store volatile i32 %21, i32* %2, align 4, !dbg !4685, !tbaa !889
  %22 = load volatile i32, i32* %2, align 4, !dbg !4686, !tbaa !889
  %23 = icmp eq i32 %22, 1, !dbg !4687
  br i1 %23, label %24, label %45, !dbg !4688

24:                                               ; preds = %20, %41
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4689
  %25 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4691, !tbaa !957
  %26 = and i32 %25, 65536, !dbg !4692
  %27 = icmp eq i32 %26, 0, !dbg !4693
  br i1 %27, label %28, label %41, !dbg !4694

28:                                               ; preds = %24
  %29 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4695, !tbaa !957
  %30 = and i32 %29, 16, !dbg !4696
  %31 = icmp eq i32 %30, 0, !dbg !4697
  br i1 %31, label %32, label %41, !dbg !4698

32:                                               ; preds = %28
  %33 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4699, !tbaa !957
  %34 = and i32 %33, 239, !dbg !4700
  %35 = icmp eq i32 %34, 0, !dbg !4701
  br i1 %35, label %36, label %41, !dbg !4702

36:                                               ; preds = %32
  %37 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4703, !tbaa !957
  %38 = and i32 %37, 2, !dbg !4704
  %39 = icmp eq i32 %38, 0, !dbg !4705
  %40 = select i1 %39, i32 8, i32 7
  br label %41

41:                                               ; preds = %36, %32, %28, %24
  %42 = phi i32 [ 1, %24 ], [ 5, %28 ], [ 6, %32 ], [ %40, %36 ], !dbg !4706
  call void @llvm.dbg.value(metadata i32 %42, metadata !3837, metadata !DIExpression()) #6, !dbg !4689
  store volatile i32 %42, i32* %2, align 4, !dbg !4707, !tbaa !889
  %43 = load volatile i32, i32* %2, align 4, !dbg !4686, !tbaa !889
  %44 = icmp eq i32 %43, 1, !dbg !4687
  br i1 %44, label %24, label %45, !dbg !4688, !llvm.loop !4708

45:                                               ; preds = %41, %20
  %46 = load volatile i32, i32* %2, align 4, !dbg !4710, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4711
  call void @llvm.dbg.value(metadata i32 %46, metadata !4662, metadata !DIExpression()), !dbg !4663
  %47 = icmp eq i32 %46, 8, !dbg !4712
  br i1 %47, label %48, label %49, !dbg !4714

48:                                               ; preds = %45
  store volatile i8 %0, i8* inttoptr (i32 1073888277 to i8*), align 1, !dbg !4715, !tbaa !889
  br label %49, !dbg !4717

49:                                               ; preds = %48, %45
  ret void, !dbg !4718
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_OB_UserConfig(i8 zeroext %0, i8 zeroext %1, i8 zeroext %2) local_unnamed_addr #3 !dbg !4719 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !4723, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8 %1, metadata !4724, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8 %2, metadata !4725, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8 -1, metadata !4726, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 8, metadata !4727, metadata !DIExpression()), !dbg !4728
  %5 = bitcast i32* %4 to i8*, !dbg !4729
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4729
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3833, metadata !DIExpression()) #6, !dbg !4731
  store volatile i32 8, i32* %4, align 4, !dbg !4731, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4732
  %6 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4734, !tbaa !957
  %7 = and i32 %6, 65536, !dbg !4735
  %8 = icmp eq i32 %7, 0, !dbg !4736
  br i1 %8, label %9, label %22, !dbg !4737

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4738, !tbaa !957
  %11 = and i32 %10, 16, !dbg !4739
  %12 = icmp eq i32 %11, 0, !dbg !4740
  br i1 %12, label %13, label %22, !dbg !4741

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4742, !tbaa !957
  %15 = and i32 %14, 239, !dbg !4743
  %16 = icmp eq i32 %15, 0, !dbg !4744
  br i1 %16, label %17, label %22, !dbg !4745

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4746, !tbaa !957
  %19 = and i32 %18, 2, !dbg !4747
  %20 = icmp eq i32 %19, 0, !dbg !4748
  %21 = select i1 %20, i32 8, i32 7
  br label %22

22:                                               ; preds = %17, %13, %9, %3
  %23 = phi i32 [ 1, %3 ], [ 5, %9 ], [ 6, %13 ], [ %21, %17 ], !dbg !4749
  call void @llvm.dbg.value(metadata i32 %23, metadata !3837, metadata !DIExpression()) #6, !dbg !4732
  store volatile i32 %23, i32* %4, align 4, !dbg !4750, !tbaa !889
  %24 = load volatile i32, i32* %4, align 4, !dbg !4751, !tbaa !889
  %25 = icmp eq i32 %24, 1, !dbg !4752
  br i1 %25, label %26, label %47, !dbg !4753

26:                                               ; preds = %22, %43
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4754
  %27 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4756, !tbaa !957
  %28 = and i32 %27, 65536, !dbg !4757
  %29 = icmp eq i32 %28, 0, !dbg !4758
  br i1 %29, label %30, label %43, !dbg !4759

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4760, !tbaa !957
  %32 = and i32 %31, 16, !dbg !4761
  %33 = icmp eq i32 %32, 0, !dbg !4762
  br i1 %33, label %34, label %43, !dbg !4763

34:                                               ; preds = %30
  %35 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4764, !tbaa !957
  %36 = and i32 %35, 239, !dbg !4765
  %37 = icmp eq i32 %36, 0, !dbg !4766
  br i1 %37, label %38, label %43, !dbg !4767

38:                                               ; preds = %34
  %39 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4768, !tbaa !957
  %40 = and i32 %39, 2, !dbg !4769
  %41 = icmp eq i32 %40, 0, !dbg !4770
  %42 = select i1 %41, i32 8, i32 7
  br label %43

43:                                               ; preds = %38, %34, %30, %26
  %44 = phi i32 [ 1, %26 ], [ 5, %30 ], [ 6, %34 ], [ %42, %38 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %44, metadata !3837, metadata !DIExpression()) #6, !dbg !4754
  store volatile i32 %44, i32* %4, align 4, !dbg !4772, !tbaa !889
  %45 = load volatile i32, i32* %4, align 4, !dbg !4751, !tbaa !889
  %46 = icmp eq i32 %45, 1, !dbg !4752
  br i1 %46, label %26, label %47, !dbg !4753, !llvm.loop !4773

47:                                               ; preds = %43, %22
  %48 = load volatile i32, i32* %4, align 4, !dbg !4775, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4776
  call void @llvm.dbg.value(metadata i32 %48, metadata !4727, metadata !DIExpression()), !dbg !4728
  %49 = icmp eq i32 %48, 8, !dbg !4777
  br i1 %49, label %50, label %56, !dbg !4779

50:                                               ; preds = %47
  %51 = load volatile i8, i8* inttoptr (i32 1073888276 to i8*), align 4, !dbg !4780, !tbaa !889
  %52 = and i8 %51, 15, !dbg !4782
  call void @llvm.dbg.value(metadata i8 %52, metadata !4726, metadata !DIExpression()), !dbg !4728
  %53 = or i8 %1, %0, !dbg !4783
  %54 = or i8 %53, %2, !dbg !4784
  %55 = or i8 %54, %52, !dbg !4785
  store volatile i8 %55, i8* inttoptr (i32 1073888276 to i8*), align 4, !dbg !4786, !tbaa !889
  br label %56, !dbg !4787

56:                                               ; preds = %50, %47
  ret void, !dbg !4788
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_OB_BORConfig(i8 zeroext %0) local_unnamed_addr #0 !dbg !4789 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4791, metadata !DIExpression()), !dbg !4792
  %2 = load volatile i8, i8* inttoptr (i32 1073888276 to i8*), align 4, !dbg !4793, !tbaa !889
  %3 = and i8 %2, -13, !dbg !4793
  store volatile i8 %3, i8* inttoptr (i32 1073888276 to i8*), align 4, !dbg !4793, !tbaa !889
  %4 = load volatile i8, i8* inttoptr (i32 1073888276 to i8*), align 4, !dbg !4794, !tbaa !889
  %5 = or i8 %4, %0, !dbg !4794
  store volatile i8 %5, i8* inttoptr (i32 1073888276 to i8*), align 4, !dbg !4794, !tbaa !889
  ret void, !dbg !4795
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_OB_Launch() local_unnamed_addr #3 !dbg !4796 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 8, metadata !4798, metadata !DIExpression()), !dbg !4799
  %2 = load volatile i8, i8* inttoptr (i32 1073888276 to i8*), align 4, !dbg !4800, !tbaa !889
  %3 = or i8 %2, 2, !dbg !4800
  store volatile i8 %3, i8* inttoptr (i32 1073888276 to i8*), align 4, !dbg !4800, !tbaa !889
  %4 = bitcast i32* %1 to i8*, !dbg !4801
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4801
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3833, metadata !DIExpression()) #6, !dbg !4803
  store volatile i32 8, i32* %1, align 4, !dbg !4803, !tbaa !889
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4804
  %5 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4806, !tbaa !957
  %6 = and i32 %5, 65536, !dbg !4807
  %7 = icmp eq i32 %6, 0, !dbg !4808
  br i1 %7, label %8, label %21, !dbg !4809

8:                                                ; preds = %0
  %9 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4810, !tbaa !957
  %10 = and i32 %9, 16, !dbg !4811
  %11 = icmp eq i32 %10, 0, !dbg !4812
  br i1 %11, label %12, label %21, !dbg !4813

12:                                               ; preds = %8
  %13 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4814, !tbaa !957
  %14 = and i32 %13, 239, !dbg !4815
  %15 = icmp eq i32 %14, 0, !dbg !4816
  br i1 %15, label %16, label %21, !dbg !4817

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4818, !tbaa !957
  %18 = and i32 %17, 2, !dbg !4819
  %19 = icmp eq i32 %18, 0, !dbg !4820
  %20 = select i1 %19, i32 8, i32 7
  br label %21

21:                                               ; preds = %16, %12, %8, %0
  %22 = phi i32 [ 1, %0 ], [ 5, %8 ], [ 6, %12 ], [ %20, %16 ], !dbg !4821
  call void @llvm.dbg.value(metadata i32 %22, metadata !3837, metadata !DIExpression()) #6, !dbg !4804
  store volatile i32 %22, i32* %1, align 4, !dbg !4822, !tbaa !889
  %23 = load volatile i32, i32* %1, align 4, !dbg !4823, !tbaa !889
  %24 = icmp eq i32 %23, 1, !dbg !4824
  br i1 %24, label %25, label %46, !dbg !4825

25:                                               ; preds = %21, %42
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()) #6, !dbg !4826
  %26 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4828, !tbaa !957
  %27 = and i32 %26, 65536, !dbg !4829
  %28 = icmp eq i32 %27, 0, !dbg !4830
  br i1 %28, label %29, label %42, !dbg !4831

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4832, !tbaa !957
  %31 = and i32 %30, 16, !dbg !4833
  %32 = icmp eq i32 %31, 0, !dbg !4834
  br i1 %32, label %33, label %42, !dbg !4835

33:                                               ; preds = %29
  %34 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4836, !tbaa !957
  %35 = and i32 %34, 239, !dbg !4837
  %36 = icmp eq i32 %35, 0, !dbg !4838
  br i1 %36, label %37, label %42, !dbg !4839

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4840, !tbaa !957
  %39 = and i32 %38, 2, !dbg !4841
  %40 = icmp eq i32 %39, 0, !dbg !4842
  %41 = select i1 %40, i32 8, i32 7
  br label %42

42:                                               ; preds = %37, %33, %29, %25
  %43 = phi i32 [ 1, %25 ], [ 5, %29 ], [ 6, %33 ], [ %41, %37 ], !dbg !4843
  call void @llvm.dbg.value(metadata i32 %43, metadata !3837, metadata !DIExpression()) #6, !dbg !4826
  store volatile i32 %43, i32* %1, align 4, !dbg !4844, !tbaa !889
  %44 = load volatile i32, i32* %1, align 4, !dbg !4823, !tbaa !889
  %45 = icmp eq i32 %44, 1, !dbg !4824
  br i1 %45, label %25, label %46, !dbg !4825, !llvm.loop !4845

46:                                               ; preds = %42, %21
  %47 = load volatile i32, i32* %1, align 4, !dbg !4847, !tbaa !889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4848
  call void @llvm.dbg.value(metadata i32 %47, metadata !4798, metadata !DIExpression()), !dbg !4799
  ret i32 %47, !dbg !4849
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @FLASH_OB_GetUser() local_unnamed_addr #0 !dbg !4850 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888276 to i32*), align 4, !dbg !4851, !tbaa !963
  %2 = lshr i32 %1, 5, !dbg !4852
  %3 = trunc i32 %2 to i8, !dbg !4853
  ret i8 %3, !dbg !4854
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @FLASH_OB_GetWRP() local_unnamed_addr #0 !dbg !4855 {
  %1 = load volatile i16, i16* inttoptr (i32 1073888278 to i16*), align 2, !dbg !4858, !tbaa !3025
  ret i16 %1, !dbg !4859
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_OB_GetRDP() local_unnamed_addr #0 !dbg !4860 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4864, metadata !DIExpression()), !dbg !4865
  %1 = load volatile i8, i8* inttoptr (i32 1073888277 to i8*), align 1, !dbg !4866, !tbaa !889
  %2 = icmp ne i8 %1, -86, !dbg !4868
  %3 = zext i1 %2 to i32
  call void @llvm.dbg.value(metadata i32 %3, metadata !4864, metadata !DIExpression()), !dbg !4865
  ret i32 %3, !dbg !4869
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @FLASH_OB_GetBOR() local_unnamed_addr #0 !dbg !4870 {
  %1 = load volatile i8, i8* inttoptr (i32 1073888276 to i8*), align 4, !dbg !4871, !tbaa !889
  %2 = and i8 %1, 12, !dbg !4872
  ret i8 %2, !dbg !4873
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_ITConfig(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !4874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4876, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.value(metadata i32 %1, metadata !4877, metadata !DIExpression()), !dbg !4878
  %3 = icmp eq i32 %1, 0, !dbg !4879
  br i1 %3, label %7, label %4, !dbg !4881

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4882, !tbaa !960
  %6 = or i32 %5, %0, !dbg !4882
  br label %11, !dbg !4884

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !4885
  %9 = load volatile i32, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4887, !tbaa !960
  %10 = and i32 %9, %8, !dbg !4887
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !4888, !tbaa !960
  ret void, !dbg !4889
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_GetFlagStatus(i32 %0) local_unnamed_addr #0 !dbg !4890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4892, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i32 0, metadata !4893, metadata !DIExpression()), !dbg !4894
  %2 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4895, !tbaa !957
  %3 = and i32 %2, %0, !dbg !4897
  %4 = icmp ne i32 %3, 0, !dbg !4898
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !4893, metadata !DIExpression()), !dbg !4894
  ret i32 %5, !dbg !4899
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FLASH_ClearFlag(i32 %0) local_unnamed_addr #0 !dbg !4900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4902, metadata !DIExpression()), !dbg !4903
  store volatile i32 %0, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4904, !tbaa !957
  ret void, !dbg !4905
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @FLASH_GetStatus() local_unnamed_addr #0 !dbg !3838 {
  call void @llvm.dbg.value(metadata i32 8, metadata !3837, metadata !DIExpression()), !dbg !4906
  %1 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4907, !tbaa !957
  %2 = and i32 %1, 65536, !dbg !4908
  %3 = icmp eq i32 %2, 0, !dbg !4909
  br i1 %3, label %4, label %17, !dbg !4910

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4911, !tbaa !957
  %6 = and i32 %5, 16, !dbg !4912
  %7 = icmp eq i32 %6, 0, !dbg !4913
  br i1 %7, label %8, label %17, !dbg !4914

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4915, !tbaa !957
  %10 = and i32 %9, 239, !dbg !4916
  %11 = icmp eq i32 %10, 0, !dbg !4917
  br i1 %11, label %12, label %17, !dbg !4918

12:                                               ; preds = %8
  %13 = load volatile i32, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !4919, !tbaa !957
  %14 = and i32 %13, 2, !dbg !4920
  %15 = icmp eq i32 %14, 0, !dbg !4921
  %16 = select i1 %15, i32 8, i32 7
  br label %17

17:                                               ; preds = %12, %8, %4, %0
  %18 = phi i32 [ 1, %0 ], [ 5, %4 ], [ 6, %8 ], [ %16, %12 ], !dbg !4922
  call void @llvm.dbg.value(metadata i32 %18, metadata !3837, metadata !DIExpression()), !dbg !4906
  ret i32 %18, !dbg !4923
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_DeInit() local_unnamed_addr #3 !dbg !4924 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*, !dbg !4929
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4929
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4926, metadata !DIExpression()), !dbg !4930
  store volatile i32 0, i32* %3, align 4, !dbg !4930, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !4927, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.value(metadata i32 0, metadata !4928, metadata !DIExpression()), !dbg !4931
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !4932, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !4935, !tbaa !4933
  %5 = bitcast i32* %2 to i8*, !dbg !4936
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4936
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4939, metadata !DIExpression()) #6, !dbg !4944
  store volatile i32 0, i32* %2, align 4, !dbg !4944, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !4940, metadata !DIExpression()) #6, !dbg !4945
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()) #6, !dbg !4945
  %6 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4946, !tbaa !4948
  %7 = and i32 %6, 64, !dbg !4949
  %8 = icmp eq i32 %7, 0, !dbg !4950
  br i1 %8, label %10, label %9, !dbg !4951

9:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 %21, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !4945
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4952
  br label %24, !dbg !4953

10:                                               ; preds = %0
  store volatile i32 -1, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4954, !tbaa !4948
  br label %11, !dbg !4956

11:                                               ; preds = %132, %10
  %12 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4957, !tbaa !4948
  %13 = and i32 %12, 64, !dbg !4959
  call void @llvm.dbg.value(metadata i32 %13, metadata !4941, metadata !DIExpression()) #6, !dbg !4945
  %14 = load volatile i32, i32* %2, align 4, !dbg !4960, !tbaa !894
  %15 = add i32 %14, 1, !dbg !4960
  store volatile i32 %15, i32* %2, align 4, !dbg !4960, !tbaa !894
  %16 = load volatile i32, i32* %2, align 4, !dbg !4961, !tbaa !894
  %17 = icmp ne i32 %16, 65536, !dbg !4962
  %18 = icmp eq i32 %13, 0, !dbg !4963
  %19 = and i1 %18, %17, !dbg !4963
  br i1 %19, label %114, label %20, !dbg !4964, !llvm.loop !4965

20:                                               ; preds = %132, %123, %114, %11
  %21 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4967, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %21, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !4945
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4952
  %22 = and i32 %21, 64, !dbg !4969
  %23 = icmp eq i32 %22, 0, !dbg !4969
  br i1 %23, label %58, label %24, !dbg !4953

24:                                               ; preds = %9, %20
  store volatile i32 0, i32* inttoptr (i32 1073752064 to i32*), align 2048, !dbg !4970, !tbaa !4972
  store volatile i32 8449, i32* inttoptr (i32 1073752068 to i32*), align 4, !dbg !4973, !tbaa !4974
  %25 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !4975, !tbaa !4976
  %26 = and i32 %25, 7, !dbg !4975
  store volatile i32 %26, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !4975, !tbaa !4976
  br label %27, !dbg !4977

27:                                               ; preds = %105, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4978, !tbaa !4948
  %29 = and i32 %28, 4, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %29, metadata !4927, metadata !DIExpression()), !dbg !4931
  %30 = load volatile i32, i32* %3, align 4, !dbg !4981, !tbaa !894
  %31 = add i32 %30, 1, !dbg !4981
  store volatile i32 %31, i32* %3, align 4, !dbg !4981, !tbaa !894
  %32 = load volatile i32, i32* %3, align 4, !dbg !4982, !tbaa !894
  %33 = icmp ne i32 %32, 65536, !dbg !4983
  %34 = icmp eq i32 %29, 0, !dbg !4984
  %35 = and i1 %34, %33, !dbg !4984
  br i1 %35, label %87, label %36, !dbg !4985, !llvm.loop !4986

36:                                               ; preds = %105, %96, %87, %27
  %37 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4988, !tbaa !4948
  %38 = and i32 %37, 4, !dbg !4990
  %39 = icmp eq i32 %38, 0, !dbg !4991
  br i1 %39, label %58, label %40, !dbg !4992

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !4993, !tbaa !4976
  store volatile i32 0, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !4993, !tbaa !4976
  store volatile i32 65535, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !4995, !tbaa !4996
  store volatile i32 8323327, i32* inttoptr (i32 1073752080 to i32*), align 16, !dbg !4997, !tbaa !4998
  store volatile i32 0, i32* inttoptr (i32 1073752088 to i32*), align 8, !dbg !4999, !tbaa !5000
  store volatile i32 0, i32* inttoptr (i32 1073752092 to i32*), align 4, !dbg !5001, !tbaa !5002
  store volatile i32 0, i32* inttoptr (i32 1073752096 to i32*), align 32, !dbg !5003, !tbaa !5004
  store volatile i32 0, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5005, !tbaa !4948
  store volatile i32 0, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !5006, !tbaa !5007
  %42 = bitcast i32* %1 to i8*, !dbg !5008
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42), !dbg !5008
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5011, metadata !DIExpression()) #6, !dbg !5016
  store volatile i32 0, i32* %1, align 4, !dbg !5016, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !5012, metadata !DIExpression()) #6, !dbg !5017
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()) #6, !dbg !5017
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5018, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5019, !tbaa !4933
  %43 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5020, !tbaa !4948
  %44 = and i32 %43, -161, !dbg !5020
  store volatile i32 %44, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5020, !tbaa !4948
  br label %45, !dbg !5021

45:                                               ; preds = %78, %40
  %46 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5022, !tbaa !4948
  %47 = and i32 %46, 32, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %47, metadata !5013, metadata !DIExpression()) #6, !dbg !5017
  %48 = load volatile i32, i32* %1, align 4, !dbg !5025, !tbaa !894
  %49 = add i32 %48, 1, !dbg !5025
  store volatile i32 %49, i32* %1, align 4, !dbg !5025, !tbaa !894
  %50 = load volatile i32, i32* %1, align 4, !dbg !5026, !tbaa !894
  %51 = icmp ne i32 %50, 131072, !dbg !5027
  %52 = icmp eq i32 %47, 0, !dbg !5028
  %53 = and i1 %52, %51, !dbg !5028
  br i1 %53, label %60, label %54, !dbg !5029, !llvm.loop !5030

54:                                               ; preds = %78, %69, %60, %45
  %55 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5032, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %55, metadata !5012, metadata !DIExpression(DW_OP_constu, 5, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5017
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5034, !tbaa !4933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42), !dbg !5035
  %56 = lshr i32 %55, 5
  %57 = and i32 %56, 1
  br label %58

58:                                               ; preds = %54, %36, %20
  %59 = phi i32 [ 0, %20 ], [ 0, %36 ], [ %57, %54 ], !dbg !5036
  call void @llvm.dbg.value(metadata i32 %59, metadata !4928, metadata !DIExpression()), !dbg !4931
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5037, !tbaa !4933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !5038
  ret i32 %59, !dbg !5039

60:                                               ; preds = %45
  %61 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5022, !tbaa !4948
  %62 = and i32 %61, 32, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %62, metadata !5013, metadata !DIExpression()) #6, !dbg !5017
  %63 = load volatile i32, i32* %1, align 4, !dbg !5025, !tbaa !894
  %64 = add i32 %63, 1, !dbg !5025
  store volatile i32 %64, i32* %1, align 4, !dbg !5025, !tbaa !894
  %65 = load volatile i32, i32* %1, align 4, !dbg !5026, !tbaa !894
  %66 = icmp ne i32 %65, 131072, !dbg !5027
  %67 = icmp eq i32 %62, 0, !dbg !5028
  %68 = and i1 %67, %66, !dbg !5028
  br i1 %68, label %69, label %54, !dbg !5029, !llvm.loop !5030

69:                                               ; preds = %60
  %70 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5022, !tbaa !4948
  %71 = and i32 %70, 32, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %71, metadata !5013, metadata !DIExpression()) #6, !dbg !5017
  %72 = load volatile i32, i32* %1, align 4, !dbg !5025, !tbaa !894
  %73 = add i32 %72, 1, !dbg !5025
  store volatile i32 %73, i32* %1, align 4, !dbg !5025, !tbaa !894
  %74 = load volatile i32, i32* %1, align 4, !dbg !5026, !tbaa !894
  %75 = icmp ne i32 %74, 131072, !dbg !5027
  %76 = icmp eq i32 %71, 0, !dbg !5028
  %77 = and i1 %76, %75, !dbg !5028
  br i1 %77, label %78, label %54, !dbg !5029, !llvm.loop !5030

78:                                               ; preds = %69
  %79 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5022, !tbaa !4948
  %80 = and i32 %79, 32, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %80, metadata !5013, metadata !DIExpression()) #6, !dbg !5017
  %81 = load volatile i32, i32* %1, align 4, !dbg !5025, !tbaa !894
  %82 = add i32 %81, 1, !dbg !5025
  store volatile i32 %82, i32* %1, align 4, !dbg !5025, !tbaa !894
  %83 = load volatile i32, i32* %1, align 4, !dbg !5026, !tbaa !894
  %84 = icmp ne i32 %83, 131072, !dbg !5027
  %85 = icmp eq i32 %80, 0, !dbg !5028
  %86 = and i1 %85, %84, !dbg !5028
  br i1 %86, label %45, label %54, !dbg !5029, !llvm.loop !5030

87:                                               ; preds = %27
  %88 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4978, !tbaa !4948
  %89 = and i32 %88, 4, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %89, metadata !4927, metadata !DIExpression()), !dbg !4931
  %90 = load volatile i32, i32* %3, align 4, !dbg !4981, !tbaa !894
  %91 = add i32 %90, 1, !dbg !4981
  store volatile i32 %91, i32* %3, align 4, !dbg !4981, !tbaa !894
  %92 = load volatile i32, i32* %3, align 4, !dbg !4982, !tbaa !894
  %93 = icmp ne i32 %92, 65536, !dbg !4983
  %94 = icmp eq i32 %89, 0, !dbg !4984
  %95 = and i1 %94, %93, !dbg !4984
  br i1 %95, label %96, label %36, !dbg !4985, !llvm.loop !4986

96:                                               ; preds = %87
  %97 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4978, !tbaa !4948
  %98 = and i32 %97, 4, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %98, metadata !4927, metadata !DIExpression()), !dbg !4931
  %99 = load volatile i32, i32* %3, align 4, !dbg !4981, !tbaa !894
  %100 = add i32 %99, 1, !dbg !4981
  store volatile i32 %100, i32* %3, align 4, !dbg !4981, !tbaa !894
  %101 = load volatile i32, i32* %3, align 4, !dbg !4982, !tbaa !894
  %102 = icmp ne i32 %101, 65536, !dbg !4983
  %103 = icmp eq i32 %98, 0, !dbg !4984
  %104 = and i1 %103, %102, !dbg !4984
  br i1 %104, label %105, label %36, !dbg !4985, !llvm.loop !4986

105:                                              ; preds = %96
  %106 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4978, !tbaa !4948
  %107 = and i32 %106, 4, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %107, metadata !4927, metadata !DIExpression()), !dbg !4931
  %108 = load volatile i32, i32* %3, align 4, !dbg !4981, !tbaa !894
  %109 = add i32 %108, 1, !dbg !4981
  store volatile i32 %109, i32* %3, align 4, !dbg !4981, !tbaa !894
  %110 = load volatile i32, i32* %3, align 4, !dbg !4982, !tbaa !894
  %111 = icmp ne i32 %110, 65536, !dbg !4983
  %112 = icmp eq i32 %107, 0, !dbg !4984
  %113 = and i1 %112, %111, !dbg !4984
  br i1 %113, label %27, label %36, !dbg !4985, !llvm.loop !4986

114:                                              ; preds = %11
  %115 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4957, !tbaa !4948
  %116 = and i32 %115, 64, !dbg !4959
  call void @llvm.dbg.value(metadata i32 %116, metadata !4941, metadata !DIExpression()) #6, !dbg !4945
  %117 = load volatile i32, i32* %2, align 4, !dbg !4960, !tbaa !894
  %118 = add i32 %117, 1, !dbg !4960
  store volatile i32 %118, i32* %2, align 4, !dbg !4960, !tbaa !894
  %119 = load volatile i32, i32* %2, align 4, !dbg !4961, !tbaa !894
  %120 = icmp ne i32 %119, 65536, !dbg !4962
  %121 = icmp eq i32 %116, 0, !dbg !4963
  %122 = and i1 %121, %120, !dbg !4963
  br i1 %122, label %123, label %20, !dbg !4964, !llvm.loop !4965

123:                                              ; preds = %114
  %124 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4957, !tbaa !4948
  %125 = and i32 %124, 64, !dbg !4959
  call void @llvm.dbg.value(metadata i32 %125, metadata !4941, metadata !DIExpression()) #6, !dbg !4945
  %126 = load volatile i32, i32* %2, align 4, !dbg !4960, !tbaa !894
  %127 = add i32 %126, 1, !dbg !4960
  store volatile i32 %127, i32* %2, align 4, !dbg !4960, !tbaa !894
  %128 = load volatile i32, i32* %2, align 4, !dbg !4961, !tbaa !894
  %129 = icmp ne i32 %128, 65536, !dbg !4962
  %130 = icmp eq i32 %125, 0, !dbg !4963
  %131 = and i1 %130, %129, !dbg !4963
  br i1 %131, label %132, label %20, !dbg !4964, !llvm.loop !4965

132:                                              ; preds = %123
  %133 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !4957, !tbaa !4948
  %134 = and i32 %133, 64, !dbg !4959
  call void @llvm.dbg.value(metadata i32 %134, metadata !4941, metadata !DIExpression()) #6, !dbg !4945
  %135 = load volatile i32, i32* %2, align 4, !dbg !4960, !tbaa !894
  %136 = add i32 %135, 1, !dbg !4960
  store volatile i32 %136, i32* %2, align 4, !dbg !4960, !tbaa !894
  %137 = load volatile i32, i32* %2, align 4, !dbg !4961, !tbaa !894
  %138 = icmp ne i32 %137, 65536, !dbg !4962
  %139 = icmp eq i32 %134, 0, !dbg !4963
  %140 = and i1 %139, %138, !dbg !4963
  br i1 %140, label %11, label %20, !dbg !4964, !llvm.loop !4965
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_EnterInitMode() local_unnamed_addr #3 !dbg !4937 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5040
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5040
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4939, metadata !DIExpression()), !dbg !5041
  store volatile i32 0, i32* %1, align 4, !dbg !5041, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !4940, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()), !dbg !5042
  %3 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5043, !tbaa !4948
  %4 = and i32 %3, 64, !dbg !5044
  %5 = icmp eq i32 %4, 0, !dbg !5045
  br i1 %5, label %6, label %20, !dbg !5046

6:                                                ; preds = %0
  store volatile i32 -1, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5047, !tbaa !4948
  br label %7, !dbg !5048

7:                                                ; preds = %40, %6
  %8 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5049, !tbaa !4948
  %9 = and i32 %8, 64, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %9, metadata !4941, metadata !DIExpression()), !dbg !5042
  %10 = load volatile i32, i32* %1, align 4, !dbg !5051, !tbaa !894
  %11 = add i32 %10, 1, !dbg !5051
  store volatile i32 %11, i32* %1, align 4, !dbg !5051, !tbaa !894
  %12 = load volatile i32, i32* %1, align 4, !dbg !5052, !tbaa !894
  %13 = icmp ne i32 %12, 65536, !dbg !5053
  %14 = icmp eq i32 %9, 0, !dbg !5054
  %15 = and i1 %14, %13, !dbg !5054
  br i1 %15, label %22, label %16, !dbg !5055, !llvm.loop !5056

16:                                               ; preds = %40, %31, %22, %7
  %17 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5058, !tbaa !4948
  %18 = lshr i32 %17, 6
  %19 = and i32 %18, 1
  br label %20

20:                                               ; preds = %0, %16
  %21 = phi i32 [ %19, %16 ], [ 1, %0 ], !dbg !5059
  call void @llvm.dbg.value(metadata i32 %21, metadata !4940, metadata !DIExpression()), !dbg !5042
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5060
  ret i32 %21, !dbg !5061

22:                                               ; preds = %7
  %23 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5049, !tbaa !4948
  %24 = and i32 %23, 64, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %24, metadata !4941, metadata !DIExpression()), !dbg !5042
  %25 = load volatile i32, i32* %1, align 4, !dbg !5051, !tbaa !894
  %26 = add i32 %25, 1, !dbg !5051
  store volatile i32 %26, i32* %1, align 4, !dbg !5051, !tbaa !894
  %27 = load volatile i32, i32* %1, align 4, !dbg !5052, !tbaa !894
  %28 = icmp ne i32 %27, 65536, !dbg !5053
  %29 = icmp eq i32 %24, 0, !dbg !5054
  %30 = and i1 %29, %28, !dbg !5054
  br i1 %30, label %31, label %16, !dbg !5055, !llvm.loop !5056

31:                                               ; preds = %22
  %32 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5049, !tbaa !4948
  %33 = and i32 %32, 64, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %33, metadata !4941, metadata !DIExpression()), !dbg !5042
  %34 = load volatile i32, i32* %1, align 4, !dbg !5051, !tbaa !894
  %35 = add i32 %34, 1, !dbg !5051
  store volatile i32 %35, i32* %1, align 4, !dbg !5051, !tbaa !894
  %36 = load volatile i32, i32* %1, align 4, !dbg !5052, !tbaa !894
  %37 = icmp ne i32 %36, 65536, !dbg !5053
  %38 = icmp eq i32 %33, 0, !dbg !5054
  %39 = and i1 %38, %37, !dbg !5054
  br i1 %39, label %40, label %16, !dbg !5055, !llvm.loop !5056

40:                                               ; preds = %31
  %41 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5049, !tbaa !4948
  %42 = and i32 %41, 64, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %42, metadata !4941, metadata !DIExpression()), !dbg !5042
  %43 = load volatile i32, i32* %1, align 4, !dbg !5051, !tbaa !894
  %44 = add i32 %43, 1, !dbg !5051
  store volatile i32 %44, i32* %1, align 4, !dbg !5051, !tbaa !894
  %45 = load volatile i32, i32* %1, align 4, !dbg !5052, !tbaa !894
  %46 = icmp ne i32 %45, 65536, !dbg !5053
  %47 = icmp eq i32 %42, 0, !dbg !5054
  %48 = and i1 %47, %46, !dbg !5054
  br i1 %48, label %7, label %16, !dbg !5055, !llvm.loop !5056
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_WaitForSynchro() local_unnamed_addr #3 !dbg !5009 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5062
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5062
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5011, metadata !DIExpression()), !dbg !5063
  store volatile i32 0, i32* %1, align 4, !dbg !5063, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !5012, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()), !dbg !5064
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5065, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5066, !tbaa !4933
  %3 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5067, !tbaa !4948
  %4 = and i32 %3, -161, !dbg !5067
  store volatile i32 %4, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5067, !tbaa !4948
  br label %5, !dbg !5068

5:                                                ; preds = %36, %0
  %6 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5069, !tbaa !4948
  %7 = and i32 %6, 32, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %7, metadata !5013, metadata !DIExpression()), !dbg !5064
  %8 = load volatile i32, i32* %1, align 4, !dbg !5071, !tbaa !894
  %9 = add i32 %8, 1, !dbg !5071
  store volatile i32 %9, i32* %1, align 4, !dbg !5071, !tbaa !894
  %10 = load volatile i32, i32* %1, align 4, !dbg !5072, !tbaa !894
  %11 = icmp ne i32 %10, 131072, !dbg !5073
  %12 = icmp eq i32 %7, 0, !dbg !5074
  %13 = and i1 %12, %11, !dbg !5074
  br i1 %13, label %18, label %14, !dbg !5075, !llvm.loop !5076

14:                                               ; preds = %36, %27, %18, %5
  %15 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5078, !tbaa !4948
  %16 = lshr i32 %15, 5
  %17 = and i32 %16, 1
  call void @llvm.dbg.value(metadata i32 %17, metadata !5012, metadata !DIExpression()), !dbg !5064
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5079, !tbaa !4933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5080
  ret i32 %17, !dbg !5081

18:                                               ; preds = %5
  %19 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5069, !tbaa !4948
  %20 = and i32 %19, 32, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %20, metadata !5013, metadata !DIExpression()), !dbg !5064
  %21 = load volatile i32, i32* %1, align 4, !dbg !5071, !tbaa !894
  %22 = add i32 %21, 1, !dbg !5071
  store volatile i32 %22, i32* %1, align 4, !dbg !5071, !tbaa !894
  %23 = load volatile i32, i32* %1, align 4, !dbg !5072, !tbaa !894
  %24 = icmp ne i32 %23, 131072, !dbg !5073
  %25 = icmp eq i32 %20, 0, !dbg !5074
  %26 = and i1 %25, %24, !dbg !5074
  br i1 %26, label %27, label %14, !dbg !5075, !llvm.loop !5076

27:                                               ; preds = %18
  %28 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5069, !tbaa !4948
  %29 = and i32 %28, 32, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %29, metadata !5013, metadata !DIExpression()), !dbg !5064
  %30 = load volatile i32, i32* %1, align 4, !dbg !5071, !tbaa !894
  %31 = add i32 %30, 1, !dbg !5071
  store volatile i32 %31, i32* %1, align 4, !dbg !5071, !tbaa !894
  %32 = load volatile i32, i32* %1, align 4, !dbg !5072, !tbaa !894
  %33 = icmp ne i32 %32, 131072, !dbg !5073
  %34 = icmp eq i32 %29, 0, !dbg !5074
  %35 = and i1 %34, %33, !dbg !5074
  br i1 %35, label %36, label %14, !dbg !5075, !llvm.loop !5076

36:                                               ; preds = %27
  %37 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5069, !tbaa !4948
  %38 = and i32 %37, 32, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %38, metadata !5013, metadata !DIExpression()), !dbg !5064
  %39 = load volatile i32, i32* %1, align 4, !dbg !5071, !tbaa !894
  %40 = add i32 %39, 1, !dbg !5071
  store volatile i32 %40, i32* %1, align 4, !dbg !5071, !tbaa !894
  %41 = load volatile i32, i32* %1, align 4, !dbg !5072, !tbaa !894
  %42 = icmp ne i32 %41, 131072, !dbg !5073
  %43 = icmp eq i32 %38, 0, !dbg !5074
  %44 = and i1 %43, %42, !dbg !5074
  br i1 %44, label %5, label %14, !dbg !5075, !llvm.loop !5076
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_Init(%struct.RTC_InitTypeDef* nocapture readonly %0) local_unnamed_addr #3 !dbg !5082 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RTC_InitTypeDef* %0, metadata !5094, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 0, metadata !5095, metadata !DIExpression()), !dbg !5096
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5097, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5098, !tbaa !4933
  %3 = bitcast i32* %2 to i8*, !dbg !5099
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5099
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4939, metadata !DIExpression()) #6, !dbg !5102
  store volatile i32 0, i32* %2, align 4, !dbg !5102, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !4940, metadata !DIExpression()) #6, !dbg !5103
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()) #6, !dbg !5103
  %4 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5104, !tbaa !4948
  %5 = and i32 %4, 64, !dbg !5105
  %6 = icmp eq i32 %5, 0, !dbg !5106
  br i1 %6, label %8, label %7, !dbg !5107

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %19, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5108
  br label %22, !dbg !5109

8:                                                ; preds = %1
  store volatile i32 -1, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5110, !tbaa !4948
  br label %9, !dbg !5111

9:                                                ; preds = %58, %8
  %10 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5112, !tbaa !4948
  %11 = and i32 %10, 64, !dbg !5113
  call void @llvm.dbg.value(metadata i32 %11, metadata !4941, metadata !DIExpression()) #6, !dbg !5103
  %12 = load volatile i32, i32* %2, align 4, !dbg !5114, !tbaa !894
  %13 = add i32 %12, 1, !dbg !5114
  store volatile i32 %13, i32* %2, align 4, !dbg !5114, !tbaa !894
  %14 = load volatile i32, i32* %2, align 4, !dbg !5115, !tbaa !894
  %15 = icmp ne i32 %14, 65536, !dbg !5116
  %16 = icmp eq i32 %11, 0, !dbg !5117
  %17 = and i1 %16, %15, !dbg !5117
  br i1 %17, label %40, label %18, !dbg !5118, !llvm.loop !5119

18:                                               ; preds = %58, %49, %40, %9
  %19 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5121, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %19, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5108
  %20 = and i32 %19, 64, !dbg !5122
  %21 = icmp eq i32 %20, 0, !dbg !5122
  br i1 %21, label %38, label %22, !dbg !5109

22:                                               ; preds = %7, %18
  %23 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5123, !tbaa !4976
  %24 = and i32 %23, -65, !dbg !5123
  store volatile i32 %24, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5123, !tbaa !4976
  %25 = getelementptr inbounds %struct.RTC_InitTypeDef, %struct.RTC_InitTypeDef* %0, i32 0, i32 0, !dbg !5125
  %26 = load i32, i32* %25, align 4, !dbg !5125, !tbaa !2767
  %27 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5126, !tbaa !4976
  %28 = or i32 %27, %26, !dbg !5126
  store volatile i32 %28, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5126, !tbaa !4976
  %29 = getelementptr inbounds %struct.RTC_InitTypeDef, %struct.RTC_InitTypeDef* %0, i32 0, i32 2, !dbg !5127
  %30 = load i32, i32* %29, align 4, !dbg !5127, !tbaa !2772
  store volatile i32 %30, i32* inttoptr (i32 1073752080 to i32*), align 16, !dbg !5128, !tbaa !4998
  %31 = getelementptr inbounds %struct.RTC_InitTypeDef, %struct.RTC_InitTypeDef* %0, i32 0, i32 1, !dbg !5129
  %32 = load i32, i32* %31, align 4, !dbg !5129, !tbaa !2165
  %33 = shl i32 %32, 16, !dbg !5130
  %34 = load volatile i32, i32* inttoptr (i32 1073752080 to i32*), align 16, !dbg !5131, !tbaa !4998
  %35 = or i32 %34, %33, !dbg !5131
  store volatile i32 %35, i32* inttoptr (i32 1073752080 to i32*), align 16, !dbg !5131, !tbaa !4998
  %36 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5132, !tbaa !4948
  %37 = and i32 %36, -129, !dbg !5132
  store volatile i32 %37, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5132, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 1, metadata !5095, metadata !DIExpression()), !dbg !5096
  br label %38

38:                                               ; preds = %18, %22
  %39 = phi i32 [ 1, %22 ], [ 0, %18 ], !dbg !5135
  call void @llvm.dbg.value(metadata i32 %39, metadata !5095, metadata !DIExpression()), !dbg !5096
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5136, !tbaa !4933
  ret i32 %39, !dbg !5137

40:                                               ; preds = %9
  %41 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5112, !tbaa !4948
  %42 = and i32 %41, 64, !dbg !5113
  call void @llvm.dbg.value(metadata i32 %42, metadata !4941, metadata !DIExpression()) #6, !dbg !5103
  %43 = load volatile i32, i32* %2, align 4, !dbg !5114, !tbaa !894
  %44 = add i32 %43, 1, !dbg !5114
  store volatile i32 %44, i32* %2, align 4, !dbg !5114, !tbaa !894
  %45 = load volatile i32, i32* %2, align 4, !dbg !5115, !tbaa !894
  %46 = icmp ne i32 %45, 65536, !dbg !5116
  %47 = icmp eq i32 %42, 0, !dbg !5117
  %48 = and i1 %47, %46, !dbg !5117
  br i1 %48, label %49, label %18, !dbg !5118, !llvm.loop !5119

49:                                               ; preds = %40
  %50 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5112, !tbaa !4948
  %51 = and i32 %50, 64, !dbg !5113
  call void @llvm.dbg.value(metadata i32 %51, metadata !4941, metadata !DIExpression()) #6, !dbg !5103
  %52 = load volatile i32, i32* %2, align 4, !dbg !5114, !tbaa !894
  %53 = add i32 %52, 1, !dbg !5114
  store volatile i32 %53, i32* %2, align 4, !dbg !5114, !tbaa !894
  %54 = load volatile i32, i32* %2, align 4, !dbg !5115, !tbaa !894
  %55 = icmp ne i32 %54, 65536, !dbg !5116
  %56 = icmp eq i32 %51, 0, !dbg !5117
  %57 = and i1 %56, %55, !dbg !5117
  br i1 %57, label %58, label %18, !dbg !5118, !llvm.loop !5119

58:                                               ; preds = %49
  %59 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5112, !tbaa !4948
  %60 = and i32 %59, 64, !dbg !5113
  call void @llvm.dbg.value(metadata i32 %60, metadata !4941, metadata !DIExpression()) #6, !dbg !5103
  %61 = load volatile i32, i32* %2, align 4, !dbg !5114, !tbaa !894
  %62 = add i32 %61, 1, !dbg !5114
  store volatile i32 %62, i32* %2, align 4, !dbg !5114, !tbaa !894
  %63 = load volatile i32, i32* %2, align 4, !dbg !5115, !tbaa !894
  %64 = icmp ne i32 %63, 65536, !dbg !5116
  %65 = icmp eq i32 %60, 0, !dbg !5117
  %66 = and i1 %65, %64, !dbg !5117
  br i1 %66, label %9, label %18, !dbg !5118, !llvm.loop !5119
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_ExitInitMode() local_unnamed_addr #0 !dbg !5133 {
  %1 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5138, !tbaa !4948
  %2 = and i32 %1, -129, !dbg !5138
  store volatile i32 %2, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5138, !tbaa !4948
  ret void, !dbg !5139
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @RTC_StructInit(%struct.RTC_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !5140 {
  call void @llvm.dbg.value(metadata %struct.RTC_InitTypeDef* %0, metadata !5144, metadata !DIExpression()), !dbg !5145
  %2 = getelementptr inbounds %struct.RTC_InitTypeDef, %struct.RTC_InitTypeDef* %0, i32 0, i32 0, !dbg !5146
  store i32 0, i32* %2, align 4, !dbg !5147, !tbaa !2767
  %3 = getelementptr inbounds %struct.RTC_InitTypeDef, %struct.RTC_InitTypeDef* %0, i32 0, i32 1, !dbg !5148
  store i32 127, i32* %3, align 4, !dbg !5149, !tbaa !2165
  %4 = getelementptr inbounds %struct.RTC_InitTypeDef, %struct.RTC_InitTypeDef* %0, i32 0, i32 2, !dbg !5150
  store i32 255, i32* %4, align 4, !dbg !5151, !tbaa !2772
  ret void, !dbg !5152
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_WriteProtectionCmd(i32 %0) local_unnamed_addr #0 !dbg !5153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5155, metadata !DIExpression()), !dbg !5156
  %2 = icmp eq i32 %0, 0, !dbg !5157
  br i1 %2, label %3, label %4, !dbg !5159

3:                                                ; preds = %1
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5160, !tbaa !4933
  br label %4

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 83, %3 ], [ 255, %1 ]
  store volatile i32 %5, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5162, !tbaa !4933
  ret void, !dbg !5163
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_RefClockCmd(i32 %0) local_unnamed_addr #3 !dbg !5164 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5168, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i32 0, metadata !5169, metadata !DIExpression()), !dbg !5170
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5171, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5172, !tbaa !4933
  %3 = bitcast i32* %2 to i8*, !dbg !5173
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5173
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4939, metadata !DIExpression()) #6, !dbg !5176
  store volatile i32 0, i32* %2, align 4, !dbg !5176, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !4940, metadata !DIExpression()) #6, !dbg !5177
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()) #6, !dbg !5177
  %4 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5178, !tbaa !4948
  %5 = and i32 %4, 64, !dbg !5179
  %6 = icmp eq i32 %5, 0, !dbg !5180
  br i1 %6, label %8, label %7, !dbg !5181

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %19, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5177
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5182
  br label %22, !dbg !5183

8:                                                ; preds = %1
  store volatile i32 -1, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5184, !tbaa !4948
  br label %9, !dbg !5185

9:                                                ; preds = %50, %8
  %10 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5186, !tbaa !4948
  %11 = and i32 %10, 64, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %11, metadata !4941, metadata !DIExpression()) #6, !dbg !5177
  %12 = load volatile i32, i32* %2, align 4, !dbg !5188, !tbaa !894
  %13 = add i32 %12, 1, !dbg !5188
  store volatile i32 %13, i32* %2, align 4, !dbg !5188, !tbaa !894
  %14 = load volatile i32, i32* %2, align 4, !dbg !5189, !tbaa !894
  %15 = icmp ne i32 %14, 65536, !dbg !5190
  %16 = icmp eq i32 %11, 0, !dbg !5191
  %17 = and i1 %16, %15, !dbg !5191
  br i1 %17, label %32, label %18, !dbg !5192, !llvm.loop !5193

18:                                               ; preds = %50, %41, %32, %9
  %19 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5195, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %19, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5177
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5182
  %20 = and i32 %19, 64, !dbg !5196
  %21 = icmp eq i32 %20, 0, !dbg !5196
  br i1 %21, label %30, label %22, !dbg !5183

22:                                               ; preds = %7, %18
  %23 = icmp eq i32 %0, 0, !dbg !5197
  %24 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5200, !tbaa !4976
  %25 = and i32 %24, -17, !dbg !5201
  %26 = select i1 %23, i32 0, i32 16, !dbg !5201
  %27 = or i32 %25, %26, !dbg !5201
  store volatile i32 %27, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5200, !tbaa !4976
  %28 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5202, !tbaa !4948
  %29 = and i32 %28, -129, !dbg !5202
  store volatile i32 %29, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5202, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 1, metadata !5169, metadata !DIExpression()), !dbg !5170
  br label %30

30:                                               ; preds = %18, %22
  %31 = phi i32 [ 1, %22 ], [ 0, %18 ], !dbg !5204
  call void @llvm.dbg.value(metadata i32 %31, metadata !5169, metadata !DIExpression()), !dbg !5170
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5205, !tbaa !4933
  ret i32 %31, !dbg !5206

32:                                               ; preds = %9
  %33 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5186, !tbaa !4948
  %34 = and i32 %33, 64, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %34, metadata !4941, metadata !DIExpression()) #6, !dbg !5177
  %35 = load volatile i32, i32* %2, align 4, !dbg !5188, !tbaa !894
  %36 = add i32 %35, 1, !dbg !5188
  store volatile i32 %36, i32* %2, align 4, !dbg !5188, !tbaa !894
  %37 = load volatile i32, i32* %2, align 4, !dbg !5189, !tbaa !894
  %38 = icmp ne i32 %37, 65536, !dbg !5190
  %39 = icmp eq i32 %34, 0, !dbg !5191
  %40 = and i1 %39, %38, !dbg !5191
  br i1 %40, label %41, label %18, !dbg !5192, !llvm.loop !5193

41:                                               ; preds = %32
  %42 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5186, !tbaa !4948
  %43 = and i32 %42, 64, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %43, metadata !4941, metadata !DIExpression()) #6, !dbg !5177
  %44 = load volatile i32, i32* %2, align 4, !dbg !5188, !tbaa !894
  %45 = add i32 %44, 1, !dbg !5188
  store volatile i32 %45, i32* %2, align 4, !dbg !5188, !tbaa !894
  %46 = load volatile i32, i32* %2, align 4, !dbg !5189, !tbaa !894
  %47 = icmp ne i32 %46, 65536, !dbg !5190
  %48 = icmp eq i32 %43, 0, !dbg !5191
  %49 = and i1 %48, %47, !dbg !5191
  br i1 %49, label %50, label %18, !dbg !5192, !llvm.loop !5193

50:                                               ; preds = %41
  %51 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5186, !tbaa !4948
  %52 = and i32 %51, 64, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %52, metadata !4941, metadata !DIExpression()) #6, !dbg !5177
  %53 = load volatile i32, i32* %2, align 4, !dbg !5188, !tbaa !894
  %54 = add i32 %53, 1, !dbg !5188
  store volatile i32 %54, i32* %2, align 4, !dbg !5188, !tbaa !894
  %55 = load volatile i32, i32* %2, align 4, !dbg !5189, !tbaa !894
  %56 = icmp ne i32 %55, 65536, !dbg !5190
  %57 = icmp eq i32 %52, 0, !dbg !5191
  %58 = and i1 %57, %56, !dbg !5191
  br i1 %58, label %9, label %18, !dbg !5192, !llvm.loop !5193
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_BypassShadowCmd(i32 %0) local_unnamed_addr #0 !dbg !5207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5209, metadata !DIExpression()), !dbg !5210
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5211, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5212, !tbaa !4933
  %2 = icmp eq i32 %0, 0, !dbg !5213
  %3 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5215, !tbaa !4976
  %4 = and i32 %3, 223, !dbg !5216
  %5 = or i32 %3, 32, !dbg !5216
  %6 = select i1 %2, i32 %4, i32 %5, !dbg !5216
  store volatile i32 %6, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5215, !tbaa !4976
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5217, !tbaa !4933
  ret void, !dbg !5218
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_SetTime(i32 %0, %struct.RTC_TimeTypeDef* nocapture %1) local_unnamed_addr #3 !dbg !5219 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5231, metadata !DIExpression()), !dbg !5235
  call void @llvm.dbg.value(metadata %struct.RTC_TimeTypeDef* %1, metadata !5232, metadata !DIExpression()), !dbg !5235
  call void @llvm.dbg.value(metadata i32 0, metadata !5233, metadata !DIExpression()), !dbg !5235
  call void @llvm.dbg.value(metadata i32 0, metadata !5234, metadata !DIExpression()), !dbg !5235
  %5 = icmp eq i32 %0, 0, !dbg !5236
  %6 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5238, !tbaa !4976
  %7 = and i32 %6, 64, !dbg !5238
  %8 = icmp eq i32 %7, 0, !dbg !5238
  br i1 %5, label %9, label %12, !dbg !5239

9:                                                ; preds = %2
  br i1 %8, label %10, label %35, !dbg !5240

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 3, !dbg !5242
  store i8 0, i8* %11, align 1, !dbg !5245, !tbaa !5246
  br label %35

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 3, !dbg !5235
  br i1 %8, label %18, label %14, !dbg !5248

14:                                               ; preds = %12
  %15 = load i8, i8* %13, align 1, !dbg !5250, !tbaa !5246
  %16 = zext i8 %15 to i32, !dbg !5248
  %17 = shl nuw nsw i32 %16, 16, !dbg !5248
  br label %19, !dbg !5248

18:                                               ; preds = %12
  store i8 0, i8* %13, align 1, !dbg !5253, !tbaa !5246
  br label %19

19:                                               ; preds = %14, %18
  %20 = phi i32 [ %17, %14 ], [ 0, %18 ]
  %21 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 0, !dbg !5256
  %22 = load i8, i8* %21, align 1, !dbg !5256, !tbaa !5257
  %23 = zext i8 %22 to i32, !dbg !5258
  %24 = shl nuw nsw i32 %23, 16, !dbg !5259
  %25 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 1, !dbg !5260
  %26 = load i8, i8* %25, align 1, !dbg !5260, !tbaa !5261
  %27 = zext i8 %26 to i32, !dbg !5262
  %28 = shl nuw nsw i32 %27, 8, !dbg !5263
  %29 = or i32 %28, %24, !dbg !5264
  %30 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 2, !dbg !5265
  %31 = load i8, i8* %30, align 1, !dbg !5265, !tbaa !5266
  %32 = zext i8 %31 to i32, !dbg !5267
  %33 = or i32 %29, %32, !dbg !5268
  %34 = or i32 %33, %20, !dbg !5269
  call void @llvm.dbg.value(metadata i32 %34, metadata !5233, metadata !DIExpression()), !dbg !5235
  br label %90, !dbg !5270

35:                                               ; preds = %9, %10
  %36 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 0, !dbg !5256
  %37 = load i8, i8* %36, align 1, !dbg !5256, !tbaa !5257
  call void @llvm.dbg.value(metadata i8 %22, metadata !5271, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5277
  %38 = icmp ugt i8 %37, 9, !dbg !5280
  br i1 %38, label %39, label %46, !dbg !5281

39:                                               ; preds = %35
  %40 = add i8 %37, -10, !dbg !5281
  %41 = udiv i8 %40, 10, !dbg !5281
  %42 = mul i8 %41, -10, !dbg !5281
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5277
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5277
  %43 = add i8 %42, %40, !dbg !5281
  %44 = shl i8 %41, 4, !dbg !5282
  %45 = add i8 %44, 16, !dbg !5282
  br label %46, !dbg !5282

46:                                               ; preds = %35, %39
  %47 = phi i8 [ %37, %35 ], [ %43, %39 ]
  %48 = phi i8 [ 0, %35 ], [ %45, %39 ]
  call void @llvm.dbg.value(metadata i8 %47, metadata !5271, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5277
  %49 = or i8 %48, %47, !dbg !5283
  %50 = zext i8 %49 to i32, !dbg !5284
  %51 = shl nuw nsw i32 %50, 16, !dbg !5285
  %52 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 1, !dbg !5286
  %53 = load i8, i8* %52, align 1, !dbg !5286, !tbaa !5261
  call void @llvm.dbg.value(metadata i8 %53, metadata !5271, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5287
  %54 = icmp ugt i8 %53, 9, !dbg !5289
  br i1 %54, label %55, label %62, !dbg !5290

55:                                               ; preds = %46
  %56 = add i8 %53, -10, !dbg !5290
  %57 = udiv i8 %56, 10, !dbg !5290
  %58 = mul i8 %57, -10, !dbg !5290
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5287
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5287
  %59 = add i8 %58, %56, !dbg !5290
  %60 = shl i8 %57, 4, !dbg !5291
  %61 = add i8 %60, 16, !dbg !5291
  br label %62, !dbg !5291

62:                                               ; preds = %46, %55
  %63 = phi i8 [ %53, %46 ], [ %59, %55 ]
  %64 = phi i8 [ 0, %46 ], [ %61, %55 ]
  call void @llvm.dbg.value(metadata i8 %63, metadata !5271, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5287
  %65 = or i8 %64, %63, !dbg !5292
  %66 = zext i8 %65 to i32, !dbg !5293
  %67 = shl nuw nsw i32 %66, 8, !dbg !5294
  %68 = or i32 %67, %51, !dbg !5295
  %69 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 2, !dbg !5296
  %70 = load i8, i8* %69, align 1, !dbg !5296, !tbaa !5266
  call void @llvm.dbg.value(metadata i8 %70, metadata !5271, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5297
  %71 = icmp ugt i8 %70, 9, !dbg !5299
  br i1 %71, label %72, label %79, !dbg !5300

72:                                               ; preds = %62
  %73 = add i8 %70, -10, !dbg !5300
  %74 = udiv i8 %73, 10, !dbg !5300
  %75 = mul i8 %74, -10, !dbg !5300
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5297
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5297
  %76 = add i8 %75, %73, !dbg !5300
  %77 = shl i8 %74, 4, !dbg !5301
  %78 = add i8 %77, 16, !dbg !5301
  br label %79, !dbg !5301

79:                                               ; preds = %62, %72
  %80 = phi i8 [ %70, %62 ], [ %76, %72 ]
  %81 = phi i8 [ 0, %62 ], [ %78, %72 ]
  call void @llvm.dbg.value(metadata i8 %80, metadata !5271, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5297
  %82 = or i8 %81, %80, !dbg !5302
  %83 = zext i8 %82 to i32, !dbg !5303
  %84 = or i32 %68, %83, !dbg !5304
  %85 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 3, !dbg !5305
  %86 = load i8, i8* %85, align 1, !dbg !5305, !tbaa !5246
  %87 = zext i8 %86 to i32, !dbg !5306
  %88 = shl nuw nsw i32 %87, 16, !dbg !5307
  %89 = or i32 %84, %88, !dbg !5308
  call void @llvm.dbg.value(metadata i32 %89, metadata !5233, metadata !DIExpression()), !dbg !5235
  br label %90

90:                                               ; preds = %79, %19
  %91 = phi i32 [ %34, %19 ], [ %89, %79 ], !dbg !5256
  call void @llvm.dbg.value(metadata i32 %91, metadata !5233, metadata !DIExpression()), !dbg !5235
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5309, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5310, !tbaa !4933
  %92 = bitcast i32* %3 to i8*, !dbg !5311
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92), !dbg !5311
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4939, metadata !DIExpression()) #6, !dbg !5314
  store volatile i32 0, i32* %3, align 4, !dbg !5314, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !4940, metadata !DIExpression()) #6, !dbg !5315
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()) #6, !dbg !5315
  %93 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5316, !tbaa !4948
  %94 = and i32 %93, 64, !dbg !5317
  %95 = icmp eq i32 %94, 0, !dbg !5318
  br i1 %95, label %97, label %96, !dbg !5319

96:                                               ; preds = %90
  call void @llvm.dbg.value(metadata i32 %108, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5315
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92), !dbg !5320
  br label %111, !dbg !5321

97:                                               ; preds = %90
  store volatile i32 -1, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5322, !tbaa !4948
  br label %98, !dbg !5323

98:                                               ; preds = %178, %97
  %99 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5324, !tbaa !4948
  %100 = and i32 %99, 64, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %100, metadata !4941, metadata !DIExpression()) #6, !dbg !5315
  %101 = load volatile i32, i32* %3, align 4, !dbg !5326, !tbaa !894
  %102 = add i32 %101, 1, !dbg !5326
  store volatile i32 %102, i32* %3, align 4, !dbg !5326, !tbaa !894
  %103 = load volatile i32, i32* %3, align 4, !dbg !5327, !tbaa !894
  %104 = icmp ne i32 %103, 65536, !dbg !5328
  %105 = icmp eq i32 %100, 0, !dbg !5329
  %106 = and i1 %105, %104, !dbg !5329
  br i1 %106, label %160, label %107, !dbg !5330, !llvm.loop !5331

107:                                              ; preds = %178, %169, %160, %98
  %108 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5333, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %108, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5315
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92), !dbg !5320
  %109 = and i32 %108, 64, !dbg !5334
  %110 = icmp eq i32 %109, 0, !dbg !5334
  br i1 %110, label %131, label %111, !dbg !5321

111:                                              ; preds = %96, %107
  %112 = and i32 %91, 8355711, !dbg !5335
  store volatile i32 %112, i32* inttoptr (i32 1073752064 to i32*), align 2048, !dbg !5337, !tbaa !4972
  %113 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5338, !tbaa !4948
  %114 = and i32 %113, -129, !dbg !5338
  store volatile i32 %114, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5338, !tbaa !4948
  %115 = bitcast i32* %4 to i8*, !dbg !5340
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115), !dbg !5340
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5011, metadata !DIExpression()) #6, !dbg !5343
  store volatile i32 0, i32* %4, align 4, !dbg !5343, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !5012, metadata !DIExpression()) #6, !dbg !5344
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()) #6, !dbg !5344
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5345, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5346, !tbaa !4933
  %116 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5347, !tbaa !4948
  %117 = and i32 %116, -161, !dbg !5347
  store volatile i32 %117, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5347, !tbaa !4948
  br label %118, !dbg !5348

118:                                              ; preds = %151, %111
  %119 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5349, !tbaa !4948
  %120 = and i32 %119, 32, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %120, metadata !5013, metadata !DIExpression()) #6, !dbg !5344
  %121 = load volatile i32, i32* %4, align 4, !dbg !5351, !tbaa !894
  %122 = add i32 %121, 1, !dbg !5351
  store volatile i32 %122, i32* %4, align 4, !dbg !5351, !tbaa !894
  %123 = load volatile i32, i32* %4, align 4, !dbg !5352, !tbaa !894
  %124 = icmp ne i32 %123, 131072, !dbg !5353
  %125 = icmp eq i32 %120, 0, !dbg !5354
  %126 = and i1 %125, %124, !dbg !5354
  br i1 %126, label %133, label %127, !dbg !5355, !llvm.loop !5356

127:                                              ; preds = %151, %142, %133, %118
  %128 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5358, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %128, metadata !5012, metadata !DIExpression(DW_OP_constu, 5, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5344
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5359, !tbaa !4933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115), !dbg !5360
  %129 = lshr i32 %128, 5
  %130 = and i32 %129, 1
  br label %131

131:                                              ; preds = %127, %107
  %132 = phi i32 [ 0, %107 ], [ %130, %127 ], !dbg !5361
  call void @llvm.dbg.value(metadata i32 %132, metadata !5234, metadata !DIExpression()), !dbg !5235
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5362, !tbaa !4933
  ret i32 %132, !dbg !5363

133:                                              ; preds = %118
  %134 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5349, !tbaa !4948
  %135 = and i32 %134, 32, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %135, metadata !5013, metadata !DIExpression()) #6, !dbg !5344
  %136 = load volatile i32, i32* %4, align 4, !dbg !5351, !tbaa !894
  %137 = add i32 %136, 1, !dbg !5351
  store volatile i32 %137, i32* %4, align 4, !dbg !5351, !tbaa !894
  %138 = load volatile i32, i32* %4, align 4, !dbg !5352, !tbaa !894
  %139 = icmp ne i32 %138, 131072, !dbg !5353
  %140 = icmp eq i32 %135, 0, !dbg !5354
  %141 = and i1 %140, %139, !dbg !5354
  br i1 %141, label %142, label %127, !dbg !5355, !llvm.loop !5356

142:                                              ; preds = %133
  %143 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5349, !tbaa !4948
  %144 = and i32 %143, 32, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %144, metadata !5013, metadata !DIExpression()) #6, !dbg !5344
  %145 = load volatile i32, i32* %4, align 4, !dbg !5351, !tbaa !894
  %146 = add i32 %145, 1, !dbg !5351
  store volatile i32 %146, i32* %4, align 4, !dbg !5351, !tbaa !894
  %147 = load volatile i32, i32* %4, align 4, !dbg !5352, !tbaa !894
  %148 = icmp ne i32 %147, 131072, !dbg !5353
  %149 = icmp eq i32 %144, 0, !dbg !5354
  %150 = and i1 %149, %148, !dbg !5354
  br i1 %150, label %151, label %127, !dbg !5355, !llvm.loop !5356

151:                                              ; preds = %142
  %152 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5349, !tbaa !4948
  %153 = and i32 %152, 32, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %153, metadata !5013, metadata !DIExpression()) #6, !dbg !5344
  %154 = load volatile i32, i32* %4, align 4, !dbg !5351, !tbaa !894
  %155 = add i32 %154, 1, !dbg !5351
  store volatile i32 %155, i32* %4, align 4, !dbg !5351, !tbaa !894
  %156 = load volatile i32, i32* %4, align 4, !dbg !5352, !tbaa !894
  %157 = icmp ne i32 %156, 131072, !dbg !5353
  %158 = icmp eq i32 %153, 0, !dbg !5354
  %159 = and i1 %158, %157, !dbg !5354
  br i1 %159, label %118, label %127, !dbg !5355, !llvm.loop !5356

160:                                              ; preds = %98
  %161 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5324, !tbaa !4948
  %162 = and i32 %161, 64, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %162, metadata !4941, metadata !DIExpression()) #6, !dbg !5315
  %163 = load volatile i32, i32* %3, align 4, !dbg !5326, !tbaa !894
  %164 = add i32 %163, 1, !dbg !5326
  store volatile i32 %164, i32* %3, align 4, !dbg !5326, !tbaa !894
  %165 = load volatile i32, i32* %3, align 4, !dbg !5327, !tbaa !894
  %166 = icmp ne i32 %165, 65536, !dbg !5328
  %167 = icmp eq i32 %162, 0, !dbg !5329
  %168 = and i1 %167, %166, !dbg !5329
  br i1 %168, label %169, label %107, !dbg !5330, !llvm.loop !5331

169:                                              ; preds = %160
  %170 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5324, !tbaa !4948
  %171 = and i32 %170, 64, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %171, metadata !4941, metadata !DIExpression()) #6, !dbg !5315
  %172 = load volatile i32, i32* %3, align 4, !dbg !5326, !tbaa !894
  %173 = add i32 %172, 1, !dbg !5326
  store volatile i32 %173, i32* %3, align 4, !dbg !5326, !tbaa !894
  %174 = load volatile i32, i32* %3, align 4, !dbg !5327, !tbaa !894
  %175 = icmp ne i32 %174, 65536, !dbg !5328
  %176 = icmp eq i32 %171, 0, !dbg !5329
  %177 = and i1 %176, %175, !dbg !5329
  br i1 %177, label %178, label %107, !dbg !5330, !llvm.loop !5331

178:                                              ; preds = %169
  %179 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5324, !tbaa !4948
  %180 = and i32 %179, 64, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %180, metadata !4941, metadata !DIExpression()) #6, !dbg !5315
  %181 = load volatile i32, i32* %3, align 4, !dbg !5326, !tbaa !894
  %182 = add i32 %181, 1, !dbg !5326
  store volatile i32 %182, i32* %3, align 4, !dbg !5326, !tbaa !894
  %183 = load volatile i32, i32* %3, align 4, !dbg !5327, !tbaa !894
  %184 = icmp ne i32 %183, 65536, !dbg !5328
  %185 = icmp eq i32 %180, 0, !dbg !5329
  %186 = and i1 %185, %184, !dbg !5329
  br i1 %186, label %98, label %107, !dbg !5330, !llvm.loop !5331
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @RTC_TimeStructInit(%struct.RTC_TimeTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !5364 {
  call void @llvm.dbg.value(metadata %struct.RTC_TimeTypeDef* %0, metadata !5368, metadata !DIExpression()), !dbg !5369
  %2 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 3, !dbg !5370
  store i8 0, i8* %2, align 1, !dbg !5371, !tbaa !5246
  %3 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 0, !dbg !5372
  store i8 0, i8* %3, align 1, !dbg !5373, !tbaa !5257
  %4 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 1, !dbg !5374
  store i8 0, i8* %4, align 1, !dbg !5375, !tbaa !5261
  %5 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 2, !dbg !5376
  store i8 0, i8* %5, align 1, !dbg !5377, !tbaa !5266
  ret void, !dbg !5378
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_GetTime(i32 %0, %struct.RTC_TimeTypeDef* nocapture %1) local_unnamed_addr #0 !dbg !5379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5383, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata %struct.RTC_TimeTypeDef* %1, metadata !5384, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i32 0, metadata !5385, metadata !DIExpression()), !dbg !5386
  %3 = load volatile i32, i32* inttoptr (i32 1073752064 to i32*), align 2048, !dbg !5387, !tbaa !4972
  call void @llvm.dbg.value(metadata i32 %3, metadata !5385, metadata !DIExpression(DW_OP_constu, 8355711, DW_OP_and, DW_OP_stack_value)), !dbg !5386
  %4 = lshr i32 %3, 16, !dbg !5388
  %5 = trunc i32 %4 to i8, !dbg !5389
  %6 = and i8 %5, 63, !dbg !5389
  %7 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 0, !dbg !5390
  store i8 %6, i8* %7, align 1, !dbg !5391, !tbaa !5257
  %8 = lshr i32 %3, 8, !dbg !5392
  %9 = trunc i32 %8 to i8, !dbg !5393
  %10 = and i8 %9, 127, !dbg !5393
  %11 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 1, !dbg !5394
  store i8 %10, i8* %11, align 1, !dbg !5395, !tbaa !5261
  %12 = trunc i32 %3 to i8, !dbg !5396
  %13 = and i8 %12, 127, !dbg !5396
  %14 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 2, !dbg !5397
  store i8 %13, i8* %14, align 1, !dbg !5398, !tbaa !5266
  %15 = and i8 %5, 64, !dbg !5399
  %16 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 3, !dbg !5400
  store i8 %15, i8* %16, align 1, !dbg !5401, !tbaa !5246
  %17 = icmp eq i32 %0, 0, !dbg !5402
  br i1 %17, label %18, label %31, !dbg !5404

18:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8 %6, metadata !5405, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5409
  %19 = lshr i8 %6, 4, !dbg !5412
  %20 = mul nuw nsw i8 %19, 10, !dbg !5413
  call void @llvm.dbg.value(metadata i8 %20, metadata !5408, metadata !DIExpression()), !dbg !5409
  %21 = and i8 %5, 15, !dbg !5414
  %22 = add nuw nsw i8 %20, %21, !dbg !5415
  store i8 %22, i8* %7, align 1, !dbg !5416, !tbaa !5257
  call void @llvm.dbg.value(metadata i8 %10, metadata !5405, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5417
  %23 = lshr i8 %10, 4, !dbg !5419
  %24 = mul nuw nsw i8 %23, 10, !dbg !5420
  call void @llvm.dbg.value(metadata i8 %24, metadata !5408, metadata !DIExpression()), !dbg !5417
  %25 = and i8 %9, 15, !dbg !5421
  %26 = add nuw nsw i8 %24, %25, !dbg !5422
  store i8 %26, i8* %11, align 1, !dbg !5423, !tbaa !5261
  call void @llvm.dbg.value(metadata i8 %13, metadata !5405, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5424
  %27 = lshr i8 %13, 4, !dbg !5426
  %28 = mul nuw nsw i8 %27, 10, !dbg !5427
  call void @llvm.dbg.value(metadata i8 %28, metadata !5408, metadata !DIExpression()), !dbg !5424
  %29 = and i8 %12, 15, !dbg !5428
  %30 = add nuw nsw i8 %28, %29, !dbg !5429
  store i8 %30, i8* %14, align 1, !dbg !5430, !tbaa !5266
  br label %31, !dbg !5431

31:                                               ; preds = %18, %2
  ret void, !dbg !5432
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_GetSubSecond() local_unnamed_addr #0 !dbg !5433 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5435, metadata !DIExpression()), !dbg !5436
  %1 = load volatile i32, i32* inttoptr (i32 1073752104 to i32*), align 8, !dbg !5437, !tbaa !5438
  call void @llvm.dbg.value(metadata i32 %1, metadata !5435, metadata !DIExpression()), !dbg !5436
  %2 = load volatile i32, i32* inttoptr (i32 1073752068 to i32*), align 4, !dbg !5439, !tbaa !4974
  ret i32 %1, !dbg !5440
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_SetDate(i32 %0, %struct.RTC_TimeTypeDef* nocapture %1) local_unnamed_addr #3 !dbg !5441 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5453, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata %struct.RTC_TimeTypeDef* %1, metadata !5454, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i32 0, metadata !5455, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i32 0, metadata !5456, metadata !DIExpression()), !dbg !5457
  %5 = icmp eq i32 %0, 0, !dbg !5458
  %6 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 1, !dbg !5457
  br i1 %5, label %7, label %14, !dbg !5460

7:                                                ; preds = %2
  %8 = load i8, i8* %6, align 1, !dbg !5461, !tbaa !5261
  %9 = and i8 %8, 16, !dbg !5462
  %10 = icmp eq i8 %9, 0, !dbg !5463
  br i1 %10, label %25, label %11, !dbg !5464

11:                                               ; preds = %7
  %12 = and i8 %8, -17, !dbg !5465
  %13 = add nuw nsw i8 %12, 10, !dbg !5467
  store i8 %13, i8* %6, align 1, !dbg !5468, !tbaa !5261
  br label %25, !dbg !5469

14:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8 undef, metadata !5455, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5457
  %15 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 3, !dbg !5470
  %16 = load i8, i8* %15, align 1, !dbg !5470, !tbaa !5246
  %17 = zext i8 %16 to i32, !dbg !5472
  %18 = shl nuw nsw i32 %17, 16, !dbg !5474
  %19 = load i8, i8* %6, align 1, !dbg !5475, !tbaa !5261
  %20 = zext i8 %19 to i32, !dbg !5476
  %21 = shl nuw nsw i32 %20, 8, !dbg !5477
  %22 = or i32 %21, %18, !dbg !5478
  %23 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 2, !dbg !5479
  %24 = load i8, i8* %23, align 1, !dbg !5479, !tbaa !5266
  call void @llvm.dbg.value(metadata i32 undef, metadata !5455, metadata !DIExpression()), !dbg !5457
  br label %72, !dbg !5480

25:                                               ; preds = %11, %7
  %26 = phi i8 [ %13, %11 ], [ %8, %7 ]
  %27 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 3, !dbg !5470
  %28 = load i8, i8* %27, align 1, !dbg !5470, !tbaa !5246
  call void @llvm.dbg.value(metadata i8 %16, metadata !5271, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5481
  %29 = icmp ugt i8 %28, 9, !dbg !5484
  br i1 %29, label %30, label %37, !dbg !5485

30:                                               ; preds = %25
  %31 = add i8 %28, -10, !dbg !5485
  %32 = udiv i8 %31, 10, !dbg !5485
  %33 = mul i8 %32, -10, !dbg !5485
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5481
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5481
  %34 = add i8 %33, %31, !dbg !5485
  %35 = shl i8 %32, 4, !dbg !5486
  %36 = add i8 %35, 16, !dbg !5486
  br label %37, !dbg !5486

37:                                               ; preds = %25, %30
  %38 = phi i8 [ %28, %25 ], [ %34, %30 ]
  %39 = phi i8 [ 0, %25 ], [ %36, %30 ]
  call void @llvm.dbg.value(metadata i8 %38, metadata !5271, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5481
  %40 = or i8 %39, %38, !dbg !5487
  %41 = zext i8 %40 to i32, !dbg !5488
  %42 = shl nuw nsw i32 %41, 16, !dbg !5489
  call void @llvm.dbg.value(metadata i8 %26, metadata !5271, metadata !DIExpression()), !dbg !5490
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5490
  %43 = icmp ugt i8 %26, 9, !dbg !5492
  br i1 %43, label %44, label %51, !dbg !5493

44:                                               ; preds = %37
  %45 = add i8 %26, -10, !dbg !5493
  %46 = udiv i8 %45, 10, !dbg !5493
  %47 = mul i8 %46, -10, !dbg !5493
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5490
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5490
  %48 = add i8 %47, %45, !dbg !5493
  %49 = shl i8 %46, 4, !dbg !5494
  %50 = add i8 %49, 16, !dbg !5494
  br label %51, !dbg !5494

51:                                               ; preds = %37, %44
  %52 = phi i8 [ %26, %37 ], [ %48, %44 ]
  %53 = phi i8 [ 0, %37 ], [ %50, %44 ]
  call void @llvm.dbg.value(metadata i8 %52, metadata !5271, metadata !DIExpression()), !dbg !5490
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5490
  %54 = or i8 %53, %52, !dbg !5495
  %55 = zext i8 %54 to i32, !dbg !5496
  %56 = shl nuw nsw i32 %55, 8, !dbg !5497
  %57 = or i32 %56, %42, !dbg !5498
  %58 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 2, !dbg !5499
  %59 = load i8, i8* %58, align 1, !dbg !5499, !tbaa !5266
  call void @llvm.dbg.value(metadata i8 %59, metadata !5271, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5500
  %60 = icmp ugt i8 %59, 9, !dbg !5502
  br i1 %60, label %61, label %68, !dbg !5503

61:                                               ; preds = %51
  %62 = add i8 %59, -10, !dbg !5503
  %63 = udiv i8 %62, 10, !dbg !5503
  %64 = mul i8 %63, -10, !dbg !5503
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5500
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5500
  %65 = add i8 %64, %62, !dbg !5503
  %66 = shl i8 %63, 4, !dbg !5504
  %67 = add i8 %66, 16, !dbg !5504
  br label %68, !dbg !5504

68:                                               ; preds = %51, %61
  %69 = phi i8 [ %59, %51 ], [ %65, %61 ]
  %70 = phi i8 [ 0, %51 ], [ %67, %61 ]
  call void @llvm.dbg.value(metadata i8 %69, metadata !5271, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5500
  %71 = or i8 %70, %69, !dbg !5505
  call void @llvm.dbg.value(metadata i32 undef, metadata !5455, metadata !DIExpression()), !dbg !5457
  br label %72

72:                                               ; preds = %68, %14
  %73 = phi i8 [ %71, %68 ], [ %24, %14 ]
  %74 = phi i32 [ %57, %68 ], [ %22, %14 ]
  %75 = zext i8 %73 to i32, !dbg !5470
  %76 = or i32 %74, %75, !dbg !5470
  %77 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 0, !dbg !5470
  %78 = load i8, i8* %77, align 1, !dbg !5470, !tbaa !5257
  %79 = zext i8 %78 to i32, !dbg !5470
  %80 = shl nuw nsw i32 %79, 13, !dbg !5470
  call void @llvm.dbg.value(metadata i32 undef, metadata !5455, metadata !DIExpression()), !dbg !5457
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5506, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5507, !tbaa !4933
  %81 = bitcast i32* %3 to i8*, !dbg !5508
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81), !dbg !5508
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4939, metadata !DIExpression()) #6, !dbg !5511
  store volatile i32 0, i32* %3, align 4, !dbg !5511, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !4940, metadata !DIExpression()) #6, !dbg !5512
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()) #6, !dbg !5512
  %82 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5513, !tbaa !4948
  %83 = and i32 %82, 64, !dbg !5514
  %84 = icmp eq i32 %83, 0, !dbg !5515
  br i1 %84, label %86, label %85, !dbg !5516

85:                                               ; preds = %72
  call void @llvm.dbg.value(metadata i32 %97, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5512
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81), !dbg !5517
  br label %100, !dbg !5518

86:                                               ; preds = %72
  store volatile i32 -1, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5519, !tbaa !4948
  br label %87, !dbg !5520

87:                                               ; preds = %168, %86
  %88 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5521, !tbaa !4948
  %89 = and i32 %88, 64, !dbg !5522
  call void @llvm.dbg.value(metadata i32 %89, metadata !4941, metadata !DIExpression()) #6, !dbg !5512
  %90 = load volatile i32, i32* %3, align 4, !dbg !5523, !tbaa !894
  %91 = add i32 %90, 1, !dbg !5523
  store volatile i32 %91, i32* %3, align 4, !dbg !5523, !tbaa !894
  %92 = load volatile i32, i32* %3, align 4, !dbg !5524, !tbaa !894
  %93 = icmp ne i32 %92, 65536, !dbg !5525
  %94 = icmp eq i32 %89, 0, !dbg !5526
  %95 = and i1 %94, %93, !dbg !5526
  br i1 %95, label %150, label %96, !dbg !5527, !llvm.loop !5528

96:                                               ; preds = %168, %159, %150, %87
  %97 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5530, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %97, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5512
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81), !dbg !5517
  %98 = and i32 %97, 64, !dbg !5531
  %99 = icmp eq i32 %98, 0, !dbg !5531
  br i1 %99, label %121, label %100, !dbg !5518

100:                                              ; preds = %85, %96
  %101 = and i32 %76, 16777023, !dbg !5532
  %102 = or i32 %101, %80, !dbg !5532
  store volatile i32 %102, i32* inttoptr (i32 1073752068 to i32*), align 4, !dbg !5534, !tbaa !4974
  %103 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5535, !tbaa !4948
  %104 = and i32 %103, -129, !dbg !5535
  store volatile i32 %104, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5535, !tbaa !4948
  %105 = bitcast i32* %4 to i8*, !dbg !5537
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105), !dbg !5537
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5011, metadata !DIExpression()) #6, !dbg !5540
  store volatile i32 0, i32* %4, align 4, !dbg !5540, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !5012, metadata !DIExpression()) #6, !dbg !5541
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()) #6, !dbg !5541
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5542, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5543, !tbaa !4933
  %106 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5544, !tbaa !4948
  %107 = and i32 %106, -161, !dbg !5544
  store volatile i32 %107, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5544, !tbaa !4948
  br label %108, !dbg !5545

108:                                              ; preds = %141, %100
  %109 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5546, !tbaa !4948
  %110 = and i32 %109, 32, !dbg !5547
  call void @llvm.dbg.value(metadata i32 %110, metadata !5013, metadata !DIExpression()) #6, !dbg !5541
  %111 = load volatile i32, i32* %4, align 4, !dbg !5548, !tbaa !894
  %112 = add i32 %111, 1, !dbg !5548
  store volatile i32 %112, i32* %4, align 4, !dbg !5548, !tbaa !894
  %113 = load volatile i32, i32* %4, align 4, !dbg !5549, !tbaa !894
  %114 = icmp ne i32 %113, 131072, !dbg !5550
  %115 = icmp eq i32 %110, 0, !dbg !5551
  %116 = and i1 %115, %114, !dbg !5551
  br i1 %116, label %123, label %117, !dbg !5552, !llvm.loop !5553

117:                                              ; preds = %141, %132, %123, %108
  %118 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5555, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %118, metadata !5012, metadata !DIExpression(DW_OP_constu, 5, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !5541
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5556, !tbaa !4933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105), !dbg !5557
  %119 = lshr i32 %118, 5
  %120 = and i32 %119, 1
  br label %121

121:                                              ; preds = %117, %96
  %122 = phi i32 [ 0, %96 ], [ %120, %117 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %122, metadata !5456, metadata !DIExpression()), !dbg !5457
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5559, !tbaa !4933
  ret i32 %122, !dbg !5560

123:                                              ; preds = %108
  %124 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5546, !tbaa !4948
  %125 = and i32 %124, 32, !dbg !5547
  call void @llvm.dbg.value(metadata i32 %125, metadata !5013, metadata !DIExpression()) #6, !dbg !5541
  %126 = load volatile i32, i32* %4, align 4, !dbg !5548, !tbaa !894
  %127 = add i32 %126, 1, !dbg !5548
  store volatile i32 %127, i32* %4, align 4, !dbg !5548, !tbaa !894
  %128 = load volatile i32, i32* %4, align 4, !dbg !5549, !tbaa !894
  %129 = icmp ne i32 %128, 131072, !dbg !5550
  %130 = icmp eq i32 %125, 0, !dbg !5551
  %131 = and i1 %130, %129, !dbg !5551
  br i1 %131, label %132, label %117, !dbg !5552, !llvm.loop !5553

132:                                              ; preds = %123
  %133 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5546, !tbaa !4948
  %134 = and i32 %133, 32, !dbg !5547
  call void @llvm.dbg.value(metadata i32 %134, metadata !5013, metadata !DIExpression()) #6, !dbg !5541
  %135 = load volatile i32, i32* %4, align 4, !dbg !5548, !tbaa !894
  %136 = add i32 %135, 1, !dbg !5548
  store volatile i32 %136, i32* %4, align 4, !dbg !5548, !tbaa !894
  %137 = load volatile i32, i32* %4, align 4, !dbg !5549, !tbaa !894
  %138 = icmp ne i32 %137, 131072, !dbg !5550
  %139 = icmp eq i32 %134, 0, !dbg !5551
  %140 = and i1 %139, %138, !dbg !5551
  br i1 %140, label %141, label %117, !dbg !5552, !llvm.loop !5553

141:                                              ; preds = %132
  %142 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5546, !tbaa !4948
  %143 = and i32 %142, 32, !dbg !5547
  call void @llvm.dbg.value(metadata i32 %143, metadata !5013, metadata !DIExpression()) #6, !dbg !5541
  %144 = load volatile i32, i32* %4, align 4, !dbg !5548, !tbaa !894
  %145 = add i32 %144, 1, !dbg !5548
  store volatile i32 %145, i32* %4, align 4, !dbg !5548, !tbaa !894
  %146 = load volatile i32, i32* %4, align 4, !dbg !5549, !tbaa !894
  %147 = icmp ne i32 %146, 131072, !dbg !5550
  %148 = icmp eq i32 %143, 0, !dbg !5551
  %149 = and i1 %148, %147, !dbg !5551
  br i1 %149, label %108, label %117, !dbg !5552, !llvm.loop !5553

150:                                              ; preds = %87
  %151 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5521, !tbaa !4948
  %152 = and i32 %151, 64, !dbg !5522
  call void @llvm.dbg.value(metadata i32 %152, metadata !4941, metadata !DIExpression()) #6, !dbg !5512
  %153 = load volatile i32, i32* %3, align 4, !dbg !5523, !tbaa !894
  %154 = add i32 %153, 1, !dbg !5523
  store volatile i32 %154, i32* %3, align 4, !dbg !5523, !tbaa !894
  %155 = load volatile i32, i32* %3, align 4, !dbg !5524, !tbaa !894
  %156 = icmp ne i32 %155, 65536, !dbg !5525
  %157 = icmp eq i32 %152, 0, !dbg !5526
  %158 = and i1 %157, %156, !dbg !5526
  br i1 %158, label %159, label %96, !dbg !5527, !llvm.loop !5528

159:                                              ; preds = %150
  %160 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5521, !tbaa !4948
  %161 = and i32 %160, 64, !dbg !5522
  call void @llvm.dbg.value(metadata i32 %161, metadata !4941, metadata !DIExpression()) #6, !dbg !5512
  %162 = load volatile i32, i32* %3, align 4, !dbg !5523, !tbaa !894
  %163 = add i32 %162, 1, !dbg !5523
  store volatile i32 %163, i32* %3, align 4, !dbg !5523, !tbaa !894
  %164 = load volatile i32, i32* %3, align 4, !dbg !5524, !tbaa !894
  %165 = icmp ne i32 %164, 65536, !dbg !5525
  %166 = icmp eq i32 %161, 0, !dbg !5526
  %167 = and i1 %166, %165, !dbg !5526
  br i1 %167, label %168, label %96, !dbg !5527, !llvm.loop !5528

168:                                              ; preds = %159
  %169 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5521, !tbaa !4948
  %170 = and i32 %169, 64, !dbg !5522
  call void @llvm.dbg.value(metadata i32 %170, metadata !4941, metadata !DIExpression()) #6, !dbg !5512
  %171 = load volatile i32, i32* %3, align 4, !dbg !5523, !tbaa !894
  %172 = add i32 %171, 1, !dbg !5523
  store volatile i32 %172, i32* %3, align 4, !dbg !5523, !tbaa !894
  %173 = load volatile i32, i32* %3, align 4, !dbg !5524, !tbaa !894
  %174 = icmp ne i32 %173, 65536, !dbg !5525
  %175 = icmp eq i32 %170, 0, !dbg !5526
  %176 = and i1 %175, %174, !dbg !5526
  br i1 %176, label %87, label %96, !dbg !5527, !llvm.loop !5528
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @RTC_DateStructInit(%struct.RTC_TimeTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !5561 {
  call void @llvm.dbg.value(metadata %struct.RTC_TimeTypeDef* %0, metadata !5565, metadata !DIExpression()), !dbg !5566
  %2 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 0, !dbg !5567
  store i8 1, i8* %2, align 1, !dbg !5568, !tbaa !5257
  %3 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 2, !dbg !5569
  store i8 1, i8* %3, align 1, !dbg !5570, !tbaa !5266
  %4 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 1, !dbg !5571
  store i8 1, i8* %4, align 1, !dbg !5572, !tbaa !5261
  %5 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 3, !dbg !5573
  store i8 0, i8* %5, align 1, !dbg !5574, !tbaa !5246
  ret void, !dbg !5575
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_GetDate(i32 %0, %struct.RTC_TimeTypeDef* nocapture %1) local_unnamed_addr #0 !dbg !5576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5580, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.value(metadata %struct.RTC_TimeTypeDef* %1, metadata !5581, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.value(metadata i32 0, metadata !5582, metadata !DIExpression()), !dbg !5583
  %3 = load volatile i32, i32* inttoptr (i32 1073752068 to i32*), align 4, !dbg !5584, !tbaa !4974
  call void @llvm.dbg.value(metadata i32 %3, metadata !5582, metadata !DIExpression(DW_OP_constu, 16777023, DW_OP_and, DW_OP_stack_value)), !dbg !5583
  %4 = lshr i32 %3, 16, !dbg !5585
  %5 = trunc i32 %4 to i8, !dbg !5586
  %6 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 3, !dbg !5587
  store i8 %5, i8* %6, align 1, !dbg !5588, !tbaa !5246
  %7 = lshr i32 %3, 8, !dbg !5589
  %8 = trunc i32 %7 to i8, !dbg !5590
  %9 = and i8 %8, 31, !dbg !5590
  %10 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 1, !dbg !5591
  store i8 %9, i8* %10, align 1, !dbg !5592, !tbaa !5261
  %11 = trunc i32 %3 to i8, !dbg !5593
  %12 = and i8 %11, 63, !dbg !5593
  %13 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 2, !dbg !5594
  store i8 %12, i8* %13, align 1, !dbg !5595, !tbaa !5266
  %14 = lshr i32 %3, 13, !dbg !5596
  %15 = trunc i32 %14 to i8, !dbg !5597
  %16 = and i8 %15, 7, !dbg !5597
  %17 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 0, !dbg !5598
  store i8 %16, i8* %17, align 1, !dbg !5599, !tbaa !5257
  %18 = icmp eq i32 %0, 0, !dbg !5600
  br i1 %18, label %19, label %34, !dbg !5602

19:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8 %5, metadata !5405, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5603
  %20 = lshr i32 %3, 20, !dbg !5606
  %21 = trunc i32 %20 to i8, !dbg !5606
  %22 = and i8 %21, 15, !dbg !5606
  %23 = mul nuw i8 %22, 10, !dbg !5607
  call void @llvm.dbg.value(metadata i8 %23, metadata !5408, metadata !DIExpression()), !dbg !5603
  %24 = and i8 %5, 15, !dbg !5608
  %25 = add nuw i8 %23, %24, !dbg !5609
  store i8 %25, i8* %6, align 1, !dbg !5610, !tbaa !5246
  call void @llvm.dbg.value(metadata i8 %9, metadata !5405, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5611
  %26 = lshr i8 %9, 4, !dbg !5613
  %27 = mul nuw nsw i8 %26, 10, !dbg !5614
  call void @llvm.dbg.value(metadata i8 %27, metadata !5408, metadata !DIExpression()), !dbg !5611
  %28 = and i8 %8, 15, !dbg !5615
  %29 = add nuw nsw i8 %27, %28, !dbg !5616
  store i8 %29, i8* %10, align 1, !dbg !5617, !tbaa !5261
  call void @llvm.dbg.value(metadata i8 %12, metadata !5405, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5618
  %30 = lshr i8 %12, 4, !dbg !5620
  %31 = mul nuw nsw i8 %30, 10, !dbg !5621
  call void @llvm.dbg.value(metadata i8 %31, metadata !5408, metadata !DIExpression()), !dbg !5618
  %32 = and i8 %11, 15, !dbg !5622
  %33 = add nuw nsw i8 %31, %32, !dbg !5623
  store i8 %33, i8* %13, align 1, !dbg !5624, !tbaa !5266
  br label %34, !dbg !5625

34:                                               ; preds = %19, %2
  ret void, !dbg !5626
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_SetAlarm(i32 %0, i32 %1, %struct.RTC_AlarmTypeDef* nocapture %2) local_unnamed_addr #0 !dbg !5627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5639, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.value(metadata i32 %1, metadata !5640, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.value(metadata %struct.RTC_AlarmTypeDef* %2, metadata !5641, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.value(metadata i32 0, metadata !5642, metadata !DIExpression()), !dbg !5643
  %4 = icmp eq i32 %0, 0, !dbg !5644
  %5 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5646, !tbaa !4976
  %6 = and i32 %5, 64, !dbg !5646
  %7 = icmp eq i32 %6, 0, !dbg !5646
  br i1 %4, label %8, label %11, !dbg !5647

8:                                                ; preds = %3
  br i1 %7, label %9, label %40, !dbg !5648

9:                                                ; preds = %8
  %10 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 3, !dbg !5650
  store i8 0, i8* %10, align 1, !dbg !5653, !tbaa !5654
  br label %40

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 3, !dbg !5643
  br i1 %7, label %17, label %13, !dbg !5656

13:                                               ; preds = %11
  %14 = load i8, i8* %12, align 1, !dbg !5658, !tbaa !5654
  %15 = zext i8 %14 to i32, !dbg !5656
  %16 = shl nuw nsw i32 %15, 16, !dbg !5656
  br label %18, !dbg !5656

17:                                               ; preds = %11
  store i8 0, i8* %12, align 1, !dbg !5661, !tbaa !5654
  br label %18

18:                                               ; preds = %13, %17
  %19 = phi i32 [ %16, %13 ], [ 0, %17 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !5642, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5643
  %20 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 0, !dbg !5664
  %21 = load i8, i8* %20, align 4, !dbg !5664, !tbaa !5665
  %22 = zext i8 %21 to i32, !dbg !5666
  %23 = shl nuw nsw i32 %22, 16, !dbg !5667
  %24 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 1, !dbg !5668
  %25 = load i8, i8* %24, align 1, !dbg !5668, !tbaa !5669
  %26 = zext i8 %25 to i32, !dbg !5670
  %27 = shl nuw nsw i32 %26, 8, !dbg !5671
  %28 = or i32 %27, %23, !dbg !5672
  %29 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 2, !dbg !5673
  %30 = load i8, i8* %29, align 2, !dbg !5673, !tbaa !5674
  %31 = zext i8 %30 to i32, !dbg !5675
  %32 = or i32 %28, %31, !dbg !5676
  %33 = or i32 %32, %19, !dbg !5677
  %34 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 3, !dbg !5678
  %35 = load i8, i8* %34, align 4, !dbg !5678, !tbaa !5679
  %36 = zext i8 %35 to i32, !dbg !5680
  %37 = shl nuw i32 %36, 24, !dbg !5681
  %38 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 1, !dbg !5682
  %39 = load i32, i32* %38, align 4, !dbg !5682, !tbaa !5683
  call void @llvm.dbg.value(metadata i32 undef, metadata !5642, metadata !DIExpression()), !dbg !5643
  br label %113, !dbg !5684

40:                                               ; preds = %8, %9
  %41 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 0, !dbg !5664
  %42 = load i8, i8* %41, align 4, !dbg !5664, !tbaa !5665
  call void @llvm.dbg.value(metadata i8 %21, metadata !5271, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5685
  %43 = icmp ugt i8 %42, 9, !dbg !5688
  br i1 %43, label %44, label %51, !dbg !5689

44:                                               ; preds = %40
  %45 = add i8 %42, -10, !dbg !5689
  %46 = udiv i8 %45, 10, !dbg !5689
  %47 = mul i8 %46, -10, !dbg !5689
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5685
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5685
  %48 = add i8 %47, %45, !dbg !5689
  %49 = shl i8 %46, 4, !dbg !5690
  %50 = add i8 %49, 16, !dbg !5690
  br label %51, !dbg !5690

51:                                               ; preds = %40, %44
  %52 = phi i8 [ %42, %40 ], [ %48, %44 ]
  %53 = phi i8 [ 0, %40 ], [ %50, %44 ]
  call void @llvm.dbg.value(metadata i8 %52, metadata !5271, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5685
  %54 = or i8 %53, %52, !dbg !5691
  %55 = zext i8 %54 to i32, !dbg !5692
  %56 = shl nuw nsw i32 %55, 16, !dbg !5693
  %57 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 1, !dbg !5694
  %58 = load i8, i8* %57, align 1, !dbg !5694, !tbaa !5669
  call void @llvm.dbg.value(metadata i8 %58, metadata !5271, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5695
  %59 = icmp ugt i8 %58, 9, !dbg !5697
  br i1 %59, label %60, label %67, !dbg !5698

60:                                               ; preds = %51
  %61 = add i8 %58, -10, !dbg !5698
  %62 = udiv i8 %61, 10, !dbg !5698
  %63 = mul i8 %62, -10, !dbg !5698
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5695
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5695
  %64 = add i8 %63, %61, !dbg !5698
  %65 = shl i8 %62, 4, !dbg !5699
  %66 = add i8 %65, 16, !dbg !5699
  br label %67, !dbg !5699

67:                                               ; preds = %51, %60
  %68 = phi i8 [ %58, %51 ], [ %64, %60 ]
  %69 = phi i8 [ 0, %51 ], [ %66, %60 ]
  call void @llvm.dbg.value(metadata i8 %68, metadata !5271, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5695
  %70 = or i8 %69, %68, !dbg !5700
  %71 = zext i8 %70 to i32, !dbg !5701
  %72 = shl nuw nsw i32 %71, 8, !dbg !5702
  %73 = or i32 %72, %56, !dbg !5703
  %74 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 2, !dbg !5704
  %75 = load i8, i8* %74, align 2, !dbg !5704, !tbaa !5674
  call void @llvm.dbg.value(metadata i8 %75, metadata !5271, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5705
  %76 = icmp ugt i8 %75, 9, !dbg !5707
  br i1 %76, label %77, label %84, !dbg !5708

77:                                               ; preds = %67
  %78 = add i8 %75, -10, !dbg !5708
  %79 = udiv i8 %78, 10, !dbg !5708
  %80 = mul i8 %79, -10, !dbg !5708
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5705
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5705
  %81 = add i8 %80, %78, !dbg !5708
  %82 = shl i8 %79, 4, !dbg !5709
  %83 = add i8 %82, 16, !dbg !5709
  br label %84, !dbg !5709

84:                                               ; preds = %67, %77
  %85 = phi i8 [ %75, %67 ], [ %81, %77 ]
  %86 = phi i8 [ 0, %67 ], [ %83, %77 ]
  call void @llvm.dbg.value(metadata i8 %85, metadata !5271, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5705
  %87 = or i8 %86, %85, !dbg !5710
  %88 = zext i8 %87 to i32, !dbg !5711
  %89 = or i32 %73, %88, !dbg !5712
  %90 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 3, !dbg !5713
  %91 = load i8, i8* %90, align 1, !dbg !5713, !tbaa !5654
  %92 = zext i8 %91 to i32, !dbg !5714
  %93 = shl nuw nsw i32 %92, 16, !dbg !5715
  %94 = or i32 %89, %93, !dbg !5716
  %95 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 3, !dbg !5717
  %96 = load i8, i8* %95, align 4, !dbg !5717, !tbaa !5679
  call void @llvm.dbg.value(metadata i8 %96, metadata !5271, metadata !DIExpression()), !dbg !5718
  call void @llvm.dbg.value(metadata i8 0, metadata !5276, metadata !DIExpression()), !dbg !5718
  %97 = icmp ugt i8 %96, 9, !dbg !5720
  br i1 %97, label %98, label %105, !dbg !5721

98:                                               ; preds = %84
  %99 = add i8 %96, -10, !dbg !5721
  %100 = udiv i8 %99, 10, !dbg !5721
  %101 = mul i8 %100, -10, !dbg !5721
  call void @llvm.dbg.value(metadata i32 undef, metadata !5276, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5718
  call void @llvm.dbg.value(metadata i32 undef, metadata !5271, metadata !DIExpression(DW_OP_constu, 10, DW_OP_minus, DW_OP_stack_value)), !dbg !5718
  %102 = add i8 %101, %99, !dbg !5721
  %103 = shl i8 %100, 4, !dbg !5722
  %104 = add i8 %103, 16, !dbg !5722
  br label %105, !dbg !5722

105:                                              ; preds = %84, %98
  %106 = phi i8 [ %96, %84 ], [ %102, %98 ]
  %107 = phi i8 [ 0, %84 ], [ %104, %98 ]
  call void @llvm.dbg.value(metadata i8 %106, metadata !5271, metadata !DIExpression()), !dbg !5718
  call void @llvm.dbg.value(metadata i8 undef, metadata !5276, metadata !DIExpression()), !dbg !5718
  %108 = or i8 %107, %106, !dbg !5723
  %109 = zext i8 %108 to i32, !dbg !5724
  %110 = shl nuw i32 %109, 24, !dbg !5725
  %111 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 1, !dbg !5726
  %112 = load i32, i32* %111, align 4, !dbg !5726, !tbaa !5683
  call void @llvm.dbg.value(metadata i32 %121, metadata !5642, metadata !DIExpression()), !dbg !5643
  br label %113

113:                                              ; preds = %105, %18
  %114 = phi i32 [ %94, %105 ], [ %33, %18 ]
  %115 = phi i32 [ %112, %105 ], [ %37, %18 ]
  %116 = phi i32 [ %110, %105 ], [ %39, %18 ]
  %117 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 2, !dbg !5664
  %118 = load i32, i32* %117, align 4, !dbg !5664, !tbaa !5727
  %119 = or i32 %114, %118, !dbg !5664
  %120 = or i32 %119, %115, !dbg !5664
  %121 = or i32 %120, %116, !dbg !5664
  call void @llvm.dbg.value(metadata i32 %121, metadata !5642, metadata !DIExpression()), !dbg !5643
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5728, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5729, !tbaa !4933
  %122 = icmp eq i32 %1, 256, !dbg !5730
  br i1 %122, label %123, label %124, !dbg !5732

123:                                              ; preds = %113
  store volatile i32 %121, i32* inttoptr (i32 1073752092 to i32*), align 4, !dbg !5733, !tbaa !5002
  br label %125, !dbg !5735

124:                                              ; preds = %113
  store volatile i32 %121, i32* inttoptr (i32 1073752096 to i32*), align 32, !dbg !5736, !tbaa !5004
  br label %125

125:                                              ; preds = %124, %123
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5738, !tbaa !4933
  ret void, !dbg !5739
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @RTC_AlarmStructInit(%struct.RTC_AlarmTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !5740 {
  call void @llvm.dbg.value(metadata %struct.RTC_AlarmTypeDef* %0, metadata !5744, metadata !DIExpression()), !dbg !5745
  %2 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %0, i32 0, i32 0, i32 3, !dbg !5746
  store i8 0, i8* %2, align 1, !dbg !5747, !tbaa !5654
  %3 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %0, i32 0, i32 0, i32 0, !dbg !5748
  store i8 0, i8* %3, align 4, !dbg !5749, !tbaa !5665
  %4 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %0, i32 0, i32 0, i32 1, !dbg !5750
  store i8 0, i8* %4, align 1, !dbg !5751, !tbaa !5669
  %5 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %0, i32 0, i32 0, i32 2, !dbg !5752
  store i8 0, i8* %5, align 2, !dbg !5753, !tbaa !5674
  %6 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %0, i32 0, i32 2, !dbg !5754
  store i32 0, i32* %6, align 4, !dbg !5755, !tbaa !5727
  %7 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %0, i32 0, i32 3, !dbg !5756
  store i8 1, i8* %7, align 4, !dbg !5757, !tbaa !5679
  %8 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %0, i32 0, i32 1, !dbg !5758
  store i32 0, i32* %8, align 4, !dbg !5759, !tbaa !5683
  ret void, !dbg !5760
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_GetAlarm(i32 %0, i32 %1, %struct.RTC_AlarmTypeDef* nocapture %2) local_unnamed_addr #0 !dbg !5761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5763, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i32 %1, metadata !5764, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata %struct.RTC_AlarmTypeDef* %2, metadata !5765, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata i32 0, metadata !5766, metadata !DIExpression()), !dbg !5767
  %4 = icmp eq i32 %1, 256, !dbg !5768
  call void @llvm.dbg.value(metadata i32 undef, metadata !5766, metadata !DIExpression()), !dbg !5767
  %5 = select i1 %4, i32* inttoptr (i32 1073752092 to i32*), i32* inttoptr (i32 1073752096 to i32*)
  %6 = load volatile i32, i32* %5, align 4, !dbg !5770, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %6, metadata !5766, metadata !DIExpression()), !dbg !5767
  %7 = lshr i32 %6, 16, !dbg !5771
  %8 = trunc i32 %7 to i8, !dbg !5772
  %9 = and i8 %8, 63, !dbg !5772
  %10 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 0, !dbg !5773
  store i8 %9, i8* %10, align 4, !dbg !5774, !tbaa !5665
  %11 = lshr i32 %6, 8, !dbg !5775
  %12 = trunc i32 %11 to i8, !dbg !5776
  %13 = and i8 %12, 127, !dbg !5776
  %14 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 1, !dbg !5777
  store i8 %13, i8* %14, align 1, !dbg !5778, !tbaa !5669
  %15 = trunc i32 %6 to i8, !dbg !5779
  %16 = and i8 %15, 127, !dbg !5779
  %17 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 2, !dbg !5780
  store i8 %16, i8* %17, align 2, !dbg !5781, !tbaa !5674
  %18 = and i8 %8, 64, !dbg !5782
  %19 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 0, i32 3, !dbg !5783
  store i8 %18, i8* %19, align 1, !dbg !5784, !tbaa !5654
  %20 = lshr i32 %6, 24, !dbg !5785
  %21 = trunc i32 %20 to i8, !dbg !5786
  %22 = and i8 %21, 63, !dbg !5786
  %23 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 3, !dbg !5787
  store i8 %22, i8* %23, align 4, !dbg !5788, !tbaa !5679
  %24 = and i32 %6, 1073741824, !dbg !5789
  %25 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 2, !dbg !5790
  store i32 %24, i32* %25, align 4, !dbg !5791, !tbaa !5727
  %26 = and i32 %6, -2139062144, !dbg !5792
  %27 = getelementptr inbounds %struct.RTC_AlarmTypeDef, %struct.RTC_AlarmTypeDef* %2, i32 0, i32 1, !dbg !5793
  store i32 %26, i32* %27, align 4, !dbg !5794, !tbaa !5683
  %28 = icmp eq i32 %0, 0, !dbg !5795
  br i1 %28, label %29, label %46, !dbg !5797

29:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8 %9, metadata !5405, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5798
  %30 = lshr i8 %9, 4, !dbg !5801
  %31 = mul nuw nsw i8 %30, 10, !dbg !5802
  call void @llvm.dbg.value(metadata i8 %31, metadata !5408, metadata !DIExpression()), !dbg !5798
  %32 = and i8 %8, 15, !dbg !5803
  %33 = add nuw nsw i8 %31, %32, !dbg !5804
  store i8 %33, i8* %10, align 4, !dbg !5805, !tbaa !5665
  call void @llvm.dbg.value(metadata i8 %13, metadata !5405, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5806
  %34 = lshr i8 %13, 4, !dbg !5808
  %35 = mul nuw nsw i8 %34, 10, !dbg !5809
  call void @llvm.dbg.value(metadata i8 %35, metadata !5408, metadata !DIExpression()), !dbg !5806
  %36 = and i8 %12, 15, !dbg !5810
  %37 = add nuw nsw i8 %35, %36, !dbg !5811
  store i8 %37, i8* %14, align 1, !dbg !5812, !tbaa !5669
  call void @llvm.dbg.value(metadata i8 %16, metadata !5405, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5813
  %38 = lshr i8 %16, 4, !dbg !5815
  %39 = mul nuw nsw i8 %38, 10, !dbg !5816
  call void @llvm.dbg.value(metadata i8 %39, metadata !5408, metadata !DIExpression()), !dbg !5813
  %40 = and i8 %15, 15, !dbg !5817
  %41 = add nuw nsw i8 %39, %40, !dbg !5818
  store i8 %41, i8* %17, align 2, !dbg !5819, !tbaa !5674
  call void @llvm.dbg.value(metadata i8 %22, metadata !5405, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !5820
  %42 = lshr i8 %22, 4, !dbg !5822
  %43 = mul nuw nsw i8 %42, 10, !dbg !5823
  call void @llvm.dbg.value(metadata i8 %43, metadata !5408, metadata !DIExpression()), !dbg !5820
  %44 = and i8 %21, 15, !dbg !5824
  %45 = add nuw nsw i8 %43, %44, !dbg !5825
  store i8 %45, i8* %23, align 4, !dbg !5826, !tbaa !5679
  br label %46, !dbg !5827

46:                                               ; preds = %29, %3
  ret void, !dbg !5828
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_AlarmCmd(i32 %0, i32 %1) local_unnamed_addr #3 !dbg !5829 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5833, metadata !DIExpression()), !dbg !5838
  call void @llvm.dbg.value(metadata i32 %1, metadata !5834, metadata !DIExpression()), !dbg !5838
  %4 = bitcast i32* %3 to i8*, !dbg !5839
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !5839
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5835, metadata !DIExpression()), !dbg !5840
  store volatile i32 0, i32* %3, align 4, !dbg !5840, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !5836, metadata !DIExpression()), !dbg !5838
  call void @llvm.dbg.value(metadata i32 0, metadata !5837, metadata !DIExpression()), !dbg !5838
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5841, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5842, !tbaa !4933
  %5 = icmp eq i32 %1, 0, !dbg !5843
  br i1 %5, label %9, label %6, !dbg !5845

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5846, !tbaa !4976
  %8 = or i32 %7, %0, !dbg !5846
  store volatile i32 %8, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5846, !tbaa !4976
  call void @llvm.dbg.value(metadata i32 1, metadata !5837, metadata !DIExpression()), !dbg !5838
  br label %28, !dbg !5848

9:                                                ; preds = %2
  %10 = xor i32 %0, -1, !dbg !5849
  %11 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5851, !tbaa !4976
  %12 = and i32 %11, %10, !dbg !5851
  store volatile i32 %12, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5851, !tbaa !4976
  %13 = lshr i32 %0, 8, !dbg !5852
  br label %14, !dbg !5854

14:                                               ; preds = %48, %9
  %15 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5855, !tbaa !4948
  %16 = and i32 %15, %13, !dbg !5856
  call void @llvm.dbg.value(metadata i32 %16, metadata !5836, metadata !DIExpression()), !dbg !5838
  %17 = load volatile i32, i32* %3, align 4, !dbg !5857, !tbaa !894
  %18 = add i32 %17, 1, !dbg !5857
  store volatile i32 %18, i32* %3, align 4, !dbg !5857, !tbaa !894
  %19 = load volatile i32, i32* %3, align 4, !dbg !5858, !tbaa !894
  %20 = icmp ne i32 %19, 65536, !dbg !5859
  %21 = icmp eq i32 %16, 0, !dbg !5860
  %22 = and i1 %21, %20, !dbg !5860
  br i1 %22, label %30, label %23, !dbg !5861, !llvm.loop !5862

23:                                               ; preds = %48, %39, %30, %14
  %24 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5864, !tbaa !4948
  %25 = and i32 %24, %13, !dbg !5866
  %26 = icmp ne i32 %25, 0, !dbg !5867
  %27 = zext i1 %26 to i32
  br label %28

28:                                               ; preds = %23, %6
  %29 = phi i32 [ 1, %6 ], [ %27, %23 ], !dbg !5868
  call void @llvm.dbg.value(metadata i32 %29, metadata !5837, metadata !DIExpression()), !dbg !5838
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5869, !tbaa !4933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !5870
  ret i32 %29, !dbg !5871

30:                                               ; preds = %14
  %31 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5855, !tbaa !4948
  %32 = and i32 %31, %13, !dbg !5856
  call void @llvm.dbg.value(metadata i32 %32, metadata !5836, metadata !DIExpression()), !dbg !5838
  %33 = load volatile i32, i32* %3, align 4, !dbg !5857, !tbaa !894
  %34 = add i32 %33, 1, !dbg !5857
  store volatile i32 %34, i32* %3, align 4, !dbg !5857, !tbaa !894
  %35 = load volatile i32, i32* %3, align 4, !dbg !5858, !tbaa !894
  %36 = icmp ne i32 %35, 65536, !dbg !5859
  %37 = icmp eq i32 %32, 0, !dbg !5860
  %38 = and i1 %37, %36, !dbg !5860
  br i1 %38, label %39, label %23, !dbg !5861, !llvm.loop !5862

39:                                               ; preds = %30
  %40 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5855, !tbaa !4948
  %41 = and i32 %40, %13, !dbg !5856
  call void @llvm.dbg.value(metadata i32 %41, metadata !5836, metadata !DIExpression()), !dbg !5838
  %42 = load volatile i32, i32* %3, align 4, !dbg !5857, !tbaa !894
  %43 = add i32 %42, 1, !dbg !5857
  store volatile i32 %43, i32* %3, align 4, !dbg !5857, !tbaa !894
  %44 = load volatile i32, i32* %3, align 4, !dbg !5858, !tbaa !894
  %45 = icmp ne i32 %44, 65536, !dbg !5859
  %46 = icmp eq i32 %41, 0, !dbg !5860
  %47 = and i1 %46, %45, !dbg !5860
  br i1 %47, label %48, label %23, !dbg !5861, !llvm.loop !5862

48:                                               ; preds = %39
  %49 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5855, !tbaa !4948
  %50 = and i32 %49, %13, !dbg !5856
  call void @llvm.dbg.value(metadata i32 %50, metadata !5836, metadata !DIExpression()), !dbg !5838
  %51 = load volatile i32, i32* %3, align 4, !dbg !5857, !tbaa !894
  %52 = add i32 %51, 1, !dbg !5857
  store volatile i32 %52, i32* %3, align 4, !dbg !5857, !tbaa !894
  %53 = load volatile i32, i32* %3, align 4, !dbg !5858, !tbaa !894
  %54 = icmp ne i32 %53, 65536, !dbg !5859
  %55 = icmp eq i32 %50, 0, !dbg !5860
  %56 = and i1 %55, %54, !dbg !5860
  br i1 %56, label %14, label %23, !dbg !5861, !llvm.loop !5862
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_AlarmSubSecondConfig(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !5872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5876, metadata !DIExpression()), !dbg !5880
  call void @llvm.dbg.value(metadata i32 %1, metadata !5877, metadata !DIExpression()), !dbg !5880
  call void @llvm.dbg.value(metadata i32 %2, metadata !5878, metadata !DIExpression()), !dbg !5880
  call void @llvm.dbg.value(metadata i32 0, metadata !5879, metadata !DIExpression()), !dbg !5880
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5881, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5882, !tbaa !4933
  %4 = or i32 %2, %1, !dbg !5883
  call void @llvm.dbg.value(metadata i32 %4, metadata !5879, metadata !DIExpression()), !dbg !5880
  %5 = icmp eq i32 %0, 256, !dbg !5884
  br i1 %5, label %6, label %7, !dbg !5886

6:                                                ; preds = %3
  store volatile i32 %4, i32* inttoptr (i32 1073752132 to i32*), align 4, !dbg !5887, !tbaa !5889
  br label %8, !dbg !5890

7:                                                ; preds = %3
  store volatile i32 %4, i32* inttoptr (i32 1073752136 to i32*), align 8, !dbg !5891, !tbaa !5893
  br label %8

8:                                                ; preds = %7, %6
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5894, !tbaa !4933
  ret void, !dbg !5895
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_GetAlarmSubSecond(i32 %0) local_unnamed_addr #0 !dbg !5896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5900, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.value(metadata i32 0, metadata !5901, metadata !DIExpression()), !dbg !5902
  %2 = icmp eq i32 %0, 256, !dbg !5903
  call void @llvm.dbg.value(metadata i32 undef, metadata !5901, metadata !DIExpression(DW_OP_constu, 32767, DW_OP_and, DW_OP_stack_value)), !dbg !5902
  %3 = select i1 %2, i32* inttoptr (i32 1073752132 to i32*), i32* inttoptr (i32 1073752136 to i32*)
  %4 = load volatile i32, i32* %3, align 4, !dbg !5905, !tbaa !894
  %5 = and i32 %4, 32767, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %5, metadata !5901, metadata !DIExpression()), !dbg !5902
  ret i32 %5, !dbg !5906
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_WakeUpClockConfig(i32 %0) local_unnamed_addr #0 !dbg !5907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5909, metadata !DIExpression()), !dbg !5910
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5911, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5912, !tbaa !4933
  %2 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5913, !tbaa !4976
  %3 = and i32 %2, -8, !dbg !5913
  store volatile i32 %3, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5913, !tbaa !4976
  %4 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5914, !tbaa !4976
  %5 = or i32 %4, %0, !dbg !5914
  store volatile i32 %5, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5914, !tbaa !4976
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5915, !tbaa !4933
  ret void, !dbg !5916
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_SetWakeUpCounter(i32 %0) local_unnamed_addr #0 !dbg !5917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5919, metadata !DIExpression()), !dbg !5920
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5921, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5922, !tbaa !4933
  store volatile i32 %0, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !5923, !tbaa !4996
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5924, !tbaa !4933
  ret void, !dbg !5925
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_GetWakeUpCounter() local_unnamed_addr #0 !dbg !5926 {
  %1 = load volatile i32, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !5927, !tbaa !4996
  %2 = and i32 %1, 65535, !dbg !5928
  ret i32 %2, !dbg !5929
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_WakeUpCmd(i32 %0) local_unnamed_addr #3 !dbg !5930 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5932, metadata !DIExpression()), !dbg !5936
  %3 = bitcast i32* %2 to i8*, !dbg !5937
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5937
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5933, metadata !DIExpression()), !dbg !5938
  store volatile i32 0, i32* %2, align 4, !dbg !5938, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !5934, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.value(metadata i32 0, metadata !5935, metadata !DIExpression()), !dbg !5936
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5939, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5940, !tbaa !4933
  %4 = icmp eq i32 %0, 0, !dbg !5941
  %5 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5943, !tbaa !4976
  br i1 %4, label %8, label %6, !dbg !5944

6:                                                ; preds = %1
  %7 = or i32 %5, 1024, !dbg !5945
  store volatile i32 %7, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5945, !tbaa !4976
  call void @llvm.dbg.value(metadata i32 1, metadata !5935, metadata !DIExpression()), !dbg !5936
  br label %23, !dbg !5947

8:                                                ; preds = %1
  %9 = and i32 %5, -1025, !dbg !5948
  store volatile i32 %9, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5948, !tbaa !4976
  br label %10, !dbg !5950

10:                                               ; preds = %43, %8
  %11 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5951, !tbaa !4948
  %12 = and i32 %11, 4, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %12, metadata !5934, metadata !DIExpression()), !dbg !5936
  %13 = load volatile i32, i32* %2, align 4, !dbg !5954, !tbaa !894
  %14 = add i32 %13, 1, !dbg !5954
  store volatile i32 %14, i32* %2, align 4, !dbg !5954, !tbaa !894
  %15 = load volatile i32, i32* %2, align 4, !dbg !5955, !tbaa !894
  %16 = icmp ne i32 %15, 65536, !dbg !5956
  %17 = icmp eq i32 %12, 0, !dbg !5957
  %18 = and i1 %17, %16, !dbg !5957
  br i1 %18, label %25, label %19, !dbg !5958, !llvm.loop !5959

19:                                               ; preds = %43, %34, %25, %10
  %20 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5961, !tbaa !4948
  %21 = lshr i32 %20, 2
  %22 = and i32 %21, 1
  br label %23

23:                                               ; preds = %19, %6
  %24 = phi i32 [ 1, %6 ], [ %22, %19 ], !dbg !5943
  call void @llvm.dbg.value(metadata i32 %24, metadata !5935, metadata !DIExpression()), !dbg !5936
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5963, !tbaa !4933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5964
  ret i32 %24, !dbg !5965

25:                                               ; preds = %10
  %26 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5951, !tbaa !4948
  %27 = and i32 %26, 4, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %27, metadata !5934, metadata !DIExpression()), !dbg !5936
  %28 = load volatile i32, i32* %2, align 4, !dbg !5954, !tbaa !894
  %29 = add i32 %28, 1, !dbg !5954
  store volatile i32 %29, i32* %2, align 4, !dbg !5954, !tbaa !894
  %30 = load volatile i32, i32* %2, align 4, !dbg !5955, !tbaa !894
  %31 = icmp ne i32 %30, 65536, !dbg !5956
  %32 = icmp eq i32 %27, 0, !dbg !5957
  %33 = and i1 %32, %31, !dbg !5957
  br i1 %33, label %34, label %19, !dbg !5958, !llvm.loop !5959

34:                                               ; preds = %25
  %35 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5951, !tbaa !4948
  %36 = and i32 %35, 4, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %36, metadata !5934, metadata !DIExpression()), !dbg !5936
  %37 = load volatile i32, i32* %2, align 4, !dbg !5954, !tbaa !894
  %38 = add i32 %37, 1, !dbg !5954
  store volatile i32 %38, i32* %2, align 4, !dbg !5954, !tbaa !894
  %39 = load volatile i32, i32* %2, align 4, !dbg !5955, !tbaa !894
  %40 = icmp ne i32 %39, 65536, !dbg !5956
  %41 = icmp eq i32 %36, 0, !dbg !5957
  %42 = and i1 %41, %40, !dbg !5957
  br i1 %42, label %43, label %19, !dbg !5958, !llvm.loop !5959

43:                                               ; preds = %34
  %44 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !5951, !tbaa !4948
  %45 = and i32 %44, 4, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %45, metadata !5934, metadata !DIExpression()), !dbg !5936
  %46 = load volatile i32, i32* %2, align 4, !dbg !5954, !tbaa !894
  %47 = add i32 %46, 1, !dbg !5954
  store volatile i32 %47, i32* %2, align 4, !dbg !5954, !tbaa !894
  %48 = load volatile i32, i32* %2, align 4, !dbg !5955, !tbaa !894
  %49 = icmp ne i32 %48, 65536, !dbg !5956
  %50 = icmp eq i32 %45, 0, !dbg !5957
  %51 = and i1 %50, %49, !dbg !5957
  br i1 %51, label %10, label %19, !dbg !5958, !llvm.loop !5959
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_DayLightSavingConfig(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !5966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5968, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata i32 %1, metadata !5969, metadata !DIExpression()), !dbg !5970
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5971, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5972, !tbaa !4933
  %3 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5973, !tbaa !4976
  %4 = and i32 %3, -262145, !dbg !5973
  store volatile i32 %4, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5973, !tbaa !4976
  %5 = or i32 %1, %0, !dbg !5974
  %6 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5975, !tbaa !4976
  %7 = or i32 %5, %6, !dbg !5975
  store volatile i32 %7, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5975, !tbaa !4976
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5976, !tbaa !4933
  ret void, !dbg !5977
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_GetStoreOperation() local_unnamed_addr #0 !dbg !5978 {
  %1 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5979, !tbaa !4976
  %2 = and i32 %1, 262144, !dbg !5980
  ret i32 %2, !dbg !5981
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_OutputConfig(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !5982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5984, metadata !DIExpression()), !dbg !5986
  call void @llvm.dbg.value(metadata i32 %1, metadata !5985, metadata !DIExpression()), !dbg !5986
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5987, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5988, !tbaa !4933
  %3 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5989, !tbaa !4976
  %4 = and i32 %3, -7340033, !dbg !5989
  store volatile i32 %4, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5989, !tbaa !4976
  %5 = or i32 %1, %0, !dbg !5990
  %6 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5991, !tbaa !4976
  %7 = or i32 %5, %6, !dbg !5991
  store volatile i32 %7, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !5991, !tbaa !4976
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !5992, !tbaa !4933
  ret void, !dbg !5993
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_CoarseCalibConfig(i32 %0, i32 %1) local_unnamed_addr #3 !dbg !5994 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5998, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 %1, metadata !5999, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 0, metadata !6000, metadata !DIExpression()), !dbg !6001
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6002, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6003, !tbaa !4933
  %4 = bitcast i32* %3 to i8*, !dbg !6004
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !6004
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4939, metadata !DIExpression()) #6, !dbg !6007
  store volatile i32 0, i32* %3, align 4, !dbg !6007, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !4940, metadata !DIExpression()) #6, !dbg !6008
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()) #6, !dbg !6008
  %5 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6009, !tbaa !4948
  %6 = and i32 %5, 64, !dbg !6010
  %7 = icmp eq i32 %6, 0, !dbg !6011
  br i1 %7, label %9, label %8, !dbg !6012

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 %20, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !6008
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !6013
  br label %23, !dbg !6014

9:                                                ; preds = %2
  store volatile i32 -1, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6015, !tbaa !4948
  br label %10, !dbg !6016

10:                                               ; preds = %47, %9
  %11 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6017, !tbaa !4948
  %12 = and i32 %11, 64, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %12, metadata !4941, metadata !DIExpression()) #6, !dbg !6008
  %13 = load volatile i32, i32* %3, align 4, !dbg !6019, !tbaa !894
  %14 = add i32 %13, 1, !dbg !6019
  store volatile i32 %14, i32* %3, align 4, !dbg !6019, !tbaa !894
  %15 = load volatile i32, i32* %3, align 4, !dbg !6020, !tbaa !894
  %16 = icmp ne i32 %15, 65536, !dbg !6021
  %17 = icmp eq i32 %12, 0, !dbg !6022
  %18 = and i1 %17, %16, !dbg !6022
  br i1 %18, label %29, label %19, !dbg !6023, !llvm.loop !6024

19:                                               ; preds = %47, %38, %29, %10
  %20 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6026, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %20, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !6008
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !6013
  %21 = and i32 %20, 64, !dbg !6027
  %22 = icmp eq i32 %21, 0, !dbg !6027
  br i1 %22, label %27, label %23, !dbg !6014

23:                                               ; preds = %8, %19
  %24 = or i32 %1, %0, !dbg !6028
  store volatile i32 %24, i32* inttoptr (i32 1073752088 to i32*), align 8, !dbg !6030, !tbaa !5000
  %25 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6031, !tbaa !4948
  %26 = and i32 %25, -129, !dbg !6031
  store volatile i32 %26, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6031, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 1, metadata !6000, metadata !DIExpression()), !dbg !6001
  br label %27

27:                                               ; preds = %19, %23
  %28 = phi i32 [ 1, %23 ], [ 0, %19 ], !dbg !6033
  call void @llvm.dbg.value(metadata i32 %28, metadata !6000, metadata !DIExpression()), !dbg !6001
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6034, !tbaa !4933
  ret i32 %28, !dbg !6035

29:                                               ; preds = %10
  %30 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6017, !tbaa !4948
  %31 = and i32 %30, 64, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %31, metadata !4941, metadata !DIExpression()) #6, !dbg !6008
  %32 = load volatile i32, i32* %3, align 4, !dbg !6019, !tbaa !894
  %33 = add i32 %32, 1, !dbg !6019
  store volatile i32 %33, i32* %3, align 4, !dbg !6019, !tbaa !894
  %34 = load volatile i32, i32* %3, align 4, !dbg !6020, !tbaa !894
  %35 = icmp ne i32 %34, 65536, !dbg !6021
  %36 = icmp eq i32 %31, 0, !dbg !6022
  %37 = and i1 %36, %35, !dbg !6022
  br i1 %37, label %38, label %19, !dbg !6023, !llvm.loop !6024

38:                                               ; preds = %29
  %39 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6017, !tbaa !4948
  %40 = and i32 %39, 64, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %40, metadata !4941, metadata !DIExpression()) #6, !dbg !6008
  %41 = load volatile i32, i32* %3, align 4, !dbg !6019, !tbaa !894
  %42 = add i32 %41, 1, !dbg !6019
  store volatile i32 %42, i32* %3, align 4, !dbg !6019, !tbaa !894
  %43 = load volatile i32, i32* %3, align 4, !dbg !6020, !tbaa !894
  %44 = icmp ne i32 %43, 65536, !dbg !6021
  %45 = icmp eq i32 %40, 0, !dbg !6022
  %46 = and i1 %45, %44, !dbg !6022
  br i1 %46, label %47, label %19, !dbg !6023, !llvm.loop !6024

47:                                               ; preds = %38
  %48 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6017, !tbaa !4948
  %49 = and i32 %48, 64, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %49, metadata !4941, metadata !DIExpression()) #6, !dbg !6008
  %50 = load volatile i32, i32* %3, align 4, !dbg !6019, !tbaa !894
  %51 = add i32 %50, 1, !dbg !6019
  store volatile i32 %51, i32* %3, align 4, !dbg !6019, !tbaa !894
  %52 = load volatile i32, i32* %3, align 4, !dbg !6020, !tbaa !894
  %53 = icmp ne i32 %52, 65536, !dbg !6021
  %54 = icmp eq i32 %49, 0, !dbg !6022
  %55 = and i1 %54, %53, !dbg !6022
  br i1 %55, label %10, label %19, !dbg !6023, !llvm.loop !6024
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_CoarseCalibCmd(i32 %0) local_unnamed_addr #3 !dbg !6036 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6038, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.value(metadata i32 0, metadata !6039, metadata !DIExpression()), !dbg !6040
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6041, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6042, !tbaa !4933
  %3 = bitcast i32* %2 to i8*, !dbg !6043
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !6043
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4939, metadata !DIExpression()) #6, !dbg !6046
  store volatile i32 0, i32* %2, align 4, !dbg !6046, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !4940, metadata !DIExpression()) #6, !dbg !6047
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()) #6, !dbg !6047
  %4 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6048, !tbaa !4948
  %5 = and i32 %4, 64, !dbg !6049
  %6 = icmp eq i32 %5, 0, !dbg !6050
  br i1 %6, label %8, label %7, !dbg !6051

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %19, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !6047
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !6052
  br label %22, !dbg !6053

8:                                                ; preds = %1
  store volatile i32 -1, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6054, !tbaa !4948
  br label %9, !dbg !6055

9:                                                ; preds = %50, %8
  %10 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6056, !tbaa !4948
  %11 = and i32 %10, 64, !dbg !6057
  call void @llvm.dbg.value(metadata i32 %11, metadata !4941, metadata !DIExpression()) #6, !dbg !6047
  %12 = load volatile i32, i32* %2, align 4, !dbg !6058, !tbaa !894
  %13 = add i32 %12, 1, !dbg !6058
  store volatile i32 %13, i32* %2, align 4, !dbg !6058, !tbaa !894
  %14 = load volatile i32, i32* %2, align 4, !dbg !6059, !tbaa !894
  %15 = icmp ne i32 %14, 65536, !dbg !6060
  %16 = icmp eq i32 %11, 0, !dbg !6061
  %17 = and i1 %16, %15, !dbg !6061
  br i1 %17, label %32, label %18, !dbg !6062, !llvm.loop !6063

18:                                               ; preds = %50, %41, %32, %9
  %19 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6065, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %19, metadata !4940, metadata !DIExpression(DW_OP_constu, 6, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !6047
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !6052
  %20 = and i32 %19, 64, !dbg !6066
  %21 = icmp eq i32 %20, 0, !dbg !6066
  br i1 %21, label %30, label %22, !dbg !6053

22:                                               ; preds = %7, %18
  %23 = icmp eq i32 %0, 0, !dbg !6067
  %24 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6070, !tbaa !4976
  %25 = and i32 %24, -129, !dbg !6071
  %26 = select i1 %23, i32 0, i32 128, !dbg !6071
  %27 = or i32 %25, %26, !dbg !6071
  store volatile i32 %27, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6070, !tbaa !4976
  %28 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6072, !tbaa !4948
  %29 = and i32 %28, -129, !dbg !6072
  store volatile i32 %29, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6072, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 1, metadata !6039, metadata !DIExpression()), !dbg !6040
  br label %30

30:                                               ; preds = %18, %22
  %31 = phi i32 [ 1, %22 ], [ 0, %18 ], !dbg !6074
  call void @llvm.dbg.value(metadata i32 %31, metadata !6039, metadata !DIExpression()), !dbg !6040
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6075, !tbaa !4933
  ret i32 %31, !dbg !6076

32:                                               ; preds = %9
  %33 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6056, !tbaa !4948
  %34 = and i32 %33, 64, !dbg !6057
  call void @llvm.dbg.value(metadata i32 %34, metadata !4941, metadata !DIExpression()) #6, !dbg !6047
  %35 = load volatile i32, i32* %2, align 4, !dbg !6058, !tbaa !894
  %36 = add i32 %35, 1, !dbg !6058
  store volatile i32 %36, i32* %2, align 4, !dbg !6058, !tbaa !894
  %37 = load volatile i32, i32* %2, align 4, !dbg !6059, !tbaa !894
  %38 = icmp ne i32 %37, 65536, !dbg !6060
  %39 = icmp eq i32 %34, 0, !dbg !6061
  %40 = and i1 %39, %38, !dbg !6061
  br i1 %40, label %41, label %18, !dbg !6062, !llvm.loop !6063

41:                                               ; preds = %32
  %42 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6056, !tbaa !4948
  %43 = and i32 %42, 64, !dbg !6057
  call void @llvm.dbg.value(metadata i32 %43, metadata !4941, metadata !DIExpression()) #6, !dbg !6047
  %44 = load volatile i32, i32* %2, align 4, !dbg !6058, !tbaa !894
  %45 = add i32 %44, 1, !dbg !6058
  store volatile i32 %45, i32* %2, align 4, !dbg !6058, !tbaa !894
  %46 = load volatile i32, i32* %2, align 4, !dbg !6059, !tbaa !894
  %47 = icmp ne i32 %46, 65536, !dbg !6060
  %48 = icmp eq i32 %43, 0, !dbg !6061
  %49 = and i1 %48, %47, !dbg !6061
  br i1 %49, label %50, label %18, !dbg !6062, !llvm.loop !6063

50:                                               ; preds = %41
  %51 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6056, !tbaa !4948
  %52 = and i32 %51, 64, !dbg !6057
  call void @llvm.dbg.value(metadata i32 %52, metadata !4941, metadata !DIExpression()) #6, !dbg !6047
  %53 = load volatile i32, i32* %2, align 4, !dbg !6058, !tbaa !894
  %54 = add i32 %53, 1, !dbg !6058
  store volatile i32 %54, i32* %2, align 4, !dbg !6058, !tbaa !894
  %55 = load volatile i32, i32* %2, align 4, !dbg !6059, !tbaa !894
  %56 = icmp ne i32 %55, 65536, !dbg !6060
  %57 = icmp eq i32 %52, 0, !dbg !6061
  %58 = and i1 %57, %56, !dbg !6061
  br i1 %58, label %9, label %18, !dbg !6062, !llvm.loop !6063
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_CalibOutputCmd(i32 %0) local_unnamed_addr #0 !dbg !6077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6079, metadata !DIExpression()), !dbg !6080
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6081, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6082, !tbaa !4933
  %2 = icmp eq i32 %0, 0, !dbg !6083
  %3 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6085, !tbaa !4976
  %4 = and i32 %3, -8388609, !dbg !6086
  %5 = select i1 %2, i32 0, i32 8388608, !dbg !6086
  %6 = or i32 %4, %5, !dbg !6086
  store volatile i32 %6, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6085, !tbaa !4976
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6087, !tbaa !4933
  ret void, !dbg !6088
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_CalibOutputConfig(i32 %0) local_unnamed_addr #0 !dbg !6089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6091, metadata !DIExpression()), !dbg !6092
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6093, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6094, !tbaa !4933
  %2 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6095, !tbaa !4976
  %3 = and i32 %2, -524289, !dbg !6095
  store volatile i32 %3, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6095, !tbaa !4976
  %4 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6096, !tbaa !4976
  %5 = or i32 %4, %0, !dbg !6096
  store volatile i32 %5, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6096, !tbaa !4976
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6097, !tbaa !4933
  ret void, !dbg !6098
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_SmoothCalibConfig(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !6099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6103, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.value(metadata i32 %1, metadata !6104, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.value(metadata i32 %2, metadata !6105, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.value(metadata i32 0, metadata !6106, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.value(metadata i32 0, metadata !6107, metadata !DIExpression()), !dbg !6108
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6109, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6110, !tbaa !4933
  %4 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6111, !tbaa !4948
  %5 = and i32 %4, 65536, !dbg !6113
  %6 = icmp eq i32 %5, 0, !dbg !6114
  br i1 %6, label %14, label %7, !dbg !6115

7:                                                ; preds = %3, %31
  %8 = phi i32 [ %35, %31 ], [ 0, %3 ], !dbg !6108
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression()), !dbg !6108
  %9 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6116, !tbaa !4948
  %10 = and i32 %9, 65536, !dbg !6118
  %11 = icmp ne i32 %10, 0, !dbg !6119
  %12 = icmp ne i32 %8, 131072, !dbg !6120
  %13 = and i1 %12, %11, !dbg !6120
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6108
  br i1 %13, label %23, label %14, !dbg !6121, !llvm.loop !6122

14:                                               ; preds = %7, %31, %23, %27, %3
  %15 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6124, !tbaa !4948
  %16 = and i32 %15, 65536, !dbg !6126
  %17 = icmp eq i32 %16, 0, !dbg !6127
  br i1 %17, label %18, label %21, !dbg !6128

18:                                               ; preds = %14
  %19 = or i32 %1, %0, !dbg !6129
  %20 = or i32 %19, %2, !dbg !6131
  store volatile i32 %20, i32* inttoptr (i32 1073752124 to i32*), align 4, !dbg !6132, !tbaa !6133
  call void @llvm.dbg.value(metadata i32 1, metadata !6106, metadata !DIExpression()), !dbg !6108
  br label %21, !dbg !6134

21:                                               ; preds = %14, %18
  %22 = phi i32 [ 1, %18 ], [ 0, %14 ], !dbg !6135
  call void @llvm.dbg.value(metadata i32 %22, metadata !6106, metadata !DIExpression()), !dbg !6108
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6136, !tbaa !4933
  ret i32 %22, !dbg !6137

23:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression(DW_OP_constu, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6108
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6108
  %24 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6116, !tbaa !4948
  %25 = and i32 %24, 65536, !dbg !6118
  %26 = icmp eq i32 %25, 0, !dbg !6119
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !6108
  br i1 %26, label %14, label %27, !dbg !6121, !llvm.loop !6122

27:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !6108
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !6108
  %28 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6116, !tbaa !4948
  %29 = and i32 %28, 65536, !dbg !6118
  %30 = icmp eq i32 %29, 0, !dbg !6119
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !6108
  br i1 %30, label %14, label %31, !dbg !6121, !llvm.loop !6122

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression(DW_OP_constu, 3, DW_OP_or, DW_OP_stack_value)), !dbg !6108
  call void @llvm.dbg.value(metadata i32 %8, metadata !6107, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !6108
  %32 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6116, !tbaa !4948
  %33 = and i32 %32, 65536, !dbg !6118
  %34 = icmp eq i32 %33, 0, !dbg !6119
  %35 = add nuw nsw i32 %8, 4, !dbg !6138
  call void @llvm.dbg.value(metadata i32 %35, metadata !6107, metadata !DIExpression()), !dbg !6108
  br i1 %34, label %14, label %7, !dbg !6121, !llvm.loop !6122
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TimeStampCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !6140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6142, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %1, metadata !6143, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 0, metadata !6144, metadata !DIExpression()), !dbg !6145
  %3 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6146, !tbaa !4976
  call void @llvm.dbg.value(metadata i32 %3, metadata !6144, metadata !DIExpression(DW_OP_constu, 18446744073709549559, DW_OP_and, DW_OP_stack_value)), !dbg !6145
  %4 = icmp eq i32 %1, 0, !dbg !6147
  %5 = or i32 %0, 2048, !dbg !6149
  %6 = select i1 %4, i32 %0, i32 %5, !dbg !6149
  %7 = and i32 %3, -2057, !dbg !6150
  call void @llvm.dbg.value(metadata i32 %7, metadata !6144, metadata !DIExpression()), !dbg !6145
  %8 = or i32 %7, %6, !dbg !6151
  call void @llvm.dbg.value(metadata i32 %8, metadata !6144, metadata !DIExpression()), !dbg !6145
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6152, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6153, !tbaa !4933
  store volatile i32 %8, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6154, !tbaa !4976
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6155, !tbaa !4933
  ret void, !dbg !6156
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_GetTimeStamp(i32 %0, %struct.RTC_TimeTypeDef* nocapture %1, %struct.RTC_TimeTypeDef* nocapture %2) local_unnamed_addr #0 !dbg !6157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6161, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata %struct.RTC_TimeTypeDef* %1, metadata !6162, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata %struct.RTC_TimeTypeDef* %2, metadata !6163, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i32 0, metadata !6164, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i32 0, metadata !6165, metadata !DIExpression()), !dbg !6166
  %4 = load volatile i32, i32* inttoptr (i32 1073752112 to i32*), align 16, !dbg !6167, !tbaa !6168
  call void @llvm.dbg.value(metadata i32 %4, metadata !6164, metadata !DIExpression(DW_OP_constu, 8355711, DW_OP_and, DW_OP_stack_value)), !dbg !6166
  %5 = load volatile i32, i32* inttoptr (i32 1073752116 to i32*), align 4, !dbg !6169, !tbaa !6170
  call void @llvm.dbg.value(metadata i32 %5, metadata !6165, metadata !DIExpression(DW_OP_constu, 16777023, DW_OP_and, DW_OP_stack_value)), !dbg !6166
  %6 = lshr i32 %4, 16, !dbg !6171
  %7 = trunc i32 %6 to i8, !dbg !6172
  %8 = and i8 %7, 63, !dbg !6172
  %9 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 0, !dbg !6173
  store i8 %8, i8* %9, align 1, !dbg !6174, !tbaa !5257
  %10 = lshr i32 %4, 8, !dbg !6175
  %11 = trunc i32 %10 to i8, !dbg !6176
  %12 = and i8 %11, 127, !dbg !6176
  %13 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 1, !dbg !6177
  store i8 %12, i8* %13, align 1, !dbg !6178, !tbaa !5261
  %14 = trunc i32 %4 to i8, !dbg !6179
  %15 = and i8 %14, 127, !dbg !6179
  %16 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 2, !dbg !6180
  store i8 %15, i8* %16, align 1, !dbg !6181, !tbaa !5266
  %17 = and i8 %7, 64, !dbg !6182
  %18 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %1, i32 0, i32 3, !dbg !6183
  store i8 %17, i8* %18, align 1, !dbg !6184, !tbaa !5246
  %19 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %2, i32 0, i32 3, !dbg !6185
  store i8 0, i8* %19, align 1, !dbg !6186, !tbaa !5246
  %20 = lshr i32 %5, 8, !dbg !6187
  %21 = trunc i32 %20 to i8, !dbg !6188
  %22 = and i8 %21, 31, !dbg !6188
  %23 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %2, i32 0, i32 1, !dbg !6189
  store i8 %22, i8* %23, align 1, !dbg !6190, !tbaa !5261
  %24 = trunc i32 %5 to i8, !dbg !6191
  %25 = and i8 %24, 63, !dbg !6191
  %26 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %2, i32 0, i32 2, !dbg !6192
  store i8 %25, i8* %26, align 1, !dbg !6193, !tbaa !5266
  %27 = lshr i32 %5, 13, !dbg !6194
  %28 = trunc i32 %27 to i8, !dbg !6195
  %29 = and i8 %28, 7, !dbg !6195
  %30 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %2, i32 0, i32 0, !dbg !6196
  store i8 %29, i8* %30, align 1, !dbg !6197, !tbaa !5257
  %31 = icmp eq i32 %0, 0, !dbg !6198
  br i1 %31, label %32, label %63, !dbg !6200

32:                                               ; preds = %3
  %33 = load i8, i8* %9, align 1, !dbg !6201, !tbaa !5257
  call void @llvm.dbg.value(metadata i8 %33, metadata !5405, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !6203
  %34 = lshr i8 %33, 4, !dbg !6205
  %35 = mul nuw i8 %34, 10, !dbg !6206
  call void @llvm.dbg.value(metadata i8 %35, metadata !5408, metadata !DIExpression()), !dbg !6203
  %36 = and i8 %33, 15, !dbg !6207
  %37 = add nuw i8 %35, %36, !dbg !6208
  store i8 %37, i8* %9, align 1, !dbg !6209, !tbaa !5257
  %38 = load i8, i8* %13, align 1, !dbg !6210, !tbaa !5261
  call void @llvm.dbg.value(metadata i8 %38, metadata !5405, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !6211
  %39 = lshr i8 %38, 4, !dbg !6213
  %40 = mul nuw i8 %39, 10, !dbg !6214
  call void @llvm.dbg.value(metadata i8 %40, metadata !5408, metadata !DIExpression()), !dbg !6211
  %41 = and i8 %38, 15, !dbg !6215
  %42 = add nuw i8 %40, %41, !dbg !6216
  store i8 %42, i8* %13, align 1, !dbg !6217, !tbaa !5261
  %43 = load i8, i8* %16, align 1, !dbg !6218, !tbaa !5266
  call void @llvm.dbg.value(metadata i8 %43, metadata !5405, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !6219
  %44 = lshr i8 %43, 4, !dbg !6221
  %45 = mul nuw i8 %44, 10, !dbg !6222
  call void @llvm.dbg.value(metadata i8 %45, metadata !5408, metadata !DIExpression()), !dbg !6219
  %46 = and i8 %43, 15, !dbg !6223
  %47 = add nuw i8 %45, %46, !dbg !6224
  store i8 %47, i8* %16, align 1, !dbg !6225, !tbaa !5266
  %48 = load i8, i8* %23, align 1, !dbg !6226, !tbaa !5261
  call void @llvm.dbg.value(metadata i8 %48, metadata !5405, metadata !DIExpression()), !dbg !6227
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !6227
  %49 = lshr i8 %48, 4, !dbg !6229
  %50 = mul nuw i8 %49, 10, !dbg !6230
  call void @llvm.dbg.value(metadata i8 %50, metadata !5408, metadata !DIExpression()), !dbg !6227
  %51 = and i8 %48, 15, !dbg !6231
  %52 = add nuw i8 %50, %51, !dbg !6232
  store i8 %52, i8* %23, align 1, !dbg !6233, !tbaa !5261
  %53 = load i8, i8* %26, align 1, !dbg !6234, !tbaa !5266
  call void @llvm.dbg.value(metadata i8 %53, metadata !5405, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !6235
  %54 = lshr i8 %53, 4, !dbg !6237
  %55 = mul nuw i8 %54, 10, !dbg !6238
  call void @llvm.dbg.value(metadata i8 %55, metadata !5408, metadata !DIExpression()), !dbg !6235
  %56 = and i8 %53, 15, !dbg !6239
  %57 = add nuw i8 %55, %56, !dbg !6240
  store i8 %57, i8* %26, align 1, !dbg !6241, !tbaa !5266
  %58 = load i8, i8* %30, align 1, !dbg !6242, !tbaa !5257
  call void @llvm.dbg.value(metadata i8 %58, metadata !5405, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata i8 0, metadata !5408, metadata !DIExpression()), !dbg !6243
  %59 = lshr i8 %58, 4, !dbg !6245
  %60 = mul nuw i8 %59, 10, !dbg !6246
  call void @llvm.dbg.value(metadata i8 %60, metadata !5408, metadata !DIExpression()), !dbg !6243
  %61 = and i8 %58, 15, !dbg !6247
  %62 = add nuw i8 %60, %61, !dbg !6248
  store i8 %62, i8* %30, align 1, !dbg !6249, !tbaa !5257
  br label %63, !dbg !6250

63:                                               ; preds = %32, %3
  ret void, !dbg !6251
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_GetTimeStampSubSecond() local_unnamed_addr #0 !dbg !6252 {
  %1 = load volatile i32, i32* inttoptr (i32 1073752120 to i32*), align 8, !dbg !6253, !tbaa !6254
  ret i32 %1, !dbg !6255
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TamperTriggerConfig(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !6256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6258, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.value(metadata i32 %1, metadata !6259, metadata !DIExpression()), !dbg !6260
  %3 = icmp eq i32 %1, 0, !dbg !6261
  %4 = shl i32 %0, 1, !dbg !6263
  br i1 %3, label %5, label %9, !dbg !6264

5:                                                ; preds = %2
  %6 = xor i32 %4, -1, !dbg !6265
  %7 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6267, !tbaa !5007
  %8 = and i32 %7, %6, !dbg !6267
  br label %12, !dbg !6268

9:                                                ; preds = %2
  %10 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6269, !tbaa !5007
  %11 = or i32 %10, %4, !dbg !6269
  br label %12

12:                                               ; preds = %9, %5
  %13 = phi i32 [ %11, %9 ], [ %8, %5 ]
  store volatile i32 %13, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6263, !tbaa !5007
  ret void, !dbg !6271
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TamperCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !6272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6274, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata i32 %1, metadata !6275, metadata !DIExpression()), !dbg !6276
  %3 = icmp eq i32 %1, 0, !dbg !6277
  br i1 %3, label %7, label %4, !dbg !6279

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6280, !tbaa !5007
  %6 = or i32 %5, %0, !dbg !6280
  br label %11, !dbg !6282

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !6283
  %9 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6285, !tbaa !5007
  %10 = and i32 %9, %8, !dbg !6285
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6286, !tbaa !5007
  ret void, !dbg !6287
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TamperFilterConfig(i32 %0) local_unnamed_addr #0 !dbg !6288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6290, metadata !DIExpression()), !dbg !6291
  %2 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6292, !tbaa !5007
  %3 = and i32 %2, -6145, !dbg !6292
  store volatile i32 %3, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6292, !tbaa !5007
  %4 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6293, !tbaa !5007
  %5 = or i32 %4, %0, !dbg !6293
  store volatile i32 %5, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6293, !tbaa !5007
  ret void, !dbg !6294
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TamperSamplingFreqConfig(i32 %0) local_unnamed_addr #0 !dbg !6295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6297, metadata !DIExpression()), !dbg !6298
  %2 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6299, !tbaa !5007
  %3 = and i32 %2, -1793, !dbg !6299
  store volatile i32 %3, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6299, !tbaa !5007
  %4 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6300, !tbaa !5007
  %5 = or i32 %4, %0, !dbg !6300
  store volatile i32 %5, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6300, !tbaa !5007
  ret void, !dbg !6301
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TamperPinsPrechargeDuration(i32 %0) local_unnamed_addr #0 !dbg !6302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6304, metadata !DIExpression()), !dbg !6305
  %2 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6306, !tbaa !5007
  %3 = and i32 %2, -24577, !dbg !6306
  store volatile i32 %3, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6306, !tbaa !5007
  %4 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6307, !tbaa !5007
  %5 = or i32 %4, %0, !dbg !6307
  store volatile i32 %5, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6307, !tbaa !5007
  ret void, !dbg !6308
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TimeStampOnTamperDetectionCmd(i32 %0) local_unnamed_addr #0 !dbg !6309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6311, metadata !DIExpression()), !dbg !6312
  %2 = icmp eq i32 %0, 0, !dbg !6313
  %3 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6315, !tbaa !5007
  %4 = and i32 %3, -129, !dbg !6316
  %5 = select i1 %2, i32 0, i32 128, !dbg !6316
  %6 = or i32 %4, %5, !dbg !6316
  store volatile i32 %6, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6315, !tbaa !5007
  ret void, !dbg !6317
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TamperPullUpCmd(i32 %0) local_unnamed_addr #0 !dbg !6318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6320, metadata !DIExpression()), !dbg !6321
  %2 = icmp eq i32 %0, 0, !dbg !6322
  %3 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6324, !tbaa !5007
  %4 = and i32 %3, -32769, !dbg !6325
  %5 = select i1 %2, i32 32768, i32 0, !dbg !6325
  %6 = or i32 %4, %5, !dbg !6325
  store volatile i32 %6, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6324, !tbaa !5007
  ret void, !dbg !6326
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @RTC_WriteBackupRegister(i32 %0, i32 %1) local_unnamed_addr #3 !dbg !6327 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6329, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.value(metadata i32 %1, metadata !6330, metadata !DIExpression()), !dbg !6332
  %4 = bitcast i32* %3 to i8*, !dbg !6333
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !6333
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6331, metadata !DIExpression()), !dbg !6334
  store volatile i32 0, i32* %3, align 4, !dbg !6334, !tbaa !894
  store volatile i32 1073752144, i32* %3, align 4, !dbg !6335, !tbaa !894
  %5 = shl i32 %0, 2, !dbg !6336
  %6 = load volatile i32, i32* %3, align 4, !dbg !6337, !tbaa !894
  %7 = add i32 %6, %5, !dbg !6337
  store volatile i32 %7, i32* %3, align 4, !dbg !6337, !tbaa !894
  %8 = load volatile i32, i32* %3, align 4, !dbg !6338, !tbaa !894
  %9 = inttoptr i32 %8 to i32*, !dbg !6339
  store volatile i32 %1, i32* %9, align 4, !dbg !6340, !tbaa !894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !6341
  ret void, !dbg !6341
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_ReadBackupRegister(i32 %0) local_unnamed_addr #3 !dbg !6342 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6344, metadata !DIExpression()), !dbg !6346
  %3 = bitcast i32* %2 to i8*, !dbg !6347
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !6347
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6345, metadata !DIExpression()), !dbg !6348
  store volatile i32 0, i32* %2, align 4, !dbg !6348, !tbaa !894
  store volatile i32 1073752144, i32* %2, align 4, !dbg !6349, !tbaa !894
  %4 = shl i32 %0, 2, !dbg !6350
  %5 = load volatile i32, i32* %2, align 4, !dbg !6351, !tbaa !894
  %6 = add i32 %5, %4, !dbg !6351
  store volatile i32 %6, i32* %2, align 4, !dbg !6351, !tbaa !894
  %7 = load volatile i32, i32* %2, align 4, !dbg !6352, !tbaa !894
  %8 = inttoptr i32 %7 to i32*, !dbg !6353
  %9 = load volatile i32, i32* %8, align 4, !dbg !6354, !tbaa !894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !6355
  ret i32 %9, !dbg !6356
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TamperPinSelection(i32 %0) local_unnamed_addr #0 !dbg !6357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6359, metadata !DIExpression()), !dbg !6360
  %2 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6361, !tbaa !5007
  %3 = and i32 %2, -65537, !dbg !6361
  store volatile i32 %3, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6361, !tbaa !5007
  %4 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6362, !tbaa !5007
  %5 = or i32 %4, %0, !dbg !6362
  store volatile i32 %5, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6362, !tbaa !5007
  ret void, !dbg !6363
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_TimeStampPinSelection(i32 %0) local_unnamed_addr #0 !dbg !6364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6366, metadata !DIExpression()), !dbg !6367
  %2 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6368, !tbaa !5007
  %3 = and i32 %2, -131073, !dbg !6368
  store volatile i32 %3, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6368, !tbaa !5007
  %4 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6369, !tbaa !5007
  %5 = or i32 %4, %0, !dbg !6369
  store volatile i32 %5, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6369, !tbaa !5007
  ret void, !dbg !6370
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_OutputTypeConfig(i32 %0) local_unnamed_addr #0 !dbg !6371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6373, metadata !DIExpression()), !dbg !6374
  %2 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6375, !tbaa !5007
  %3 = and i32 %2, -262145, !dbg !6375
  store volatile i32 %3, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6375, !tbaa !5007
  %4 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6376, !tbaa !5007
  %5 = or i32 %4, %0, !dbg !6376
  store volatile i32 %5, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6376, !tbaa !5007
  ret void, !dbg !6377
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_SynchroShiftConfig(i32 %0, i32 %1) local_unnamed_addr #3 !dbg !6378 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6380, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata i32 %1, metadata !6381, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata i32 0, metadata !6382, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata i32 0, metadata !6383, metadata !DIExpression()), !dbg !6384
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6385, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6386, !tbaa !4933
  %4 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6387, !tbaa !4948
  %5 = and i32 %4, 8, !dbg !6389
  %6 = icmp eq i32 %5, 0, !dbg !6390
  br i1 %6, label %14, label %7, !dbg !6391

7:                                                ; preds = %2, %77
  %8 = phi i32 [ %81, %77 ], [ 0, %2 ], !dbg !6384
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression()), !dbg !6384
  %9 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6392, !tbaa !4948
  %10 = and i32 %9, 8, !dbg !6394
  %11 = icmp ne i32 %10, 0, !dbg !6395
  %12 = icmp ne i32 %8, 4096, !dbg !6396
  %13 = and i1 %12, %11, !dbg !6396
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6384
  br i1 %13, label %69, label %14, !dbg !6397, !llvm.loop !6398

14:                                               ; preds = %7, %77, %69, %73, %2
  %15 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6400, !tbaa !4948
  %16 = and i32 %15, 8, !dbg !6402
  %17 = icmp eq i32 %16, 0, !dbg !6403
  br i1 %17, label %18, label %40, !dbg !6404

18:                                               ; preds = %14
  %19 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6405, !tbaa !4976
  %20 = and i32 %19, 16, !dbg !6408
  %21 = icmp eq i32 %20, 0, !dbg !6409
  br i1 %21, label %22, label %40, !dbg !6410

22:                                               ; preds = %18
  %23 = or i32 %1, %0, !dbg !6411
  store volatile i32 %23, i32* inttoptr (i32 1073752108 to i32*), align 4, !dbg !6413, !tbaa !6414
  %24 = bitcast i32* %3 to i8*, !dbg !6415
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !6415
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5011, metadata !DIExpression()) #6, !dbg !6418
  store volatile i32 0, i32* %3, align 4, !dbg !6418, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !5012, metadata !DIExpression()) #6, !dbg !6419
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()) #6, !dbg !6419
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6420, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6421, !tbaa !4933
  %25 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6422, !tbaa !4948
  %26 = and i32 %25, -161, !dbg !6422
  store volatile i32 %26, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6422, !tbaa !4948
  br label %27, !dbg !6423

27:                                               ; preds = %60, %22
  %28 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6424, !tbaa !4948
  %29 = and i32 %28, 32, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %29, metadata !5013, metadata !DIExpression()) #6, !dbg !6419
  %30 = load volatile i32, i32* %3, align 4, !dbg !6426, !tbaa !894
  %31 = add i32 %30, 1, !dbg !6426
  store volatile i32 %31, i32* %3, align 4, !dbg !6426, !tbaa !894
  %32 = load volatile i32, i32* %3, align 4, !dbg !6427, !tbaa !894
  %33 = icmp ne i32 %32, 131072, !dbg !6428
  %34 = icmp eq i32 %29, 0, !dbg !6429
  %35 = and i1 %34, %33, !dbg !6429
  br i1 %35, label %42, label %36, !dbg !6430, !llvm.loop !6431

36:                                               ; preds = %60, %51, %42, %27
  %37 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6433, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 %37, metadata !5012, metadata !DIExpression(DW_OP_constu, 5, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)) #6, !dbg !6419
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6434, !tbaa !4933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !6435
  %38 = lshr i32 %37, 5
  %39 = and i32 %38, 1
  br label %40

40:                                               ; preds = %14, %18, %36
  %41 = phi i32 [ %39, %36 ], [ 0, %18 ], [ 0, %14 ], !dbg !6436
  call void @llvm.dbg.value(metadata i32 %41, metadata !6382, metadata !DIExpression()), !dbg !6384
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6437, !tbaa !4933
  ret i32 %41, !dbg !6438

42:                                               ; preds = %27
  %43 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6424, !tbaa !4948
  %44 = and i32 %43, 32, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %44, metadata !5013, metadata !DIExpression()) #6, !dbg !6419
  %45 = load volatile i32, i32* %3, align 4, !dbg !6426, !tbaa !894
  %46 = add i32 %45, 1, !dbg !6426
  store volatile i32 %46, i32* %3, align 4, !dbg !6426, !tbaa !894
  %47 = load volatile i32, i32* %3, align 4, !dbg !6427, !tbaa !894
  %48 = icmp ne i32 %47, 131072, !dbg !6428
  %49 = icmp eq i32 %44, 0, !dbg !6429
  %50 = and i1 %49, %48, !dbg !6429
  br i1 %50, label %51, label %36, !dbg !6430, !llvm.loop !6431

51:                                               ; preds = %42
  %52 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6424, !tbaa !4948
  %53 = and i32 %52, 32, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %53, metadata !5013, metadata !DIExpression()) #6, !dbg !6419
  %54 = load volatile i32, i32* %3, align 4, !dbg !6426, !tbaa !894
  %55 = add i32 %54, 1, !dbg !6426
  store volatile i32 %55, i32* %3, align 4, !dbg !6426, !tbaa !894
  %56 = load volatile i32, i32* %3, align 4, !dbg !6427, !tbaa !894
  %57 = icmp ne i32 %56, 131072, !dbg !6428
  %58 = icmp eq i32 %53, 0, !dbg !6429
  %59 = and i1 %58, %57, !dbg !6429
  br i1 %59, label %60, label %36, !dbg !6430, !llvm.loop !6431

60:                                               ; preds = %51
  %61 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6424, !tbaa !4948
  %62 = and i32 %61, 32, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %62, metadata !5013, metadata !DIExpression()) #6, !dbg !6419
  %63 = load volatile i32, i32* %3, align 4, !dbg !6426, !tbaa !894
  %64 = add i32 %63, 1, !dbg !6426
  store volatile i32 %64, i32* %3, align 4, !dbg !6426, !tbaa !894
  %65 = load volatile i32, i32* %3, align 4, !dbg !6427, !tbaa !894
  %66 = icmp ne i32 %65, 131072, !dbg !6428
  %67 = icmp eq i32 %62, 0, !dbg !6429
  %68 = and i1 %67, %66, !dbg !6429
  br i1 %68, label %27, label %36, !dbg !6430, !llvm.loop !6431

69:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression(DW_OP_constu, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6384
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6384
  %70 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6392, !tbaa !4948
  %71 = and i32 %70, 8, !dbg !6394
  %72 = icmp eq i32 %71, 0, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !6384
  br i1 %72, label %14, label %73, !dbg !6397, !llvm.loop !6398

73:                                               ; preds = %69
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !6384
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !6384
  %74 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6392, !tbaa !4948
  %75 = and i32 %74, 8, !dbg !6394
  %76 = icmp eq i32 %75, 0, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !6384
  br i1 %76, label %14, label %77, !dbg !6397, !llvm.loop !6398

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression(DW_OP_constu, 3, DW_OP_or, DW_OP_stack_value)), !dbg !6384
  call void @llvm.dbg.value(metadata i32 %8, metadata !6383, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !6384
  %78 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6392, !tbaa !4948
  %79 = and i32 %78, 8, !dbg !6394
  %80 = icmp eq i32 %79, 0, !dbg !6395
  %81 = add nuw nsw i32 %8, 4, !dbg !6439
  call void @llvm.dbg.value(metadata i32 %81, metadata !6383, metadata !DIExpression()), !dbg !6384
  br i1 %80, label %14, label %7, !dbg !6397, !llvm.loop !6398
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_ITConfig(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !6441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6443, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 %1, metadata !6444, metadata !DIExpression()), !dbg !6445
  store volatile i32 202, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6446, !tbaa !4933
  store volatile i32 83, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6447, !tbaa !4933
  %3 = icmp eq i32 %1, 0, !dbg !6448
  %4 = and i32 %0, -5, !dbg !6450
  br i1 %3, label %11, label %5, !dbg !6451

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6452, !tbaa !4976
  %7 = or i32 %6, %4, !dbg !6452
  store volatile i32 %7, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6452, !tbaa !4976
  %8 = and i32 %0, 4, !dbg !6454
  %9 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6455, !tbaa !5007
  %10 = or i32 %9, %8, !dbg !6455
  br label %19, !dbg !6456

11:                                               ; preds = %2
  %12 = xor i32 %4, -1, !dbg !6457
  %13 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6459, !tbaa !4976
  %14 = and i32 %13, %12, !dbg !6459
  store volatile i32 %14, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6459, !tbaa !4976
  %15 = and i32 %0, 4, !dbg !6460
  %16 = xor i32 %15, -1, !dbg !6461
  %17 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6462, !tbaa !5007
  %18 = and i32 %17, %16, !dbg !6462
  br label %19

19:                                               ; preds = %11, %5
  %20 = phi i32 [ %18, %11 ], [ %10, %5 ]
  store volatile i32 %20, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6450, !tbaa !5007
  store volatile i32 255, i32* inttoptr (i32 1073752100 to i32*), align 4, !dbg !6463, !tbaa !4933
  ret void, !dbg !6464
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_GetFlagStatus(i32 %0) local_unnamed_addr #0 !dbg !6465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6467, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32 0, metadata !6468, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32 0, metadata !6469, metadata !DIExpression()), !dbg !6470
  %2 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6471, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 undef, metadata !6469, metadata !DIExpression()), !dbg !6470
  %3 = and i32 %0, 16247, !dbg !6472
  %4 = and i32 %3, %2, !dbg !6473
  %5 = icmp ne i32 %4, 0, !dbg !6475
  %6 = zext i1 %5 to i32
  call void @llvm.dbg.value(metadata i32 %6, metadata !6468, metadata !DIExpression()), !dbg !6470
  ret i32 %6, !dbg !6476
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_ClearFlag(i32 %0) local_unnamed_addr #0 !dbg !6477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6479, metadata !DIExpression()), !dbg !6480
  %2 = and i32 %0, 65407, !dbg !6481
  %3 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6482, !tbaa !4948
  %4 = and i32 %3, 128, !dbg !6483
  %5 = or i32 %4, %2, !dbg !6484
  %6 = xor i32 %5, -129, !dbg !6484
  store volatile i32 %6, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6485, !tbaa !4948
  ret void, !dbg !6486
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @RTC_GetITStatus(i32 %0) local_unnamed_addr #0 !dbg !6487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6489, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i32 0, metadata !6490, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i32 0, metadata !6491, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i32 0, metadata !6492, metadata !DIExpression()), !dbg !6493
  %2 = load volatile i32, i32* inttoptr (i32 1073752128 to i32*), align 64, !dbg !6494, !tbaa !5007
  call void @llvm.dbg.value(metadata i32 undef, metadata !6491, metadata !DIExpression()), !dbg !6493
  %3 = load volatile i32, i32* inttoptr (i32 1073752072 to i32*), align 8, !dbg !6495, !tbaa !4976
  %4 = and i32 %3, %0, !dbg !6496
  %5 = lshr i32 %0, 15, !dbg !6497
  %6 = and i32 %5, 4, !dbg !6498
  %7 = and i32 %6, %2, !dbg !6499
  %8 = or i32 %4, %7, !dbg !6500
  call void @llvm.dbg.value(metadata i32 %8, metadata !6492, metadata !DIExpression()), !dbg !6493
  %9 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6501, !tbaa !4948
  call void @llvm.dbg.value(metadata i32 undef, metadata !6491, metadata !DIExpression()), !dbg !6493
  %10 = icmp eq i32 %8, 0, !dbg !6502
  br i1 %10, label %16, label %11, !dbg !6504

11:                                               ; preds = %1
  %12 = lshr i32 %0, 4, !dbg !6505
  call void @llvm.dbg.value(metadata i32 undef, metadata !6491, metadata !DIExpression()), !dbg !6493
  %13 = and i32 %12, 65535, !dbg !6506
  %14 = and i32 %13, %9, !dbg !6507
  %15 = icmp eq i32 %14, 0, !dbg !6508
  br i1 %15, label %16, label %17, !dbg !6509

16:                                               ; preds = %11, %1
  call void @llvm.dbg.value(metadata i32 0, metadata !6490, metadata !DIExpression()), !dbg !6493
  br label %17

17:                                               ; preds = %11, %16
  %18 = phi i32 [ 0, %16 ], [ 1, %11 ], !dbg !6510
  call void @llvm.dbg.value(metadata i32 %18, metadata !6490, metadata !DIExpression()), !dbg !6493
  ret i32 %18, !dbg !6511
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @RTC_ClearITPendingBit(i32 %0) local_unnamed_addr #0 !dbg !6512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6514, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 0, metadata !6515, metadata !DIExpression()), !dbg !6516
  %2 = lshr i32 %0, 4, !dbg !6517
  call void @llvm.dbg.value(metadata i32 %2, metadata !6515, metadata !DIExpression()), !dbg !6516
  %3 = and i32 %2, 65407, !dbg !6518
  %4 = load volatile i32, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6519, !tbaa !4948
  %5 = and i32 %4, 128, !dbg !6520
  %6 = or i32 %5, %3, !dbg !6521
  %7 = xor i32 %6, -129, !dbg !6521
  store volatile i32 %7, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !6522, !tbaa !4948
  ret void, !dbg !6523
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRC_ResetDR() local_unnamed_addr #0 !dbg !6524 {
  store volatile i32 1, i32* inttoptr (i32 1073885192 to i32*), align 8, !dbg !6525, !tbaa !6526
  ret void, !dbg !6528
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @CRC_CalcCRC(i32 %0) local_unnamed_addr #0 !dbg !6529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6531, metadata !DIExpression()), !dbg !6532
  store volatile i32 %0, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6533, !tbaa !6534
  %2 = load volatile i32, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6535, !tbaa !6534
  ret i32 %2, !dbg !6536
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @CRC_CalcBlockCRC(i32* nocapture readonly %0, i32 %1) local_unnamed_addr #0 !dbg !6537 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6541, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.value(metadata i32 %1, metadata !6542, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.value(metadata i32 0, metadata !6543, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.value(metadata i32 0, metadata !6543, metadata !DIExpression()), !dbg !6544
  %3 = icmp eq i32 %1, 0, !dbg !6545
  br i1 %3, label %34, label %4, !dbg !6548

4:                                                ; preds = %2
  %5 = add i32 %1, -1, !dbg !6548
  %6 = and i32 %1, 3, !dbg !6548
  %7 = icmp ult i32 %5, 3, !dbg !6548
  br i1 %7, label %27, label %8, !dbg !6548

8:                                                ; preds = %4
  %9 = and i32 %1, -4, !dbg !6548
  br label %10, !dbg !6548

10:                                               ; preds = %10, %8
  %11 = phi i32 [ 0, %8 ], [ %24, %10 ]
  %12 = phi i32 [ %9, %8 ], [ %25, %10 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6543, metadata !DIExpression()), !dbg !6544
  %13 = getelementptr inbounds i32, i32* %0, i32 %11, !dbg !6549
  %14 = load i32, i32* %13, align 4, !dbg !6549, !tbaa !894
  store volatile i32 %14, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6551, !tbaa !6534
  %15 = or i32 %11, 1, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %15, metadata !6543, metadata !DIExpression()), !dbg !6544
  %16 = getelementptr inbounds i32, i32* %0, i32 %15, !dbg !6549
  %17 = load i32, i32* %16, align 4, !dbg !6549, !tbaa !894
  store volatile i32 %17, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6551, !tbaa !6534
  %18 = or i32 %11, 2, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %18, metadata !6543, metadata !DIExpression()), !dbg !6544
  %19 = getelementptr inbounds i32, i32* %0, i32 %18, !dbg !6549
  %20 = load i32, i32* %19, align 4, !dbg !6549, !tbaa !894
  store volatile i32 %20, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6551, !tbaa !6534
  %21 = or i32 %11, 3, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %21, metadata !6543, metadata !DIExpression()), !dbg !6544
  %22 = getelementptr inbounds i32, i32* %0, i32 %21, !dbg !6549
  %23 = load i32, i32* %22, align 4, !dbg !6549, !tbaa !894
  store volatile i32 %23, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6551, !tbaa !6534
  %24 = add nuw i32 %11, 4, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %24, metadata !6543, metadata !DIExpression()), !dbg !6544
  %25 = add i32 %12, -4, !dbg !6548
  %26 = icmp eq i32 %25, 0, !dbg !6548
  br i1 %26, label %27, label %10, !dbg !6548, !llvm.loop !6553

27:                                               ; preds = %10, %4
  %28 = phi i32 [ 0, %4 ], [ %24, %10 ]
  %29 = icmp eq i32 %6, 0, !dbg !6548
  br i1 %29, label %34, label %30, !dbg !6548

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %28, metadata !6543, metadata !DIExpression()), !dbg !6544
  %31 = getelementptr inbounds i32, i32* %0, i32 %28, !dbg !6549
  %32 = load i32, i32* %31, align 4, !dbg !6549, !tbaa !894
  store volatile i32 %32, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6551, !tbaa !6534
  call void @llvm.dbg.value(metadata i32 %28, metadata !6543, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6544
  %33 = icmp eq i32 %6, 1, !dbg !6548
  br i1 %33, label %34, label %36, !dbg !6548

34:                                               ; preds = %27, %36, %30, %41, %2
  %35 = load volatile i32, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6555, !tbaa !6534
  ret i32 %35, !dbg !6556

36:                                               ; preds = %30
  %37 = add nuw i32 %28, 1, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %37, metadata !6543, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.value(metadata i32 %28, metadata !6543, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6544
  %38 = getelementptr inbounds i32, i32* %0, i32 %37, !dbg !6549
  %39 = load i32, i32* %38, align 4, !dbg !6549, !tbaa !894
  store volatile i32 %39, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6551, !tbaa !6534
  call void @llvm.dbg.value(metadata i32 %28, metadata !6543, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6544
  %40 = icmp eq i32 %6, 2, !dbg !6548
  br i1 %40, label %34, label %41, !dbg !6548

41:                                               ; preds = %36
  %42 = add nuw i32 %28, 2, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %42, metadata !6543, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.value(metadata i32 %28, metadata !6543, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6544
  %43 = getelementptr inbounds i32, i32* %0, i32 %42, !dbg !6549
  %44 = load i32, i32* %43, align 4, !dbg !6549, !tbaa !894
  store volatile i32 %44, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6551, !tbaa !6534
  call void @llvm.dbg.value(metadata i32 %28, metadata !6543, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6544
  br label %34
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @CRC_GetCRC() local_unnamed_addr #0 !dbg !6557 {
  %1 = load volatile i32, i32* inttoptr (i32 1073885184 to i32*), align 4096, !dbg !6558, !tbaa !6534
  ret i32 %1, !dbg !6559
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRC_SetIDRegister(i8 zeroext %0) local_unnamed_addr #0 !dbg !6560 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6562, metadata !DIExpression()), !dbg !6563
  store volatile i8 %0, i8* inttoptr (i32 1073885188 to i8*), align 4, !dbg !6564, !tbaa !6565
  ret void, !dbg !6566
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @CRC_GetIDRegister() local_unnamed_addr #0 !dbg !6567 {
  %1 = load volatile i8, i8* inttoptr (i32 1073885188 to i8*), align 4, !dbg !6568, !tbaa !6565
  ret i8 %1, !dbg !6569
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_NORSRAMDeInit(i32 %0) local_unnamed_addr #0 !dbg !6570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6572, metadata !DIExpression()), !dbg !6573
  %2 = icmp eq i32 %0, 0, !dbg !6574
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -1610612736 to [8 x i32]*), i32 0, i32 %0, !dbg !6576
  %4 = select i1 %2, i32 12507, i32 12498, !dbg !6577
  store volatile i32 %4, i32* %3, align 4, !dbg !6576, !tbaa !894
  %5 = add i32 %0, 1, !dbg !6578
  %6 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -1610612736 to [8 x i32]*), i32 0, i32 %5, !dbg !6579
  store volatile i32 268435455, i32* %6, align 4, !dbg !6580, !tbaa !894
  %7 = getelementptr inbounds [7 x i32], [7 x i32]* inttoptr (i32 -1610612476 to [7 x i32]*), i32 0, i32 %0, !dbg !6581
  store volatile i32 268435455, i32* %7, align 4, !dbg !6582, !tbaa !894
  ret void, !dbg !6583
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_NORSRAMInit(%struct.FSMC_NORSRAMInitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !6584 {
  call void @llvm.dbg.value(metadata %struct.FSMC_NORSRAMInitTypeDef* %0, metadata !6619, metadata !DIExpression()), !dbg !6620
  %2 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 1, !dbg !6621
  %3 = load i32, i32* %2, align 4, !dbg !6621, !tbaa !6622
  %4 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 2, !dbg !6625
  %5 = load i32, i32* %4, align 4, !dbg !6625, !tbaa !6626
  %6 = or i32 %5, %3, !dbg !6627
  %7 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 3, !dbg !6628
  %8 = load i32, i32* %7, align 4, !dbg !6628, !tbaa !6629
  %9 = or i32 %6, %8, !dbg !6630
  %10 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 4, !dbg !6631
  %11 = load i32, i32* %10, align 4, !dbg !6631, !tbaa !6632
  %12 = or i32 %9, %11, !dbg !6633
  %13 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 5, !dbg !6634
  %14 = load i32, i32* %13, align 4, !dbg !6634, !tbaa !6635
  %15 = or i32 %12, %14, !dbg !6636
  %16 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 6, !dbg !6637
  %17 = load i32, i32* %16, align 4, !dbg !6637, !tbaa !6638
  %18 = or i32 %15, %17, !dbg !6639
  %19 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 7, !dbg !6640
  %20 = load i32, i32* %19, align 4, !dbg !6640, !tbaa !6641
  %21 = or i32 %18, %20, !dbg !6642
  %22 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 8, !dbg !6643
  %23 = load i32, i32* %22, align 4, !dbg !6643, !tbaa !6644
  %24 = or i32 %21, %23, !dbg !6645
  %25 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 9, !dbg !6646
  %26 = load i32, i32* %25, align 4, !dbg !6646, !tbaa !6647
  %27 = or i32 %24, %26, !dbg !6648
  %28 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 10, !dbg !6649
  %29 = load i32, i32* %28, align 4, !dbg !6649, !tbaa !6650
  %30 = or i32 %27, %29, !dbg !6651
  %31 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 11, !dbg !6652
  %32 = load i32, i32* %31, align 4, !dbg !6652, !tbaa !6653
  %33 = or i32 %30, %32, !dbg !6654
  %34 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 12, !dbg !6655
  %35 = load i32, i32* %34, align 4, !dbg !6655, !tbaa !6656
  %36 = or i32 %33, %35, !dbg !6657
  %37 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 0, !dbg !6658
  %38 = load i32, i32* %37, align 4, !dbg !6658, !tbaa !6659
  %39 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -1610612736 to [8 x i32]*), i32 0, i32 %38, !dbg !6660
  store volatile i32 %36, i32* %39, align 4, !dbg !6661, !tbaa !894
  %40 = load i32, i32* %4, align 4, !dbg !6662, !tbaa !6626
  %41 = icmp eq i32 %40, 8, !dbg !6664
  br i1 %41, label %42, label %47, !dbg !6665

42:                                               ; preds = %1
  %43 = load i32, i32* %37, align 4, !dbg !6666, !tbaa !6659
  %44 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -1610612736 to [8 x i32]*), i32 0, i32 %43, !dbg !6668
  %45 = load volatile i32, i32* %44, align 4, !dbg !6669, !tbaa !894
  %46 = or i32 %45, 64, !dbg !6669
  store volatile i32 %46, i32* %44, align 4, !dbg !6669, !tbaa !894
  br label %47, !dbg !6670

47:                                               ; preds = %42, %1
  %48 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 13, !dbg !6671
  %49 = load %struct.FSMC_NORSRAMTimingInitTypeDef*, %struct.FSMC_NORSRAMTimingInitTypeDef** %48, align 4, !dbg !6671, !tbaa !6672
  %50 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %49, i32 0, i32 0, !dbg !6673
  %51 = load i32, i32* %50, align 4, !dbg !6673, !tbaa !6674
  %52 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %49, i32 0, i32 1, !dbg !6676
  %53 = load i32, i32* %52, align 4, !dbg !6676, !tbaa !6677
  %54 = shl i32 %53, 4, !dbg !6678
  %55 = or i32 %54, %51, !dbg !6679
  %56 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %49, i32 0, i32 2, !dbg !6680
  %57 = load i32, i32* %56, align 4, !dbg !6680, !tbaa !6681
  %58 = shl i32 %57, 8, !dbg !6682
  %59 = or i32 %55, %58, !dbg !6683
  %60 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %49, i32 0, i32 3, !dbg !6684
  %61 = load i32, i32* %60, align 4, !dbg !6684, !tbaa !6685
  %62 = shl i32 %61, 16, !dbg !6686
  %63 = or i32 %59, %62, !dbg !6687
  %64 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %49, i32 0, i32 4, !dbg !6688
  %65 = load i32, i32* %64, align 4, !dbg !6688, !tbaa !6689
  %66 = shl i32 %65, 20, !dbg !6690
  %67 = or i32 %63, %66, !dbg !6691
  %68 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %49, i32 0, i32 5, !dbg !6692
  %69 = load i32, i32* %68, align 4, !dbg !6692, !tbaa !6693
  %70 = shl i32 %69, 24, !dbg !6694
  %71 = or i32 %67, %70, !dbg !6695
  %72 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %49, i32 0, i32 6, !dbg !6696
  %73 = load i32, i32* %72, align 4, !dbg !6696, !tbaa !6697
  %74 = or i32 %71, %73, !dbg !6698
  %75 = load i32, i32* %37, align 4, !dbg !6699, !tbaa !6659
  %76 = add i32 %75, 1, !dbg !6700
  %77 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -1610612736 to [8 x i32]*), i32 0, i32 %76, !dbg !6701
  store volatile i32 %74, i32* %77, align 4, !dbg !6702, !tbaa !894
  %78 = load i32, i32* %31, align 4, !dbg !6703, !tbaa !6653
  %79 = icmp eq i32 %78, 16384, !dbg !6705
  br i1 %79, label %80, label %104, !dbg !6706

80:                                               ; preds = %47
  %81 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 14, !dbg !6707
  %82 = load %struct.FSMC_NORSRAMTimingInitTypeDef*, %struct.FSMC_NORSRAMTimingInitTypeDef** %81, align 4, !dbg !6707, !tbaa !6709
  %83 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %82, i32 0, i32 0, !dbg !6710
  %84 = load i32, i32* %83, align 4, !dbg !6710, !tbaa !6674
  %85 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %82, i32 0, i32 1, !dbg !6711
  %86 = load i32, i32* %85, align 4, !dbg !6711, !tbaa !6677
  %87 = shl i32 %86, 4, !dbg !6712
  %88 = or i32 %87, %84, !dbg !6713
  %89 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %82, i32 0, i32 2, !dbg !6714
  %90 = load i32, i32* %89, align 4, !dbg !6714, !tbaa !6681
  %91 = shl i32 %90, 8, !dbg !6715
  %92 = or i32 %88, %91, !dbg !6716
  %93 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %82, i32 0, i32 4, !dbg !6717
  %94 = load i32, i32* %93, align 4, !dbg !6717, !tbaa !6689
  %95 = shl i32 %94, 20, !dbg !6718
  %96 = or i32 %92, %95, !dbg !6719
  %97 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %82, i32 0, i32 5, !dbg !6720
  %98 = load i32, i32* %97, align 4, !dbg !6720, !tbaa !6693
  %99 = shl i32 %98, 24, !dbg !6721
  %100 = or i32 %96, %99, !dbg !6722
  %101 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %82, i32 0, i32 6, !dbg !6723
  %102 = load i32, i32* %101, align 4, !dbg !6723, !tbaa !6697
  %103 = or i32 %100, %102, !dbg !6724
  br label %104, !dbg !6725

104:                                              ; preds = %47, %80
  %105 = phi i32 [ %103, %80 ], [ 268435455, %47 ]
  %106 = load i32, i32* %37, align 4, !dbg !6726, !tbaa !6659
  %107 = getelementptr inbounds [7 x i32], [7 x i32]* inttoptr (i32 -1610612476 to [7 x i32]*), i32 0, i32 %106, !dbg !6726
  store volatile i32 %105, i32* %107, align 4, !dbg !6726, !tbaa !894
  ret void, !dbg !6727
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_NORSRAMStructInit(%struct.FSMC_NORSRAMInitTypeDef* nocapture %0) local_unnamed_addr #0 !dbg !6728 {
  call void @llvm.dbg.value(metadata %struct.FSMC_NORSRAMInitTypeDef* %0, metadata !6730, metadata !DIExpression()), !dbg !6731
  %2 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 0, !dbg !6732
  store i32 0, i32* %2, align 4, !dbg !6733, !tbaa !6659
  %3 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 1, !dbg !6734
  store i32 2, i32* %3, align 4, !dbg !6735, !tbaa !6622
  %4 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 2, !dbg !6736
  store i32 0, i32* %4, align 4, !dbg !6737, !tbaa !6626
  %5 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 3, !dbg !6738
  store i32 0, i32* %5, align 4, !dbg !6739, !tbaa !6629
  %6 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 4, !dbg !6740
  store i32 0, i32* %6, align 4, !dbg !6741, !tbaa !6632
  %7 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 5, !dbg !6742
  store i32 0, i32* %7, align 4, !dbg !6743, !tbaa !6635
  %8 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 6, !dbg !6744
  store i32 0, i32* %8, align 4, !dbg !6745, !tbaa !6638
  %9 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 7, !dbg !6746
  store i32 0, i32* %9, align 4, !dbg !6747, !tbaa !6641
  %10 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 8, !dbg !6748
  store i32 0, i32* %10, align 4, !dbg !6749, !tbaa !6644
  %11 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 9, !dbg !6750
  store i32 4096, i32* %11, align 4, !dbg !6751, !tbaa !6647
  %12 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 10, !dbg !6752
  store i32 8192, i32* %12, align 4, !dbg !6753, !tbaa !6650
  %13 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 11, !dbg !6754
  store i32 0, i32* %13, align 4, !dbg !6755, !tbaa !6653
  %14 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 12, !dbg !6756
  store i32 0, i32* %14, align 4, !dbg !6757, !tbaa !6656
  %15 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 13, !dbg !6758
  %16 = load %struct.FSMC_NORSRAMTimingInitTypeDef*, %struct.FSMC_NORSRAMTimingInitTypeDef** %15, align 4, !dbg !6758, !tbaa !6672
  %17 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %16, i32 0, i32 0, !dbg !6759
  store i32 15, i32* %17, align 4, !dbg !6760, !tbaa !6674
  %18 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %16, i32 0, i32 1, !dbg !6761
  store i32 15, i32* %18, align 4, !dbg !6762, !tbaa !6677
  %19 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %16, i32 0, i32 2, !dbg !6763
  store i32 255, i32* %19, align 4, !dbg !6764, !tbaa !6681
  %20 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %16, i32 0, i32 3, !dbg !6765
  store i32 15, i32* %20, align 4, !dbg !6766, !tbaa !6685
  %21 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %16, i32 0, i32 4, !dbg !6767
  store i32 15, i32* %21, align 4, !dbg !6768, !tbaa !6689
  %22 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %16, i32 0, i32 5, !dbg !6769
  store i32 15, i32* %22, align 4, !dbg !6770, !tbaa !6693
  %23 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %16, i32 0, i32 6, !dbg !6771
  store i32 0, i32* %23, align 4, !dbg !6772, !tbaa !6697
  %24 = getelementptr inbounds %struct.FSMC_NORSRAMInitTypeDef, %struct.FSMC_NORSRAMInitTypeDef* %0, i32 0, i32 14, !dbg !6773
  %25 = load %struct.FSMC_NORSRAMTimingInitTypeDef*, %struct.FSMC_NORSRAMTimingInitTypeDef** %24, align 4, !dbg !6773, !tbaa !6709
  %26 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %25, i32 0, i32 0, !dbg !6774
  store i32 15, i32* %26, align 4, !dbg !6775, !tbaa !6674
  %27 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %25, i32 0, i32 1, !dbg !6776
  store i32 15, i32* %27, align 4, !dbg !6777, !tbaa !6677
  %28 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %25, i32 0, i32 2, !dbg !6778
  store i32 255, i32* %28, align 4, !dbg !6779, !tbaa !6681
  %29 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %25, i32 0, i32 3, !dbg !6780
  store i32 15, i32* %29, align 4, !dbg !6781, !tbaa !6685
  %30 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %25, i32 0, i32 4, !dbg !6782
  store i32 15, i32* %30, align 4, !dbg !6783, !tbaa !6689
  %31 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %25, i32 0, i32 5, !dbg !6784
  store i32 15, i32* %31, align 4, !dbg !6785, !tbaa !6693
  %32 = getelementptr inbounds %struct.FSMC_NORSRAMTimingInitTypeDef, %struct.FSMC_NORSRAMTimingInitTypeDef* %25, i32 0, i32 6, !dbg !6786
  store i32 0, i32* %32, align 4, !dbg !6787, !tbaa !6697
  ret void, !dbg !6788
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_NORSRAMCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !6789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6791, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i32 %1, metadata !6792, metadata !DIExpression()), !dbg !6793
  %3 = icmp eq i32 %1, 0, !dbg !6794
  %4 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -1610612736 to [8 x i32]*), i32 0, i32 %0, !dbg !6796
  %5 = load volatile i32, i32* %4, align 4, !dbg !6796, !tbaa !894
  %6 = and i32 %5, 1048574, !dbg !6797
  %7 = or i32 %5, 1, !dbg !6797
  %8 = select i1 %3, i32 %6, i32 %7, !dbg !6797
  store volatile i32 %8, i32* %4, align 4, !dbg !6796, !tbaa !894
  ret void, !dbg !6798
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_NANDDeInit(i32 %0) local_unnamed_addr #0 !dbg !6799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6801, metadata !DIExpression()), !dbg !6802
  %2 = icmp eq i32 %0, 16, !dbg !6803
  br i1 %2, label %3, label %4, !dbg !6805

3:                                                ; preds = %1
  store volatile i32 24, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6806, !tbaa !946
  br label %5, !dbg !6808

4:                                                ; preds = %1
  store volatile i32 24, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6809, !tbaa !946
  br label %5

5:                                                ; preds = %4, %3
  %6 = phi i32* [ inttoptr (i32 -1610612604 to i32*), %4 ], [ inttoptr (i32 -1610612636 to i32*), %3 ]
  %7 = phi i32* [ inttoptr (i32 -1610612600 to i32*), %4 ], [ inttoptr (i32 -1610612632 to i32*), %3 ]
  %8 = phi i32* [ inttoptr (i32 -1610612596 to i32*), %4 ], [ inttoptr (i32 -1610612628 to i32*), %3 ]
  store volatile i32 64, i32* %6, align 4, !dbg !6811, !tbaa !951
  store volatile i32 -50529028, i32* %7, align 8, !dbg !6811, !tbaa !954
  store volatile i32 -50529028, i32* %8, align 4, !dbg !6811, !tbaa !957
  ret void, !dbg !6812
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_NANDInit(%struct.FSMC_NANDInitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !6813 {
  call void @llvm.dbg.value(metadata %struct.FSMC_NANDInitTypeDef* %0, metadata !6838, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i32 0, metadata !6839, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i32 0, metadata !6840, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i32 0, metadata !6841, metadata !DIExpression()), !dbg !6842
  %2 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 1, !dbg !6843
  %3 = load i32, i32* %2, align 4, !dbg !6843, !tbaa !6844
  %4 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 2, !dbg !6846
  %5 = load i32, i32* %4, align 4, !dbg !6846, !tbaa !6847
  %6 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 3, !dbg !6848
  %7 = load i32, i32* %6, align 4, !dbg !6848, !tbaa !6849
  %8 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 4, !dbg !6850
  %9 = load i32, i32* %8, align 4, !dbg !6850, !tbaa !6851
  %10 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 5, !dbg !6852
  %11 = load i32, i32* %10, align 4, !dbg !6852, !tbaa !6853
  %12 = shl i32 %11, 9, !dbg !6854
  %13 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 6, !dbg !6855
  %14 = load i32, i32* %13, align 4, !dbg !6855, !tbaa !6856
  %15 = shl i32 %14, 13, !dbg !6857
  %16 = or i32 %3, %5, !dbg !6858
  %17 = or i32 %16, %7, !dbg !6859
  %18 = or i32 %17, %9, !dbg !6860
  %19 = or i32 %18, %12, !dbg !6861
  %20 = or i32 %19, %15, !dbg !6861
  %21 = or i32 %20, 8, !dbg !6861
  call void @llvm.dbg.value(metadata i32 %21, metadata !6839, metadata !DIExpression()), !dbg !6842
  %22 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 7, !dbg !6862
  %23 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %22, align 4, !dbg !6862, !tbaa !6863
  %24 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %23, i32 0, i32 0, !dbg !6864
  %25 = load i32, i32* %24, align 4, !dbg !6864, !tbaa !934
  %26 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %23, i32 0, i32 1, !dbg !6865
  %27 = load i32, i32* %26, align 4, !dbg !6865, !tbaa !1690
  %28 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %23, i32 0, i32 2, !dbg !6866
  %29 = load i32, i32* %28, align 4, !dbg !6866, !tbaa !968
  %30 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %23, i32 0, i32 3, !dbg !6867
  %31 = load i32, i32* %30, align 4, !dbg !6867, !tbaa !985
  call void @llvm.dbg.value(metadata i32 undef, metadata !6840, metadata !DIExpression()), !dbg !6842
  %32 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 8, !dbg !6868
  %33 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %32, align 4, !dbg !6868, !tbaa !6869
  %34 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %33, i32 0, i32 0, !dbg !6870
  %35 = load i32, i32* %34, align 4, !dbg !6870, !tbaa !934
  %36 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %33, i32 0, i32 1, !dbg !6871
  %37 = load i32, i32* %36, align 4, !dbg !6871, !tbaa !1690
  %38 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %33, i32 0, i32 2, !dbg !6872
  %39 = load i32, i32* %38, align 4, !dbg !6872, !tbaa !968
  %40 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %33, i32 0, i32 3, !dbg !6873
  %41 = load i32, i32* %40, align 4, !dbg !6873, !tbaa !985
  call void @llvm.dbg.value(metadata i32 undef, metadata !6841, metadata !DIExpression()), !dbg !6842
  %42 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 0, !dbg !6874
  %43 = load i32, i32* %42, align 4, !dbg !6874, !tbaa !6876
  %44 = icmp eq i32 %43, 16, !dbg !6877
  br i1 %44, label %45, label %46, !dbg !6878

45:                                               ; preds = %1
  store volatile i32 %21, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6879, !tbaa !946
  br label %47, !dbg !6881

46:                                               ; preds = %1
  store volatile i32 %21, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6882, !tbaa !946
  br label %47

47:                                               ; preds = %46, %45
  %48 = phi i32* [ inttoptr (i32 -1610612600 to i32*), %46 ], [ inttoptr (i32 -1610612632 to i32*), %45 ]
  %49 = phi i32* [ inttoptr (i32 -1610612596 to i32*), %46 ], [ inttoptr (i32 -1610612628 to i32*), %45 ]
  %50 = shl i32 %37, 8, !dbg !6884
  %51 = or i32 %50, %35, !dbg !6885
  %52 = shl i32 %39, 16, !dbg !6886
  %53 = or i32 %51, %52, !dbg !6887
  %54 = shl i32 %41, 24, !dbg !6888
  %55 = or i32 %53, %54, !dbg !6889
  call void @llvm.dbg.value(metadata i32 %55, metadata !6841, metadata !DIExpression()), !dbg !6842
  %56 = shl i32 %27, 8, !dbg !6890
  %57 = or i32 %56, %25, !dbg !6891
  %58 = shl i32 %29, 16, !dbg !6892
  %59 = or i32 %57, %58, !dbg !6893
  %60 = shl i32 %31, 24, !dbg !6894
  %61 = or i32 %59, %60, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %61, metadata !6840, metadata !DIExpression()), !dbg !6842
  store volatile i32 %61, i32* %48, align 8, !dbg !6896, !tbaa !954
  store volatile i32 %55, i32* %49, align 4, !dbg !6896, !tbaa !957
  ret void, !dbg !6897
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_NANDStructInit(%struct.FSMC_NANDInitTypeDef* nocapture %0) local_unnamed_addr #0 !dbg !6898 {
  call void @llvm.dbg.value(metadata %struct.FSMC_NANDInitTypeDef* %0, metadata !6900, metadata !DIExpression()), !dbg !6901
  %2 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 0, !dbg !6902
  store i32 16, i32* %2, align 4, !dbg !6903, !tbaa !6876
  %3 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 1, !dbg !6904
  store i32 0, i32* %3, align 4, !dbg !6905, !tbaa !6844
  %4 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 2, !dbg !6906
  store i32 0, i32* %4, align 4, !dbg !6907, !tbaa !6847
  %5 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 3, !dbg !6908
  store i32 0, i32* %5, align 4, !dbg !6909, !tbaa !6849
  %6 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 4, !dbg !6910
  store i32 0, i32* %6, align 4, !dbg !6911, !tbaa !6851
  %7 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 5, !dbg !6912
  store i32 0, i32* %7, align 4, !dbg !6913, !tbaa !6853
  %8 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 6, !dbg !6914
  store i32 0, i32* %8, align 4, !dbg !6915, !tbaa !6856
  %9 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 7, !dbg !6916
  %10 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %9, align 4, !dbg !6916, !tbaa !6863
  %11 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 0, !dbg !6917
  store i32 252, i32* %11, align 4, !dbg !6918, !tbaa !934
  %12 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 1, !dbg !6919
  store i32 252, i32* %12, align 4, !dbg !6920, !tbaa !1690
  %13 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 2, !dbg !6921
  store i32 252, i32* %13, align 4, !dbg !6922, !tbaa !968
  %14 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 3, !dbg !6923
  store i32 252, i32* %14, align 4, !dbg !6924, !tbaa !985
  %15 = getelementptr inbounds %struct.FSMC_NANDInitTypeDef, %struct.FSMC_NANDInitTypeDef* %0, i32 0, i32 8, !dbg !6925
  %16 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %15, align 4, !dbg !6925, !tbaa !6869
  %17 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %16, i32 0, i32 0, !dbg !6926
  store i32 252, i32* %17, align 4, !dbg !6927, !tbaa !934
  %18 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %16, i32 0, i32 1, !dbg !6928
  store i32 252, i32* %18, align 4, !dbg !6929, !tbaa !1690
  %19 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %16, i32 0, i32 2, !dbg !6930
  store i32 252, i32* %19, align 4, !dbg !6931, !tbaa !968
  %20 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %16, i32 0, i32 3, !dbg !6932
  store i32 252, i32* %20, align 4, !dbg !6933, !tbaa !985
  ret void, !dbg !6934
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_NANDCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !6935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6937, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.value(metadata i32 %1, metadata !6938, metadata !DIExpression()), !dbg !6939
  %3 = icmp eq i32 %1, 0, !dbg !6940
  %4 = icmp eq i32 %0, 16, !dbg !6942
  br i1 %3, label %12, label %5, !dbg !6943

5:                                                ; preds = %2
  br i1 %4, label %6, label %9, !dbg !6944

6:                                                ; preds = %5
  %7 = load volatile i32, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6946, !tbaa !946
  %8 = or i32 %7, 4, !dbg !6946
  store volatile i32 %8, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6946, !tbaa !946
  br label %19, !dbg !6949

9:                                                ; preds = %5
  %10 = load volatile i32, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6950, !tbaa !946
  %11 = or i32 %10, 4, !dbg !6950
  store volatile i32 %11, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6950, !tbaa !946
  br label %19

12:                                               ; preds = %2
  br i1 %4, label %13, label %16, !dbg !6952

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6954, !tbaa !946
  %15 = and i32 %14, 1048571, !dbg !6954
  store volatile i32 %15, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6954, !tbaa !946
  br label %19, !dbg !6957

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6958, !tbaa !946
  %18 = and i32 %17, 1048571, !dbg !6958
  store volatile i32 %18, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6958, !tbaa !946
  br label %19

19:                                               ; preds = %13, %16, %6, %9
  ret void, !dbg !6960
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_NANDECCCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !6961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6963, metadata !DIExpression()), !dbg !6965
  call void @llvm.dbg.value(metadata i32 %1, metadata !6964, metadata !DIExpression()), !dbg !6965
  %3 = icmp eq i32 %1, 0, !dbg !6966
  %4 = icmp eq i32 %0, 16, !dbg !6968
  br i1 %3, label %12, label %5, !dbg !6969

5:                                                ; preds = %2
  br i1 %4, label %6, label %9, !dbg !6970

6:                                                ; preds = %5
  %7 = load volatile i32, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6972, !tbaa !946
  %8 = or i32 %7, 64, !dbg !6972
  store volatile i32 %8, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6972, !tbaa !946
  br label %19, !dbg !6975

9:                                                ; preds = %5
  %10 = load volatile i32, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6976, !tbaa !946
  %11 = or i32 %10, 64, !dbg !6976
  store volatile i32 %11, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6976, !tbaa !946
  br label %19

12:                                               ; preds = %2
  br i1 %4, label %13, label %16, !dbg !6978

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6980, !tbaa !946
  %15 = and i32 %14, 1048511, !dbg !6980
  store volatile i32 %15, i32* inttoptr (i32 -1610612640 to i32*), align 32, !dbg !6980, !tbaa !946
  br label %19, !dbg !6983

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6984, !tbaa !946
  %18 = and i32 %17, 1048511, !dbg !6984
  store volatile i32 %18, i32* inttoptr (i32 -1610612608 to i32*), align 128, !dbg !6984, !tbaa !946
  br label %19

19:                                               ; preds = %13, %16, %6, %9
  ret void, !dbg !6986
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @FSMC_GetECC(i32 %0) local_unnamed_addr #0 !dbg !6987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6989, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i32 0, metadata !6990, metadata !DIExpression()), !dbg !6991
  %2 = icmp eq i32 %0, 16, !dbg !6992
  call void @llvm.dbg.value(metadata i32 undef, metadata !6990, metadata !DIExpression()), !dbg !6991
  %3 = select i1 %2, i32* inttoptr (i32 -1610612620 to i32*), i32* inttoptr (i32 -1610612588 to i32*)
  %4 = load volatile i32, i32* %3, align 4, !dbg !6994, !tbaa !963
  call void @llvm.dbg.value(metadata i32 %4, metadata !6990, metadata !DIExpression()), !dbg !6991
  ret i32 %4, !dbg !6995
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_PCCARDDeInit() local_unnamed_addr #0 !dbg !6996 {
  store volatile i32 24, i32* inttoptr (i32 -1610612576 to i32*), align 32, !dbg !6997, !tbaa !6998
  store volatile i32 0, i32* inttoptr (i32 -1610612572 to i32*), align 4, !dbg !7000, !tbaa !7001
  store volatile i32 -50529028, i32* inttoptr (i32 -1610612568 to i32*), align 8, !dbg !7002, !tbaa !7003
  store volatile i32 -50529028, i32* inttoptr (i32 -1610612564 to i32*), align 4, !dbg !7004, !tbaa !7005
  store volatile i32 -50529028, i32* inttoptr (i32 -1610612560 to i32*), align 16, !dbg !7006, !tbaa !7007
  ret void, !dbg !7008
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_PCCARDInit(%struct.FSMC_PCCARDInitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !7009 {
  call void @llvm.dbg.value(metadata %struct.FSMC_PCCARDInitTypeDef* %0, metadata !7023, metadata !DIExpression()), !dbg !7024
  %2 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 0, !dbg !7025
  %3 = load i32, i32* %2, align 4, !dbg !7025, !tbaa !7026
  %4 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 1, !dbg !7028
  %5 = load i32, i32* %4, align 4, !dbg !7028, !tbaa !7029
  %6 = shl i32 %5, 9, !dbg !7030
  %7 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 2, !dbg !7031
  %8 = load i32, i32* %7, align 4, !dbg !7031, !tbaa !7032
  %9 = shl i32 %8, 13, !dbg !7033
  %10 = or i32 %3, %6, !dbg !7034
  %11 = or i32 %10, %9, !dbg !7034
  %12 = or i32 %11, 16, !dbg !7034
  store volatile i32 %12, i32* inttoptr (i32 -1610612576 to i32*), align 32, !dbg !7035, !tbaa !6998
  %13 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 3, !dbg !7036
  %14 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %13, align 4, !dbg !7036, !tbaa !7037
  %15 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %14, i32 0, i32 0, !dbg !7038
  %16 = load i32, i32* %15, align 4, !dbg !7038, !tbaa !934
  %17 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %14, i32 0, i32 1, !dbg !7039
  %18 = load i32, i32* %17, align 4, !dbg !7039, !tbaa !1690
  %19 = shl i32 %18, 8, !dbg !7040
  %20 = or i32 %19, %16, !dbg !7041
  %21 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %14, i32 0, i32 2, !dbg !7042
  %22 = load i32, i32* %21, align 4, !dbg !7042, !tbaa !968
  %23 = shl i32 %22, 16, !dbg !7043
  %24 = or i32 %20, %23, !dbg !7044
  %25 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %14, i32 0, i32 3, !dbg !7045
  %26 = load i32, i32* %25, align 4, !dbg !7045, !tbaa !985
  %27 = shl i32 %26, 24, !dbg !7046
  %28 = or i32 %24, %27, !dbg !7047
  store volatile i32 %28, i32* inttoptr (i32 -1610612568 to i32*), align 8, !dbg !7048, !tbaa !7003
  %29 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 4, !dbg !7049
  %30 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %29, align 4, !dbg !7049, !tbaa !7050
  %31 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %30, i32 0, i32 0, !dbg !7051
  %32 = load i32, i32* %31, align 4, !dbg !7051, !tbaa !934
  %33 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %30, i32 0, i32 1, !dbg !7052
  %34 = load i32, i32* %33, align 4, !dbg !7052, !tbaa !1690
  %35 = shl i32 %34, 8, !dbg !7053
  %36 = or i32 %35, %32, !dbg !7054
  %37 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %30, i32 0, i32 2, !dbg !7055
  %38 = load i32, i32* %37, align 4, !dbg !7055, !tbaa !968
  %39 = shl i32 %38, 16, !dbg !7056
  %40 = or i32 %36, %39, !dbg !7057
  %41 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %30, i32 0, i32 3, !dbg !7058
  %42 = load i32, i32* %41, align 4, !dbg !7058, !tbaa !985
  %43 = shl i32 %42, 24, !dbg !7059
  %44 = or i32 %40, %43, !dbg !7060
  store volatile i32 %44, i32* inttoptr (i32 -1610612564 to i32*), align 4, !dbg !7061, !tbaa !7005
  %45 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 5, !dbg !7062
  %46 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %45, align 4, !dbg !7062, !tbaa !7063
  %47 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %46, i32 0, i32 0, !dbg !7064
  %48 = load i32, i32* %47, align 4, !dbg !7064, !tbaa !934
  %49 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %46, i32 0, i32 1, !dbg !7065
  %50 = load i32, i32* %49, align 4, !dbg !7065, !tbaa !1690
  %51 = shl i32 %50, 8, !dbg !7066
  %52 = or i32 %51, %48, !dbg !7067
  %53 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %46, i32 0, i32 2, !dbg !7068
  %54 = load i32, i32* %53, align 4, !dbg !7068, !tbaa !968
  %55 = shl i32 %54, 16, !dbg !7069
  %56 = or i32 %52, %55, !dbg !7070
  %57 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %46, i32 0, i32 3, !dbg !7071
  %58 = load i32, i32* %57, align 4, !dbg !7071, !tbaa !985
  %59 = shl i32 %58, 24, !dbg !7072
  %60 = or i32 %56, %59, !dbg !7073
  store volatile i32 %60, i32* inttoptr (i32 -1610612560 to i32*), align 16, !dbg !7074, !tbaa !7007
  ret void, !dbg !7075
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_PCCARDStructInit(%struct.FSMC_PCCARDInitTypeDef* nocapture %0) local_unnamed_addr #0 !dbg !7076 {
  call void @llvm.dbg.value(metadata %struct.FSMC_PCCARDInitTypeDef* %0, metadata !7078, metadata !DIExpression()), !dbg !7079
  %2 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 0, !dbg !7080
  store i32 0, i32* %2, align 4, !dbg !7081, !tbaa !7026
  %3 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 1, !dbg !7082
  store i32 0, i32* %3, align 4, !dbg !7083, !tbaa !7029
  %4 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 2, !dbg !7084
  store i32 0, i32* %4, align 4, !dbg !7085, !tbaa !7032
  %5 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 3, !dbg !7086
  %6 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %5, align 4, !dbg !7086, !tbaa !7037
  %7 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 0, !dbg !7087
  store i32 252, i32* %7, align 4, !dbg !7088, !tbaa !934
  %8 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 1, !dbg !7089
  store i32 252, i32* %8, align 4, !dbg !7090, !tbaa !1690
  %9 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 2, !dbg !7091
  store i32 252, i32* %9, align 4, !dbg !7092, !tbaa !968
  %10 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 3, !dbg !7093
  store i32 252, i32* %10, align 4, !dbg !7094, !tbaa !985
  %11 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 4, !dbg !7095
  %12 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %11, align 4, !dbg !7095, !tbaa !7050
  %13 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %12, i32 0, i32 0, !dbg !7096
  store i32 252, i32* %13, align 4, !dbg !7097, !tbaa !934
  %14 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %12, i32 0, i32 1, !dbg !7098
  store i32 252, i32* %14, align 4, !dbg !7099, !tbaa !1690
  %15 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %12, i32 0, i32 2, !dbg !7100
  store i32 252, i32* %15, align 4, !dbg !7101, !tbaa !968
  %16 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %12, i32 0, i32 3, !dbg !7102
  store i32 252, i32* %16, align 4, !dbg !7103, !tbaa !985
  %17 = getelementptr inbounds %struct.FSMC_PCCARDInitTypeDef, %struct.FSMC_PCCARDInitTypeDef* %0, i32 0, i32 5, !dbg !7104
  %18 = load %struct.DMA_TypeDef*, %struct.DMA_TypeDef** %17, align 4, !dbg !7104, !tbaa !7063
  %19 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %18, i32 0, i32 0, !dbg !7105
  store i32 252, i32* %19, align 4, !dbg !7106, !tbaa !934
  %20 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %18, i32 0, i32 1, !dbg !7107
  store i32 252, i32* %20, align 4, !dbg !7108, !tbaa !1690
  %21 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %18, i32 0, i32 2, !dbg !7109
  store i32 252, i32* %21, align 4, !dbg !7110, !tbaa !968
  %22 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %18, i32 0, i32 3, !dbg !7111
  store i32 252, i32* %22, align 4, !dbg !7112, !tbaa !985
  ret void, !dbg !7113
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_PCCARDCmd(i32 %0) local_unnamed_addr #0 !dbg !7114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7116, metadata !DIExpression()), !dbg !7117
  %2 = icmp eq i32 %0, 0, !dbg !7118
  %3 = load volatile i32, i32* inttoptr (i32 -1610612576 to i32*), align 32, !dbg !7120, !tbaa !6998
  %4 = and i32 %3, 1048571, !dbg !7121
  %5 = or i32 %3, 4, !dbg !7121
  %6 = select i1 %2, i32 %4, i32 %5, !dbg !7121
  store volatile i32 %6, i32* inttoptr (i32 -1610612576 to i32*), align 32, !dbg !7120, !tbaa !6998
  ret void, !dbg !7122
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_ITConfig(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !7123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7127, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.value(metadata i32 %1, metadata !7128, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.value(metadata i32 %2, metadata !7129, metadata !DIExpression()), !dbg !7130
  %4 = icmp eq i32 %2, 0, !dbg !7131
  %5 = icmp eq i32 %0, 16, !dbg !7133
  br i1 %4, label %18, label %6, !dbg !7134

6:                                                ; preds = %3
  br i1 %5, label %7, label %10, !dbg !7135

7:                                                ; preds = %6
  %8 = load volatile i32, i32* inttoptr (i32 -1610612636 to i32*), align 4, !dbg !7137, !tbaa !951
  %9 = or i32 %8, %1, !dbg !7137
  store volatile i32 %9, i32* inttoptr (i32 -1610612636 to i32*), align 4, !dbg !7137, !tbaa !951
  br label %32, !dbg !7140

10:                                               ; preds = %6
  %11 = icmp eq i32 %0, 256, !dbg !7141
  br i1 %11, label %12, label %15, !dbg !7143

12:                                               ; preds = %10
  %13 = load volatile i32, i32* inttoptr (i32 -1610612604 to i32*), align 4, !dbg !7144, !tbaa !951
  %14 = or i32 %13, %1, !dbg !7144
  store volatile i32 %14, i32* inttoptr (i32 -1610612604 to i32*), align 4, !dbg !7144, !tbaa !951
  br label %32, !dbg !7146

15:                                               ; preds = %10
  %16 = load volatile i32, i32* inttoptr (i32 -1610612572 to i32*), align 4, !dbg !7147, !tbaa !7001
  %17 = or i32 %16, %1, !dbg !7147
  store volatile i32 %17, i32* inttoptr (i32 -1610612572 to i32*), align 4, !dbg !7147, !tbaa !7001
  br label %32

18:                                               ; preds = %3
  br i1 %5, label %19, label %23, !dbg !7149

19:                                               ; preds = %18
  %20 = xor i32 %1, -1, !dbg !7151
  %21 = load volatile i32, i32* inttoptr (i32 -1610612636 to i32*), align 4, !dbg !7154, !tbaa !951
  %22 = and i32 %21, %20, !dbg !7154
  store volatile i32 %22, i32* inttoptr (i32 -1610612636 to i32*), align 4, !dbg !7154, !tbaa !951
  br label %32, !dbg !7155

23:                                               ; preds = %18
  %24 = icmp eq i32 %0, 256, !dbg !7156
  %25 = xor i32 %1, -1, !dbg !7158
  br i1 %24, label %26, label %29, !dbg !7159

26:                                               ; preds = %23
  %27 = load volatile i32, i32* inttoptr (i32 -1610612604 to i32*), align 4, !dbg !7160, !tbaa !951
  %28 = and i32 %27, %25, !dbg !7160
  store volatile i32 %28, i32* inttoptr (i32 -1610612604 to i32*), align 4, !dbg !7160, !tbaa !951
  br label %32, !dbg !7162

29:                                               ; preds = %23
  %30 = load volatile i32, i32* inttoptr (i32 -1610612572 to i32*), align 4, !dbg !7163, !tbaa !7001
  %31 = and i32 %30, %25, !dbg !7163
  store volatile i32 %31, i32* inttoptr (i32 -1610612572 to i32*), align 4, !dbg !7163, !tbaa !7001
  br label %32

32:                                               ; preds = %19, %29, %26, %7, %15, %12
  ret void, !dbg !7165
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @FSMC_GetFlagStatus(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !7166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7170, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i32 %1, metadata !7171, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i32 0, metadata !7172, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i32 0, metadata !7173, metadata !DIExpression()), !dbg !7174
  switch i32 %0, label %4 [
    i32 16, label %5
    i32 256, label %3
  ], !dbg !7175

3:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !7173, metadata !DIExpression()), !dbg !7174
  br label %5, !dbg !7176

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !7173, metadata !DIExpression()), !dbg !7174
  br label %5

5:                                                ; preds = %2, %3, %4
  %6 = phi i32* [ inttoptr (i32 -1610612604 to i32*), %3 ], [ inttoptr (i32 -1610612572 to i32*), %4 ], [ inttoptr (i32 -1610612636 to i32*), %2 ]
  %7 = load volatile i32, i32* %6, align 4, !dbg !7180, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %7, metadata !7173, metadata !DIExpression()), !dbg !7174
  %8 = and i32 %7, %1, !dbg !7181
  %9 = icmp ne i32 %8, 0, !dbg !7183
  %10 = zext i1 %9 to i32
  call void @llvm.dbg.value(metadata i32 %10, metadata !7172, metadata !DIExpression()), !dbg !7174
  ret i32 %10, !dbg !7184
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_ClearFlag(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !7185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7187, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %1, metadata !7188, metadata !DIExpression()), !dbg !7189
  %3 = icmp eq i32 %0, 16, !dbg !7190
  %4 = icmp eq i32 %0, 256, !dbg !7192
  %5 = select i1 %4, i32* inttoptr (i32 -1610612604 to i32*), i32* inttoptr (i32 -1610612572 to i32*), !dbg !7192
  %6 = select i1 %3, i32* inttoptr (i32 -1610612636 to i32*), i32* %5, !dbg !7192
  %7 = xor i32 %1, -1, !dbg !7192
  %8 = load volatile i32, i32* %6, align 4, !dbg !7193, !tbaa !894
  %9 = and i32 %8, %7, !dbg !7193
  store volatile i32 %9, i32* %6, align 4, !dbg !7193, !tbaa !894
  ret void, !dbg !7194
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @FSMC_GetITStatus(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !7195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7197, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 %1, metadata !7198, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 0, metadata !7199, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 0, metadata !7200, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 0, metadata !7201, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 0, metadata !7202, metadata !DIExpression()), !dbg !7203
  switch i32 %0, label %4 [
    i32 16, label %5
    i32 256, label %3
  ], !dbg !7204

3:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !7200, metadata !DIExpression()), !dbg !7203
  br label %5, !dbg !7205

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !7200, metadata !DIExpression()), !dbg !7203
  br label %5

5:                                                ; preds = %2, %3, %4
  %6 = phi i32* [ inttoptr (i32 -1610612604 to i32*), %3 ], [ inttoptr (i32 -1610612572 to i32*), %4 ], [ inttoptr (i32 -1610612636 to i32*), %2 ]
  %7 = load volatile i32, i32* %6, align 4, !dbg !7209, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %7, metadata !7200, metadata !DIExpression()), !dbg !7203
  %8 = and i32 %7, %1, !dbg !7210
  call void @llvm.dbg.value(metadata i32 %8, metadata !7201, metadata !DIExpression()), !dbg !7203
  %9 = lshr i32 %1, 3, !dbg !7211
  %10 = and i32 %7, %9, !dbg !7212
  call void @llvm.dbg.value(metadata i32 %10, metadata !7202, metadata !DIExpression()), !dbg !7203
  %11 = icmp ne i32 %8, 0, !dbg !7213
  %12 = icmp ne i32 %10, 0
  %13 = and i1 %11, %12, !dbg !7215
  %14 = zext i1 %13 to i32
  call void @llvm.dbg.value(metadata i32 %14, metadata !7199, metadata !DIExpression()), !dbg !7203
  ret i32 %14, !dbg !7216
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @FSMC_ClearITPendingBit(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !7217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7219, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata i32 %1, metadata !7220, metadata !DIExpression()), !dbg !7221
  %3 = icmp eq i32 %0, 16, !dbg !7222
  %4 = icmp eq i32 %0, 256, !dbg !7224
  %5 = select i1 %4, i32* inttoptr (i32 -1610612604 to i32*), i32* inttoptr (i32 -1610612572 to i32*), !dbg !7224
  %6 = select i1 %3, i32* inttoptr (i32 -1610612636 to i32*), i32* %5, !dbg !7224
  %7 = lshr i32 %1, 3, !dbg !7225
  %8 = xor i32 %7, -1, !dbg !7225
  %9 = load volatile i32, i32* %6, align 4, !dbg !7225, !tbaa !894
  %10 = and i32 %9, %8, !dbg !7225
  store volatile i32 %10, i32* %6, align 4, !dbg !7225, !tbaa !894
  ret void, !dbg !7226
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_DeInit() local_unnamed_addr #3 !dbg !7227 {
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 2048, i32 1) #5, !dbg !7228
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 2048, i32 0) #5, !dbg !7229
  ret void, !dbg !7230
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_Init(%struct.SDIO_InitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !7231 {
  call void @llvm.dbg.value(metadata %struct.SDIO_InitTypeDef* %0, metadata !7246, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i32 0, metadata !7247, metadata !DIExpression()), !dbg !7248
  %2 = load volatile i32, i32* inttoptr (i32 1073818628 to i32*), align 4, !dbg !7249, !tbaa !7250
  call void @llvm.dbg.value(metadata i32 %2, metadata !7247, metadata !DIExpression()), !dbg !7248
  %3 = and i32 %2, -32512, !dbg !7252
  call void @llvm.dbg.value(metadata i32 %3, metadata !7247, metadata !DIExpression()), !dbg !7248
  %4 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 5, !dbg !7253
  %5 = load i8, i8* %4, align 4, !dbg !7253, !tbaa !7254
  %6 = zext i8 %5 to i32, !dbg !7256
  %7 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 2, !dbg !7257
  %8 = load i32, i32* %7, align 4, !dbg !7257, !tbaa !7258
  %9 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 1, !dbg !7259
  %10 = load i32, i32* %9, align 4, !dbg !7259, !tbaa !7260
  %11 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 3, !dbg !7261
  %12 = load i32, i32* %11, align 4, !dbg !7261, !tbaa !7262
  %13 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 0, !dbg !7263
  %14 = load i32, i32* %13, align 4, !dbg !7263, !tbaa !7264
  %15 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 4, !dbg !7265
  %16 = load i32, i32* %15, align 4, !dbg !7265, !tbaa !7266
  %17 = or i32 %3, %6, !dbg !7267
  %18 = or i32 %17, %8, !dbg !7268
  %19 = or i32 %18, %10, !dbg !7269
  %20 = or i32 %19, %12, !dbg !7270
  %21 = or i32 %20, %14, !dbg !7271
  %22 = or i32 %21, %16, !dbg !7272
  call void @llvm.dbg.value(metadata i32 %22, metadata !7247, metadata !DIExpression()), !dbg !7248
  store volatile i32 %22, i32* inttoptr (i32 1073818628 to i32*), align 4, !dbg !7273, !tbaa !7250
  ret void, !dbg !7274
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @SDIO_StructInit(%struct.SDIO_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !7275 {
  call void @llvm.dbg.value(metadata %struct.SDIO_InitTypeDef* %0, metadata !7277, metadata !DIExpression()), !dbg !7278
  %2 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 5, !dbg !7279
  store i8 0, i8* %2, align 4, !dbg !7280, !tbaa !7254
  %3 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 0, !dbg !7281
  store i32 0, i32* %3, align 4, !dbg !7282, !tbaa !7264
  %4 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 1, !dbg !7283
  store i32 0, i32* %4, align 4, !dbg !7284, !tbaa !7260
  %5 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 2, !dbg !7285
  store i32 0, i32* %5, align 4, !dbg !7286, !tbaa !7258
  %6 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 3, !dbg !7287
  store i32 0, i32* %6, align 4, !dbg !7288, !tbaa !7262
  %7 = getelementptr inbounds %struct.SDIO_InitTypeDef, %struct.SDIO_InitTypeDef* %0, i32 0, i32 4, !dbg !7289
  store i32 0, i32* %7, align 4, !dbg !7290, !tbaa !7266
  ret void, !dbg !7291
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_ClockCmd(i32 %0) local_unnamed_addr #0 !dbg !7292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7294, metadata !DIExpression()), !dbg !7295
  store volatile i32 %0, i32* inttoptr (i32 1109754016 to i32*), align 32, !dbg !7296, !tbaa !894
  ret void, !dbg !7297
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_SetPowerState(i32 %0) local_unnamed_addr #0 !dbg !7298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7300, metadata !DIExpression()), !dbg !7301
  store volatile i32 %0, i32* inttoptr (i32 1073818624 to i32*), align 1024, !dbg !7302, !tbaa !7303
  ret void, !dbg !7304
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @SDIO_GetPowerState() local_unnamed_addr #0 !dbg !7305 {
  %1 = load volatile i32, i32* inttoptr (i32 1073818624 to i32*), align 1024, !dbg !7306, !tbaa !7303
  %2 = and i32 %1, 3, !dbg !7307
  ret i32 %2, !dbg !7308
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_SendCommand(%struct.SDIO_CmdInitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !7309 {
  call void @llvm.dbg.value(metadata %struct.SDIO_CmdInitTypeDef* %0, metadata !7322, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i32 0, metadata !7323, metadata !DIExpression()), !dbg !7324
  %2 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 0, !dbg !7325
  %3 = load i32, i32* %2, align 4, !dbg !7325, !tbaa !6998
  store volatile i32 %3, i32* inttoptr (i32 1073818632 to i32*), align 8, !dbg !7326, !tbaa !7327
  %4 = load volatile i32, i32* inttoptr (i32 1073818636 to i32*), align 4, !dbg !7328, !tbaa !7329
  call void @llvm.dbg.value(metadata i32 %4, metadata !7323, metadata !DIExpression()), !dbg !7324
  %5 = and i32 %4, -2048, !dbg !7330
  call void @llvm.dbg.value(metadata i32 %5, metadata !7323, metadata !DIExpression()), !dbg !7324
  %6 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 1, !dbg !7331
  %7 = load i32, i32* %6, align 4, !dbg !7331, !tbaa !7001
  %8 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 2, !dbg !7332
  %9 = load i32, i32* %8, align 4, !dbg !7332, !tbaa !7003
  %10 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 3, !dbg !7333
  %11 = load i32, i32* %10, align 4, !dbg !7333, !tbaa !7005
  %12 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 4, !dbg !7334
  %13 = load i32, i32* %12, align 4, !dbg !7334, !tbaa !7007
  %14 = or i32 %5, %7, !dbg !7335
  %15 = or i32 %14, %9, !dbg !7336
  %16 = or i32 %15, %11, !dbg !7337
  %17 = or i32 %16, %13, !dbg !7338
  call void @llvm.dbg.value(metadata i32 %17, metadata !7323, metadata !DIExpression()), !dbg !7324
  store volatile i32 %17, i32* inttoptr (i32 1073818636 to i32*), align 4, !dbg !7339, !tbaa !7329
  ret void, !dbg !7340
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @SDIO_CmdStructInit(%struct.SDIO_CmdInitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !7341 {
  call void @llvm.dbg.value(metadata %struct.SDIO_CmdInitTypeDef* %0, metadata !7343, metadata !DIExpression()), !dbg !7344
  %2 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 0, !dbg !7345
  store i32 0, i32* %2, align 4, !dbg !7346, !tbaa !6998
  %3 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 1, !dbg !7347
  store i32 0, i32* %3, align 4, !dbg !7348, !tbaa !7001
  %4 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 2, !dbg !7349
  store i32 0, i32* %4, align 4, !dbg !7350, !tbaa !7003
  %5 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 3, !dbg !7351
  store i32 0, i32* %5, align 4, !dbg !7352, !tbaa !7005
  %6 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 4, !dbg !7353
  store i32 0, i32* %6, align 4, !dbg !7354, !tbaa !7007
  ret void, !dbg !7355
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @SDIO_GetCommandResponse() local_unnamed_addr #0 !dbg !7356 {
  %1 = load volatile i32, i32* inttoptr (i32 1073818640 to i32*), align 16, !dbg !7357, !tbaa !7358
  %2 = trunc i32 %1 to i8, !dbg !7359
  ret i8 %2, !dbg !7360
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @SDIO_GetResponse(i32 %0) local_unnamed_addr #3 !dbg !7361 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7363, metadata !DIExpression()), !dbg !7365
  %3 = bitcast i32* %2 to i8*, !dbg !7366
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !7366
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7364, metadata !DIExpression()), !dbg !7367
  store volatile i32 0, i32* %2, align 4, !dbg !7367, !tbaa !894
  %4 = add i32 %0, 1073818644, !dbg !7368
  store volatile i32 %4, i32* %2, align 4, !dbg !7369, !tbaa !894
  %5 = load volatile i32, i32* %2, align 4, !dbg !7370, !tbaa !894
  %6 = inttoptr i32 %5 to i32*, !dbg !7371
  %7 = load volatile i32, i32* %6, align 4, !dbg !7372, !tbaa !894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !7373
  ret i32 %7, !dbg !7374
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_DataConfig(%struct.DMA_Stream_TypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !7375 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !7389, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata i32 0, metadata !7390, metadata !DIExpression()), !dbg !7391
  %2 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !7392
  %3 = load i32, i32* %2, align 4, !dbg !7392, !tbaa !946
  store volatile i32 %3, i32* inttoptr (i32 1073818660 to i32*), align 4, !dbg !7393, !tbaa !7394
  %4 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 1, !dbg !7395
  %5 = load i32, i32* %4, align 4, !dbg !7395, !tbaa !951
  store volatile i32 %5, i32* inttoptr (i32 1073818664 to i32*), align 8, !dbg !7396, !tbaa !7397
  %6 = load volatile i32, i32* inttoptr (i32 1073818668 to i32*), align 4, !dbg !7398, !tbaa !7399
  call void @llvm.dbg.value(metadata i32 %6, metadata !7390, metadata !DIExpression()), !dbg !7391
  %7 = and i32 %6, -248, !dbg !7400
  call void @llvm.dbg.value(metadata i32 %7, metadata !7390, metadata !DIExpression()), !dbg !7391
  %8 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 2, !dbg !7401
  %9 = load i32, i32* %8, align 4, !dbg !7401, !tbaa !954
  %10 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 3, !dbg !7402
  %11 = load i32, i32* %10, align 4, !dbg !7402, !tbaa !957
  %12 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 4, !dbg !7403
  %13 = load i32, i32* %12, align 4, !dbg !7403, !tbaa !960
  %14 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 5, !dbg !7404
  %15 = load i32, i32* %14, align 4, !dbg !7404, !tbaa !963
  %16 = or i32 %7, %9, !dbg !7405
  %17 = or i32 %16, %11, !dbg !7406
  %18 = or i32 %17, %13, !dbg !7407
  %19 = or i32 %18, %15, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %19, metadata !7390, metadata !DIExpression()), !dbg !7391
  store volatile i32 %19, i32* inttoptr (i32 1073818668 to i32*), align 4, !dbg !7409, !tbaa !7399
  ret void, !dbg !7410
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @SDIO_DataStructInit(%struct.DMA_Stream_TypeDef* nocapture %0) local_unnamed_addr #2 !dbg !7411 {
  call void @llvm.dbg.value(metadata %struct.DMA_Stream_TypeDef* %0, metadata !7413, metadata !DIExpression()), !dbg !7414
  %2 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 0, !dbg !7415
  store i32 -1, i32* %2, align 4, !dbg !7416, !tbaa !946
  %3 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 1, !dbg !7417
  store i32 0, i32* %3, align 4, !dbg !7418, !tbaa !951
  %4 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 2, !dbg !7419
  store i32 0, i32* %4, align 4, !dbg !7420, !tbaa !954
  %5 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 3, !dbg !7421
  store i32 0, i32* %5, align 4, !dbg !7422, !tbaa !957
  %6 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 4, !dbg !7423
  store i32 0, i32* %6, align 4, !dbg !7424, !tbaa !960
  %7 = getelementptr inbounds %struct.DMA_Stream_TypeDef, %struct.DMA_Stream_TypeDef* %0, i32 0, i32 5, !dbg !7425
  store i32 0, i32* %7, align 4, !dbg !7426, !tbaa !963
  ret void, !dbg !7427
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @SDIO_GetDataCounter() local_unnamed_addr #0 !dbg !7428 {
  %1 = load volatile i32, i32* inttoptr (i32 1073818672 to i32*), align 16, !dbg !7429, !tbaa !7430
  ret i32 %1, !dbg !7431
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @SDIO_ReadData() local_unnamed_addr #0 !dbg !7432 {
  %1 = load volatile i32, i32* inttoptr (i32 1073818752 to i32*), align 128, !dbg !7433, !tbaa !7434
  ret i32 %1, !dbg !7435
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_WriteData(i32 %0) local_unnamed_addr #0 !dbg !7436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7438, metadata !DIExpression()), !dbg !7439
  store volatile i32 %0, i32* inttoptr (i32 1073818752 to i32*), align 128, !dbg !7440, !tbaa !7434
  ret void, !dbg !7441
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @SDIO_GetFIFOCount() local_unnamed_addr #0 !dbg !7442 {
  %1 = load volatile i32, i32* inttoptr (i32 1073818696 to i32*), align 8, !dbg !7443, !tbaa !7444
  ret i32 %1, !dbg !7445
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_StartSDIOReadWait(i32 %0) local_unnamed_addr #0 !dbg !7446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7448, metadata !DIExpression()), !dbg !7449
  store volatile i32 %0, i32* inttoptr (i32 1109755296 to i32*), align 32, !dbg !7450, !tbaa !894
  ret void, !dbg !7451
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_StopSDIOReadWait(i32 %0) local_unnamed_addr #0 !dbg !7452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7454, metadata !DIExpression()), !dbg !7455
  store volatile i32 %0, i32* inttoptr (i32 1109755300 to i32*), align 4, !dbg !7456, !tbaa !894
  ret void, !dbg !7457
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_SetSDIOReadWaitMode(i32 %0) local_unnamed_addr #0 !dbg !7458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7460, metadata !DIExpression()), !dbg !7461
  store volatile i32 %0, i32* inttoptr (i32 1109755304 to i32*), align 8, !dbg !7462, !tbaa !894
  ret void, !dbg !7463
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_SetSDIOOperation(i32 %0) local_unnamed_addr #0 !dbg !7464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7466, metadata !DIExpression()), !dbg !7467
  store volatile i32 %0, i32* inttoptr (i32 1109755308 to i32*), align 4, !dbg !7468, !tbaa !894
  ret void, !dbg !7469
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_SendSDIOSuspendCmd(i32 %0) local_unnamed_addr #0 !dbg !7470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7472, metadata !DIExpression()), !dbg !7473
  store volatile i32 %0, i32* inttoptr (i32 1109754284 to i32*), align 4, !dbg !7474, !tbaa !894
  ret void, !dbg !7475
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_CommandCompletionCmd(i32 %0) local_unnamed_addr #0 !dbg !7476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7478, metadata !DIExpression()), !dbg !7479
  store volatile i32 %0, i32* inttoptr (i32 1109754288 to i32*), align 16, !dbg !7480, !tbaa !894
  ret void, !dbg !7481
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_CEATAITCmd(i32 %0) local_unnamed_addr #0 !dbg !7482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7484, metadata !DIExpression()), !dbg !7485
  %2 = and i32 %0, 1, !dbg !7486
  %3 = xor i32 %2, 1, !dbg !7486
  store volatile i32 %3, i32* inttoptr (i32 1109754292 to i32*), align 4, !dbg !7487, !tbaa !894
  ret void, !dbg !7488
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_SendCEATACmd(i32 %0) local_unnamed_addr #0 !dbg !7489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7491, metadata !DIExpression()), !dbg !7492
  store volatile i32 %0, i32* inttoptr (i32 1109754296 to i32*), align 8, !dbg !7493, !tbaa !894
  ret void, !dbg !7494
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_DMACmd(i32 %0) local_unnamed_addr #0 !dbg !7495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7497, metadata !DIExpression()), !dbg !7498
  store volatile i32 %0, i32* inttoptr (i32 1109755276 to i32*), align 4, !dbg !7499, !tbaa !894
  ret void, !dbg !7500
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_ITConfig(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !7501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 %1, metadata !7504, metadata !DIExpression()), !dbg !7505
  %3 = icmp eq i32 %1, 0, !dbg !7506
  br i1 %3, label %7, label %4, !dbg !7508

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073818684 to i32*), align 4, !dbg !7509, !tbaa !7511
  %6 = or i32 %5, %0, !dbg !7509
  br label %11, !dbg !7512

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !7513
  %9 = load volatile i32, i32* inttoptr (i32 1073818684 to i32*), align 4, !dbg !7515, !tbaa !7511
  %10 = and i32 %9, %8, !dbg !7515
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 1073818684 to i32*), align 4, !dbg !7516, !tbaa !7511
  ret void, !dbg !7517
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @SDIO_GetFlagStatus(i32 %0) local_unnamed_addr #0 !dbg !7518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7520, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i32 0, metadata !7521, metadata !DIExpression()), !dbg !7522
  %2 = load volatile i32, i32* inttoptr (i32 1073818676 to i32*), align 4, !dbg !7523, !tbaa !7525
  %3 = and i32 %2, %0, !dbg !7526
  %4 = icmp ne i32 %3, 0, !dbg !7527
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7521, metadata !DIExpression()), !dbg !7522
  ret i32 %5, !dbg !7528
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_ClearFlag(i32 %0) local_unnamed_addr #0 !dbg !7529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7531, metadata !DIExpression()), !dbg !7532
  store volatile i32 %0, i32* inttoptr (i32 1073818680 to i32*), align 8, !dbg !7533, !tbaa !7534
  ret void, !dbg !7535
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @SDIO_GetITStatus(i32 %0) local_unnamed_addr #0 !dbg !7536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7538, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 0, metadata !7539, metadata !DIExpression()), !dbg !7540
  %2 = load volatile i32, i32* inttoptr (i32 1073818676 to i32*), align 4, !dbg !7541, !tbaa !7525
  %3 = and i32 %2, %0, !dbg !7543
  %4 = icmp ne i32 %3, 0, !dbg !7544
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7539, metadata !DIExpression()), !dbg !7540
  ret i32 %5, !dbg !7545
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SDIO_ClearITPendingBit(i32 %0) local_unnamed_addr #0 !dbg !7546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7548, metadata !DIExpression()), !dbg !7549
  store volatile i32 %0, i32* inttoptr (i32 1073818680 to i32*), align 8, !dbg !7550, !tbaa !7534
  ret void, !dbg !7551
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_AES_ECB(i8 zeroext %0, i8* %1, i16 zeroext %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3 !dbg !7552 {
  %7 = alloca %struct.CRYP_InitTypeDef, align 2
  %8 = alloca %struct.CRYP_KeyInitTypeDef, align 4
  %9 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7557, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8* %1, metadata !7558, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i16 %2, metadata !7559, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8* %3, metadata !7560, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %4, metadata !7561, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8* %5, metadata !7562, metadata !DIExpression()), !dbg !7591
  %10 = bitcast %struct.CRYP_InitTypeDef* %7 to i8*, !dbg !7592
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6, !dbg !7592
  call void @llvm.dbg.declare(metadata %struct.CRYP_InitTypeDef* %7, metadata !7563, metadata !DIExpression()), !dbg !7593
  %11 = bitcast %struct.CRYP_KeyInitTypeDef* %8 to i8*, !dbg !7594
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6, !dbg !7594
  call void @llvm.dbg.declare(metadata %struct.CRYP_KeyInitTypeDef* %8, metadata !7572, metadata !DIExpression()), !dbg !7595
  %12 = bitcast i32* %9 to i8*, !dbg !7596
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !7596
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7584, metadata !DIExpression()), !dbg !7597
  store volatile i32 0, i32* %9, align 4, !dbg !7597, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !7585, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 1, metadata !7586, metadata !DIExpression()), !dbg !7591
  %13 = ptrtoint i8* %1 to i32, !dbg !7598
  call void @llvm.dbg.value(metadata i32 %13, metadata !7587, metadata !DIExpression()), !dbg !7591
  %14 = ptrtoint i8* %3 to i32, !dbg !7599
  call void @llvm.dbg.value(metadata i32 %14, metadata !7588, metadata !DIExpression()), !dbg !7591
  %15 = ptrtoint i8* %5 to i32, !dbg !7600
  call void @llvm.dbg.value(metadata i32 %15, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 0, metadata !7590, metadata !DIExpression()), !dbg !7591
  call arm_aapcs_vfpcc void @CRYP_KeyStructInit(%struct.CRYP_KeyInitTypeDef* nonnull %8) #5, !dbg !7601
  switch i16 %2, label %109 [
    i16 128, label %16
    i16 192, label %36
    i16 256, label %66
  ], !dbg !7602

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 3, !dbg !7603
  store i16 0, i16* %17, align 2, !dbg !7605, !tbaa !7606
  %18 = bitcast i8* %1 to i32*, !dbg !7608
  %19 = load i32, i32* %18, align 4, !dbg !7609, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %19, metadata !7610, metadata !DIExpression()) #6, !dbg !7615
  %20 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %19) #6, !dbg !7617, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %20, metadata !7614, metadata !DIExpression()) #6, !dbg !7615
  %21 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 4, !dbg !7619
  store i32 %20, i32* %21, align 4, !dbg !7620, !tbaa !7621
  %22 = add i32 %13, 4, !dbg !7623
  call void @llvm.dbg.value(metadata i32 %22, metadata !7587, metadata !DIExpression()), !dbg !7591
  %23 = inttoptr i32 %22 to i32*, !dbg !7624
  %24 = load i32, i32* %23, align 4, !dbg !7625, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %24, metadata !7610, metadata !DIExpression()) #6, !dbg !7626
  %25 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %24) #6, !dbg !7628, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %25, metadata !7614, metadata !DIExpression()) #6, !dbg !7626
  %26 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 5, !dbg !7629
  store i32 %25, i32* %26, align 4, !dbg !7630, !tbaa !7631
  %27 = add i32 %13, 8, !dbg !7632
  call void @llvm.dbg.value(metadata i32 %27, metadata !7587, metadata !DIExpression()), !dbg !7591
  %28 = inttoptr i32 %27 to i32*, !dbg !7633
  %29 = load i32, i32* %28, align 4, !dbg !7634, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %29, metadata !7610, metadata !DIExpression()) #6, !dbg !7635
  %30 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %29) #6, !dbg !7637, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %30, metadata !7614, metadata !DIExpression()) #6, !dbg !7635
  %31 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 6, !dbg !7638
  store i32 %30, i32* %31, align 4, !dbg !7639, !tbaa !7640
  %32 = add i32 %13, 12, !dbg !7641
  call void @llvm.dbg.value(metadata i32 %32, metadata !7587, metadata !DIExpression()), !dbg !7591
  %33 = inttoptr i32 %32 to i32*, !dbg !7642
  %34 = load i32, i32* %33, align 4, !dbg !7643, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %34, metadata !7610, metadata !DIExpression()) #6, !dbg !7644
  %35 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %34) #6, !dbg !7646, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %35, metadata !7614, metadata !DIExpression()) #6, !dbg !7644
  br label %106, !dbg !7647

36:                                               ; preds = %6
  %37 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 3, !dbg !7648
  store i16 256, i16* %37, align 2, !dbg !7649, !tbaa !7606
  %38 = bitcast i8* %1 to i32*, !dbg !7650
  %39 = load i32, i32* %38, align 4, !dbg !7651, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %39, metadata !7610, metadata !DIExpression()) #6, !dbg !7652
  %40 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %39) #6, !dbg !7654, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %40, metadata !7614, metadata !DIExpression()) #6, !dbg !7652
  %41 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 2, !dbg !7655
  store i32 %40, i32* %41, align 4, !dbg !7656, !tbaa !7657
  %42 = add i32 %13, 4, !dbg !7658
  call void @llvm.dbg.value(metadata i32 %42, metadata !7587, metadata !DIExpression()), !dbg !7591
  %43 = inttoptr i32 %42 to i32*, !dbg !7659
  %44 = load i32, i32* %43, align 4, !dbg !7660, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %44, metadata !7610, metadata !DIExpression()) #6, !dbg !7661
  %45 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %44) #6, !dbg !7663, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %45, metadata !7614, metadata !DIExpression()) #6, !dbg !7661
  %46 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 3, !dbg !7664
  store i32 %45, i32* %46, align 4, !dbg !7665, !tbaa !7666
  %47 = add i32 %13, 8, !dbg !7667
  call void @llvm.dbg.value(metadata i32 %47, metadata !7587, metadata !DIExpression()), !dbg !7591
  %48 = inttoptr i32 %47 to i32*, !dbg !7668
  %49 = load i32, i32* %48, align 4, !dbg !7669, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %49, metadata !7610, metadata !DIExpression()) #6, !dbg !7670
  %50 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %49) #6, !dbg !7672, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %50, metadata !7614, metadata !DIExpression()) #6, !dbg !7670
  %51 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 4, !dbg !7673
  store i32 %50, i32* %51, align 4, !dbg !7674, !tbaa !7621
  %52 = add i32 %13, 12, !dbg !7675
  call void @llvm.dbg.value(metadata i32 %52, metadata !7587, metadata !DIExpression()), !dbg !7591
  %53 = inttoptr i32 %52 to i32*, !dbg !7676
  %54 = load i32, i32* %53, align 4, !dbg !7677, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %54, metadata !7610, metadata !DIExpression()) #6, !dbg !7678
  %55 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %54) #6, !dbg !7680, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %55, metadata !7614, metadata !DIExpression()) #6, !dbg !7678
  %56 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 5, !dbg !7681
  store i32 %55, i32* %56, align 4, !dbg !7682, !tbaa !7631
  %57 = add i32 %13, 16, !dbg !7683
  call void @llvm.dbg.value(metadata i32 %57, metadata !7587, metadata !DIExpression()), !dbg !7591
  %58 = inttoptr i32 %57 to i32*, !dbg !7684
  %59 = load i32, i32* %58, align 4, !dbg !7685, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %59, metadata !7610, metadata !DIExpression()) #6, !dbg !7686
  %60 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %59) #6, !dbg !7688, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %60, metadata !7614, metadata !DIExpression()) #6, !dbg !7686
  %61 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 6, !dbg !7689
  store i32 %60, i32* %61, align 4, !dbg !7690, !tbaa !7640
  %62 = add i32 %13, 20, !dbg !7691
  call void @llvm.dbg.value(metadata i32 %62, metadata !7587, metadata !DIExpression()), !dbg !7591
  %63 = inttoptr i32 %62 to i32*, !dbg !7692
  %64 = load i32, i32* %63, align 4, !dbg !7693, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %64, metadata !7610, metadata !DIExpression()) #6, !dbg !7694
  %65 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %64) #6, !dbg !7696, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %65, metadata !7614, metadata !DIExpression()) #6, !dbg !7694
  br label %106, !dbg !7697

66:                                               ; preds = %6
  %67 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 3, !dbg !7698
  store i16 512, i16* %67, align 2, !dbg !7699, !tbaa !7606
  %68 = bitcast i8* %1 to i32*, !dbg !7700
  %69 = load i32, i32* %68, align 4, !dbg !7701, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %69, metadata !7610, metadata !DIExpression()) #6, !dbg !7702
  %70 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %69) #6, !dbg !7704, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %70, metadata !7614, metadata !DIExpression()) #6, !dbg !7702
  %71 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 0, !dbg !7705
  store i32 %70, i32* %71, align 4, !dbg !7706, !tbaa !7707
  %72 = add i32 %13, 4, !dbg !7708
  call void @llvm.dbg.value(metadata i32 %72, metadata !7587, metadata !DIExpression()), !dbg !7591
  %73 = inttoptr i32 %72 to i32*, !dbg !7709
  %74 = load i32, i32* %73, align 4, !dbg !7710, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %74, metadata !7610, metadata !DIExpression()) #6, !dbg !7711
  %75 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %74) #6, !dbg !7713, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %75, metadata !7614, metadata !DIExpression()) #6, !dbg !7711
  %76 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 1, !dbg !7714
  store i32 %75, i32* %76, align 4, !dbg !7715, !tbaa !7716
  %77 = add i32 %13, 8, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %77, metadata !7587, metadata !DIExpression()), !dbg !7591
  %78 = inttoptr i32 %77 to i32*, !dbg !7718
  %79 = load i32, i32* %78, align 4, !dbg !7719, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %79, metadata !7610, metadata !DIExpression()) #6, !dbg !7720
  %80 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %79) #6, !dbg !7722, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %80, metadata !7614, metadata !DIExpression()) #6, !dbg !7720
  %81 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 2, !dbg !7723
  store i32 %80, i32* %81, align 4, !dbg !7724, !tbaa !7657
  %82 = add i32 %13, 12, !dbg !7725
  call void @llvm.dbg.value(metadata i32 %82, metadata !7587, metadata !DIExpression()), !dbg !7591
  %83 = inttoptr i32 %82 to i32*, !dbg !7726
  %84 = load i32, i32* %83, align 4, !dbg !7727, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %84, metadata !7610, metadata !DIExpression()) #6, !dbg !7728
  %85 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %84) #6, !dbg !7730, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %85, metadata !7614, metadata !DIExpression()) #6, !dbg !7728
  %86 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 3, !dbg !7731
  store i32 %85, i32* %86, align 4, !dbg !7732, !tbaa !7666
  %87 = add i32 %13, 16, !dbg !7733
  call void @llvm.dbg.value(metadata i32 %87, metadata !7587, metadata !DIExpression()), !dbg !7591
  %88 = inttoptr i32 %87 to i32*, !dbg !7734
  %89 = load i32, i32* %88, align 4, !dbg !7735, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %89, metadata !7610, metadata !DIExpression()) #6, !dbg !7736
  %90 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %89) #6, !dbg !7738, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %90, metadata !7614, metadata !DIExpression()) #6, !dbg !7736
  %91 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 4, !dbg !7739
  store i32 %90, i32* %91, align 4, !dbg !7740, !tbaa !7621
  %92 = add i32 %13, 20, !dbg !7741
  call void @llvm.dbg.value(metadata i32 %92, metadata !7587, metadata !DIExpression()), !dbg !7591
  %93 = inttoptr i32 %92 to i32*, !dbg !7742
  %94 = load i32, i32* %93, align 4, !dbg !7743, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %94, metadata !7610, metadata !DIExpression()) #6, !dbg !7744
  %95 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %94) #6, !dbg !7746, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %95, metadata !7614, metadata !DIExpression()) #6, !dbg !7744
  %96 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 5, !dbg !7747
  store i32 %95, i32* %96, align 4, !dbg !7748, !tbaa !7631
  %97 = add i32 %13, 24, !dbg !7749
  call void @llvm.dbg.value(metadata i32 %97, metadata !7587, metadata !DIExpression()), !dbg !7591
  %98 = inttoptr i32 %97 to i32*, !dbg !7750
  %99 = load i32, i32* %98, align 4, !dbg !7751, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %99, metadata !7610, metadata !DIExpression()) #6, !dbg !7752
  %100 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %99) #6, !dbg !7754, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %100, metadata !7614, metadata !DIExpression()) #6, !dbg !7752
  %101 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 6, !dbg !7755
  store i32 %100, i32* %101, align 4, !dbg !7756, !tbaa !7640
  %102 = add i32 %13, 28, !dbg !7757
  call void @llvm.dbg.value(metadata i32 %102, metadata !7587, metadata !DIExpression()), !dbg !7591
  %103 = inttoptr i32 %102 to i32*, !dbg !7758
  %104 = load i32, i32* %103, align 4, !dbg !7759, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %104, metadata !7610, metadata !DIExpression()) #6, !dbg !7760
  %105 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %104) #6, !dbg !7762, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %105, metadata !7614, metadata !DIExpression()) #6, !dbg !7760
  br label %106, !dbg !7763

106:                                              ; preds = %16, %36, %66
  %107 = phi i32 [ %105, %66 ], [ %65, %36 ], [ %35, %16 ]
  %108 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 7, !dbg !7764
  store i32 %107, i32* %108, align 4, !dbg !7764, !tbaa !7765
  br label %109, !dbg !7766

109:                                              ; preds = %106, %6
  %110 = icmp eq i8 %0, 0, !dbg !7766
  br i1 %110, label %111, label %125, !dbg !7768

111:                                              ; preds = %109
  call arm_aapcs_vfpcc void @CRYP_FIFOFlush() #5, !dbg !7769
  %112 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 0, !dbg !7771
  store i16 4, i16* %112, align 2, !dbg !7772, !tbaa !7773
  %113 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 1, !dbg !7774
  store i16 56, i16* %113, align 2, !dbg !7775, !tbaa !7776
  %114 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 2, !dbg !7777
  store i16 0, i16* %114, align 2, !dbg !7778, !tbaa !7779
  call arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nonnull %7) #5, !dbg !7780
  call arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nonnull %8) #5, !dbg !7781
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 1) #5, !dbg !7782
  br label %115, !dbg !7783

115:                                              ; preds = %115, %111
  %116 = call arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext 16) #5, !dbg !7784
  call void @llvm.dbg.value(metadata i32 %116, metadata !7585, metadata !DIExpression()), !dbg !7591
  %117 = load volatile i32, i32* %9, align 4, !dbg !7786, !tbaa !894
  %118 = add i32 %117, 1, !dbg !7786
  store volatile i32 %118, i32* %9, align 4, !dbg !7786, !tbaa !894
  %119 = load volatile i32, i32* %9, align 4, !dbg !7787, !tbaa !894
  %120 = icmp ne i32 %119, 65536, !dbg !7788
  %121 = icmp ne i32 %116, 0, !dbg !7789
  %122 = and i1 %121, %120, !dbg !7789
  br i1 %122, label %115, label %123, !dbg !7790, !llvm.loop !7791

123:                                              ; preds = %115
  br i1 %121, label %127, label %124, !dbg !7793

124:                                              ; preds = %123
  store i16 4, i16* %112, align 2, !dbg !7794, !tbaa !7773
  br label %127

125:                                              ; preds = %109
  call arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nonnull %8) #5, !dbg !7797
  %126 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 0, !dbg !7799
  store i16 0, i16* %126, align 2, !dbg !7800, !tbaa !7773
  br label %127

127:                                              ; preds = %123, %124, %125
  %128 = phi i1 [ false, %123 ], [ true, %124 ], [ true, %125 ], !dbg !7591
  %129 = phi i32 [ 0, %123 ], [ 1, %124 ], [ 1, %125 ], !dbg !7591
  call void @llvm.dbg.value(metadata i32 %129, metadata !7586, metadata !DIExpression()), !dbg !7591
  %130 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 1, !dbg !7801
  store i16 32, i16* %130, align 2, !dbg !7802, !tbaa !7776
  %131 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 2, !dbg !7803
  store i16 128, i16* %131, align 2, !dbg !7804, !tbaa !7779
  call arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nonnull %7) #5, !dbg !7805
  call arm_aapcs_vfpcc void @CRYP_FIFOFlush() #5, !dbg !7806
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 1) #5, !dbg !7807
  call void @llvm.dbg.value(metadata i32 0, metadata !7590, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %15, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %14, metadata !7588, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %129, metadata !7586, metadata !DIExpression()), !dbg !7591
  %132 = icmp ne i32 %4, 0, !dbg !7808
  %133 = and i1 %128, %132, !dbg !7811
  br i1 %133, label %134, label %175, !dbg !7812

134:                                              ; preds = %127, %158
  %135 = phi i32 [ %172, %158 ], [ 0, %127 ]
  %136 = phi i32 [ %171, %158 ], [ %15, %127 ]
  %137 = phi i32 [ %159, %158 ], [ %14, %127 ]
  call void @llvm.dbg.value(metadata i32 %135, metadata !7590, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %136, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %137, metadata !7588, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %129, metadata !7586, metadata !DIExpression()), !dbg !7591
  %138 = inttoptr i32 %137 to i32*, !dbg !7813
  %139 = load i32, i32* %138, align 4, !dbg !7815, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %139) #5, !dbg !7816
  %140 = add i32 %137, 4, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %140, metadata !7588, metadata !DIExpression()), !dbg !7591
  %141 = inttoptr i32 %140 to i32*, !dbg !7818
  %142 = load i32, i32* %141, align 4, !dbg !7819, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %142) #5, !dbg !7820
  %143 = add i32 %137, 8, !dbg !7821
  call void @llvm.dbg.value(metadata i32 %143, metadata !7588, metadata !DIExpression()), !dbg !7591
  %144 = inttoptr i32 %143 to i32*, !dbg !7822
  %145 = load i32, i32* %144, align 4, !dbg !7823, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %145) #5, !dbg !7824
  %146 = add i32 %137, 12, !dbg !7825
  call void @llvm.dbg.value(metadata i32 %146, metadata !7588, metadata !DIExpression()), !dbg !7591
  %147 = inttoptr i32 %146 to i32*, !dbg !7826
  %148 = load i32, i32* %147, align 4, !dbg !7827, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %148) #5, !dbg !7828
  call void @llvm.dbg.value(metadata i32 %159, metadata !7588, metadata !DIExpression()), !dbg !7591
  store volatile i32 0, i32* %9, align 4, !dbg !7829, !tbaa !894
  br label %149, !dbg !7830

149:                                              ; preds = %149, %134
  %150 = call arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext 16) #5, !dbg !7831
  call void @llvm.dbg.value(metadata i32 %150, metadata !7585, metadata !DIExpression()), !dbg !7591
  %151 = load volatile i32, i32* %9, align 4, !dbg !7833, !tbaa !894
  %152 = add i32 %151, 1, !dbg !7833
  store volatile i32 %152, i32* %9, align 4, !dbg !7833, !tbaa !894
  %153 = load volatile i32, i32* %9, align 4, !dbg !7834, !tbaa !894
  %154 = icmp ne i32 %153, 65536, !dbg !7835
  %155 = icmp ne i32 %150, 0, !dbg !7836
  %156 = and i1 %155, %154, !dbg !7836
  br i1 %156, label %149, label %157, !dbg !7837, !llvm.loop !7838

157:                                              ; preds = %149
  br i1 %155, label %175, label %158, !dbg !7840

158:                                              ; preds = %157
  %159 = add i32 %137, 16, !dbg !7841
  %160 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !7842
  %161 = inttoptr i32 %136 to i32*, !dbg !7845
  store i32 %160, i32* %161, align 4, !dbg !7846, !tbaa !894
  %162 = add i32 %136, 4, !dbg !7847
  call void @llvm.dbg.value(metadata i32 %162, metadata !7589, metadata !DIExpression()), !dbg !7591
  %163 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !7848
  %164 = inttoptr i32 %162 to i32*, !dbg !7849
  store i32 %163, i32* %164, align 4, !dbg !7850, !tbaa !894
  %165 = add i32 %136, 8, !dbg !7851
  call void @llvm.dbg.value(metadata i32 %165, metadata !7589, metadata !DIExpression()), !dbg !7591
  %166 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !7852
  %167 = inttoptr i32 %165 to i32*, !dbg !7853
  store i32 %166, i32* %167, align 4, !dbg !7854, !tbaa !894
  %168 = add i32 %136, 12, !dbg !7855
  call void @llvm.dbg.value(metadata i32 %168, metadata !7589, metadata !DIExpression()), !dbg !7591
  %169 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !7856
  %170 = inttoptr i32 %168 to i32*, !dbg !7857
  store i32 %169, i32* %170, align 4, !dbg !7858, !tbaa !894
  %171 = add i32 %136, 16, !dbg !7859
  call void @llvm.dbg.value(metadata i32 %171, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %129, metadata !7586, metadata !DIExpression()), !dbg !7591
  %172 = add i32 %135, 16, !dbg !7860
  call void @llvm.dbg.value(metadata i32 %172, metadata !7590, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %159, metadata !7588, metadata !DIExpression()), !dbg !7591
  %173 = icmp ult i32 %172, %4, !dbg !7808
  %174 = and i1 %128, %173, !dbg !7811
  br i1 %174, label %134, label %175, !dbg !7812, !llvm.loop !7861

175:                                              ; preds = %157, %158, %127
  %176 = phi i32 [ %129, %127 ], [ 0, %157 ], [ %129, %158 ], !dbg !7591
  call void @llvm.dbg.value(metadata i32 %176, metadata !7586, metadata !DIExpression()), !dbg !7591
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 0) #5, !dbg !7863
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !7864
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6, !dbg !7864
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6, !dbg !7864
  ret i32 %176, !dbg !7865
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_AES_CBC(i8 zeroext %0, i8* %1, i8* %2, i16 zeroext %3, i8* %4, i32 %5, i8* %6) local_unnamed_addr #3 !dbg !7866 {
  %8 = alloca %struct.CRYP_InitTypeDef, align 2
  %9 = alloca %struct.CRYP_KeyInitTypeDef, align 4
  %10 = alloca %struct.DMA_TypeDef, align 4
  %11 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7870, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i8* %1, metadata !7871, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i8* %2, metadata !7872, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i16 %3, metadata !7873, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i8* %4, metadata !7874, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %5, metadata !7875, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i8* %6, metadata !7876, metadata !DIExpression()), !dbg !7895
  %12 = bitcast %struct.CRYP_InitTypeDef* %8 to i8*, !dbg !7896
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6, !dbg !7896
  call void @llvm.dbg.declare(metadata %struct.CRYP_InitTypeDef* %8, metadata !7877, metadata !DIExpression()), !dbg !7897
  %13 = bitcast %struct.CRYP_KeyInitTypeDef* %9 to i8*, !dbg !7898
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #6, !dbg !7898
  call void @llvm.dbg.declare(metadata %struct.CRYP_KeyInitTypeDef* %9, metadata !7878, metadata !DIExpression()), !dbg !7899
  %14 = bitcast %struct.DMA_TypeDef* %10 to i8*, !dbg !7900
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6, !dbg !7900
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %10, metadata !7879, metadata !DIExpression()), !dbg !7901
  %15 = bitcast i32* %11 to i8*, !dbg !7902
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15), !dbg !7902
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7887, metadata !DIExpression()), !dbg !7903
  store volatile i32 0, i32* %11, align 4, !dbg !7903, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !7888, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 1, metadata !7889, metadata !DIExpression()), !dbg !7895
  %16 = ptrtoint i8* %2 to i32, !dbg !7904
  call void @llvm.dbg.value(metadata i32 %16, metadata !7890, metadata !DIExpression()), !dbg !7895
  %17 = ptrtoint i8* %4 to i32, !dbg !7905
  call void @llvm.dbg.value(metadata i32 %17, metadata !7891, metadata !DIExpression()), !dbg !7895
  %18 = ptrtoint i8* %6 to i32, !dbg !7906
  call void @llvm.dbg.value(metadata i32 %18, metadata !7892, metadata !DIExpression()), !dbg !7895
  %19 = ptrtoint i8* %1 to i32, !dbg !7907
  call void @llvm.dbg.value(metadata i32 %19, metadata !7893, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 0, metadata !7894, metadata !DIExpression()), !dbg !7895
  call arm_aapcs_vfpcc void @CRYP_KeyStructInit(%struct.CRYP_KeyInitTypeDef* nonnull %9) #5, !dbg !7908
  switch i16 %3, label %113 [
    i16 128, label %20
    i16 192, label %40
    i16 256, label %70
  ], !dbg !7909

20:                                               ; preds = %7
  %21 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 3, !dbg !7910
  store i16 0, i16* %21, align 2, !dbg !7912, !tbaa !7606
  %22 = bitcast i8* %2 to i32*, !dbg !7913
  %23 = load i32, i32* %22, align 4, !dbg !7914, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %23, metadata !7610, metadata !DIExpression()) #6, !dbg !7915
  %24 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %23) #6, !dbg !7917, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %24, metadata !7614, metadata !DIExpression()) #6, !dbg !7915
  %25 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 4, !dbg !7918
  store i32 %24, i32* %25, align 4, !dbg !7919, !tbaa !7621
  %26 = add i32 %16, 4, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %26, metadata !7890, metadata !DIExpression()), !dbg !7895
  %27 = inttoptr i32 %26 to i32*, !dbg !7921
  %28 = load i32, i32* %27, align 4, !dbg !7922, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %28, metadata !7610, metadata !DIExpression()) #6, !dbg !7923
  %29 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %28) #6, !dbg !7925, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %29, metadata !7614, metadata !DIExpression()) #6, !dbg !7923
  %30 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 5, !dbg !7926
  store i32 %29, i32* %30, align 4, !dbg !7927, !tbaa !7631
  %31 = add i32 %16, 8, !dbg !7928
  call void @llvm.dbg.value(metadata i32 %31, metadata !7890, metadata !DIExpression()), !dbg !7895
  %32 = inttoptr i32 %31 to i32*, !dbg !7929
  %33 = load i32, i32* %32, align 4, !dbg !7930, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %33, metadata !7610, metadata !DIExpression()) #6, !dbg !7931
  %34 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %33) #6, !dbg !7933, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %34, metadata !7614, metadata !DIExpression()) #6, !dbg !7931
  %35 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 6, !dbg !7934
  store i32 %34, i32* %35, align 4, !dbg !7935, !tbaa !7640
  %36 = add i32 %16, 12, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %36, metadata !7890, metadata !DIExpression()), !dbg !7895
  %37 = inttoptr i32 %36 to i32*, !dbg !7937
  %38 = load i32, i32* %37, align 4, !dbg !7938, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %38, metadata !7610, metadata !DIExpression()) #6, !dbg !7939
  %39 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %38) #6, !dbg !7941, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %39, metadata !7614, metadata !DIExpression()) #6, !dbg !7939
  br label %110, !dbg !7942

40:                                               ; preds = %7
  %41 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 3, !dbg !7943
  store i16 256, i16* %41, align 2, !dbg !7944, !tbaa !7606
  %42 = bitcast i8* %2 to i32*, !dbg !7945
  %43 = load i32, i32* %42, align 4, !dbg !7946, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %43, metadata !7610, metadata !DIExpression()) #6, !dbg !7947
  %44 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %43) #6, !dbg !7949, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %44, metadata !7614, metadata !DIExpression()) #6, !dbg !7947
  %45 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 2, !dbg !7950
  store i32 %44, i32* %45, align 4, !dbg !7951, !tbaa !7657
  %46 = add i32 %16, 4, !dbg !7952
  call void @llvm.dbg.value(metadata i32 %46, metadata !7890, metadata !DIExpression()), !dbg !7895
  %47 = inttoptr i32 %46 to i32*, !dbg !7953
  %48 = load i32, i32* %47, align 4, !dbg !7954, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %48, metadata !7610, metadata !DIExpression()) #6, !dbg !7955
  %49 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %48) #6, !dbg !7957, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %49, metadata !7614, metadata !DIExpression()) #6, !dbg !7955
  %50 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 3, !dbg !7958
  store i32 %49, i32* %50, align 4, !dbg !7959, !tbaa !7666
  %51 = add i32 %16, 8, !dbg !7960
  call void @llvm.dbg.value(metadata i32 %51, metadata !7890, metadata !DIExpression()), !dbg !7895
  %52 = inttoptr i32 %51 to i32*, !dbg !7961
  %53 = load i32, i32* %52, align 4, !dbg !7962, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %53, metadata !7610, metadata !DIExpression()) #6, !dbg !7963
  %54 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %53) #6, !dbg !7965, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %54, metadata !7614, metadata !DIExpression()) #6, !dbg !7963
  %55 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 4, !dbg !7966
  store i32 %54, i32* %55, align 4, !dbg !7967, !tbaa !7621
  %56 = add i32 %16, 12, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %56, metadata !7890, metadata !DIExpression()), !dbg !7895
  %57 = inttoptr i32 %56 to i32*, !dbg !7969
  %58 = load i32, i32* %57, align 4, !dbg !7970, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %58, metadata !7610, metadata !DIExpression()) #6, !dbg !7971
  %59 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %58) #6, !dbg !7973, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %59, metadata !7614, metadata !DIExpression()) #6, !dbg !7971
  %60 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 5, !dbg !7974
  store i32 %59, i32* %60, align 4, !dbg !7975, !tbaa !7631
  %61 = add i32 %16, 16, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %61, metadata !7890, metadata !DIExpression()), !dbg !7895
  %62 = inttoptr i32 %61 to i32*, !dbg !7977
  %63 = load i32, i32* %62, align 4, !dbg !7978, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %63, metadata !7610, metadata !DIExpression()) #6, !dbg !7979
  %64 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %63) #6, !dbg !7981, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %64, metadata !7614, metadata !DIExpression()) #6, !dbg !7979
  %65 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 6, !dbg !7982
  store i32 %64, i32* %65, align 4, !dbg !7983, !tbaa !7640
  %66 = add i32 %16, 20, !dbg !7984
  call void @llvm.dbg.value(metadata i32 %66, metadata !7890, metadata !DIExpression()), !dbg !7895
  %67 = inttoptr i32 %66 to i32*, !dbg !7985
  %68 = load i32, i32* %67, align 4, !dbg !7986, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %68, metadata !7610, metadata !DIExpression()) #6, !dbg !7987
  %69 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %68) #6, !dbg !7989, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %69, metadata !7614, metadata !DIExpression()) #6, !dbg !7987
  br label %110, !dbg !7990

70:                                               ; preds = %7
  %71 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 3, !dbg !7991
  store i16 512, i16* %71, align 2, !dbg !7992, !tbaa !7606
  %72 = bitcast i8* %2 to i32*, !dbg !7993
  %73 = load i32, i32* %72, align 4, !dbg !7994, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %73, metadata !7610, metadata !DIExpression()) #6, !dbg !7995
  %74 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %73) #6, !dbg !7997, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %74, metadata !7614, metadata !DIExpression()) #6, !dbg !7995
  %75 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 0, !dbg !7998
  store i32 %74, i32* %75, align 4, !dbg !7999, !tbaa !7707
  %76 = add i32 %16, 4, !dbg !8000
  call void @llvm.dbg.value(metadata i32 %76, metadata !7890, metadata !DIExpression()), !dbg !7895
  %77 = inttoptr i32 %76 to i32*, !dbg !8001
  %78 = load i32, i32* %77, align 4, !dbg !8002, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %78, metadata !7610, metadata !DIExpression()) #6, !dbg !8003
  %79 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %78) #6, !dbg !8005, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %79, metadata !7614, metadata !DIExpression()) #6, !dbg !8003
  %80 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 1, !dbg !8006
  store i32 %79, i32* %80, align 4, !dbg !8007, !tbaa !7716
  %81 = add i32 %16, 8, !dbg !8008
  call void @llvm.dbg.value(metadata i32 %81, metadata !7890, metadata !DIExpression()), !dbg !7895
  %82 = inttoptr i32 %81 to i32*, !dbg !8009
  %83 = load i32, i32* %82, align 4, !dbg !8010, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %83, metadata !7610, metadata !DIExpression()) #6, !dbg !8011
  %84 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %83) #6, !dbg !8013, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %84, metadata !7614, metadata !DIExpression()) #6, !dbg !8011
  %85 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 2, !dbg !8014
  store i32 %84, i32* %85, align 4, !dbg !8015, !tbaa !7657
  %86 = add i32 %16, 12, !dbg !8016
  call void @llvm.dbg.value(metadata i32 %86, metadata !7890, metadata !DIExpression()), !dbg !7895
  %87 = inttoptr i32 %86 to i32*, !dbg !8017
  %88 = load i32, i32* %87, align 4, !dbg !8018, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %88, metadata !7610, metadata !DIExpression()) #6, !dbg !8019
  %89 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %88) #6, !dbg !8021, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %89, metadata !7614, metadata !DIExpression()) #6, !dbg !8019
  %90 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 3, !dbg !8022
  store i32 %89, i32* %90, align 4, !dbg !8023, !tbaa !7666
  %91 = add i32 %16, 16, !dbg !8024
  call void @llvm.dbg.value(metadata i32 %91, metadata !7890, metadata !DIExpression()), !dbg !7895
  %92 = inttoptr i32 %91 to i32*, !dbg !8025
  %93 = load i32, i32* %92, align 4, !dbg !8026, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %93, metadata !7610, metadata !DIExpression()) #6, !dbg !8027
  %94 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %93) #6, !dbg !8029, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %94, metadata !7614, metadata !DIExpression()) #6, !dbg !8027
  %95 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 4, !dbg !8030
  store i32 %94, i32* %95, align 4, !dbg !8031, !tbaa !7621
  %96 = add i32 %16, 20, !dbg !8032
  call void @llvm.dbg.value(metadata i32 %96, metadata !7890, metadata !DIExpression()), !dbg !7895
  %97 = inttoptr i32 %96 to i32*, !dbg !8033
  %98 = load i32, i32* %97, align 4, !dbg !8034, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %98, metadata !7610, metadata !DIExpression()) #6, !dbg !8035
  %99 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %98) #6, !dbg !8037, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %99, metadata !7614, metadata !DIExpression()) #6, !dbg !8035
  %100 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 5, !dbg !8038
  store i32 %99, i32* %100, align 4, !dbg !8039, !tbaa !7631
  %101 = add i32 %16, 24, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %101, metadata !7890, metadata !DIExpression()), !dbg !7895
  %102 = inttoptr i32 %101 to i32*, !dbg !8041
  %103 = load i32, i32* %102, align 4, !dbg !8042, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %103, metadata !7610, metadata !DIExpression()) #6, !dbg !8043
  %104 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %103) #6, !dbg !8045, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %104, metadata !7614, metadata !DIExpression()) #6, !dbg !8043
  %105 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 6, !dbg !8046
  store i32 %104, i32* %105, align 4, !dbg !8047, !tbaa !7640
  %106 = add i32 %16, 28, !dbg !8048
  call void @llvm.dbg.value(metadata i32 %106, metadata !7890, metadata !DIExpression()), !dbg !7895
  %107 = inttoptr i32 %106 to i32*, !dbg !8049
  %108 = load i32, i32* %107, align 4, !dbg !8050, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %108, metadata !7610, metadata !DIExpression()) #6, !dbg !8051
  %109 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %108) #6, !dbg !8053, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %109, metadata !7614, metadata !DIExpression()) #6, !dbg !8051
  br label %110, !dbg !8054

110:                                              ; preds = %20, %40, %70
  %111 = phi i32 [ %109, %70 ], [ %69, %40 ], [ %39, %20 ]
  %112 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 7, !dbg !8055
  store i32 %111, i32* %112, align 4, !dbg !8055, !tbaa !7765
  br label %113, !dbg !8056

113:                                              ; preds = %110, %7
  %114 = bitcast i8* %1 to i32*, !dbg !8056
  %115 = load i32, i32* %114, align 4, !dbg !8057, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %115, metadata !7610, metadata !DIExpression()) #6, !dbg !8058
  %116 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %115) #6, !dbg !8060, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %116, metadata !7614, metadata !DIExpression()) #6, !dbg !8058
  %117 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 0, !dbg !8061
  store i32 %116, i32* %117, align 4, !dbg !8062, !tbaa !934
  %118 = add i32 %19, 4, !dbg !8063
  call void @llvm.dbg.value(metadata i32 %118, metadata !7893, metadata !DIExpression()), !dbg !7895
  %119 = inttoptr i32 %118 to i32*, !dbg !8064
  %120 = load i32, i32* %119, align 4, !dbg !8065, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %120, metadata !7610, metadata !DIExpression()) #6, !dbg !8066
  %121 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %120) #6, !dbg !8068, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %121, metadata !7614, metadata !DIExpression()) #6, !dbg !8066
  %122 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 1, !dbg !8069
  store i32 %121, i32* %122, align 4, !dbg !8070, !tbaa !1690
  %123 = add i32 %19, 8, !dbg !8071
  call void @llvm.dbg.value(metadata i32 %123, metadata !7893, metadata !DIExpression()), !dbg !7895
  %124 = inttoptr i32 %123 to i32*, !dbg !8072
  %125 = load i32, i32* %124, align 4, !dbg !8073, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %125, metadata !7610, metadata !DIExpression()) #6, !dbg !8074
  %126 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %125) #6, !dbg !8076, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %126, metadata !7614, metadata !DIExpression()) #6, !dbg !8074
  %127 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 2, !dbg !8077
  store i32 %126, i32* %127, align 4, !dbg !8078, !tbaa !968
  %128 = add i32 %19, 12, !dbg !8079
  call void @llvm.dbg.value(metadata i32 %128, metadata !7893, metadata !DIExpression()), !dbg !7895
  %129 = inttoptr i32 %128 to i32*, !dbg !8080
  %130 = load i32, i32* %129, align 4, !dbg !8081, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %130, metadata !7610, metadata !DIExpression()) #6, !dbg !8082
  %131 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %130) #6, !dbg !8084, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %131, metadata !7614, metadata !DIExpression()) #6, !dbg !8082
  %132 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 3, !dbg !8085
  store i32 %131, i32* %132, align 4, !dbg !8086, !tbaa !985
  %133 = icmp eq i8 %0, 0, !dbg !8087
  br i1 %133, label %134, label %148, !dbg !8089

134:                                              ; preds = %113
  call arm_aapcs_vfpcc void @CRYP_FIFOFlush() #5, !dbg !8090
  %135 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 0, !dbg !8092
  store i16 4, i16* %135, align 2, !dbg !8093, !tbaa !7773
  %136 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 1, !dbg !8094
  store i16 56, i16* %136, align 2, !dbg !8095, !tbaa !7776
  %137 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 2, !dbg !8096
  store i16 0, i16* %137, align 2, !dbg !8097, !tbaa !7779
  call arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nonnull %8) #5, !dbg !8098
  call arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nonnull %9) #5, !dbg !8099
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 1) #5, !dbg !8100
  br label %138, !dbg !8101

138:                                              ; preds = %138, %134
  %139 = call arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext 16) #5, !dbg !8102
  call void @llvm.dbg.value(metadata i32 %139, metadata !7888, metadata !DIExpression()), !dbg !7895
  %140 = load volatile i32, i32* %11, align 4, !dbg !8104, !tbaa !894
  %141 = add i32 %140, 1, !dbg !8104
  store volatile i32 %141, i32* %11, align 4, !dbg !8104, !tbaa !894
  %142 = load volatile i32, i32* %11, align 4, !dbg !8105, !tbaa !894
  %143 = icmp ne i32 %142, 65536, !dbg !8106
  %144 = icmp ne i32 %139, 0, !dbg !8107
  %145 = and i1 %144, %143, !dbg !8107
  br i1 %145, label %138, label %146, !dbg !8108, !llvm.loop !8109

146:                                              ; preds = %138
  br i1 %144, label %150, label %147, !dbg !8111

147:                                              ; preds = %146
  store i16 4, i16* %135, align 2, !dbg !8112, !tbaa !7773
  br label %150

148:                                              ; preds = %113
  call arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nonnull %9) #5, !dbg !8115
  %149 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 0, !dbg !8117
  store i16 0, i16* %149, align 2, !dbg !8118, !tbaa !7773
  br label %150

150:                                              ; preds = %146, %147, %148
  %151 = phi i1 [ false, %146 ], [ true, %147 ], [ true, %148 ], !dbg !7895
  %152 = phi i32 [ 0, %146 ], [ 1, %147 ], [ 1, %148 ], !dbg !7895
  call void @llvm.dbg.value(metadata i32 %152, metadata !7889, metadata !DIExpression()), !dbg !7895
  %153 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 1, !dbg !8119
  store i16 40, i16* %153, align 2, !dbg !8120, !tbaa !7776
  %154 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 2, !dbg !8121
  store i16 128, i16* %154, align 2, !dbg !8122, !tbaa !7779
  call arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nonnull %8) #5, !dbg !8123
  call arm_aapcs_vfpcc void @CRYP_IVInit(%struct.DMA_TypeDef* nonnull %10) #5, !dbg !8124
  call arm_aapcs_vfpcc void @CRYP_FIFOFlush() #5, !dbg !8125
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 1) #5, !dbg !8126
  call void @llvm.dbg.value(metadata i32 0, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %18, metadata !7892, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %17, metadata !7891, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %152, metadata !7889, metadata !DIExpression()), !dbg !7895
  %155 = icmp ne i32 %5, 0, !dbg !8127
  %156 = and i1 %151, %155, !dbg !8130
  br i1 %156, label %157, label %198, !dbg !8131

157:                                              ; preds = %150, %181
  %158 = phi i32 [ %195, %181 ], [ 0, %150 ]
  %159 = phi i32 [ %194, %181 ], [ %18, %150 ]
  %160 = phi i32 [ %182, %181 ], [ %17, %150 ]
  call void @llvm.dbg.value(metadata i32 %158, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %159, metadata !7892, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %160, metadata !7891, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %152, metadata !7889, metadata !DIExpression()), !dbg !7895
  %161 = inttoptr i32 %160 to i32*, !dbg !8132
  %162 = load i32, i32* %161, align 4, !dbg !8134, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %162) #5, !dbg !8135
  %163 = add i32 %160, 4, !dbg !8136
  call void @llvm.dbg.value(metadata i32 %163, metadata !7891, metadata !DIExpression()), !dbg !7895
  %164 = inttoptr i32 %163 to i32*, !dbg !8137
  %165 = load i32, i32* %164, align 4, !dbg !8138, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %165) #5, !dbg !8139
  %166 = add i32 %160, 8, !dbg !8140
  call void @llvm.dbg.value(metadata i32 %166, metadata !7891, metadata !DIExpression()), !dbg !7895
  %167 = inttoptr i32 %166 to i32*, !dbg !8141
  %168 = load i32, i32* %167, align 4, !dbg !8142, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %168) #5, !dbg !8143
  %169 = add i32 %160, 12, !dbg !8144
  call void @llvm.dbg.value(metadata i32 %169, metadata !7891, metadata !DIExpression()), !dbg !7895
  %170 = inttoptr i32 %169 to i32*, !dbg !8145
  %171 = load i32, i32* %170, align 4, !dbg !8146, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %171) #5, !dbg !8147
  call void @llvm.dbg.value(metadata i32 %182, metadata !7891, metadata !DIExpression()), !dbg !7895
  store volatile i32 0, i32* %11, align 4, !dbg !8148, !tbaa !894
  br label %172, !dbg !8149

172:                                              ; preds = %172, %157
  %173 = call arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext 16) #5, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %173, metadata !7888, metadata !DIExpression()), !dbg !7895
  %174 = load volatile i32, i32* %11, align 4, !dbg !8152, !tbaa !894
  %175 = add i32 %174, 1, !dbg !8152
  store volatile i32 %175, i32* %11, align 4, !dbg !8152, !tbaa !894
  %176 = load volatile i32, i32* %11, align 4, !dbg !8153, !tbaa !894
  %177 = icmp ne i32 %176, 65536, !dbg !8154
  %178 = icmp ne i32 %173, 0, !dbg !8155
  %179 = and i1 %178, %177, !dbg !8155
  br i1 %179, label %172, label %180, !dbg !8156, !llvm.loop !8157

180:                                              ; preds = %172
  br i1 %178, label %198, label %181, !dbg !8159

181:                                              ; preds = %180
  %182 = add i32 %160, 16, !dbg !8160
  %183 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !8161
  %184 = inttoptr i32 %159 to i32*, !dbg !8164
  store i32 %183, i32* %184, align 4, !dbg !8165, !tbaa !894
  %185 = add i32 %159, 4, !dbg !8166
  call void @llvm.dbg.value(metadata i32 %185, metadata !7892, metadata !DIExpression()), !dbg !7895
  %186 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !8167
  %187 = inttoptr i32 %185 to i32*, !dbg !8168
  store i32 %186, i32* %187, align 4, !dbg !8169, !tbaa !894
  %188 = add i32 %159, 8, !dbg !8170
  call void @llvm.dbg.value(metadata i32 %188, metadata !7892, metadata !DIExpression()), !dbg !7895
  %189 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !8171
  %190 = inttoptr i32 %188 to i32*, !dbg !8172
  store i32 %189, i32* %190, align 4, !dbg !8173, !tbaa !894
  %191 = add i32 %159, 12, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %191, metadata !7892, metadata !DIExpression()), !dbg !7895
  %192 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !8175
  %193 = inttoptr i32 %191 to i32*, !dbg !8176
  store i32 %192, i32* %193, align 4, !dbg !8177, !tbaa !894
  %194 = add i32 %159, 16, !dbg !8178
  call void @llvm.dbg.value(metadata i32 %194, metadata !7892, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %152, metadata !7889, metadata !DIExpression()), !dbg !7895
  %195 = add i32 %158, 16, !dbg !8179
  call void @llvm.dbg.value(metadata i32 %195, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %182, metadata !7891, metadata !DIExpression()), !dbg !7895
  %196 = icmp ult i32 %195, %5, !dbg !8127
  %197 = and i1 %151, %196, !dbg !8130
  br i1 %197, label %157, label %198, !dbg !8131, !llvm.loop !8180

198:                                              ; preds = %180, %181, %150
  %199 = phi i32 [ %152, %150 ], [ 0, %180 ], [ %152, %181 ], !dbg !7895
  call void @llvm.dbg.value(metadata i32 %199, metadata !7889, metadata !DIExpression()), !dbg !7895
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 0) #5, !dbg !8182
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !8183
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6, !dbg !8183
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #6, !dbg !8183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6, !dbg !8183
  ret i32 %199, !dbg !8184
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_AES_CTR(i8 zeroext %0, i8* %1, i8* %2, i16 zeroext %3, i8* %4, i32 %5, i8* %6) local_unnamed_addr #3 !dbg !8185 {
  %8 = alloca %struct.CRYP_InitTypeDef, align 2
  %9 = alloca %struct.CRYP_KeyInitTypeDef, align 4
  %10 = alloca %struct.DMA_TypeDef, align 4
  %11 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8187, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i8* %1, metadata !8188, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i8* %2, metadata !8189, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i16 %3, metadata !8190, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i8* %4, metadata !8191, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %5, metadata !8192, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i8* %6, metadata !8193, metadata !DIExpression()), !dbg !8205
  %12 = bitcast %struct.CRYP_InitTypeDef* %8 to i8*, !dbg !8206
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6, !dbg !8206
  call void @llvm.dbg.declare(metadata %struct.CRYP_InitTypeDef* %8, metadata !8194, metadata !DIExpression()), !dbg !8207
  %13 = bitcast %struct.CRYP_KeyInitTypeDef* %9 to i8*, !dbg !8208
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #6, !dbg !8208
  call void @llvm.dbg.declare(metadata %struct.CRYP_KeyInitTypeDef* %9, metadata !8195, metadata !DIExpression()), !dbg !8209
  %14 = bitcast %struct.DMA_TypeDef* %10 to i8*, !dbg !8210
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6, !dbg !8210
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %10, metadata !8196, metadata !DIExpression()), !dbg !8211
  %15 = bitcast i32* %11 to i8*, !dbg !8212
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15), !dbg !8212
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8197, metadata !DIExpression()), !dbg !8213
  store volatile i32 0, i32* %11, align 4, !dbg !8213, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !8198, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 1, metadata !8199, metadata !DIExpression()), !dbg !8205
  %16 = ptrtoint i8* %2 to i32, !dbg !8214
  call void @llvm.dbg.value(metadata i32 %16, metadata !8200, metadata !DIExpression()), !dbg !8205
  %17 = ptrtoint i8* %4 to i32, !dbg !8215
  call void @llvm.dbg.value(metadata i32 %17, metadata !8201, metadata !DIExpression()), !dbg !8205
  %18 = ptrtoint i8* %6 to i32, !dbg !8216
  call void @llvm.dbg.value(metadata i32 %18, metadata !8202, metadata !DIExpression()), !dbg !8205
  %19 = ptrtoint i8* %1 to i32, !dbg !8217
  call void @llvm.dbg.value(metadata i32 %19, metadata !8203, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 0, metadata !8204, metadata !DIExpression()), !dbg !8205
  call arm_aapcs_vfpcc void @CRYP_KeyStructInit(%struct.CRYP_KeyInitTypeDef* nonnull %9) #5, !dbg !8218
  switch i16 %3, label %113 [
    i16 128, label %20
    i16 192, label %40
    i16 256, label %70
  ], !dbg !8219

20:                                               ; preds = %7
  %21 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 3, !dbg !8220
  store i16 0, i16* %21, align 2, !dbg !8222, !tbaa !7606
  %22 = bitcast i8* %2 to i32*, !dbg !8223
  %23 = load i32, i32* %22, align 4, !dbg !8224, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %23, metadata !7610, metadata !DIExpression()) #6, !dbg !8225
  %24 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %23) #6, !dbg !8227, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %24, metadata !7614, metadata !DIExpression()) #6, !dbg !8225
  %25 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 4, !dbg !8228
  store i32 %24, i32* %25, align 4, !dbg !8229, !tbaa !7621
  %26 = add i32 %16, 4, !dbg !8230
  call void @llvm.dbg.value(metadata i32 %26, metadata !8200, metadata !DIExpression()), !dbg !8205
  %27 = inttoptr i32 %26 to i32*, !dbg !8231
  %28 = load i32, i32* %27, align 4, !dbg !8232, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %28, metadata !7610, metadata !DIExpression()) #6, !dbg !8233
  %29 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %28) #6, !dbg !8235, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %29, metadata !7614, metadata !DIExpression()) #6, !dbg !8233
  %30 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 5, !dbg !8236
  store i32 %29, i32* %30, align 4, !dbg !8237, !tbaa !7631
  %31 = add i32 %16, 8, !dbg !8238
  call void @llvm.dbg.value(metadata i32 %31, metadata !8200, metadata !DIExpression()), !dbg !8205
  %32 = inttoptr i32 %31 to i32*, !dbg !8239
  %33 = load i32, i32* %32, align 4, !dbg !8240, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %33, metadata !7610, metadata !DIExpression()) #6, !dbg !8241
  %34 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %33) #6, !dbg !8243, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %34, metadata !7614, metadata !DIExpression()) #6, !dbg !8241
  %35 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 6, !dbg !8244
  store i32 %34, i32* %35, align 4, !dbg !8245, !tbaa !7640
  %36 = add i32 %16, 12, !dbg !8246
  call void @llvm.dbg.value(metadata i32 %36, metadata !8200, metadata !DIExpression()), !dbg !8205
  %37 = inttoptr i32 %36 to i32*, !dbg !8247
  %38 = load i32, i32* %37, align 4, !dbg !8248, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %38, metadata !7610, metadata !DIExpression()) #6, !dbg !8249
  %39 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %38) #6, !dbg !8251, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %39, metadata !7614, metadata !DIExpression()) #6, !dbg !8249
  br label %110, !dbg !8252

40:                                               ; preds = %7
  %41 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 3, !dbg !8253
  store i16 256, i16* %41, align 2, !dbg !8254, !tbaa !7606
  %42 = bitcast i8* %2 to i32*, !dbg !8255
  %43 = load i32, i32* %42, align 4, !dbg !8256, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %43, metadata !7610, metadata !DIExpression()) #6, !dbg !8257
  %44 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %43) #6, !dbg !8259, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %44, metadata !7614, metadata !DIExpression()) #6, !dbg !8257
  %45 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 2, !dbg !8260
  store i32 %44, i32* %45, align 4, !dbg !8261, !tbaa !7657
  %46 = add i32 %16, 4, !dbg !8262
  call void @llvm.dbg.value(metadata i32 %46, metadata !8200, metadata !DIExpression()), !dbg !8205
  %47 = inttoptr i32 %46 to i32*, !dbg !8263
  %48 = load i32, i32* %47, align 4, !dbg !8264, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %48, metadata !7610, metadata !DIExpression()) #6, !dbg !8265
  %49 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %48) #6, !dbg !8267, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %49, metadata !7614, metadata !DIExpression()) #6, !dbg !8265
  %50 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 3, !dbg !8268
  store i32 %49, i32* %50, align 4, !dbg !8269, !tbaa !7666
  %51 = add i32 %16, 8, !dbg !8270
  call void @llvm.dbg.value(metadata i32 %51, metadata !8200, metadata !DIExpression()), !dbg !8205
  %52 = inttoptr i32 %51 to i32*, !dbg !8271
  %53 = load i32, i32* %52, align 4, !dbg !8272, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %53, metadata !7610, metadata !DIExpression()) #6, !dbg !8273
  %54 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %53) #6, !dbg !8275, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %54, metadata !7614, metadata !DIExpression()) #6, !dbg !8273
  %55 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 4, !dbg !8276
  store i32 %54, i32* %55, align 4, !dbg !8277, !tbaa !7621
  %56 = add i32 %16, 12, !dbg !8278
  call void @llvm.dbg.value(metadata i32 %56, metadata !8200, metadata !DIExpression()), !dbg !8205
  %57 = inttoptr i32 %56 to i32*, !dbg !8279
  %58 = load i32, i32* %57, align 4, !dbg !8280, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %58, metadata !7610, metadata !DIExpression()) #6, !dbg !8281
  %59 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %58) #6, !dbg !8283, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %59, metadata !7614, metadata !DIExpression()) #6, !dbg !8281
  %60 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 5, !dbg !8284
  store i32 %59, i32* %60, align 4, !dbg !8285, !tbaa !7631
  %61 = add i32 %16, 16, !dbg !8286
  call void @llvm.dbg.value(metadata i32 %61, metadata !8200, metadata !DIExpression()), !dbg !8205
  %62 = inttoptr i32 %61 to i32*, !dbg !8287
  %63 = load i32, i32* %62, align 4, !dbg !8288, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %63, metadata !7610, metadata !DIExpression()) #6, !dbg !8289
  %64 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %63) #6, !dbg !8291, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %64, metadata !7614, metadata !DIExpression()) #6, !dbg !8289
  %65 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 6, !dbg !8292
  store i32 %64, i32* %65, align 4, !dbg !8293, !tbaa !7640
  %66 = add i32 %16, 20, !dbg !8294
  call void @llvm.dbg.value(metadata i32 %66, metadata !8200, metadata !DIExpression()), !dbg !8205
  %67 = inttoptr i32 %66 to i32*, !dbg !8295
  %68 = load i32, i32* %67, align 4, !dbg !8296, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %68, metadata !7610, metadata !DIExpression()) #6, !dbg !8297
  %69 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %68) #6, !dbg !8299, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %69, metadata !7614, metadata !DIExpression()) #6, !dbg !8297
  br label %110, !dbg !8300

70:                                               ; preds = %7
  %71 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 3, !dbg !8301
  store i16 512, i16* %71, align 2, !dbg !8302, !tbaa !7606
  %72 = bitcast i8* %2 to i32*, !dbg !8303
  %73 = load i32, i32* %72, align 4, !dbg !8304, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %73, metadata !7610, metadata !DIExpression()) #6, !dbg !8305
  %74 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %73) #6, !dbg !8307, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %74, metadata !7614, metadata !DIExpression()) #6, !dbg !8305
  %75 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 0, !dbg !8308
  store i32 %74, i32* %75, align 4, !dbg !8309, !tbaa !7707
  %76 = add i32 %16, 4, !dbg !8310
  call void @llvm.dbg.value(metadata i32 %76, metadata !8200, metadata !DIExpression()), !dbg !8205
  %77 = inttoptr i32 %76 to i32*, !dbg !8311
  %78 = load i32, i32* %77, align 4, !dbg !8312, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %78, metadata !7610, metadata !DIExpression()) #6, !dbg !8313
  %79 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %78) #6, !dbg !8315, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %79, metadata !7614, metadata !DIExpression()) #6, !dbg !8313
  %80 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 1, !dbg !8316
  store i32 %79, i32* %80, align 4, !dbg !8317, !tbaa !7716
  %81 = add i32 %16, 8, !dbg !8318
  call void @llvm.dbg.value(metadata i32 %81, metadata !8200, metadata !DIExpression()), !dbg !8205
  %82 = inttoptr i32 %81 to i32*, !dbg !8319
  %83 = load i32, i32* %82, align 4, !dbg !8320, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %83, metadata !7610, metadata !DIExpression()) #6, !dbg !8321
  %84 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %83) #6, !dbg !8323, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %84, metadata !7614, metadata !DIExpression()) #6, !dbg !8321
  %85 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 2, !dbg !8324
  store i32 %84, i32* %85, align 4, !dbg !8325, !tbaa !7657
  %86 = add i32 %16, 12, !dbg !8326
  call void @llvm.dbg.value(metadata i32 %86, metadata !8200, metadata !DIExpression()), !dbg !8205
  %87 = inttoptr i32 %86 to i32*, !dbg !8327
  %88 = load i32, i32* %87, align 4, !dbg !8328, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %88, metadata !7610, metadata !DIExpression()) #6, !dbg !8329
  %89 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %88) #6, !dbg !8331, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %89, metadata !7614, metadata !DIExpression()) #6, !dbg !8329
  %90 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 3, !dbg !8332
  store i32 %89, i32* %90, align 4, !dbg !8333, !tbaa !7666
  %91 = add i32 %16, 16, !dbg !8334
  call void @llvm.dbg.value(metadata i32 %91, metadata !8200, metadata !DIExpression()), !dbg !8205
  %92 = inttoptr i32 %91 to i32*, !dbg !8335
  %93 = load i32, i32* %92, align 4, !dbg !8336, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %93, metadata !7610, metadata !DIExpression()) #6, !dbg !8337
  %94 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %93) #6, !dbg !8339, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %94, metadata !7614, metadata !DIExpression()) #6, !dbg !8337
  %95 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 4, !dbg !8340
  store i32 %94, i32* %95, align 4, !dbg !8341, !tbaa !7621
  %96 = add i32 %16, 20, !dbg !8342
  call void @llvm.dbg.value(metadata i32 %96, metadata !8200, metadata !DIExpression()), !dbg !8205
  %97 = inttoptr i32 %96 to i32*, !dbg !8343
  %98 = load i32, i32* %97, align 4, !dbg !8344, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %98, metadata !7610, metadata !DIExpression()) #6, !dbg !8345
  %99 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %98) #6, !dbg !8347, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %99, metadata !7614, metadata !DIExpression()) #6, !dbg !8345
  %100 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 5, !dbg !8348
  store i32 %99, i32* %100, align 4, !dbg !8349, !tbaa !7631
  %101 = add i32 %16, 24, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %101, metadata !8200, metadata !DIExpression()), !dbg !8205
  %102 = inttoptr i32 %101 to i32*, !dbg !8351
  %103 = load i32, i32* %102, align 4, !dbg !8352, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %103, metadata !7610, metadata !DIExpression()) #6, !dbg !8353
  %104 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %103) #6, !dbg !8355, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %104, metadata !7614, metadata !DIExpression()) #6, !dbg !8353
  %105 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 6, !dbg !8356
  store i32 %104, i32* %105, align 4, !dbg !8357, !tbaa !7640
  %106 = add i32 %16, 28, !dbg !8358
  call void @llvm.dbg.value(metadata i32 %106, metadata !8200, metadata !DIExpression()), !dbg !8205
  %107 = inttoptr i32 %106 to i32*, !dbg !8359
  %108 = load i32, i32* %107, align 4, !dbg !8360, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %108, metadata !7610, metadata !DIExpression()) #6, !dbg !8361
  %109 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %108) #6, !dbg !8363, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %109, metadata !7614, metadata !DIExpression()) #6, !dbg !8361
  br label %110, !dbg !8364

110:                                              ; preds = %20, %40, %70
  %111 = phi i32 [ %109, %70 ], [ %69, %40 ], [ %39, %20 ]
  %112 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %9, i32 0, i32 7, !dbg !8365
  store i32 %111, i32* %112, align 4, !dbg !8365, !tbaa !7765
  br label %113, !dbg !8366

113:                                              ; preds = %110, %7
  %114 = bitcast i8* %1 to i32*, !dbg !8366
  %115 = load i32, i32* %114, align 4, !dbg !8367, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %115, metadata !7610, metadata !DIExpression()) #6, !dbg !8368
  %116 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %115) #6, !dbg !8370, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %116, metadata !7614, metadata !DIExpression()) #6, !dbg !8368
  %117 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 0, !dbg !8371
  store i32 %116, i32* %117, align 4, !dbg !8372, !tbaa !934
  %118 = add i32 %19, 4, !dbg !8373
  call void @llvm.dbg.value(metadata i32 %118, metadata !8203, metadata !DIExpression()), !dbg !8205
  %119 = inttoptr i32 %118 to i32*, !dbg !8374
  %120 = load i32, i32* %119, align 4, !dbg !8375, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %120, metadata !7610, metadata !DIExpression()) #6, !dbg !8376
  %121 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %120) #6, !dbg !8378, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %121, metadata !7614, metadata !DIExpression()) #6, !dbg !8376
  %122 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 1, !dbg !8379
  store i32 %121, i32* %122, align 4, !dbg !8380, !tbaa !1690
  %123 = add i32 %19, 8, !dbg !8381
  call void @llvm.dbg.value(metadata i32 %123, metadata !8203, metadata !DIExpression()), !dbg !8205
  %124 = inttoptr i32 %123 to i32*, !dbg !8382
  %125 = load i32, i32* %124, align 4, !dbg !8383, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %125, metadata !7610, metadata !DIExpression()) #6, !dbg !8384
  %126 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %125) #6, !dbg !8386, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %126, metadata !7614, metadata !DIExpression()) #6, !dbg !8384
  %127 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 2, !dbg !8387
  store i32 %126, i32* %127, align 4, !dbg !8388, !tbaa !968
  %128 = add i32 %19, 12, !dbg !8389
  call void @llvm.dbg.value(metadata i32 %128, metadata !8203, metadata !DIExpression()), !dbg !8205
  %129 = inttoptr i32 %128 to i32*, !dbg !8390
  %130 = load i32, i32* %129, align 4, !dbg !8391, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %130, metadata !7610, metadata !DIExpression()) #6, !dbg !8392
  %131 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %130) #6, !dbg !8394, !srcloc !7618
  call void @llvm.dbg.value(metadata i32 %131, metadata !7614, metadata !DIExpression()) #6, !dbg !8392
  %132 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %10, i32 0, i32 3, !dbg !8395
  store i32 %131, i32* %132, align 4, !dbg !8396, !tbaa !985
  call arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nonnull %9) #5, !dbg !8397
  %133 = icmp eq i8 %0, 0, !dbg !8398
  %134 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 0, !dbg !8400
  %135 = select i1 %133, i16 4, i16 0
  store i16 %135, i16* %134, align 2, !dbg !8400, !tbaa !7773
  %136 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 1, !dbg !8401
  store i16 48, i16* %136, align 2, !dbg !8402, !tbaa !7776
  %137 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %8, i32 0, i32 2, !dbg !8403
  store i16 128, i16* %137, align 2, !dbg !8404, !tbaa !7779
  call arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nonnull %8) #5, !dbg !8405
  call arm_aapcs_vfpcc void @CRYP_IVInit(%struct.DMA_TypeDef* nonnull %10) #5, !dbg !8406
  call arm_aapcs_vfpcc void @CRYP_FIFOFlush() #5, !dbg !8407
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 1) #5, !dbg !8408
  call void @llvm.dbg.value(metadata i32 0, metadata !8204, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %18, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %17, metadata !8201, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 1, metadata !8199, metadata !DIExpression()), !dbg !8205
  %138 = icmp eq i32 %5, 0, !dbg !8409
  br i1 %138, label %179, label %139, !dbg !8412

139:                                              ; preds = %113, %163
  %140 = phi i32 [ %177, %163 ], [ 0, %113 ]
  %141 = phi i32 [ %176, %163 ], [ %18, %113 ]
  %142 = phi i32 [ %164, %163 ], [ %17, %113 ]
  call void @llvm.dbg.value(metadata i32 %140, metadata !8204, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %141, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %142, metadata !8201, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 1, metadata !8199, metadata !DIExpression()), !dbg !8205
  %143 = inttoptr i32 %142 to i32*, !dbg !8413
  %144 = load i32, i32* %143, align 4, !dbg !8415, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %144) #5, !dbg !8416
  %145 = add i32 %142, 4, !dbg !8417
  call void @llvm.dbg.value(metadata i32 %145, metadata !8201, metadata !DIExpression()), !dbg !8205
  %146 = inttoptr i32 %145 to i32*, !dbg !8418
  %147 = load i32, i32* %146, align 4, !dbg !8419, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %147) #5, !dbg !8420
  %148 = add i32 %142, 8, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %148, metadata !8201, metadata !DIExpression()), !dbg !8205
  %149 = inttoptr i32 %148 to i32*, !dbg !8422
  %150 = load i32, i32* %149, align 4, !dbg !8423, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %150) #5, !dbg !8424
  %151 = add i32 %142, 12, !dbg !8425
  call void @llvm.dbg.value(metadata i32 %151, metadata !8201, metadata !DIExpression()), !dbg !8205
  %152 = inttoptr i32 %151 to i32*, !dbg !8426
  %153 = load i32, i32* %152, align 4, !dbg !8427, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %153) #5, !dbg !8428
  call void @llvm.dbg.value(metadata i32 %164, metadata !8201, metadata !DIExpression()), !dbg !8205
  store volatile i32 0, i32* %11, align 4, !dbg !8429, !tbaa !894
  br label %154, !dbg !8430

154:                                              ; preds = %154, %139
  %155 = call arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext 16) #5, !dbg !8431
  call void @llvm.dbg.value(metadata i32 %155, metadata !8198, metadata !DIExpression()), !dbg !8205
  %156 = load volatile i32, i32* %11, align 4, !dbg !8433, !tbaa !894
  %157 = add i32 %156, 1, !dbg !8433
  store volatile i32 %157, i32* %11, align 4, !dbg !8433, !tbaa !894
  %158 = load volatile i32, i32* %11, align 4, !dbg !8434, !tbaa !894
  %159 = icmp ne i32 %158, 65536, !dbg !8435
  %160 = icmp ne i32 %155, 0, !dbg !8436
  %161 = and i1 %160, %159, !dbg !8436
  br i1 %161, label %154, label %162, !dbg !8437, !llvm.loop !8438

162:                                              ; preds = %154
  br i1 %160, label %179, label %163, !dbg !8440

163:                                              ; preds = %162
  %164 = add i32 %142, 16, !dbg !8441
  %165 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !8442
  %166 = inttoptr i32 %141 to i32*, !dbg !8445
  store i32 %165, i32* %166, align 4, !dbg !8446, !tbaa !894
  %167 = add i32 %141, 4, !dbg !8447
  call void @llvm.dbg.value(metadata i32 %167, metadata !8202, metadata !DIExpression()), !dbg !8205
  %168 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !8448
  %169 = inttoptr i32 %167 to i32*, !dbg !8449
  store i32 %168, i32* %169, align 4, !dbg !8450, !tbaa !894
  %170 = add i32 %141, 8, !dbg !8451
  call void @llvm.dbg.value(metadata i32 %170, metadata !8202, metadata !DIExpression()), !dbg !8205
  %171 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !8452
  %172 = inttoptr i32 %170 to i32*, !dbg !8453
  store i32 %171, i32* %172, align 4, !dbg !8454, !tbaa !894
  %173 = add i32 %141, 12, !dbg !8455
  call void @llvm.dbg.value(metadata i32 %173, metadata !8202, metadata !DIExpression()), !dbg !8205
  %174 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !8456
  %175 = inttoptr i32 %173 to i32*, !dbg !8457
  store i32 %174, i32* %175, align 4, !dbg !8458, !tbaa !894
  %176 = add i32 %141, 16, !dbg !8459
  call void @llvm.dbg.value(metadata i32 %176, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 1, metadata !8199, metadata !DIExpression()), !dbg !8205
  %177 = add i32 %140, 16, !dbg !8460
  call void @llvm.dbg.value(metadata i32 %177, metadata !8204, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %164, metadata !8201, metadata !DIExpression()), !dbg !8205
  %178 = icmp ult i32 %177, %5, !dbg !8409
  br i1 %178, label %139, label %179, !dbg !8412, !llvm.loop !8461

179:                                              ; preds = %162, %163, %113
  %180 = phi i32 [ 1, %113 ], [ 0, %162 ], [ 1, %163 ], !dbg !8205
  call void @llvm.dbg.value(metadata i32 %180, metadata !8199, metadata !DIExpression()), !dbg !8205
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 0) #5, !dbg !8463
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !8464
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6, !dbg !8464
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #6, !dbg !8464
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6, !dbg !8464
  ret i32 %180, !dbg !8465
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @GPIO_DeInit(%struct.GPIO_TypeDef* %0) local_unnamed_addr #3 !dbg !8466 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8470, metadata !DIExpression()), !dbg !8471
  %2 = ptrtoint %struct.GPIO_TypeDef* %0 to i32, !dbg !8472
  %3 = add i32 %2, -1073872896, !dbg !8472
  %4 = lshr i32 %3, 10, !dbg !8472
  %5 = shl i32 %3, 22, !dbg !8472
  %6 = or i32 %4, %5, !dbg !8472
  %7 = icmp ult i32 %6, 9, !dbg !8472
  br i1 %7, label %8, label %13, !dbg !8472

8:                                                ; preds = %1
  %9 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.GPIO_DeInit.1, i32 0, i32 %6, !dbg !8472
  %10 = load i32, i32* %9, align 4, !dbg !8472
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.GPIO_DeInit.1, i32 0, i32 %6, !dbg !8472
  %12 = load i32, i32* %11, align 4, !dbg !8472
  tail call arm_aapcs_vfpcc void @RCC_AHB1PeriphResetCmd(i32 %10, i32 1) #5, !dbg !8473
  tail call arm_aapcs_vfpcc void @RCC_AHB1PeriphResetCmd(i32 %12, i32 0) #5, !dbg !8473
  br label %13, !dbg !8475

13:                                               ; preds = %1, %8
  ret void, !dbg !8475
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @GPIO_Init(%struct.GPIO_TypeDef* %0, %struct.SDIO_CmdInitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !8476 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8493, metadata !DIExpression()), !dbg !8498
  call void @llvm.dbg.value(metadata %struct.SDIO_CmdInitTypeDef* %1, metadata !8494, metadata !DIExpression()), !dbg !8498
  call void @llvm.dbg.value(metadata i32 0, metadata !8495, metadata !DIExpression()), !dbg !8498
  call void @llvm.dbg.value(metadata i32 0, metadata !8496, metadata !DIExpression()), !dbg !8498
  call void @llvm.dbg.value(metadata i32 0, metadata !8497, metadata !DIExpression()), !dbg !8498
  call void @llvm.dbg.value(metadata i32 0, metadata !8495, metadata !DIExpression()), !dbg !8498
  %3 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %1, i32 0, i32 0, !dbg !8499
  %4 = load i32, i32* %3, align 4, !dbg !8499, !tbaa !8503
  %5 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !8505
  %6 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %1, i32 0, i32 1, !dbg !8505
  %7 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8508
  %8 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %1, i32 0, i32 2, !dbg !8508
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8508
  %10 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %1, i32 0, i32 3, !dbg !8508
  %11 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !8505
  %12 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %1, i32 0, i32 4, !dbg !8505
  br label %13, !dbg !8511

13:                                               ; preds = %94, %2
  %14 = phi i32 [ 0, %2 ], [ %95, %94 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8495, metadata !DIExpression()), !dbg !8498
  %15 = shl nuw nsw i32 1, %14, !dbg !8512
  call void @llvm.dbg.value(metadata i32 %15, metadata !8496, metadata !DIExpression()), !dbg !8498
  %16 = and i32 %4, %15, !dbg !8513
  call void @llvm.dbg.value(metadata i32 %16, metadata !8497, metadata !DIExpression()), !dbg !8498
  %17 = icmp eq i32 %16, %15, !dbg !8514
  br i1 %17, label %18, label %53, !dbg !8515

18:                                               ; preds = %13
  %19 = shl nuw nsw i32 %14, 1, !dbg !8516
  %20 = shl nuw i32 3, %19, !dbg !8517
  %21 = xor i32 %20, -1, !dbg !8518
  %22 = load volatile i32, i32* %5, align 4, !dbg !8519, !tbaa !8520
  %23 = and i32 %22, %21, !dbg !8519
  store volatile i32 %23, i32* %5, align 4, !dbg !8519, !tbaa !8520
  %24 = load i32, i32* %6, align 4, !dbg !8522, !tbaa !8523
  %25 = shl i32 %24, %19, !dbg !8524
  %26 = load volatile i32, i32* %5, align 4, !dbg !8525, !tbaa !8520
  %27 = or i32 %26, %25, !dbg !8525
  store volatile i32 %27, i32* %5, align 4, !dbg !8525, !tbaa !8520
  %28 = add i32 %24, -1, !dbg !8526
  %29 = icmp ult i32 %28, 2, !dbg !8526
  br i1 %29, label %30, label %46, !dbg !8526

30:                                               ; preds = %18
  %31 = load volatile i32, i32* %7, align 4, !dbg !8527, !tbaa !8528
  %32 = and i32 %31, %21, !dbg !8527
  store volatile i32 %32, i32* %7, align 4, !dbg !8527, !tbaa !8528
  %33 = load i32, i32* %8, align 4, !dbg !8529, !tbaa !8530
  %34 = shl i32 %33, %19, !dbg !8531
  %35 = load volatile i32, i32* %7, align 4, !dbg !8532, !tbaa !8528
  %36 = or i32 %35, %34, !dbg !8532
  store volatile i32 %36, i32* %7, align 4, !dbg !8532, !tbaa !8528
  %37 = xor i32 %15, -1, !dbg !8533
  %38 = load volatile i32, i32* %9, align 4, !dbg !8534, !tbaa !8535
  %39 = and i32 %38, %37, !dbg !8534
  store volatile i32 %39, i32* %9, align 4, !dbg !8534, !tbaa !8535
  %40 = load i32, i32* %10, align 4, !dbg !8536, !tbaa !8537
  %41 = and i32 %40, 65535, !dbg !8538
  %42 = shl nuw nsw i32 %41, %14, !dbg !8539
  %43 = and i32 %42, 65535, !dbg !8540
  %44 = load volatile i32, i32* %9, align 4, !dbg !8541, !tbaa !8535
  %45 = or i32 %43, %44, !dbg !8541
  store volatile i32 %45, i32* %9, align 4, !dbg !8541, !tbaa !8535
  br label %46, !dbg !8542

46:                                               ; preds = %18, %30
  %47 = load volatile i32, i32* %11, align 4, !dbg !8543, !tbaa !8544
  %48 = and i32 %47, %21, !dbg !8543
  store volatile i32 %48, i32* %11, align 4, !dbg !8543, !tbaa !8544
  %49 = load i32, i32* %12, align 4, !dbg !8545, !tbaa !8546
  %50 = shl i32 %49, %19, !dbg !8547
  %51 = load volatile i32, i32* %11, align 4, !dbg !8548, !tbaa !8544
  %52 = or i32 %51, %50, !dbg !8548
  store volatile i32 %52, i32* %11, align 4, !dbg !8548, !tbaa !8544
  br label %53, !dbg !8549

53:                                               ; preds = %13, %46
  %54 = or i32 %14, 1, !dbg !8550
  call void @llvm.dbg.value(metadata i32 %54, metadata !8495, metadata !DIExpression()), !dbg !8498
  %55 = shl nuw nsw i32 1, %54, !dbg !8512
  call void @llvm.dbg.value(metadata i32 %55, metadata !8496, metadata !DIExpression()), !dbg !8498
  %56 = and i32 %4, %55, !dbg !8513
  call void @llvm.dbg.value(metadata i32 %56, metadata !8497, metadata !DIExpression()), !dbg !8498
  %57 = icmp eq i32 %56, %55, !dbg !8514
  br i1 %57, label %59, label %94, !dbg !8515

58:                                               ; preds = %94
  ret void, !dbg !8551

59:                                               ; preds = %53
  %60 = shl nuw nsw i32 %54, 1, !dbg !8516
  %61 = shl nuw i32 3, %60, !dbg !8517
  %62 = xor i32 %61, -1, !dbg !8518
  %63 = load volatile i32, i32* %5, align 4, !dbg !8519, !tbaa !8520
  %64 = and i32 %63, %62, !dbg !8519
  store volatile i32 %64, i32* %5, align 4, !dbg !8519, !tbaa !8520
  %65 = load i32, i32* %6, align 4, !dbg !8522, !tbaa !8523
  %66 = shl i32 %65, %60, !dbg !8524
  %67 = load volatile i32, i32* %5, align 4, !dbg !8525, !tbaa !8520
  %68 = or i32 %67, %66, !dbg !8525
  store volatile i32 %68, i32* %5, align 4, !dbg !8525, !tbaa !8520
  %69 = add i32 %65, -1, !dbg !8526
  %70 = icmp ult i32 %69, 2, !dbg !8526
  br i1 %70, label %71, label %87, !dbg !8526

71:                                               ; preds = %59
  %72 = load volatile i32, i32* %7, align 4, !dbg !8527, !tbaa !8528
  %73 = and i32 %72, %62, !dbg !8527
  store volatile i32 %73, i32* %7, align 4, !dbg !8527, !tbaa !8528
  %74 = load i32, i32* %8, align 4, !dbg !8529, !tbaa !8530
  %75 = shl i32 %74, %60, !dbg !8531
  %76 = load volatile i32, i32* %7, align 4, !dbg !8532, !tbaa !8528
  %77 = or i32 %76, %75, !dbg !8532
  store volatile i32 %77, i32* %7, align 4, !dbg !8532, !tbaa !8528
  %78 = xor i32 %55, -1, !dbg !8533
  %79 = load volatile i32, i32* %9, align 4, !dbg !8534, !tbaa !8535
  %80 = and i32 %79, %78, !dbg !8534
  store volatile i32 %80, i32* %9, align 4, !dbg !8534, !tbaa !8535
  %81 = load i32, i32* %10, align 4, !dbg !8536, !tbaa !8537
  %82 = and i32 %81, 65535, !dbg !8538
  %83 = shl nuw nsw i32 %82, %54, !dbg !8539
  %84 = and i32 %83, 65535, !dbg !8540
  %85 = load volatile i32, i32* %9, align 4, !dbg !8541, !tbaa !8535
  %86 = or i32 %84, %85, !dbg !8541
  store volatile i32 %86, i32* %9, align 4, !dbg !8541, !tbaa !8535
  br label %87, !dbg !8542

87:                                               ; preds = %71, %59
  %88 = load volatile i32, i32* %11, align 4, !dbg !8543, !tbaa !8544
  %89 = and i32 %88, %62, !dbg !8543
  store volatile i32 %89, i32* %11, align 4, !dbg !8543, !tbaa !8544
  %90 = load i32, i32* %12, align 4, !dbg !8545, !tbaa !8546
  %91 = shl i32 %90, %60, !dbg !8547
  %92 = load volatile i32, i32* %11, align 4, !dbg !8548, !tbaa !8544
  %93 = or i32 %92, %91, !dbg !8548
  store volatile i32 %93, i32* %11, align 4, !dbg !8548, !tbaa !8544
  br label %94, !dbg !8549

94:                                               ; preds = %87, %53
  %95 = add nuw nsw i32 %14, 2, !dbg !8550
  call void @llvm.dbg.value(metadata i32 %95, metadata !8495, metadata !DIExpression()), !dbg !8498
  %96 = icmp eq i32 %95, 16, !dbg !8552
  br i1 %96, label %58, label %13, !dbg !8511, !llvm.loop !8553
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @GPIO_StructInit(%struct.SDIO_CmdInitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !8555 {
  call void @llvm.dbg.value(metadata %struct.SDIO_CmdInitTypeDef* %0, metadata !8559, metadata !DIExpression()), !dbg !8560
  %2 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 0, !dbg !8561
  store i32 65535, i32* %2, align 4, !dbg !8562, !tbaa !8503
  %3 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 1, !dbg !8563
  store i32 0, i32* %3, align 4, !dbg !8564, !tbaa !8523
  %4 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 2, !dbg !8565
  store i32 0, i32* %4, align 4, !dbg !8566, !tbaa !8530
  %5 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 3, !dbg !8567
  store i32 0, i32* %5, align 4, !dbg !8568, !tbaa !8537
  %6 = getelementptr inbounds %struct.SDIO_CmdInitTypeDef, %struct.SDIO_CmdInitTypeDef* %0, i32 0, i32 4, !dbg !8569
  store i32 0, i32* %6, align 4, !dbg !8570, !tbaa !8546
  ret void, !dbg !8571
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @GPIO_PinLockConfig(%struct.GPIO_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #3 !dbg !8572 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8576, metadata !DIExpression()), !dbg !8579
  call void @llvm.dbg.value(metadata i16 %1, metadata !8577, metadata !DIExpression()), !dbg !8579
  %4 = bitcast i32* %3 to i8*, !dbg !8580
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !8580
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8578, metadata !DIExpression()), !dbg !8581
  store volatile i32 65536, i32* %3, align 4, !dbg !8581, !tbaa !894
  %5 = zext i16 %1 to i32, !dbg !8582
  %6 = load volatile i32, i32* %3, align 4, !dbg !8583, !tbaa !894
  %7 = or i32 %6, %5, !dbg !8583
  store volatile i32 %7, i32* %3, align 4, !dbg !8583, !tbaa !894
  %8 = load volatile i32, i32* %3, align 4, !dbg !8584, !tbaa !894
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, !dbg !8585
  store volatile i32 %8, i32* %9, align 4, !dbg !8586, !tbaa !8587
  store volatile i32 %5, i32* %9, align 4, !dbg !8588, !tbaa !8587
  %10 = load volatile i32, i32* %3, align 4, !dbg !8589, !tbaa !894
  store volatile i32 %10, i32* %9, align 4, !dbg !8590, !tbaa !8587
  %11 = load volatile i32, i32* %9, align 4, !dbg !8591, !tbaa !8587
  store volatile i32 %11, i32* %3, align 4, !dbg !8592, !tbaa !894
  %12 = load volatile i32, i32* %9, align 4, !dbg !8593, !tbaa !8587
  store volatile i32 %12, i32* %3, align 4, !dbg !8594, !tbaa !894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !8595
  ret void, !dbg !8595
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @GPIO_ReadInputDataBit(%struct.GPIO_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !8596 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8600, metadata !DIExpression()), !dbg !8603
  call void @llvm.dbg.value(metadata i16 %1, metadata !8601, metadata !DIExpression()), !dbg !8603
  call void @llvm.dbg.value(metadata i8 0, metadata !8602, metadata !DIExpression()), !dbg !8603
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8604
  %4 = load volatile i32, i32* %3, align 4, !dbg !8604, !tbaa !8606
  %5 = zext i16 %1 to i32, !dbg !8607
  %6 = and i32 %4, %5, !dbg !8608
  %7 = icmp ne i32 %6, 0, !dbg !8609
  %8 = zext i1 %7 to i8
  call void @llvm.dbg.value(metadata i8 %8, metadata !8602, metadata !DIExpression()), !dbg !8603
  ret i8 %8, !dbg !8610
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @GPIO_ReadInputData(%struct.GPIO_TypeDef* %0) local_unnamed_addr #0 !dbg !8611 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8615, metadata !DIExpression()), !dbg !8616
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8617
  %3 = load volatile i32, i32* %2, align 4, !dbg !8617, !tbaa !8606
  %4 = trunc i32 %3 to i16, !dbg !8618
  ret i16 %4, !dbg !8619
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @GPIO_ReadOutputDataBit(%struct.GPIO_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !8620 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8622, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i16 %1, metadata !8623, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i8 0, metadata !8624, metadata !DIExpression()), !dbg !8625
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8626
  %4 = load volatile i32, i32* %3, align 4, !dbg !8626, !tbaa !8628
  %5 = zext i16 %1 to i32, !dbg !8629
  %6 = and i32 %4, %5, !dbg !8630
  %7 = icmp ne i32 %6, 0, !dbg !8631
  %8 = zext i1 %7 to i8
  call void @llvm.dbg.value(metadata i8 %8, metadata !8624, metadata !DIExpression()), !dbg !8625
  ret i8 %8, !dbg !8632
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @GPIO_ReadOutputData(%struct.GPIO_TypeDef* %0) local_unnamed_addr #0 !dbg !8633 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8635, metadata !DIExpression()), !dbg !8636
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8637
  %3 = load volatile i32, i32* %2, align 4, !dbg !8637, !tbaa !8628
  %4 = trunc i32 %3 to i16, !dbg !8638
  ret i16 %4, !dbg !8639
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @GPIO_SetBits(%struct.GPIO_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !8640 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i16 %1, metadata !8643, metadata !DIExpression()), !dbg !8644
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8645
  store volatile i16 %1, i16* %3, align 4, !dbg !8646, !tbaa !8647
  ret void, !dbg !8648
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @GPIO_ResetBits(%struct.GPIO_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !8649 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8651, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i16 %1, metadata !8652, metadata !DIExpression()), !dbg !8653
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 7, !dbg !8654
  store volatile i16 %1, i16* %3, align 2, !dbg !8655, !tbaa !8656
  ret void, !dbg !8657
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @GPIO_WriteBit(%struct.GPIO_TypeDef* %0, i16 zeroext %1, i32 %2) local_unnamed_addr #0 !dbg !8658 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8663, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i16 %1, metadata !8664, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i32 %2, metadata !8665, metadata !DIExpression()), !dbg !8666
  %4 = icmp eq i32 %2, 0, !dbg !8667
  br i1 %4, label %7, label %5, !dbg !8669

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8670
  store volatile i16 %1, i16* %6, align 4, !dbg !8672, !tbaa !8647
  br label %9, !dbg !8673

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 7, !dbg !8674
  store volatile i16 %1, i16* %8, align 2, !dbg !8676, !tbaa !8656
  br label %9

9:                                                ; preds = %7, %5
  ret void, !dbg !8677
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @GPIO_Write(%struct.GPIO_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !8678 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8680, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i16 %1, metadata !8681, metadata !DIExpression()), !dbg !8682
  %3 = zext i16 %1 to i32, !dbg !8683
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8684
  store volatile i32 %3, i32* %4, align 4, !dbg !8685, !tbaa !8628
  ret void, !dbg !8686
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @GPIO_ToggleBits(%struct.GPIO_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !8687 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8689, metadata !DIExpression()), !dbg !8691
  call void @llvm.dbg.value(metadata i16 %1, metadata !8690, metadata !DIExpression()), !dbg !8691
  %3 = zext i16 %1 to i32, !dbg !8692
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8693
  %5 = load volatile i32, i32* %4, align 4, !dbg !8694, !tbaa !8628
  %6 = xor i32 %5, %3, !dbg !8694
  store volatile i32 %6, i32* %4, align 4, !dbg !8694, !tbaa !8628
  ret void, !dbg !8695
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @GPIO_PinAFConfig(%struct.GPIO_TypeDef* %0, i16 zeroext %1, i8 zeroext %2) local_unnamed_addr #0 !dbg !8696 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8700, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i16 %1, metadata !8701, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8 %2, metadata !8702, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 0, metadata !8703, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 0, metadata !8704, metadata !DIExpression()), !dbg !8705
  %4 = zext i8 %2 to i32, !dbg !8706
  %5 = zext i16 %1 to i32, !dbg !8707
  %6 = shl nuw nsw i32 %5, 2, !dbg !8708
  %7 = and i32 %6, 28, !dbg !8708
  %8 = shl i32 %4, %7, !dbg !8709
  call void @llvm.dbg.value(metadata i32 %8, metadata !8703, metadata !DIExpression()), !dbg !8705
  %9 = shl nuw i32 15, %7, !dbg !8710
  %10 = xor i32 %9, -1, !dbg !8711
  %11 = lshr i32 %5, 3, !dbg !8712
  %12 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 9, i32 %11, !dbg !8713
  %13 = load volatile i32, i32* %12, align 4, !dbg !8714, !tbaa !894
  %14 = and i32 %13, %10, !dbg !8714
  store volatile i32 %14, i32* %12, align 4, !dbg !8714, !tbaa !894
  %15 = load volatile i32, i32* %12, align 4, !dbg !8715, !tbaa !894
  %16 = or i32 %15, %8, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %16, metadata !8704, metadata !DIExpression()), !dbg !8705
  store volatile i32 %16, i32* %12, align 4, !dbg !8717, !tbaa !894
  ret void, !dbg !8718
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @SPI_I2S_DeInit(%struct.SPI_TypeDef* %0) local_unnamed_addr #3 !dbg !8719 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !8723, metadata !DIExpression()), !dbg !8724
  %2 = ptrtoint %struct.SPI_TypeDef* %0 to i32, !dbg !8725
  switch i32 %2, label %6 [
    i32 1073819648, label %3
    i32 1073756160, label %4
    i32 1073757184, label %5
  ], !dbg !8725

3:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 4096, i32 1) #5, !dbg !8726
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 4096, i32 0) #5, !dbg !8729
  br label %6, !dbg !8730

4:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 16384, i32 1) #5, !dbg !8731
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 16384, i32 0) #5, !dbg !8734
  br label %6, !dbg !8735

5:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 32768, i32 1) #5, !dbg !8736
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 32768, i32 0) #5, !dbg !8740
  br label %6, !dbg !8741

6:                                                ; preds = %1, %4, %5, %3
  ret void, !dbg !8742
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_Init(%struct.SPI_TypeDef* %0, %struct.SPI_InitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !8743 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !8761, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata %struct.SPI_InitTypeDef* %1, metadata !8762, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i16 0, metadata !8763, metadata !DIExpression()), !dbg !8764
  %3 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !8765
  %4 = load volatile i16, i16* %3, align 2, !dbg !8765, !tbaa !8766
  call void @llvm.dbg.value(metadata i16 %4, metadata !8763, metadata !DIExpression()), !dbg !8764
  %5 = and i16 %4, 12352, !dbg !8768
  call void @llvm.dbg.value(metadata i16 %5, metadata !8763, metadata !DIExpression()), !dbg !8764
  %6 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %1, i32 0, i32 0, !dbg !8769
  %7 = load i16, i16* %6, align 2, !dbg !8769, !tbaa !8770
  %8 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %1, i32 0, i32 1, !dbg !8772
  %9 = load i16, i16* %8, align 2, !dbg !8772, !tbaa !8773
  %10 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %1, i32 0, i32 2, !dbg !8774
  %11 = load i16, i16* %10, align 2, !dbg !8774, !tbaa !8775
  %12 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %1, i32 0, i32 3, !dbg !8776
  %13 = load i16, i16* %12, align 2, !dbg !8776, !tbaa !8777
  %14 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %1, i32 0, i32 4, !dbg !8778
  %15 = load i16, i16* %14, align 2, !dbg !8778, !tbaa !8779
  %16 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %1, i32 0, i32 5, !dbg !8780
  %17 = load i16, i16* %16, align 2, !dbg !8780, !tbaa !8781
  %18 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %1, i32 0, i32 6, !dbg !8782
  %19 = load i16, i16* %18, align 2, !dbg !8782, !tbaa !8783
  %20 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %1, i32 0, i32 7, !dbg !8784
  %21 = load i16, i16* %20, align 2, !dbg !8784, !tbaa !8785
  %22 = or i16 %5, %7, !dbg !8786
  %23 = or i16 %22, %9, !dbg !8787
  %24 = or i16 %23, %11, !dbg !8788
  %25 = or i16 %24, %13, !dbg !8789
  %26 = or i16 %25, %15, !dbg !8790
  %27 = or i16 %26, %17, !dbg !8791
  %28 = or i16 %27, %19, !dbg !8792
  %29 = or i16 %28, %21, !dbg !8793
  call void @llvm.dbg.value(metadata i16 %29, metadata !8763, metadata !DIExpression()), !dbg !8764
  store volatile i16 %29, i16* %3, align 2, !dbg !8794, !tbaa !8766
  %30 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 14, !dbg !8795
  %31 = load volatile i16, i16* %30, align 2, !dbg !8796, !tbaa !8797
  %32 = and i16 %31, -2049, !dbg !8796
  store volatile i16 %32, i16* %30, align 2, !dbg !8796, !tbaa !8797
  %33 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %1, i32 0, i32 8, !dbg !8798
  %34 = load i16, i16* %33, align 2, !dbg !8798, !tbaa !8799
  %35 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 8, !dbg !8800
  store volatile i16 %34, i16* %35, align 2, !dbg !8801, !tbaa !8802
  ret void, !dbg !8803
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2S_Init(%struct.SPI_TypeDef* %0, %struct.I2S_InitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !8804 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !8818, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata %struct.I2S_InitTypeDef* %1, metadata !8819, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i16 0, metadata !8820, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i16 2, metadata !8821, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i16 0, metadata !8822, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i16 1, metadata !8823, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i32 0, metadata !8824, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i32 0, metadata !8825, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i32 0, metadata !8826, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i32 0, metadata !8827, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i32 0, metadata !8828, metadata !DIExpression()), !dbg !8829
  %3 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 14, !dbg !8830
  %4 = load volatile i16, i16* %3, align 2, !dbg !8831, !tbaa !8797
  %5 = and i16 %4, -4032, !dbg !8831
  store volatile i16 %5, i16* %3, align 2, !dbg !8831, !tbaa !8797
  %6 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 16, !dbg !8832
  store volatile i16 2, i16* %6, align 2, !dbg !8833, !tbaa !8834
  %7 = load volatile i16, i16* %3, align 2, !dbg !8835, !tbaa !8797
  call void @llvm.dbg.value(metadata i16 %7, metadata !8820, metadata !DIExpression()), !dbg !8829
  %8 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 4, !dbg !8836
  %9 = load i32, i32* %8, align 4, !dbg !8836, !tbaa !8838
  %10 = icmp eq i32 %9, 2, !dbg !8840
  br i1 %10, label %11, label %16, !dbg !8841

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 3, !dbg !8829
  %13 = load i16, i16* %12, align 2, !dbg !8842, !tbaa !8843
  %14 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 2, !dbg !8829
  %15 = load i16, i16* %14, align 4, !dbg !8844, !tbaa !8845
  br label %52, !dbg !8841

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 2, !dbg !8846
  %18 = load i16, i16* %17, align 4, !dbg !8846, !tbaa !8845
  %19 = icmp eq i16 %18, 0, !dbg !8849
  call void @llvm.dbg.value(metadata i16 undef, metadata !8823, metadata !DIExpression()), !dbg !8829
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8850, !tbaa !1421
  %21 = and i32 %20, 8388608, !dbg !8852
  %22 = icmp eq i32 %21, 0, !dbg !8853
  br i1 %22, label %26, label %23, !dbg !8854

23:                                               ; preds = %16
  %24 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8855, !tbaa !1421
  %25 = and i32 %24, -8388609, !dbg !8855
  store volatile i32 %25, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8855, !tbaa !1421
  br label %26, !dbg !8857

26:                                               ; preds = %16, %23
  %27 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !8858, !tbaa !1561
  %28 = lshr i32 %27, 6, !dbg !8859
  %29 = and i32 %28, 511, !dbg !8859
  call void @llvm.dbg.value(metadata i32 %29, metadata !8827, metadata !DIExpression()), !dbg !8829
  %30 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !8860, !tbaa !1561
  %31 = lshr i32 %30, 28, !dbg !8861
  %32 = and i32 %31, 7, !dbg !8861
  call void @llvm.dbg.value(metadata i32 %32, metadata !8828, metadata !DIExpression()), !dbg !8829
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8862, !tbaa !1424
  %34 = and i32 %33, 63, !dbg !8863
  call void @llvm.dbg.value(metadata i32 %34, metadata !8826, metadata !DIExpression()), !dbg !8829
  %35 = udiv i32 25000000, %34, !dbg !8864
  %36 = mul i32 %35, %29, !dbg !8865
  %37 = udiv i32 %36, %32, !dbg !8866
  call void @llvm.dbg.value(metadata i32 %37, metadata !8825, metadata !DIExpression()), !dbg !8829
  %38 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 3, !dbg !8867
  %39 = load i16, i16* %38, align 2, !dbg !8867, !tbaa !8843
  %40 = icmp eq i16 %39, 512, !dbg !8869
  %41 = select i1 %19, i32 5, i32 6, !dbg !8870
  %42 = select i1 %40, i32 8, i32 %41, !dbg !8870
  %43 = lshr i32 %37, %42, !dbg !8870
  %44 = mul nuw nsw i32 %43, 10, !dbg !8871
  %45 = udiv i32 %44, %9, !dbg !8871
  call void @llvm.dbg.value(metadata i32 %45, metadata !8824, metadata !DIExpression(DW_OP_plus_uconst, 5, DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !8829
  %46 = trunc i32 %45 to i16, !dbg !8872
  %47 = add i16 %46, 5, !dbg !8872
  %48 = udiv i16 %47, 10, !dbg !8872
  call void @llvm.dbg.value(metadata i16 %48, metadata !8824, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8829
  call void @llvm.dbg.value(metadata i16 %48, metadata !8822, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8829
  %49 = udiv i16 %47, 20, !dbg !8873
  call void @llvm.dbg.value(metadata i16 %49, metadata !8821, metadata !DIExpression()), !dbg !8829
  %50 = shl i16 %48, 8, !dbg !8874
  %51 = and i16 %50, 256, !dbg !8874
  call void @llvm.dbg.value(metadata i16 %48, metadata !8822, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 256, DW_OP_and, DW_OP_stack_value)), !dbg !8829
  br label %52

52:                                               ; preds = %11, %26
  %53 = phi i16 [ %18, %26 ], [ %15, %11 ], !dbg !8844
  %54 = phi i16 [ %39, %26 ], [ %13, %11 ], !dbg !8842
  %55 = phi i16 [ %49, %26 ], [ 2, %11 ], !dbg !8875
  %56 = phi i16 [ %51, %26 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i16 undef, metadata !8822, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i16 %55, metadata !8821, metadata !DIExpression()), !dbg !8829
  %57 = add nsw i16 %55, -2, !dbg !8876
  %58 = icmp ugt i16 %57, 253, !dbg !8876
  %59 = select i1 %58, i16 2, i16 %55, !dbg !8876
  call void @llvm.dbg.value(metadata i16 %59, metadata !8821, metadata !DIExpression()), !dbg !8829
  %60 = select i1 %58, i16 0, i16 %56, !dbg !8878
  %61 = or i16 %60, %54, !dbg !8878
  %62 = or i16 %61, %59, !dbg !8879
  store volatile i16 %62, i16* %6, align 2, !dbg !8880, !tbaa !8834
  %63 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 0, !dbg !8881
  %64 = load i16, i16* %63, align 4, !dbg !8881, !tbaa !8882
  %65 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 1, !dbg !8883
  %66 = load i16, i16* %65, align 2, !dbg !8883, !tbaa !8884
  %67 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 5, !dbg !8885
  %68 = load i16, i16* %67, align 4, !dbg !8885, !tbaa !8886
  %69 = or i16 %7, %64, !dbg !8887
  %70 = or i16 %69, %66, !dbg !8888
  %71 = or i16 %70, %53, !dbg !8889
  %72 = or i16 %71, %68, !dbg !8890
  %73 = or i16 %72, 2048, !dbg !8890
  call void @llvm.dbg.value(metadata i16 %73, metadata !8820, metadata !DIExpression()), !dbg !8829
  store volatile i16 %73, i16* %3, align 2, !dbg !8891, !tbaa !8797
  ret void, !dbg !8892
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @SPI_StructInit(%struct.SPI_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !8893 {
  call void @llvm.dbg.value(metadata %struct.SPI_InitTypeDef* %0, metadata !8897, metadata !DIExpression()), !dbg !8898
  %2 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %0, i32 0, i32 0, !dbg !8899
  store i16 0, i16* %2, align 2, !dbg !8900, !tbaa !8770
  %3 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %0, i32 0, i32 1, !dbg !8901
  store i16 0, i16* %3, align 2, !dbg !8902, !tbaa !8773
  %4 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %0, i32 0, i32 2, !dbg !8903
  store i16 0, i16* %4, align 2, !dbg !8904, !tbaa !8775
  %5 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %0, i32 0, i32 3, !dbg !8905
  store i16 0, i16* %5, align 2, !dbg !8906, !tbaa !8777
  %6 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %0, i32 0, i32 4, !dbg !8907
  store i16 0, i16* %6, align 2, !dbg !8908, !tbaa !8779
  %7 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %0, i32 0, i32 5, !dbg !8909
  store i16 0, i16* %7, align 2, !dbg !8910, !tbaa !8781
  %8 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %0, i32 0, i32 6, !dbg !8911
  store i16 0, i16* %8, align 2, !dbg !8912, !tbaa !8783
  %9 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %0, i32 0, i32 7, !dbg !8913
  store i16 0, i16* %9, align 2, !dbg !8914, !tbaa !8785
  %10 = getelementptr inbounds %struct.SPI_InitTypeDef, %struct.SPI_InitTypeDef* %0, i32 0, i32 8, !dbg !8915
  store i16 7, i16* %10, align 2, !dbg !8916, !tbaa !8799
  ret void, !dbg !8917
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @I2S_StructInit(%struct.I2S_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !8918 {
  call void @llvm.dbg.value(metadata %struct.I2S_InitTypeDef* %0, metadata !8922, metadata !DIExpression()), !dbg !8923
  %2 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %0, i32 0, i32 0, !dbg !8924
  store i16 0, i16* %2, align 4, !dbg !8925, !tbaa !8882
  %3 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %0, i32 0, i32 1, !dbg !8926
  store i16 0, i16* %3, align 2, !dbg !8927, !tbaa !8884
  %4 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %0, i32 0, i32 2, !dbg !8928
  store i16 0, i16* %4, align 4, !dbg !8929, !tbaa !8845
  %5 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %0, i32 0, i32 3, !dbg !8930
  store i16 0, i16* %5, align 2, !dbg !8931, !tbaa !8843
  %6 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %0, i32 0, i32 4, !dbg !8932
  store i32 2, i32* %6, align 4, !dbg !8933, !tbaa !8838
  %7 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %0, i32 0, i32 5, !dbg !8934
  store i16 0, i16* %7, align 4, !dbg !8935, !tbaa !8886
  ret void, !dbg !8936
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_Cmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !8937 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !8941, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %1, metadata !8942, metadata !DIExpression()), !dbg !8943
  %3 = icmp eq i32 %1, 0, !dbg !8944
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !8946
  %5 = load volatile i16, i16* %4, align 2, !dbg !8946, !tbaa !8766
  %6 = and i16 %5, -65, !dbg !8947
  %7 = select i1 %3, i16 0, i16 64, !dbg !8947
  %8 = or i16 %6, %7, !dbg !8947
  store volatile i16 %8, i16* %4, align 2, !dbg !8946, !tbaa !8766
  ret void, !dbg !8948
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2S_Cmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !8949 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !8951, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.value(metadata i32 %1, metadata !8952, metadata !DIExpression()), !dbg !8953
  %3 = icmp eq i32 %1, 0, !dbg !8954
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 14, !dbg !8956
  %5 = load volatile i16, i16* %4, align 2, !dbg !8956, !tbaa !8797
  %6 = and i16 %5, -1025, !dbg !8957
  %7 = select i1 %3, i16 0, i16 1024, !dbg !8957
  %8 = or i16 %6, %7, !dbg !8957
  store volatile i16 %8, i16* %4, align 2, !dbg !8956, !tbaa !8797
  ret void, !dbg !8958
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_DataSizeConfig(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !8959 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !8963, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata i16 %1, metadata !8964, metadata !DIExpression()), !dbg !8965
  %3 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !8966
  %4 = load volatile i16, i16* %3, align 2, !dbg !8967, !tbaa !8766
  %5 = and i16 %4, -2049, !dbg !8967
  store volatile i16 %5, i16* %3, align 2, !dbg !8967, !tbaa !8766
  %6 = load volatile i16, i16* %3, align 2, !dbg !8968, !tbaa !8766
  %7 = or i16 %6, %1, !dbg !8968
  store volatile i16 %7, i16* %3, align 2, !dbg !8968, !tbaa !8766
  ret void, !dbg !8969
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_BiDirectionalLineConfig(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !8970 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !8972, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i16 %1, metadata !8973, metadata !DIExpression()), !dbg !8974
  %3 = icmp eq i16 %1, 16384, !dbg !8975
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !8977
  %5 = load volatile i16, i16* %4, align 2, !dbg !8977, !tbaa !8766
  %6 = and i16 %5, -16385, !dbg !8978
  %7 = select i1 %3, i16 16384, i16 0, !dbg !8978
  %8 = or i16 %6, %7, !dbg !8978
  store volatile i16 %8, i16* %4, align 2, !dbg !8977, !tbaa !8766
  ret void, !dbg !8979
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_NSSInternalSoftwareConfig(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !8980 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !8982, metadata !DIExpression()), !dbg !8984
  call void @llvm.dbg.value(metadata i16 %1, metadata !8983, metadata !DIExpression()), !dbg !8984
  %3 = icmp eq i16 %1, -257, !dbg !8985
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !8987
  %5 = load volatile i16, i16* %4, align 2, !dbg !8987, !tbaa !8766
  %6 = and i16 %5, -257, !dbg !8988
  %7 = select i1 %3, i16 0, i16 256, !dbg !8988
  %8 = or i16 %6, %7, !dbg !8988
  store volatile i16 %8, i16* %4, align 2, !dbg !8987, !tbaa !8766
  ret void, !dbg !8989
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_SSOutputCmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !8990 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !8992, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata i32 %1, metadata !8993, metadata !DIExpression()), !dbg !8994
  %3 = icmp eq i32 %1, 0, !dbg !8995
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !8997
  %5 = load volatile i16, i16* %4, align 2, !dbg !8997, !tbaa !8998
  %6 = and i16 %5, -5, !dbg !8999
  %7 = select i1 %3, i16 0, i16 4, !dbg !8999
  %8 = or i16 %6, %7, !dbg !8999
  store volatile i16 %8, i16* %4, align 2, !dbg !8997, !tbaa !8998
  ret void, !dbg !9000
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_TIModeCmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !9001 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9003, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.value(metadata i32 %1, metadata !9004, metadata !DIExpression()), !dbg !9005
  %3 = icmp eq i32 %1, 0, !dbg !9006
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !9008
  %5 = load volatile i16, i16* %4, align 2, !dbg !9008, !tbaa !8998
  %6 = and i16 %5, -17, !dbg !9009
  %7 = select i1 %3, i16 0, i16 16, !dbg !9009
  %8 = or i16 %6, %7, !dbg !9009
  store volatile i16 %8, i16* %4, align 2, !dbg !9008, !tbaa !8998
  ret void, !dbg !9010
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2S_FullDuplexConfig(%struct.SPI_TypeDef* %0, %struct.I2S_InitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !9011 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9013, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata %struct.I2S_InitTypeDef* %1, metadata !9014, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i16 0, metadata !9015, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i16 0, metadata !9016, metadata !DIExpression()), !dbg !9017
  %3 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 14, !dbg !9018
  %4 = load volatile i16, i16* %3, align 2, !dbg !9019, !tbaa !8797
  %5 = and i16 %4, -4032, !dbg !9019
  store volatile i16 %5, i16* %3, align 2, !dbg !9019, !tbaa !8797
  %6 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 16, !dbg !9020
  store volatile i16 2, i16* %6, align 2, !dbg !9021, !tbaa !8834
  %7 = load volatile i16, i16* %3, align 2, !dbg !9022, !tbaa !8797
  call void @llvm.dbg.value(metadata i16 %7, metadata !9015, metadata !DIExpression()), !dbg !9017
  %8 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 0, !dbg !9023
  %9 = load i16, i16* %8, align 4, !dbg !9023, !tbaa !8882
  %10 = tail call i16 @llvm.bswap.i16(i16 %9), !dbg !9025
  switch i16 %10, label %12 [
    i16 2, label %13
    i16 0, label %13
    i16 3, label %11
    i16 1, label %11
  ], !dbg !9025

11:                                               ; preds = %2, %2
  call void @llvm.dbg.value(metadata i16 0, metadata !9016, metadata !DIExpression()), !dbg !9017
  br label %13, !dbg !9026

12:                                               ; preds = %2
  br label %13, !dbg !9030

13:                                               ; preds = %2, %2, %12, %11
  %14 = phi i16 [ 0, %11 ], [ 256, %2 ], [ 256, %2 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i16 undef, metadata !9016, metadata !DIExpression()), !dbg !9017
  %15 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 1, !dbg !9030
  %16 = load i16, i16* %15, align 2, !dbg !9030, !tbaa !8884
  %17 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 2, !dbg !9031
  %18 = load i16, i16* %17, align 4, !dbg !9031, !tbaa !8845
  %19 = getelementptr inbounds %struct.I2S_InitTypeDef, %struct.I2S_InitTypeDef* %1, i32 0, i32 5, !dbg !9032
  %20 = load i16, i16* %19, align 4, !dbg !9032, !tbaa !8886
  %21 = or i16 %7, %14, !dbg !9033
  %22 = or i16 %21, %16, !dbg !9034
  %23 = or i16 %22, %18, !dbg !9035
  %24 = or i16 %23, %20, !dbg !9036
  %25 = or i16 %24, 2048, !dbg !9036
  call void @llvm.dbg.value(metadata i16 %25, metadata !9015, metadata !DIExpression()), !dbg !9017
  store volatile i16 %25, i16* %3, align 2, !dbg !9037, !tbaa !8797
  ret void, !dbg !9038
}

; Function Attrs: nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #1

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @SPI_I2S_ReceiveData(%struct.SPI_TypeDef* %0) local_unnamed_addr #0 !dbg !9039 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9043, metadata !DIExpression()), !dbg !9044
  %2 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 6, !dbg !9045
  %3 = load volatile i16, i16* %2, align 2, !dbg !9045, !tbaa !9046
  ret i16 %3, !dbg !9047
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_I2S_SendData(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !9048 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9050, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i16 %1, metadata !9051, metadata !DIExpression()), !dbg !9052
  %3 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 6, !dbg !9053
  store volatile i16 %1, i16* %3, align 2, !dbg !9054, !tbaa !9046
  ret void, !dbg !9055
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_CalculateCRC(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !9056 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9058, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.value(metadata i32 %1, metadata !9059, metadata !DIExpression()), !dbg !9060
  %3 = icmp eq i32 %1, 0, !dbg !9061
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !9063
  %5 = load volatile i16, i16* %4, align 2, !dbg !9063, !tbaa !8766
  %6 = and i16 %5, -8193, !dbg !9064
  %7 = select i1 %3, i16 0, i16 8192, !dbg !9064
  %8 = or i16 %6, %7, !dbg !9064
  store volatile i16 %8, i16* %4, align 2, !dbg !9063, !tbaa !8766
  ret void, !dbg !9065
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_TransmitCRC(%struct.SPI_TypeDef* %0) local_unnamed_addr #0 !dbg !9066 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9068, metadata !DIExpression()), !dbg !9069
  %2 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !9070
  %3 = load volatile i16, i16* %2, align 2, !dbg !9071, !tbaa !8766
  %4 = or i16 %3, 4096, !dbg !9071
  store volatile i16 %4, i16* %2, align 2, !dbg !9071, !tbaa !8766
  ret void, !dbg !9072
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @SPI_GetCRC(%struct.SPI_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !9073 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9077, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i8 %1, metadata !9078, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i16 0, metadata !9079, metadata !DIExpression()), !dbg !9080
  %3 = icmp eq i8 %1, 1, !dbg !9081
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 12, !dbg !9083
  %5 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 10, !dbg !9083
  %6 = select i1 %3, i16* %5, i16* %4, !dbg !9083
  %7 = load volatile i16, i16* %6, align 2, !dbg !9084, !tbaa !3025
  call void @llvm.dbg.value(metadata i16 %7, metadata !9079, metadata !DIExpression()), !dbg !9080
  ret i16 %7, !dbg !9085
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @SPI_GetCRCPolynomial(%struct.SPI_TypeDef* %0) local_unnamed_addr #0 !dbg !9086 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9088, metadata !DIExpression()), !dbg !9089
  %2 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 8, !dbg !9090
  %3 = load volatile i16, i16* %2, align 2, !dbg !9090, !tbaa !8802
  ret i16 %3, !dbg !9091
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_I2S_DMACmd(%struct.SPI_TypeDef* %0, i16 zeroext %1, i32 %2) local_unnamed_addr #0 !dbg !9092 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9096, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i16 %1, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %2, metadata !9098, metadata !DIExpression()), !dbg !9099
  %4 = icmp eq i32 %2, 0, !dbg !9100
  br i1 %4, label %9, label %5, !dbg !9102

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !9103
  %7 = load volatile i16, i16* %6, align 2, !dbg !9105, !tbaa !8998
  %8 = or i16 %7, %1, !dbg !9105
  store volatile i16 %8, i16* %6, align 2, !dbg !9105, !tbaa !8998
  br label %14, !dbg !9106

9:                                                ; preds = %3
  %10 = xor i16 %1, -1, !dbg !9107
  %11 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !9109
  %12 = load volatile i16, i16* %11, align 2, !dbg !9110, !tbaa !8998
  %13 = and i16 %12, %10, !dbg !9110
  store volatile i16 %13, i16* %11, align 2, !dbg !9110, !tbaa !8998
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !9111
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_I2S_ITConfig(%struct.SPI_TypeDef* %0, i8 zeroext %1, i32 %2) local_unnamed_addr #0 !dbg !9112 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9116, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i8 %1, metadata !9117, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i32 %2, metadata !9118, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i16 0, metadata !9119, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i16 0, metadata !9120, metadata !DIExpression()), !dbg !9121
  %4 = lshr i8 %1, 4, !dbg !9122
  %5 = zext i8 %4 to i16, !dbg !9123
  call void @llvm.dbg.value(metadata i8 %4, metadata !9119, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9121
  %6 = shl nuw i16 1, %5, !dbg !9124
  call void @llvm.dbg.value(metadata i16 %6, metadata !9120, metadata !DIExpression()), !dbg !9121
  %7 = icmp eq i32 %2, 0, !dbg !9125
  br i1 %7, label %12, label %8, !dbg !9127

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !9128
  %10 = load volatile i16, i16* %9, align 2, !dbg !9130, !tbaa !8998
  %11 = or i16 %10, %6, !dbg !9130
  store volatile i16 %11, i16* %9, align 2, !dbg !9130, !tbaa !8998
  br label %17, !dbg !9131

12:                                               ; preds = %3
  %13 = xor i16 %6, -1, !dbg !9132
  %14 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !9134
  %15 = load volatile i16, i16* %14, align 2, !dbg !9135, !tbaa !8998
  %16 = and i16 %15, %13, !dbg !9135
  store volatile i16 %16, i16* %14, align 2, !dbg !9135, !tbaa !8998
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9136
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @SPI_I2S_GetFlagStatus(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !9137 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9141, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.value(metadata i16 %1, metadata !9142, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.value(metadata i32 0, metadata !9143, metadata !DIExpression()), !dbg !9144
  %3 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 4, !dbg !9145
  %4 = load volatile i16, i16* %3, align 2, !dbg !9145, !tbaa !9147
  %5 = and i16 %4, %1, !dbg !9148
  %6 = icmp ne i16 %5, 0, !dbg !9149
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !9143, metadata !DIExpression()), !dbg !9144
  ret i32 %7, !dbg !9150
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_I2S_ClearFlag(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !9151 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9153, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i16 %1, metadata !9154, metadata !DIExpression()), !dbg !9155
  %3 = xor i16 %1, -1, !dbg !9156
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 4, !dbg !9157
  store volatile i16 %3, i16* %4, align 2, !dbg !9158, !tbaa !9147
  ret void, !dbg !9159
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @SPI_I2S_GetITStatus(%struct.SPI_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !9160 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9164, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i8 %1, metadata !9165, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i32 0, metadata !9166, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i16 0, metadata !9167, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i16 0, metadata !9168, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i16 0, metadata !9169, metadata !DIExpression()), !dbg !9170
  %3 = and i8 %1, 15, !dbg !9171
  %4 = zext i8 %3 to i32, !dbg !9171
  %5 = shl nuw nsw i32 1, %4, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %5, metadata !9167, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9170
  call void @llvm.dbg.value(metadata i8 %1, metadata !9168, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9170
  call void @llvm.dbg.value(metadata i16 undef, metadata !9168, metadata !DIExpression()), !dbg !9170
  %6 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !9173
  %7 = load volatile i16, i16* %6, align 2, !dbg !9173, !tbaa !8998
  call void @llvm.dbg.value(metadata i16 undef, metadata !9169, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9170
  %8 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 4, !dbg !9174
  %9 = load volatile i16, i16* %8, align 2, !dbg !9174, !tbaa !9147
  %10 = zext i16 %9 to i32, !dbg !9176
  %11 = and i32 %5, %10, !dbg !9177
  %12 = icmp eq i32 %11, 0, !dbg !9178
  br i1 %12, label %19, label %13, !dbg !9179

13:                                               ; preds = %2
  %14 = lshr i8 %1, 4, !dbg !9180
  call void @llvm.dbg.value(metadata i8 %14, metadata !9168, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9170
  %15 = zext i8 %14 to i16, !dbg !9181
  %16 = shl nuw i16 1, %15, !dbg !9182
  call void @llvm.dbg.value(metadata i16 %16, metadata !9168, metadata !DIExpression()), !dbg !9170
  %17 = and i16 %7, %16, !dbg !9183
  call void @llvm.dbg.value(metadata i16 %17, metadata !9169, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9170
  call void @llvm.dbg.value(metadata i16 %17, metadata !9169, metadata !DIExpression()), !dbg !9170
  %18 = icmp eq i16 %17, 0, !dbg !9184
  br i1 %18, label %19, label %20, !dbg !9185

19:                                               ; preds = %13, %2
  call void @llvm.dbg.value(metadata i32 0, metadata !9166, metadata !DIExpression()), !dbg !9170
  br label %20

20:                                               ; preds = %13, %19
  %21 = phi i32 [ 0, %19 ], [ 1, %13 ], !dbg !9186
  call void @llvm.dbg.value(metadata i32 %21, metadata !9166, metadata !DIExpression()), !dbg !9170
  ret i32 %21, !dbg !9187
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SPI_I2S_ClearITPendingBit(%struct.SPI_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !9188 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !9192, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata i8 %1, metadata !9193, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata i16 0, metadata !9194, metadata !DIExpression()), !dbg !9195
  %3 = and i8 %1, 15, !dbg !9196
  %4 = zext i8 %3 to i16, !dbg !9196
  %5 = shl nuw i16 1, %4, !dbg !9197
  call void @llvm.dbg.value(metadata i16 %5, metadata !9194, metadata !DIExpression()), !dbg !9195
  %6 = xor i16 %5, -1, !dbg !9198
  %7 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 4, !dbg !9199
  store volatile i16 %6, i16* %7, align 2, !dbg !9200, !tbaa !9147
  ret void, !dbg !9201
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_DeInit() local_unnamed_addr #3 !dbg !9202 {
  tail call arm_aapcs_vfpcc void @RCC_AHB2PeriphResetCmd(i32 16, i32 1) #5, !dbg !9203
  tail call arm_aapcs_vfpcc void @RCC_AHB2PeriphResetCmd(i32 16, i32 0) #5, !dbg !9204
  ret void, !dbg !9205
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !9206 {
  call void @llvm.dbg.value(metadata %struct.CRYP_InitTypeDef* %0, metadata !9218, metadata !DIExpression()), !dbg !9219
  %2 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9220, !tbaa !2581
  %3 = and i32 %2, -57, !dbg !9220
  store volatile i32 %3, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9220, !tbaa !2581
  %4 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 1, !dbg !9221
  %5 = load i16, i16* %4, align 2, !dbg !9221, !tbaa !7776
  %6 = zext i16 %5 to i32, !dbg !9222
  %7 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9223, !tbaa !2581
  %8 = or i32 %7, %6, !dbg !9223
  store volatile i32 %8, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9223, !tbaa !2581
  %9 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9224, !tbaa !2581
  %10 = and i32 %9, -193, !dbg !9224
  store volatile i32 %10, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9224, !tbaa !2581
  %11 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 2, !dbg !9225
  %12 = load i16, i16* %11, align 2, !dbg !9225, !tbaa !7779
  %13 = zext i16 %12 to i32, !dbg !9226
  %14 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9227, !tbaa !2581
  %15 = or i32 %14, %13, !dbg !9227
  store volatile i32 %15, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9227, !tbaa !2581
  %16 = add i16 %5, -32, !dbg !9228
  %17 = lshr i16 %16, 3, !dbg !9228
  %18 = shl i16 %16, 13, !dbg !9228
  %19 = or i16 %17, %18, !dbg !9228
  %20 = icmp ult i16 %19, 4, !dbg !9228
  br i1 %20, label %21, label %29, !dbg !9228

21:                                               ; preds = %1
  %22 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9230, !tbaa !2581
  %23 = and i32 %22, -769, !dbg !9230
  store volatile i32 %23, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9230, !tbaa !2581
  %24 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 3, !dbg !9232
  %25 = load i16, i16* %24, align 2, !dbg !9232, !tbaa !7606
  %26 = zext i16 %25 to i32, !dbg !9233
  %27 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9234, !tbaa !2581
  %28 = or i32 %27, %26, !dbg !9234
  store volatile i32 %28, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9234, !tbaa !2581
  br label %29, !dbg !9235

29:                                               ; preds = %1, %21
  %30 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9236, !tbaa !2581
  %31 = and i32 %30, -5, !dbg !9236
  store volatile i32 %31, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9236, !tbaa !2581
  %32 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 0, !dbg !9237
  %33 = load i16, i16* %32, align 2, !dbg !9237, !tbaa !7773
  %34 = zext i16 %33 to i32, !dbg !9238
  %35 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9239, !tbaa !2581
  %36 = or i32 %35, %34, !dbg !9239
  store volatile i32 %36, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9239, !tbaa !2581
  ret void, !dbg !9240
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @CRYP_StructInit(%struct.CRYP_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !9241 {
  call void @llvm.dbg.value(metadata %struct.CRYP_InitTypeDef* %0, metadata !9243, metadata !DIExpression()), !dbg !9244
  %2 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 0, !dbg !9245
  store i16 0, i16* %2, align 2, !dbg !9246, !tbaa !7773
  %3 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 1, !dbg !9247
  store i16 0, i16* %3, align 2, !dbg !9248, !tbaa !7776
  %4 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 2, !dbg !9249
  store i16 0, i16* %4, align 2, !dbg !9250, !tbaa !7779
  %5 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 3, !dbg !9251
  store i16 0, i16* %5, align 2, !dbg !9252, !tbaa !7606
  ret void, !dbg !9253
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !9254 {
  call void @llvm.dbg.value(metadata %struct.CRYP_KeyInitTypeDef* %0, metadata !9270, metadata !DIExpression()), !dbg !9271
  %2 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 0, !dbg !9272
  %3 = load i32, i32* %2, align 4, !dbg !9272, !tbaa !7707
  store volatile i32 %3, i32* inttoptr (i32 1342570528 to i32*), align 32, !dbg !9273, !tbaa !9274
  %4 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 1, !dbg !9275
  %5 = load i32, i32* %4, align 4, !dbg !9275, !tbaa !7716
  store volatile i32 %5, i32* inttoptr (i32 1342570532 to i32*), align 4, !dbg !9276, !tbaa !2227
  %6 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 2, !dbg !9277
  %7 = load i32, i32* %6, align 4, !dbg !9277, !tbaa !7657
  store volatile i32 %7, i32* inttoptr (i32 1342570536 to i32*), align 8, !dbg !9278, !tbaa !2231
  %8 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 3, !dbg !9279
  %9 = load i32, i32* %8, align 4, !dbg !9279, !tbaa !7666
  store volatile i32 %9, i32* inttoptr (i32 1342570540 to i32*), align 4, !dbg !9280, !tbaa !2118
  %10 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 4, !dbg !9281
  %11 = load i32, i32* %10, align 4, !dbg !9281, !tbaa !7621
  store volatile i32 %11, i32* inttoptr (i32 1342570544 to i32*), align 16, !dbg !9282, !tbaa !9283
  %12 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 5, !dbg !9284
  %13 = load i32, i32* %12, align 4, !dbg !9284, !tbaa !7631
  store volatile i32 %13, i32* inttoptr (i32 1342570548 to i32*), align 4, !dbg !9285, !tbaa !9286
  %14 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 6, !dbg !9287
  %15 = load i32, i32* %14, align 4, !dbg !9287, !tbaa !7640
  store volatile i32 %15, i32* inttoptr (i32 1342570552 to i32*), align 8, !dbg !9288, !tbaa !2421
  %16 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 7, !dbg !9289
  %17 = load i32, i32* %16, align 4, !dbg !9289, !tbaa !7765
  store volatile i32 %17, i32* inttoptr (i32 1342570556 to i32*), align 4, !dbg !9290, !tbaa !9291
  ret void, !dbg !9292
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @CRYP_KeyStructInit(%struct.CRYP_KeyInitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !9293 {
  call void @llvm.dbg.value(metadata %struct.CRYP_KeyInitTypeDef* %0, metadata !9295, metadata !DIExpression()), !dbg !9296
  %2 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 0, !dbg !9297
  store i32 0, i32* %2, align 4, !dbg !9298, !tbaa !7707
  %3 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 1, !dbg !9299
  store i32 0, i32* %3, align 4, !dbg !9300, !tbaa !7716
  %4 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 2, !dbg !9301
  store i32 0, i32* %4, align 4, !dbg !9302, !tbaa !7657
  %5 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 3, !dbg !9303
  store i32 0, i32* %5, align 4, !dbg !9304, !tbaa !7666
  %6 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 4, !dbg !9305
  store i32 0, i32* %6, align 4, !dbg !9306, !tbaa !7621
  %7 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 5, !dbg !9307
  store i32 0, i32* %7, align 4, !dbg !9308, !tbaa !7631
  %8 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 6, !dbg !9309
  store i32 0, i32* %8, align 4, !dbg !9310, !tbaa !7640
  %9 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %0, i32 0, i32 7, !dbg !9311
  store i32 0, i32* %9, align 4, !dbg !9312, !tbaa !7765
  ret void, !dbg !9313
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_IVInit(%struct.DMA_TypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !9314 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !9326, metadata !DIExpression()), !dbg !9327
  %2 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !9328
  %3 = load i32, i32* %2, align 4, !dbg !9328, !tbaa !934
  store volatile i32 %3, i32* inttoptr (i32 1342570560 to i32*), align 64, !dbg !9329, !tbaa !9330
  %4 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !9331
  %5 = load i32, i32* %4, align 4, !dbg !9331, !tbaa !1690
  store volatile i32 %5, i32* inttoptr (i32 1342570564 to i32*), align 4, !dbg !9332, !tbaa !9333
  %6 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !9334
  %7 = load i32, i32* %6, align 4, !dbg !9334, !tbaa !968
  store volatile i32 %7, i32* inttoptr (i32 1342570568 to i32*), align 8, !dbg !9335, !tbaa !9336
  %8 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !9337
  %9 = load i32, i32* %8, align 4, !dbg !9337, !tbaa !985
  store volatile i32 %9, i32* inttoptr (i32 1342570572 to i32*), align 4, !dbg !9338, !tbaa !2368
  ret void, !dbg !9339
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @CRYP_IVStructInit(%struct.DMA_TypeDef* nocapture %0) local_unnamed_addr #2 !dbg !9340 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !9342, metadata !DIExpression()), !dbg !9343
  %2 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !9344
  store i32 0, i32* %2, align 4, !dbg !9345, !tbaa !934
  %3 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !9346
  store i32 0, i32* %3, align 4, !dbg !9347, !tbaa !1690
  %4 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !9348
  store i32 0, i32* %4, align 4, !dbg !9349, !tbaa !968
  %5 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !9350
  store i32 0, i32* %5, align 4, !dbg !9351, !tbaa !985
  ret void, !dbg !9352
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_FIFOFlush() local_unnamed_addr #0 !dbg !9353 {
  %1 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9354, !tbaa !2581
  %2 = or i32 %1, 16384, !dbg !9354
  store volatile i32 %2, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9354, !tbaa !2581
  ret void, !dbg !9355
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_Cmd(i32 %0) local_unnamed_addr #0 !dbg !9356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9358, metadata !DIExpression()), !dbg !9359
  %2 = icmp eq i32 %0, 0, !dbg !9360
  %3 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9362, !tbaa !2581
  %4 = and i32 %3, -32769, !dbg !9363
  %5 = select i1 %2, i32 0, i32 32768, !dbg !9363
  %6 = or i32 %4, %5, !dbg !9363
  store volatile i32 %6, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9362, !tbaa !2581
  ret void, !dbg !9364
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_DataIn(i32 %0) local_unnamed_addr #0 !dbg !9365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9367, metadata !DIExpression()), !dbg !9368
  store volatile i32 %0, i32* inttoptr (i32 1342570504 to i32*), align 8, !dbg !9369, !tbaa !2101
  ret void, !dbg !9370
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_DataOut() local_unnamed_addr #0 !dbg !9371 {
  %1 = load volatile i32, i32* inttoptr (i32 1342570508 to i32*), align 4, !dbg !9372, !tbaa !9373
  ret i32 %1, !dbg !9374
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_SaveContext(%struct.CRYP_Context* nocapture %0, %struct.CRYP_KeyInitTypeDef* nocapture readonly %1) local_unnamed_addr #3 !dbg !9375 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CRYP_Context* %0, metadata !9396, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata %struct.CRYP_KeyInitTypeDef* %1, metadata !9397, metadata !DIExpression()), !dbg !9402
  %4 = bitcast i32* %3 to i8*, !dbg !9403
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !9403
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9398, metadata !DIExpression()), !dbg !9404
  store volatile i32 0, i32* %3, align 4, !dbg !9404, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !9399, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 0, metadata !9401, metadata !DIExpression()), !dbg !9402
  %5 = load volatile i32, i32* inttoptr (i32 1342570512 to i32*), align 16, !dbg !9405, !tbaa !9406
  %6 = and i32 %5, -2, !dbg !9405
  store volatile i32 %6, i32* inttoptr (i32 1342570512 to i32*), align 16, !dbg !9405, !tbaa !9406
  %7 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9407, !tbaa !2581
  %8 = and i32 %7, 8, !dbg !9409
  %9 = icmp eq i32 %8, 0, !dbg !9410
  %10 = select i1 %9, i32 21, i32 17
  call void @llvm.dbg.value(metadata i32 %10, metadata !9399, metadata !DIExpression()), !dbg !9402
  br label %11, !dbg !9411

11:                                               ; preds = %84, %2
  %12 = load volatile i32, i32* inttoptr (i32 1342570500 to i32*), align 4, !dbg !9412, !tbaa !2088
  %13 = and i32 %12, %10, !dbg !9414
  call void @llvm.dbg.value(metadata i32 %13, metadata !9400, metadata !DIExpression()), !dbg !9402
  %14 = load volatile i32, i32* %3, align 4, !dbg !9415, !tbaa !894
  %15 = add i32 %14, 1, !dbg !9415
  store volatile i32 %15, i32* %3, align 4, !dbg !9415, !tbaa !894
  %16 = load volatile i32, i32* %3, align 4, !dbg !9416, !tbaa !894
  %17 = icmp ne i32 %16, 65535, !dbg !9417
  %18 = icmp ne i32 %13, 1, !dbg !9418
  %19 = and i1 %18, %17, !dbg !9418
  br i1 %19, label %66, label %20, !dbg !9419, !llvm.loop !9420

20:                                               ; preds = %84, %75, %66, %11
  %21 = load volatile i32, i32* inttoptr (i32 1342570500 to i32*), align 4, !dbg !9422, !tbaa !2088
  %22 = and i32 %21, %10, !dbg !9424
  %23 = icmp eq i32 %22, 1, !dbg !9425
  br i1 %23, label %24, label %64, !dbg !9426

24:                                               ; preds = %20
  %25 = load volatile i32, i32* inttoptr (i32 1342570512 to i32*), align 16, !dbg !9427, !tbaa !9406
  %26 = and i32 %25, -3, !dbg !9427
  store volatile i32 %26, i32* inttoptr (i32 1342570512 to i32*), align 16, !dbg !9427, !tbaa !9406
  %27 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9429, !tbaa !2581
  %28 = and i32 %27, -32769, !dbg !9429
  store volatile i32 %28, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9429, !tbaa !2581
  %29 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9430, !tbaa !2581
  %30 = and i32 %29, 1020, !dbg !9431
  %31 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 0, !dbg !9432
  store i32 %30, i32* %31, align 4, !dbg !9433, !tbaa !9434
  %32 = load volatile i32, i32* inttoptr (i32 1342570560 to i32*), align 64, !dbg !9436, !tbaa !9330
  %33 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 1, !dbg !9437
  store i32 %32, i32* %33, align 4, !dbg !9438, !tbaa !9439
  %34 = load volatile i32, i32* inttoptr (i32 1342570564 to i32*), align 4, !dbg !9440, !tbaa !9333
  %35 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 2, !dbg !9441
  store i32 %34, i32* %35, align 4, !dbg !9442, !tbaa !9443
  %36 = load volatile i32, i32* inttoptr (i32 1342570568 to i32*), align 8, !dbg !9444, !tbaa !9336
  %37 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 3, !dbg !9445
  store i32 %36, i32* %37, align 4, !dbg !9446, !tbaa !9447
  %38 = load volatile i32, i32* inttoptr (i32 1342570572 to i32*), align 4, !dbg !9448, !tbaa !2368
  %39 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 4, !dbg !9449
  store i32 %38, i32* %39, align 4, !dbg !9450, !tbaa !9451
  %40 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %1, i32 0, i32 0, !dbg !9452
  %41 = load i32, i32* %40, align 4, !dbg !9452, !tbaa !7707
  %42 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 5, !dbg !9453
  store i32 %41, i32* %42, align 4, !dbg !9454, !tbaa !9455
  %43 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %1, i32 0, i32 1, !dbg !9456
  %44 = load i32, i32* %43, align 4, !dbg !9456, !tbaa !7716
  %45 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 6, !dbg !9457
  store i32 %44, i32* %45, align 4, !dbg !9458, !tbaa !9459
  %46 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %1, i32 0, i32 2, !dbg !9460
  %47 = load i32, i32* %46, align 4, !dbg !9460, !tbaa !7657
  %48 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 7, !dbg !9461
  store i32 %47, i32* %48, align 4, !dbg !9462, !tbaa !9463
  %49 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %1, i32 0, i32 3, !dbg !9464
  %50 = load i32, i32* %49, align 4, !dbg !9464, !tbaa !7666
  %51 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 8, !dbg !9465
  store i32 %50, i32* %51, align 4, !dbg !9466, !tbaa !9467
  %52 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %1, i32 0, i32 4, !dbg !9468
  %53 = load i32, i32* %52, align 4, !dbg !9468, !tbaa !7621
  %54 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 9, !dbg !9469
  store i32 %53, i32* %54, align 4, !dbg !9470, !tbaa !9471
  %55 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %1, i32 0, i32 5, !dbg !9472
  %56 = load i32, i32* %55, align 4, !dbg !9472, !tbaa !7631
  %57 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 10, !dbg !9473
  store i32 %56, i32* %57, align 4, !dbg !9474, !tbaa !9475
  %58 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %1, i32 0, i32 6, !dbg !9476
  %59 = load i32, i32* %58, align 4, !dbg !9476, !tbaa !7640
  %60 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 11, !dbg !9477
  store i32 %59, i32* %60, align 4, !dbg !9478, !tbaa !9479
  %61 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %1, i32 0, i32 7, !dbg !9480
  %62 = load i32, i32* %61, align 4, !dbg !9480, !tbaa !7765
  %63 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 12, !dbg !9481
  store i32 %62, i32* %63, align 4, !dbg !9482, !tbaa !9483
  call void @llvm.dbg.value(metadata i32 1, metadata !9401, metadata !DIExpression()), !dbg !9402
  br label %64

64:                                               ; preds = %20, %24
  %65 = phi i32 [ 1, %24 ], [ 0, %20 ], !dbg !9484
  call void @llvm.dbg.value(metadata i32 %65, metadata !9401, metadata !DIExpression()), !dbg !9402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !9485
  ret i32 %65, !dbg !9486

66:                                               ; preds = %11
  %67 = load volatile i32, i32* inttoptr (i32 1342570500 to i32*), align 4, !dbg !9412, !tbaa !2088
  %68 = and i32 %67, %10, !dbg !9414
  call void @llvm.dbg.value(metadata i32 %68, metadata !9400, metadata !DIExpression()), !dbg !9402
  %69 = load volatile i32, i32* %3, align 4, !dbg !9415, !tbaa !894
  %70 = add i32 %69, 1, !dbg !9415
  store volatile i32 %70, i32* %3, align 4, !dbg !9415, !tbaa !894
  %71 = load volatile i32, i32* %3, align 4, !dbg !9416, !tbaa !894
  %72 = icmp ne i32 %71, 65535, !dbg !9417
  %73 = icmp ne i32 %68, 1, !dbg !9418
  %74 = and i1 %73, %72, !dbg !9418
  br i1 %74, label %75, label %20, !dbg !9419, !llvm.loop !9420

75:                                               ; preds = %66
  %76 = load volatile i32, i32* inttoptr (i32 1342570500 to i32*), align 4, !dbg !9412, !tbaa !2088
  %77 = and i32 %76, %10, !dbg !9414
  call void @llvm.dbg.value(metadata i32 %77, metadata !9400, metadata !DIExpression()), !dbg !9402
  %78 = load volatile i32, i32* %3, align 4, !dbg !9415, !tbaa !894
  %79 = add i32 %78, 1, !dbg !9415
  store volatile i32 %79, i32* %3, align 4, !dbg !9415, !tbaa !894
  %80 = load volatile i32, i32* %3, align 4, !dbg !9416, !tbaa !894
  %81 = icmp ne i32 %80, 65535, !dbg !9417
  %82 = icmp ne i32 %77, 1, !dbg !9418
  %83 = and i1 %82, %81, !dbg !9418
  br i1 %83, label %84, label %20, !dbg !9419, !llvm.loop !9420

84:                                               ; preds = %75
  %85 = load volatile i32, i32* inttoptr (i32 1342570500 to i32*), align 4, !dbg !9412, !tbaa !2088
  %86 = and i32 %85, %10, !dbg !9414
  call void @llvm.dbg.value(metadata i32 %86, metadata !9400, metadata !DIExpression()), !dbg !9402
  %87 = load volatile i32, i32* %3, align 4, !dbg !9415, !tbaa !894
  %88 = add i32 %87, 1, !dbg !9415
  store volatile i32 %88, i32* %3, align 4, !dbg !9415, !tbaa !894
  %89 = load volatile i32, i32* %3, align 4, !dbg !9416, !tbaa !894
  %90 = icmp ne i32 %89, 65535, !dbg !9417
  %91 = icmp ne i32 %86, 1, !dbg !9418
  %92 = and i1 %91, %90, !dbg !9418
  br i1 %92, label %11, label %20, !dbg !9419, !llvm.loop !9420
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_RestoreContext(%struct.CRYP_Context* nocapture readonly %0) local_unnamed_addr #0 !dbg !9487 {
  call void @llvm.dbg.value(metadata %struct.CRYP_Context* %0, metadata !9491, metadata !DIExpression()), !dbg !9492
  %2 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 0, !dbg !9493
  %3 = load i32, i32* %2, align 4, !dbg !9493, !tbaa !9434
  store volatile i32 %3, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9494, !tbaa !2581
  %4 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 5, !dbg !9495
  %5 = load i32, i32* %4, align 4, !dbg !9495, !tbaa !9455
  store volatile i32 %5, i32* inttoptr (i32 1342570528 to i32*), align 32, !dbg !9496, !tbaa !9274
  %6 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 6, !dbg !9497
  %7 = load i32, i32* %6, align 4, !dbg !9497, !tbaa !9459
  store volatile i32 %7, i32* inttoptr (i32 1342570532 to i32*), align 4, !dbg !9498, !tbaa !2227
  %8 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 7, !dbg !9499
  %9 = load i32, i32* %8, align 4, !dbg !9499, !tbaa !9463
  store volatile i32 %9, i32* inttoptr (i32 1342570536 to i32*), align 8, !dbg !9500, !tbaa !2231
  %10 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 8, !dbg !9501
  %11 = load i32, i32* %10, align 4, !dbg !9501, !tbaa !9467
  store volatile i32 %11, i32* inttoptr (i32 1342570540 to i32*), align 4, !dbg !9502, !tbaa !2118
  %12 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 9, !dbg !9503
  %13 = load i32, i32* %12, align 4, !dbg !9503, !tbaa !9471
  store volatile i32 %13, i32* inttoptr (i32 1342570544 to i32*), align 16, !dbg !9504, !tbaa !9283
  %14 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 10, !dbg !9505
  %15 = load i32, i32* %14, align 4, !dbg !9505, !tbaa !9475
  store volatile i32 %15, i32* inttoptr (i32 1342570548 to i32*), align 4, !dbg !9506, !tbaa !9286
  %16 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 11, !dbg !9507
  %17 = load i32, i32* %16, align 4, !dbg !9507, !tbaa !9479
  store volatile i32 %17, i32* inttoptr (i32 1342570552 to i32*), align 8, !dbg !9508, !tbaa !2421
  %18 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 12, !dbg !9509
  %19 = load i32, i32* %18, align 4, !dbg !9509, !tbaa !9483
  store volatile i32 %19, i32* inttoptr (i32 1342570556 to i32*), align 4, !dbg !9510, !tbaa !9291
  %20 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 1, !dbg !9511
  %21 = load i32, i32* %20, align 4, !dbg !9511, !tbaa !9439
  store volatile i32 %21, i32* inttoptr (i32 1342570560 to i32*), align 64, !dbg !9512, !tbaa !9330
  %22 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 2, !dbg !9513
  %23 = load i32, i32* %22, align 4, !dbg !9513, !tbaa !9443
  store volatile i32 %23, i32* inttoptr (i32 1342570564 to i32*), align 4, !dbg !9514, !tbaa !9333
  %24 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 3, !dbg !9515
  %25 = load i32, i32* %24, align 4, !dbg !9515, !tbaa !9447
  store volatile i32 %25, i32* inttoptr (i32 1342570568 to i32*), align 8, !dbg !9516, !tbaa !9336
  %26 = getelementptr inbounds %struct.CRYP_Context, %struct.CRYP_Context* %0, i32 0, i32 4, !dbg !9517
  %27 = load i32, i32* %26, align 4, !dbg !9517, !tbaa !9451
  store volatile i32 %27, i32* inttoptr (i32 1342570572 to i32*), align 4, !dbg !9518, !tbaa !2368
  %28 = load volatile i32, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9519, !tbaa !2581
  %29 = or i32 %28, 32768, !dbg !9519
  store volatile i32 %29, i32* inttoptr (i32 1342570496 to i32*), align 131072, !dbg !9519, !tbaa !2581
  ret void, !dbg !9520
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_DMACmd(i8 zeroext %0, i32 %1) local_unnamed_addr #0 !dbg !9521 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9523, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i32 %1, metadata !9524, metadata !DIExpression()), !dbg !9525
  %3 = icmp eq i32 %1, 0, !dbg !9526
  br i1 %3, label %8, label %4, !dbg !9528

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9529
  %6 = load volatile i32, i32* inttoptr (i32 1342570512 to i32*), align 16, !dbg !9530, !tbaa !9406
  %7 = or i32 %6, %5, !dbg !9530
  br label %13, !dbg !9532

8:                                                ; preds = %2
  %9 = xor i8 %0, -1, !dbg !9533
  %10 = zext i8 %9 to i32, !dbg !9535
  %11 = load volatile i32, i32* inttoptr (i32 1342570512 to i32*), align 16, !dbg !9536, !tbaa !9406
  %12 = and i32 %11, %10, !dbg !9536
  br label %13

13:                                               ; preds = %8, %4
  %14 = phi i32 [ %12, %8 ], [ %7, %4 ]
  store volatile i32 %14, i32* inttoptr (i32 1342570512 to i32*), align 16, !dbg !9529, !tbaa !9406
  ret void, !dbg !9537
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @CRYP_ITConfig(i8 zeroext %0, i32 %1) local_unnamed_addr #0 !dbg !9538 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9540, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i32 %1, metadata !9541, metadata !DIExpression()), !dbg !9542
  %3 = icmp eq i32 %1, 0, !dbg !9543
  br i1 %3, label %8, label %4, !dbg !9545

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9546
  %6 = load volatile i32, i32* inttoptr (i32 1342570516 to i32*), align 4, !dbg !9547, !tbaa !9549
  %7 = or i32 %6, %5, !dbg !9547
  br label %13, !dbg !9550

8:                                                ; preds = %2
  %9 = xor i8 %0, -1, !dbg !9551
  %10 = zext i8 %9 to i32, !dbg !9553
  %11 = load volatile i32, i32* inttoptr (i32 1342570516 to i32*), align 4, !dbg !9554, !tbaa !9549
  %12 = and i32 %11, %10, !dbg !9554
  br label %13

13:                                               ; preds = %8, %4
  %14 = phi i32 [ %12, %8 ], [ %7, %4 ]
  store volatile i32 %14, i32* inttoptr (i32 1342570516 to i32*), align 4, !dbg !9546, !tbaa !9549
  ret void, !dbg !9555
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_GetITStatus(i8 zeroext %0) local_unnamed_addr #0 !dbg !9556 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9558, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i32 0, metadata !9559, metadata !DIExpression()), !dbg !9560
  %2 = load volatile i32, i32* inttoptr (i32 1342570524 to i32*), align 4, !dbg !9561, !tbaa !9563
  %3 = zext i8 %0 to i32, !dbg !9564
  %4 = and i32 %2, %3, !dbg !9565
  %5 = icmp ne i32 %4, 0, !dbg !9566
  %6 = zext i1 %5 to i32
  call void @llvm.dbg.value(metadata i32 %6, metadata !9559, metadata !DIExpression()), !dbg !9560
  ret i32 %6, !dbg !9567
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext %0) local_unnamed_addr #0 !dbg !9568 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9570, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i32 0, metadata !9571, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i32 0, metadata !9572, metadata !DIExpression()), !dbg !9573
  %2 = zext i8 %0 to i32, !dbg !9574
  %3 = and i32 %2, 32, !dbg !9576
  %4 = icmp eq i32 %3, 0, !dbg !9577
  call void @llvm.dbg.value(metadata i32 undef, metadata !9572, metadata !DIExpression()), !dbg !9573
  %5 = select i1 %4, i32* inttoptr (i32 1342570500 to i32*), i32* inttoptr (i32 1342570520 to i32*)
  %6 = load volatile i32, i32* %5, align 4, !dbg !9578, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %6, metadata !9572, metadata !DIExpression()), !dbg !9573
  %7 = and i32 %6, %2, !dbg !9579
  %8 = icmp ne i32 %7, 0, !dbg !9581
  %9 = zext i1 %8 to i32, !dbg !9582
  call void @llvm.dbg.value(metadata i32 %9, metadata !9571, metadata !DIExpression()), !dbg !9573
  ret i32 %9, !dbg !9583
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @HASH_DeInit() local_unnamed_addr #3 !dbg !9584 {
  tail call arm_aapcs_vfpcc void @RCC_AHB2PeriphResetCmd(i32 32, i32 1) #5, !dbg !9585
  tail call arm_aapcs_vfpcc void @RCC_AHB2PeriphResetCmd(i32 32, i32 0) #5, !dbg !9586
  ret void, !dbg !9587
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_Init(%struct.DMA_TypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !9588 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !9601, metadata !DIExpression()), !dbg !9602
  %2 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9603, !tbaa !9604
  %3 = and i32 %2, -241, !dbg !9603
  store volatile i32 %3, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9603, !tbaa !9604
  %4 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !9606
  %5 = load i32, i32* %4, align 4, !dbg !9606, !tbaa !934
  %6 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !9607
  %7 = load i32, i32* %6, align 4, !dbg !9607, !tbaa !968
  %8 = or i32 %7, %5, !dbg !9608
  %9 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !9609
  %10 = load i32, i32* %9, align 4, !dbg !9609, !tbaa !1690
  %11 = or i32 %8, %10, !dbg !9610
  %12 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9611, !tbaa !9604
  %13 = or i32 %11, %12, !dbg !9611
  store volatile i32 %13, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9611, !tbaa !9604
  %14 = icmp eq i32 %10, 64, !dbg !9612
  br i1 %14, label %15, label %22, !dbg !9614

15:                                               ; preds = %1
  %16 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9615, !tbaa !9604
  %17 = and i32 %16, -65537, !dbg !9615
  store volatile i32 %17, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9615, !tbaa !9604
  %18 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !9617
  %19 = load i32, i32* %18, align 4, !dbg !9617, !tbaa !985
  %20 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9618, !tbaa !9604
  %21 = or i32 %20, %19, !dbg !9618
  store volatile i32 %21, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9618, !tbaa !9604
  br label %22, !dbg !9619

22:                                               ; preds = %15, %1
  %23 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9620, !tbaa !9604
  %24 = or i32 %23, 4, !dbg !9620
  store volatile i32 %24, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9620, !tbaa !9604
  ret void, !dbg !9621
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @HASH_StructInit(%struct.DMA_TypeDef* nocapture %0) local_unnamed_addr #2 !dbg !9622 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !9624, metadata !DIExpression()), !dbg !9625
  %2 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !9626
  store i32 0, i32* %2, align 4, !dbg !9627, !tbaa !934
  %3 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !9628
  store i32 0, i32* %3, align 4, !dbg !9629, !tbaa !1690
  %4 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !9630
  store i32 0, i32* %4, align 4, !dbg !9631, !tbaa !968
  %5 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !9632
  store i32 0, i32* %5, align 4, !dbg !9633, !tbaa !985
  ret void, !dbg !9634
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_Reset() local_unnamed_addr #0 !dbg !9635 {
  %1 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9636, !tbaa !9604
  %2 = or i32 %1, 4, !dbg !9636
  store volatile i32 %2, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9636, !tbaa !9604
  ret void, !dbg !9637
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_SetLastWordValidBitsNbr(i16 zeroext %0) local_unnamed_addr #0 !dbg !9638 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9642, metadata !DIExpression()), !dbg !9643
  %2 = load volatile i32, i32* inttoptr (i32 1342571528 to i32*), align 8, !dbg !9644, !tbaa !9645
  %3 = and i32 %2, -32, !dbg !9644
  store volatile i32 %3, i32* inttoptr (i32 1342571528 to i32*), align 8, !dbg !9644, !tbaa !9645
  %4 = zext i16 %0 to i32, !dbg !9646
  %5 = load volatile i32, i32* inttoptr (i32 1342571528 to i32*), align 8, !dbg !9647, !tbaa !9645
  %6 = or i32 %5, %4, !dbg !9647
  store volatile i32 %6, i32* inttoptr (i32 1342571528 to i32*), align 8, !dbg !9647, !tbaa !9645
  ret void, !dbg !9648
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_DataIn(i32 %0) local_unnamed_addr #0 !dbg !9649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9651, metadata !DIExpression()), !dbg !9652
  store volatile i32 %0, i32* inttoptr (i32 1342571524 to i32*), align 4, !dbg !9653, !tbaa !9654
  ret void, !dbg !9655
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @HASH_GetInFIFOWordsNbr() local_unnamed_addr #0 !dbg !9656 {
  %1 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9657, !tbaa !9604
  %2 = lshr i32 %1, 8, !dbg !9658
  %3 = trunc i32 %2 to i8, !dbg !9659
  %4 = and i8 %3, 15, !dbg !9659
  ret i8 %4, !dbg !9660
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_GetDigest(%struct.HASH_MsgDigest* nocapture %0) local_unnamed_addr #0 !dbg !9661 {
  call void @llvm.dbg.value(metadata %struct.HASH_MsgDigest* %0, metadata !9670, metadata !DIExpression()), !dbg !9671
  %2 = load volatile i32, i32* inttoptr (i32 1342571532 to i32*), align 4, !dbg !9672, !tbaa !894
  %3 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %0, i32 0, i32 0, i32 0, !dbg !9673
  store i32 %2, i32* %3, align 4, !dbg !9674, !tbaa !894
  %4 = load volatile i32, i32* inttoptr (i32 1342571536 to i32*), align 16, !dbg !9675, !tbaa !894
  %5 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %0, i32 0, i32 0, i32 1, !dbg !9676
  store i32 %4, i32* %5, align 4, !dbg !9677, !tbaa !894
  %6 = load volatile i32, i32* inttoptr (i32 1342571540 to i32*), align 4, !dbg !9678, !tbaa !894
  %7 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %0, i32 0, i32 0, i32 2, !dbg !9679
  store i32 %6, i32* %7, align 4, !dbg !9680, !tbaa !894
  %8 = load volatile i32, i32* inttoptr (i32 1342571544 to i32*), align 8, !dbg !9681, !tbaa !894
  %9 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %0, i32 0, i32 0, i32 3, !dbg !9682
  store i32 %8, i32* %9, align 4, !dbg !9683, !tbaa !894
  %10 = load volatile i32, i32* inttoptr (i32 1342571548 to i32*), align 4, !dbg !9684, !tbaa !894
  %11 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %0, i32 0, i32 0, i32 4, !dbg !9685
  store i32 %10, i32* %11, align 4, !dbg !9686, !tbaa !894
  ret void, !dbg !9687
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_StartDigest() local_unnamed_addr #0 !dbg !9688 {
  %1 = load volatile i32, i32* inttoptr (i32 1342571528 to i32*), align 8, !dbg !9689, !tbaa !9645
  %2 = or i32 %1, 256, !dbg !9689
  store volatile i32 %2, i32* inttoptr (i32 1342571528 to i32*), align 8, !dbg !9689, !tbaa !9645
  ret void, !dbg !9690
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_SaveContext(%struct.HASH_Context* nocapture %0) local_unnamed_addr #0 !dbg !9691 {
  call void @llvm.dbg.value(metadata %struct.HASH_Context* %0, metadata !9704, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i8 0, metadata !9705, metadata !DIExpression()), !dbg !9706
  %2 = load volatile i32, i32* inttoptr (i32 1342571552 to i32*), align 32, !dbg !9707, !tbaa !9708
  %3 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 0, !dbg !9709
  store i32 %2, i32* %3, align 4, !dbg !9710, !tbaa !9711
  %4 = load volatile i32, i32* inttoptr (i32 1342571528 to i32*), align 8, !dbg !9713, !tbaa !9645
  %5 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 1, !dbg !9714
  store i32 %4, i32* %5, align 4, !dbg !9715, !tbaa !9716
  %6 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9717, !tbaa !9604
  %7 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 2, !dbg !9718
  store i32 %6, i32* %7, align 4, !dbg !9719, !tbaa !9720
  call void @llvm.dbg.value(metadata i8 0, metadata !9705, metadata !DIExpression()), !dbg !9706
  br label %8, !dbg !9721

8:                                                ; preds = %8, %1
  %9 = phi i32 [ 0, %1 ], [ %77, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9705, metadata !DIExpression()), !dbg !9706
  %10 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %9, !dbg !9723
  %11 = load volatile i32, i32* %10, align 4, !dbg !9723, !tbaa !894
  %12 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %9, !dbg !9726
  store i32 %11, i32* %12, align 4, !dbg !9727, !tbaa !894
  %13 = add nuw nsw i32 %9, 1, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %13, metadata !9705, metadata !DIExpression()), !dbg !9706
  %14 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %13, !dbg !9723
  %15 = load volatile i32, i32* %14, align 4, !dbg !9723, !tbaa !894
  %16 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %13, !dbg !9726
  store i32 %15, i32* %16, align 4, !dbg !9727, !tbaa !894
  %17 = add nuw nsw i32 %9, 2, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %17, metadata !9705, metadata !DIExpression()), !dbg !9706
  %18 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %17, !dbg !9723
  %19 = load volatile i32, i32* %18, align 4, !dbg !9723, !tbaa !894
  %20 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %17, !dbg !9726
  store i32 %19, i32* %20, align 4, !dbg !9727, !tbaa !894
  %21 = add nuw nsw i32 %9, 3, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %21, metadata !9705, metadata !DIExpression()), !dbg !9706
  %22 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %21, !dbg !9723
  %23 = load volatile i32, i32* %22, align 4, !dbg !9723, !tbaa !894
  %24 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %21, !dbg !9726
  store i32 %23, i32* %24, align 4, !dbg !9727, !tbaa !894
  %25 = add nuw nsw i32 %9, 4, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %25, metadata !9705, metadata !DIExpression()), !dbg !9706
  %26 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %25, !dbg !9723
  %27 = load volatile i32, i32* %26, align 4, !dbg !9723, !tbaa !894
  %28 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %25, !dbg !9726
  store i32 %27, i32* %28, align 4, !dbg !9727, !tbaa !894
  %29 = add nuw nsw i32 %9, 5, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %29, metadata !9705, metadata !DIExpression()), !dbg !9706
  %30 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %29, !dbg !9723
  %31 = load volatile i32, i32* %30, align 4, !dbg !9723, !tbaa !894
  %32 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %29, !dbg !9726
  store i32 %31, i32* %32, align 4, !dbg !9727, !tbaa !894
  %33 = add nuw nsw i32 %9, 6, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %33, metadata !9705, metadata !DIExpression()), !dbg !9706
  %34 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %33, !dbg !9723
  %35 = load volatile i32, i32* %34, align 4, !dbg !9723, !tbaa !894
  %36 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %33, !dbg !9726
  store i32 %35, i32* %36, align 4, !dbg !9727, !tbaa !894
  %37 = add nuw nsw i32 %9, 7, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %37, metadata !9705, metadata !DIExpression()), !dbg !9706
  %38 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %37, !dbg !9723
  %39 = load volatile i32, i32* %38, align 4, !dbg !9723, !tbaa !894
  %40 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %37, !dbg !9726
  store i32 %39, i32* %40, align 4, !dbg !9727, !tbaa !894
  %41 = add nuw nsw i32 %9, 8, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %41, metadata !9705, metadata !DIExpression()), !dbg !9706
  %42 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %41, !dbg !9723
  %43 = load volatile i32, i32* %42, align 4, !dbg !9723, !tbaa !894
  %44 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %41, !dbg !9726
  store i32 %43, i32* %44, align 4, !dbg !9727, !tbaa !894
  %45 = add nuw nsw i32 %9, 9, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %45, metadata !9705, metadata !DIExpression()), !dbg !9706
  %46 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %45, !dbg !9723
  %47 = load volatile i32, i32* %46, align 4, !dbg !9723, !tbaa !894
  %48 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %45, !dbg !9726
  store i32 %47, i32* %48, align 4, !dbg !9727, !tbaa !894
  %49 = add nuw nsw i32 %9, 10, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %49, metadata !9705, metadata !DIExpression()), !dbg !9706
  %50 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %49, !dbg !9723
  %51 = load volatile i32, i32* %50, align 4, !dbg !9723, !tbaa !894
  %52 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %49, !dbg !9726
  store i32 %51, i32* %52, align 4, !dbg !9727, !tbaa !894
  %53 = add nuw nsw i32 %9, 11, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %53, metadata !9705, metadata !DIExpression()), !dbg !9706
  %54 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %53, !dbg !9723
  %55 = load volatile i32, i32* %54, align 4, !dbg !9723, !tbaa !894
  %56 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %53, !dbg !9726
  store i32 %55, i32* %56, align 4, !dbg !9727, !tbaa !894
  %57 = add nuw nsw i32 %9, 12, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %57, metadata !9705, metadata !DIExpression()), !dbg !9706
  %58 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %57, !dbg !9723
  %59 = load volatile i32, i32* %58, align 4, !dbg !9723, !tbaa !894
  %60 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %57, !dbg !9726
  store i32 %59, i32* %60, align 4, !dbg !9727, !tbaa !894
  %61 = add nuw nsw i32 %9, 13, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %61, metadata !9705, metadata !DIExpression()), !dbg !9706
  %62 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %61, !dbg !9723
  %63 = load volatile i32, i32* %62, align 4, !dbg !9723, !tbaa !894
  %64 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %61, !dbg !9726
  store i32 %63, i32* %64, align 4, !dbg !9727, !tbaa !894
  %65 = add nuw nsw i32 %9, 14, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %65, metadata !9705, metadata !DIExpression()), !dbg !9706
  %66 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %65, !dbg !9723
  %67 = load volatile i32, i32* %66, align 4, !dbg !9723, !tbaa !894
  %68 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %65, !dbg !9726
  store i32 %67, i32* %68, align 4, !dbg !9727, !tbaa !894
  %69 = add nuw nsw i32 %9, 15, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %69, metadata !9705, metadata !DIExpression()), !dbg !9706
  %70 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %69, !dbg !9723
  %71 = load volatile i32, i32* %70, align 4, !dbg !9723, !tbaa !894
  %72 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %69, !dbg !9726
  store i32 %71, i32* %72, align 4, !dbg !9727, !tbaa !894
  %73 = add nuw nsw i32 %9, 16, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %73, metadata !9705, metadata !DIExpression()), !dbg !9706
  %74 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %73, !dbg !9723
  %75 = load volatile i32, i32* %74, align 4, !dbg !9723, !tbaa !894
  %76 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %73, !dbg !9726
  store i32 %75, i32* %76, align 4, !dbg !9727, !tbaa !894
  %77 = add nuw nsw i32 %9, 17, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %77, metadata !9705, metadata !DIExpression()), !dbg !9706
  %78 = icmp eq i32 %77, 51, !dbg !9729
  br i1 %78, label %79, label %8, !dbg !9721, !llvm.loop !9730

79:                                               ; preds = %8
  ret void, !dbg !9732
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_RestoreContext(%struct.HASH_Context* nocapture readonly %0) local_unnamed_addr #0 !dbg !9733 {
  call void @llvm.dbg.value(metadata %struct.HASH_Context* %0, metadata !9735, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.value(metadata i8 0, metadata !9736, metadata !DIExpression()), !dbg !9737
  %2 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 0, !dbg !9738
  %3 = load i32, i32* %2, align 4, !dbg !9738, !tbaa !9711
  store volatile i32 %3, i32* inttoptr (i32 1342571552 to i32*), align 32, !dbg !9739, !tbaa !9708
  %4 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 1, !dbg !9740
  %5 = load i32, i32* %4, align 4, !dbg !9740, !tbaa !9716
  store volatile i32 %5, i32* inttoptr (i32 1342571528 to i32*), align 8, !dbg !9741, !tbaa !9645
  %6 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 2, !dbg !9742
  %7 = load i32, i32* %6, align 4, !dbg !9742, !tbaa !9720
  store volatile i32 %7, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9743, !tbaa !9604
  %8 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9744, !tbaa !9604
  %9 = or i32 %8, 4, !dbg !9744
  store volatile i32 %9, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9744, !tbaa !9604
  call void @llvm.dbg.value(metadata i8 0, metadata !9736, metadata !DIExpression()), !dbg !9737
  br label %10, !dbg !9745

10:                                               ; preds = %10, %1
  %11 = phi i32 [ 0, %1 ], [ %79, %10 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9736, metadata !DIExpression()), !dbg !9737
  %12 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %11, !dbg !9747
  %13 = load i32, i32* %12, align 4, !dbg !9747, !tbaa !894
  %14 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %11, !dbg !9750
  store volatile i32 %13, i32* %14, align 4, !dbg !9751, !tbaa !894
  %15 = add nuw nsw i32 %11, 1, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %15, metadata !9736, metadata !DIExpression()), !dbg !9737
  %16 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %15, !dbg !9747
  %17 = load i32, i32* %16, align 4, !dbg !9747, !tbaa !894
  %18 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %15, !dbg !9750
  store volatile i32 %17, i32* %18, align 4, !dbg !9751, !tbaa !894
  %19 = add nuw nsw i32 %11, 2, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %19, metadata !9736, metadata !DIExpression()), !dbg !9737
  %20 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %19, !dbg !9747
  %21 = load i32, i32* %20, align 4, !dbg !9747, !tbaa !894
  %22 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %19, !dbg !9750
  store volatile i32 %21, i32* %22, align 4, !dbg !9751, !tbaa !894
  %23 = add nuw nsw i32 %11, 3, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %23, metadata !9736, metadata !DIExpression()), !dbg !9737
  %24 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %23, !dbg !9747
  %25 = load i32, i32* %24, align 4, !dbg !9747, !tbaa !894
  %26 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %23, !dbg !9750
  store volatile i32 %25, i32* %26, align 4, !dbg !9751, !tbaa !894
  %27 = add nuw nsw i32 %11, 4, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %27, metadata !9736, metadata !DIExpression()), !dbg !9737
  %28 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %27, !dbg !9747
  %29 = load i32, i32* %28, align 4, !dbg !9747, !tbaa !894
  %30 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %27, !dbg !9750
  store volatile i32 %29, i32* %30, align 4, !dbg !9751, !tbaa !894
  %31 = add nuw nsw i32 %11, 5, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %31, metadata !9736, metadata !DIExpression()), !dbg !9737
  %32 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %31, !dbg !9747
  %33 = load i32, i32* %32, align 4, !dbg !9747, !tbaa !894
  %34 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %31, !dbg !9750
  store volatile i32 %33, i32* %34, align 4, !dbg !9751, !tbaa !894
  %35 = add nuw nsw i32 %11, 6, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %35, metadata !9736, metadata !DIExpression()), !dbg !9737
  %36 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %35, !dbg !9747
  %37 = load i32, i32* %36, align 4, !dbg !9747, !tbaa !894
  %38 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %35, !dbg !9750
  store volatile i32 %37, i32* %38, align 4, !dbg !9751, !tbaa !894
  %39 = add nuw nsw i32 %11, 7, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %39, metadata !9736, metadata !DIExpression()), !dbg !9737
  %40 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %39, !dbg !9747
  %41 = load i32, i32* %40, align 4, !dbg !9747, !tbaa !894
  %42 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %39, !dbg !9750
  store volatile i32 %41, i32* %42, align 4, !dbg !9751, !tbaa !894
  %43 = add nuw nsw i32 %11, 8, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %43, metadata !9736, metadata !DIExpression()), !dbg !9737
  %44 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %43, !dbg !9747
  %45 = load i32, i32* %44, align 4, !dbg !9747, !tbaa !894
  %46 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %43, !dbg !9750
  store volatile i32 %45, i32* %46, align 4, !dbg !9751, !tbaa !894
  %47 = add nuw nsw i32 %11, 9, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %47, metadata !9736, metadata !DIExpression()), !dbg !9737
  %48 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %47, !dbg !9747
  %49 = load i32, i32* %48, align 4, !dbg !9747, !tbaa !894
  %50 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %47, !dbg !9750
  store volatile i32 %49, i32* %50, align 4, !dbg !9751, !tbaa !894
  %51 = add nuw nsw i32 %11, 10, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %51, metadata !9736, metadata !DIExpression()), !dbg !9737
  %52 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %51, !dbg !9747
  %53 = load i32, i32* %52, align 4, !dbg !9747, !tbaa !894
  %54 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %51, !dbg !9750
  store volatile i32 %53, i32* %54, align 4, !dbg !9751, !tbaa !894
  %55 = add nuw nsw i32 %11, 11, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %55, metadata !9736, metadata !DIExpression()), !dbg !9737
  %56 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %55, !dbg !9747
  %57 = load i32, i32* %56, align 4, !dbg !9747, !tbaa !894
  %58 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %55, !dbg !9750
  store volatile i32 %57, i32* %58, align 4, !dbg !9751, !tbaa !894
  %59 = add nuw nsw i32 %11, 12, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %59, metadata !9736, metadata !DIExpression()), !dbg !9737
  %60 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %59, !dbg !9747
  %61 = load i32, i32* %60, align 4, !dbg !9747, !tbaa !894
  %62 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %59, !dbg !9750
  store volatile i32 %61, i32* %62, align 4, !dbg !9751, !tbaa !894
  %63 = add nuw nsw i32 %11, 13, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %63, metadata !9736, metadata !DIExpression()), !dbg !9737
  %64 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %63, !dbg !9747
  %65 = load i32, i32* %64, align 4, !dbg !9747, !tbaa !894
  %66 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %63, !dbg !9750
  store volatile i32 %65, i32* %66, align 4, !dbg !9751, !tbaa !894
  %67 = add nuw nsw i32 %11, 14, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %67, metadata !9736, metadata !DIExpression()), !dbg !9737
  %68 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %67, !dbg !9747
  %69 = load i32, i32* %68, align 4, !dbg !9747, !tbaa !894
  %70 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %67, !dbg !9750
  store volatile i32 %69, i32* %70, align 4, !dbg !9751, !tbaa !894
  %71 = add nuw nsw i32 %11, 15, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %71, metadata !9736, metadata !DIExpression()), !dbg !9737
  %72 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %71, !dbg !9747
  %73 = load i32, i32* %72, align 4, !dbg !9747, !tbaa !894
  %74 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %71, !dbg !9750
  store volatile i32 %73, i32* %74, align 4, !dbg !9751, !tbaa !894
  %75 = add nuw nsw i32 %11, 16, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %75, metadata !9736, metadata !DIExpression()), !dbg !9737
  %76 = getelementptr inbounds %struct.HASH_Context, %struct.HASH_Context* %0, i32 0, i32 3, i32 %75, !dbg !9747
  %77 = load i32, i32* %76, align 4, !dbg !9747, !tbaa !894
  %78 = getelementptr inbounds [51 x i32], [51 x i32]* inttoptr (i32 1342571768 to [51 x i32]*), i32 0, i32 %75, !dbg !9750
  store volatile i32 %77, i32* %78, align 4, !dbg !9751, !tbaa !894
  %79 = add nuw nsw i32 %11, 17, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %79, metadata !9736, metadata !DIExpression()), !dbg !9737
  %80 = icmp eq i32 %79, 51, !dbg !9753
  br i1 %80, label %81, label %10, !dbg !9745, !llvm.loop !9754

81:                                               ; preds = %10
  ret void, !dbg !9756
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_DMACmd(i32 %0) local_unnamed_addr #0 !dbg !9757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9759, metadata !DIExpression()), !dbg !9760
  %2 = icmp eq i32 %0, 0, !dbg !9761
  %3 = load volatile i32, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9763, !tbaa !9604
  %4 = and i32 %3, -9, !dbg !9764
  %5 = select i1 %2, i32 0, i32 8, !dbg !9764
  %6 = or i32 %4, %5, !dbg !9764
  store volatile i32 %6, i32* inttoptr (i32 1342571520 to i32*), align 1024, !dbg !9763, !tbaa !9604
  ret void, !dbg !9765
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_ITConfig(i8 zeroext %0, i32 %1) local_unnamed_addr #0 !dbg !9766 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9768, metadata !DIExpression()), !dbg !9770
  call void @llvm.dbg.value(metadata i32 %1, metadata !9769, metadata !DIExpression()), !dbg !9770
  %3 = icmp eq i32 %1, 0, !dbg !9771
  br i1 %3, label %8, label %4, !dbg !9773

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9774
  %6 = load volatile i32, i32* inttoptr (i32 1342571552 to i32*), align 32, !dbg !9775, !tbaa !9708
  %7 = or i32 %6, %5, !dbg !9775
  br label %13, !dbg !9777

8:                                                ; preds = %2
  %9 = xor i8 %0, -1, !dbg !9778
  %10 = zext i8 %9 to i32, !dbg !9780
  %11 = load volatile i32, i32* inttoptr (i32 1342571552 to i32*), align 32, !dbg !9781, !tbaa !9708
  %12 = and i32 %11, %10, !dbg !9781
  br label %13

13:                                               ; preds = %8, %4
  %14 = phi i32 [ %12, %8 ], [ %7, %4 ]
  store volatile i32 %14, i32* inttoptr (i32 1342571552 to i32*), align 32, !dbg !9774, !tbaa !9708
  ret void, !dbg !9782
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @HASH_GetFlagStatus(i16 zeroext %0) local_unnamed_addr #0 !dbg !9783 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9787, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 0, metadata !9788, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 0, metadata !9789, metadata !DIExpression()), !dbg !9790
  %2 = zext i16 %0 to i32, !dbg !9791
  %3 = and i32 %2, 4096, !dbg !9793
  %4 = icmp eq i32 %3, 0, !dbg !9794
  call void @llvm.dbg.value(metadata i32 undef, metadata !9789, metadata !DIExpression()), !dbg !9790
  %5 = select i1 %4, i32* inttoptr (i32 1342571556 to i32*), i32* inttoptr (i32 1342571520 to i32*)
  %6 = load volatile i32, i32* %5, align 4, !dbg !9795, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %6, metadata !9789, metadata !DIExpression()), !dbg !9790
  %7 = and i32 %6, %2, !dbg !9796
  %8 = icmp ne i32 %7, 0, !dbg !9798
  %9 = zext i1 %8 to i32, !dbg !9799
  call void @llvm.dbg.value(metadata i32 %9, metadata !9788, metadata !DIExpression()), !dbg !9790
  ret i32 %9, !dbg !9800
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_ClearFlag(i16 zeroext %0) local_unnamed_addr #0 !dbg !9801 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9803, metadata !DIExpression()), !dbg !9804
  %2 = zext i16 %0 to i32, !dbg !9805
  %3 = xor i32 %2, -1, !dbg !9806
  store volatile i32 %3, i32* inttoptr (i32 1342571556 to i32*), align 4, !dbg !9807, !tbaa !9808
  ret void, !dbg !9809
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @HASH_GetITStatus(i8 zeroext %0) local_unnamed_addr #0 !dbg !9810 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9812, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 0, metadata !9813, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 0, metadata !9814, metadata !DIExpression()), !dbg !9815
  %2 = load volatile i32, i32* inttoptr (i32 1342571556 to i32*), align 4, !dbg !9816, !tbaa !9808
  call void @llvm.dbg.value(metadata i32 %2, metadata !9814, metadata !DIExpression()), !dbg !9815
  %3 = load volatile i32, i32* inttoptr (i32 1342571552 to i32*), align 32, !dbg !9817, !tbaa !9708
  %4 = zext i8 %0 to i32, !dbg !9819
  %5 = and i32 %2, %4, !dbg !9820
  %6 = and i32 %5, %3, !dbg !9821
  %7 = icmp ne i32 %6, 0, !dbg !9822
  %8 = zext i1 %7 to i32
  call void @llvm.dbg.value(metadata i32 %8, metadata !9813, metadata !DIExpression()), !dbg !9815
  ret i32 %8, !dbg !9823
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @HASH_ClearITPendingBit(i8 zeroext %0) local_unnamed_addr #0 !dbg !9824 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9826, metadata !DIExpression()), !dbg !9827
  %2 = xor i8 %0, -1, !dbg !9828
  %3 = zext i8 %2 to i32, !dbg !9829
  store volatile i32 %3, i32* inttoptr (i32 1342571556 to i32*), align 4, !dbg !9830, !tbaa !9808
  ret void, !dbg !9831
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @SYSCFG_DeInit() local_unnamed_addr #3 !dbg !9832 {
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 16384, i32 1) #5, !dbg !9833
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 16384, i32 0) #5, !dbg !9834
  ret void, !dbg !9835
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SYSCFG_MemoryRemapConfig(i8 zeroext %0) local_unnamed_addr #0 !dbg !9836 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9838, metadata !DIExpression()), !dbg !9839
  %2 = zext i8 %0 to i32, !dbg !9840
  store volatile i32 %2, i32* inttoptr (i32 1073821696 to i32*), align 2048, !dbg !9841, !tbaa !9842
  ret void, !dbg !9844
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SYSCFG_EXTILineConfig(i8 zeroext %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !9845 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9849, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i8 %1, metadata !9850, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 0, metadata !9851, metadata !DIExpression()), !dbg !9852
  %3 = zext i8 %1 to i32, !dbg !9853
  %4 = shl nuw nsw i32 %3, 2, !dbg !9854
  %5 = and i32 %4, 12, !dbg !9854
  %6 = shl nuw nsw i32 15, %5, !dbg !9855
  call void @llvm.dbg.value(metadata i32 %6, metadata !9851, metadata !DIExpression()), !dbg !9852
  %7 = xor i32 %6, -1, !dbg !9856
  %8 = lshr i32 %3, 2, !dbg !9857
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %8, !dbg !9858
  %10 = load volatile i32, i32* %9, align 4, !dbg !9859, !tbaa !894
  %11 = and i32 %10, %7, !dbg !9859
  store volatile i32 %11, i32* %9, align 4, !dbg !9859, !tbaa !894
  %12 = zext i8 %0 to i32, !dbg !9860
  %13 = shl nuw nsw i32 %12, %5, !dbg !9861
  %14 = load volatile i32, i32* %9, align 4, !dbg !9862, !tbaa !894
  %15 = or i32 %14, %13, !dbg !9862
  store volatile i32 %15, i32* %9, align 4, !dbg !9862, !tbaa !894
  ret void, !dbg !9863
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SYSCFG_ETH_MediaInterfaceConfig(i32 %0) local_unnamed_addr #0 !dbg !9864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9866, metadata !DIExpression()), !dbg !9867
  store volatile i32 %0, i32* inttoptr (i32 1109852380 to i32*), align 4, !dbg !9868, !tbaa !894
  ret void, !dbg !9869
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @SYSCFG_CompensationCellCmd(i32 %0) local_unnamed_addr #0 !dbg !9870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9872, metadata !DIExpression()), !dbg !9873
  store volatile i32 %0, i32* inttoptr (i32 1109853184 to i32*), align 1024, !dbg !9874, !tbaa !894
  ret void, !dbg !9875
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @SYSCFG_GetCompensationCellStatus() local_unnamed_addr #0 !dbg !9876 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9878, metadata !DIExpression()), !dbg !9879
  %1 = load volatile i32, i32* inttoptr (i32 1073821728 to i32*), align 32, !dbg !9880, !tbaa !9882
  %2 = lshr i32 %1, 8
  %3 = and i32 %2, 1
  call void @llvm.dbg.value(metadata i32 %3, metadata !9878, metadata !DIExpression()), !dbg !9879
  ret i32 %3, !dbg !9883
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_DES_ECB(i8 zeroext %0, i8* %1, i8* %2, i32 %3, i8* %4) local_unnamed_addr #3 !dbg !9884 {
  %6 = alloca %struct.CRYP_InitTypeDef, align 2
  %7 = alloca %struct.CRYP_KeyInitTypeDef, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9888, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i8* %1, metadata !9889, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i8* %2, metadata !9890, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %3, metadata !9891, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i8* %4, metadata !9892, metadata !DIExpression()), !dbg !9920
  %9 = bitcast %struct.CRYP_InitTypeDef* %6 to i8*, !dbg !9921
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !9921
  call void @llvm.dbg.declare(metadata %struct.CRYP_InitTypeDef* %6, metadata !9893, metadata !DIExpression()), !dbg !9922
  %10 = bitcast %struct.CRYP_KeyInitTypeDef* %7 to i8*, !dbg !9923
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6, !dbg !9923
  call void @llvm.dbg.declare(metadata %struct.CRYP_KeyInitTypeDef* %7, metadata !9901, metadata !DIExpression()), !dbg !9924
  %11 = bitcast i32* %8 to i8*, !dbg !9925
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !9925
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9913, metadata !DIExpression()), !dbg !9926
  store volatile i32 0, i32* %8, align 4, !dbg !9926, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !9914, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 1, metadata !9915, metadata !DIExpression()), !dbg !9920
  %12 = ptrtoint i8* %1 to i32, !dbg !9927
  call void @llvm.dbg.value(metadata i32 %12, metadata !9916, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i8* %2, metadata !9917, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i8* %4, metadata !9918, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 0, metadata !9919, metadata !DIExpression()), !dbg !9920
  call arm_aapcs_vfpcc void @CRYP_KeyStructInit(%struct.CRYP_KeyInitTypeDef* nonnull %7) #5, !dbg !9928
  %13 = icmp eq i8 %0, 1, !dbg !9929
  %14 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %6, i32 0, i32 0, !dbg !9931
  %15 = select i1 %13, i16 0, i16 4
  store i16 %15, i16* %14, align 2, !dbg !9931, !tbaa !7773
  %16 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %6, i32 0, i32 1, !dbg !9932
  store i16 16, i16* %16, align 2, !dbg !9933, !tbaa !7776
  %17 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %6, i32 0, i32 2, !dbg !9934
  store i16 128, i16* %17, align 2, !dbg !9935, !tbaa !7779
  call arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nonnull %6) #5, !dbg !9936
  %18 = bitcast i8* %1 to i32*, !dbg !9937
  %19 = load i32, i32* %18, align 4, !dbg !9938, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %19, metadata !9939, metadata !DIExpression()) #6, !dbg !9943
  %20 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %19) #6, !dbg !9945, !srcloc !9946
  call void @llvm.dbg.value(metadata i32 %20, metadata !9942, metadata !DIExpression()) #6, !dbg !9943
  %21 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %7, i32 0, i32 2, !dbg !9947
  store i32 %20, i32* %21, align 4, !dbg !9948, !tbaa !7657
  %22 = add i32 %12, 4, !dbg !9949
  call void @llvm.dbg.value(metadata i32 %22, metadata !9916, metadata !DIExpression()), !dbg !9920
  %23 = inttoptr i32 %22 to i32*, !dbg !9950
  %24 = load i32, i32* %23, align 4, !dbg !9951, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %24, metadata !9939, metadata !DIExpression()) #6, !dbg !9952
  %25 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %24) #6, !dbg !9954, !srcloc !9946
  call void @llvm.dbg.value(metadata i32 %25, metadata !9942, metadata !DIExpression()) #6, !dbg !9952
  %26 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %7, i32 0, i32 3, !dbg !9955
  store i32 %25, i32* %26, align 4, !dbg !9956, !tbaa !7666
  call arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nonnull %7) #5, !dbg !9957
  call arm_aapcs_vfpcc void @CRYP_FIFOFlush() #5, !dbg !9958
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 1) #5, !dbg !9959
  call void @llvm.dbg.value(metadata i32 0, metadata !9919, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i8* %4, metadata !9918, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i8* %2, metadata !9917, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 1, metadata !9915, metadata !DIExpression()), !dbg !9920
  %27 = icmp eq i32 %3, 0, !dbg !9960
  br i1 %27, label %59, label %28, !dbg !9963

28:                                               ; preds = %5
  %29 = ptrtoint i8* %4 to i32, !dbg !9964
  call void @llvm.dbg.value(metadata i32 %29, metadata !9918, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %29, metadata !9918, metadata !DIExpression()), !dbg !9920
  %30 = ptrtoint i8* %2 to i32, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %30, metadata !9917, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %30, metadata !9917, metadata !DIExpression()), !dbg !9920
  br label %31, !dbg !9963

31:                                               ; preds = %28, %49
  %32 = phi i32 [ %57, %49 ], [ 0, %28 ]
  %33 = phi i32 [ %56, %49 ], [ %29, %28 ]
  %34 = phi i32 [ %50, %49 ], [ %30, %28 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !9919, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %33, metadata !9918, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %34, metadata !9917, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 1, metadata !9915, metadata !DIExpression()), !dbg !9920
  %35 = inttoptr i32 %34 to i32*, !dbg !9966
  %36 = load i32, i32* %35, align 4, !dbg !9968, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %36) #5, !dbg !9969
  %37 = add i32 %34, 4, !dbg !9970
  call void @llvm.dbg.value(metadata i32 %37, metadata !9917, metadata !DIExpression()), !dbg !9920
  %38 = inttoptr i32 %37 to i32*, !dbg !9971
  %39 = load i32, i32* %38, align 4, !dbg !9972, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %39) #5, !dbg !9973
  call void @llvm.dbg.value(metadata i32 %50, metadata !9917, metadata !DIExpression()), !dbg !9920
  store volatile i32 0, i32* %8, align 4, !dbg !9974, !tbaa !894
  br label %40, !dbg !9975

40:                                               ; preds = %40, %31
  %41 = call arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext 16) #5, !dbg !9976
  call void @llvm.dbg.value(metadata i32 %41, metadata !9914, metadata !DIExpression()), !dbg !9920
  %42 = load volatile i32, i32* %8, align 4, !dbg !9978, !tbaa !894
  %43 = add i32 %42, 1, !dbg !9978
  store volatile i32 %43, i32* %8, align 4, !dbg !9978, !tbaa !894
  %44 = load volatile i32, i32* %8, align 4, !dbg !9979, !tbaa !894
  %45 = icmp ne i32 %44, 65536, !dbg !9980
  %46 = icmp ne i32 %41, 0, !dbg !9981
  %47 = and i1 %46, %45, !dbg !9981
  br i1 %47, label %40, label %48, !dbg !9982, !llvm.loop !9983

48:                                               ; preds = %40
  br i1 %46, label %59, label %49, !dbg !9985

49:                                               ; preds = %48
  %50 = add i32 %34, 8, !dbg !9986
  %51 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !9987
  %52 = inttoptr i32 %33 to i32*, !dbg !9990
  store i32 %51, i32* %52, align 4, !dbg !9991, !tbaa !894
  %53 = add i32 %33, 4, !dbg !9992
  call void @llvm.dbg.value(metadata i32 %53, metadata !9918, metadata !DIExpression()), !dbg !9920
  %54 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !9993
  %55 = inttoptr i32 %53 to i32*, !dbg !9994
  store i32 %54, i32* %55, align 4, !dbg !9995, !tbaa !894
  %56 = add i32 %33, 8, !dbg !9996
  call void @llvm.dbg.value(metadata i32 %56, metadata !9918, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 1, metadata !9915, metadata !DIExpression()), !dbg !9920
  %57 = add i32 %32, 8, !dbg !9997
  call void @llvm.dbg.value(metadata i32 %57, metadata !9919, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %50, metadata !9917, metadata !DIExpression()), !dbg !9920
  %58 = icmp ult i32 %57, %3, !dbg !9960
  br i1 %58, label %31, label %59, !dbg !9963, !llvm.loop !9998

59:                                               ; preds = %48, %49, %5
  %60 = phi i32 [ 1, %5 ], [ 0, %48 ], [ 1, %49 ], !dbg !9920
  call void @llvm.dbg.value(metadata i32 %60, metadata !9915, metadata !DIExpression()), !dbg !9920
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 0) #5, !dbg !10000
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11), !dbg !10001
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6, !dbg !10001
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !10001
  ret i32 %60, !dbg !10002
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_DES_CBC(i8 zeroext %0, i8* %1, i8* %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3 !dbg !10003 {
  %7 = alloca %struct.CRYP_InitTypeDef, align 2
  %8 = alloca %struct.CRYP_KeyInitTypeDef, align 4
  %9 = alloca %struct.DMA_TypeDef, align 4
  %10 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !10007, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8* %1, metadata !10008, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8* %2, metadata !10009, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8* %3, metadata !10010, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %4, metadata !10011, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8* %5, metadata !10012, metadata !DIExpression()), !dbg !10031
  %11 = bitcast %struct.CRYP_InitTypeDef* %7 to i8*, !dbg !10032
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !10032
  call void @llvm.dbg.declare(metadata %struct.CRYP_InitTypeDef* %7, metadata !10013, metadata !DIExpression()), !dbg !10033
  %12 = bitcast %struct.CRYP_KeyInitTypeDef* %8 to i8*, !dbg !10034
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6, !dbg !10034
  call void @llvm.dbg.declare(metadata %struct.CRYP_KeyInitTypeDef* %8, metadata !10014, metadata !DIExpression()), !dbg !10035
  %13 = bitcast %struct.DMA_TypeDef* %9 to i8*, !dbg !10036
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6, !dbg !10036
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %9, metadata !10015, metadata !DIExpression()), !dbg !10037
  %14 = bitcast i32* %10 to i8*, !dbg !10038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14), !dbg !10038
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10023, metadata !DIExpression()), !dbg !10039
  store volatile i32 0, i32* %10, align 4, !dbg !10039, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !10024, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 1, metadata !10025, metadata !DIExpression()), !dbg !10031
  %15 = ptrtoint i8* %1 to i32, !dbg !10040
  call void @llvm.dbg.value(metadata i32 %15, metadata !10026, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8* %3, metadata !10027, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8* %5, metadata !10028, metadata !DIExpression()), !dbg !10031
  %16 = ptrtoint i8* %2 to i32, !dbg !10041
  call void @llvm.dbg.value(metadata i32 %16, metadata !10029, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 0, metadata !10030, metadata !DIExpression()), !dbg !10031
  call arm_aapcs_vfpcc void @CRYP_KeyStructInit(%struct.CRYP_KeyInitTypeDef* nonnull %8) #5, !dbg !10042
  %17 = icmp eq i8 %0, 1, !dbg !10043
  %18 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 0, !dbg !10045
  %19 = select i1 %17, i16 0, i16 4
  store i16 %19, i16* %18, align 2, !dbg !10045, !tbaa !7773
  %20 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 1, !dbg !10046
  store i16 24, i16* %20, align 2, !dbg !10047, !tbaa !7776
  %21 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 2, !dbg !10048
  store i16 128, i16* %21, align 2, !dbg !10049, !tbaa !7779
  call arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nonnull %7) #5, !dbg !10050
  %22 = bitcast i8* %1 to i32*, !dbg !10051
  %23 = load i32, i32* %22, align 4, !dbg !10052, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %23, metadata !9939, metadata !DIExpression()) #6, !dbg !10053
  %24 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %23) #6, !dbg !10055, !srcloc !9946
  call void @llvm.dbg.value(metadata i32 %24, metadata !9942, metadata !DIExpression()) #6, !dbg !10053
  %25 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 2, !dbg !10056
  store i32 %24, i32* %25, align 4, !dbg !10057, !tbaa !7657
  %26 = add i32 %15, 4, !dbg !10058
  call void @llvm.dbg.value(metadata i32 %26, metadata !10026, metadata !DIExpression()), !dbg !10031
  %27 = inttoptr i32 %26 to i32*, !dbg !10059
  %28 = load i32, i32* %27, align 4, !dbg !10060, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %28, metadata !9939, metadata !DIExpression()) #6, !dbg !10061
  %29 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %28) #6, !dbg !10063, !srcloc !9946
  call void @llvm.dbg.value(metadata i32 %29, metadata !9942, metadata !DIExpression()) #6, !dbg !10061
  %30 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 3, !dbg !10064
  store i32 %29, i32* %30, align 4, !dbg !10065, !tbaa !7666
  call arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nonnull %8) #5, !dbg !10066
  %31 = bitcast i8* %2 to i32*, !dbg !10067
  %32 = load i32, i32* %31, align 4, !dbg !10068, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %32, metadata !9939, metadata !DIExpression()) #6, !dbg !10069
  %33 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %32) #6, !dbg !10071, !srcloc !9946
  call void @llvm.dbg.value(metadata i32 %33, metadata !9942, metadata !DIExpression()) #6, !dbg !10069
  %34 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %9, i32 0, i32 0, !dbg !10072
  store i32 %33, i32* %34, align 4, !dbg !10073, !tbaa !934
  %35 = add i32 %16, 4, !dbg !10074
  call void @llvm.dbg.value(metadata i32 %35, metadata !10029, metadata !DIExpression()), !dbg !10031
  %36 = inttoptr i32 %35 to i32*, !dbg !10075
  %37 = load i32, i32* %36, align 4, !dbg !10076, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %37, metadata !9939, metadata !DIExpression()) #6, !dbg !10077
  %38 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %37) #6, !dbg !10079, !srcloc !9946
  call void @llvm.dbg.value(metadata i32 %38, metadata !9942, metadata !DIExpression()) #6, !dbg !10077
  %39 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %9, i32 0, i32 1, !dbg !10080
  store i32 %38, i32* %39, align 4, !dbg !10081, !tbaa !1690
  call arm_aapcs_vfpcc void @CRYP_IVInit(%struct.DMA_TypeDef* nonnull %9) #5, !dbg !10082
  call arm_aapcs_vfpcc void @CRYP_FIFOFlush() #5, !dbg !10083
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 1) #5, !dbg !10084
  call void @llvm.dbg.value(metadata i32 0, metadata !10030, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8* %5, metadata !10028, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8* %3, metadata !10027, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 1, metadata !10025, metadata !DIExpression()), !dbg !10031
  %40 = icmp eq i32 %4, 0, !dbg !10085
  br i1 %40, label %72, label %41, !dbg !10088

41:                                               ; preds = %6
  %42 = ptrtoint i8* %5 to i32, !dbg !10089
  call void @llvm.dbg.value(metadata i32 %42, metadata !10028, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %42, metadata !10028, metadata !DIExpression()), !dbg !10031
  %43 = ptrtoint i8* %3 to i32, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %43, metadata !10027, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %43, metadata !10027, metadata !DIExpression()), !dbg !10031
  br label %44, !dbg !10088

44:                                               ; preds = %41, %62
  %45 = phi i32 [ %70, %62 ], [ 0, %41 ]
  %46 = phi i32 [ %69, %62 ], [ %42, %41 ]
  %47 = phi i32 [ %63, %62 ], [ %43, %41 ]
  call void @llvm.dbg.value(metadata i32 %45, metadata !10030, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %46, metadata !10028, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %47, metadata !10027, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 1, metadata !10025, metadata !DIExpression()), !dbg !10031
  %48 = inttoptr i32 %47 to i32*, !dbg !10091
  %49 = load i32, i32* %48, align 4, !dbg !10093, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %49) #5, !dbg !10094
  %50 = add i32 %47, 4, !dbg !10095
  call void @llvm.dbg.value(metadata i32 %50, metadata !10027, metadata !DIExpression()), !dbg !10031
  %51 = inttoptr i32 %50 to i32*, !dbg !10096
  %52 = load i32, i32* %51, align 4, !dbg !10097, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %52) #5, !dbg !10098
  call void @llvm.dbg.value(metadata i32 %63, metadata !10027, metadata !DIExpression()), !dbg !10031
  store volatile i32 0, i32* %10, align 4, !dbg !10099, !tbaa !894
  br label %53, !dbg !10100

53:                                               ; preds = %53, %44
  %54 = call arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext 16) #5, !dbg !10101
  call void @llvm.dbg.value(metadata i32 %54, metadata !10024, metadata !DIExpression()), !dbg !10031
  %55 = load volatile i32, i32* %10, align 4, !dbg !10103, !tbaa !894
  %56 = add i32 %55, 1, !dbg !10103
  store volatile i32 %56, i32* %10, align 4, !dbg !10103, !tbaa !894
  %57 = load volatile i32, i32* %10, align 4, !dbg !10104, !tbaa !894
  %58 = icmp ne i32 %57, 65536, !dbg !10105
  %59 = icmp ne i32 %54, 0, !dbg !10106
  %60 = and i1 %59, %58, !dbg !10106
  br i1 %60, label %53, label %61, !dbg !10107, !llvm.loop !10108

61:                                               ; preds = %53
  br i1 %59, label %72, label %62, !dbg !10110

62:                                               ; preds = %61
  %63 = add i32 %47, 8, !dbg !10111
  %64 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !10112
  %65 = inttoptr i32 %46 to i32*, !dbg !10115
  store i32 %64, i32* %65, align 4, !dbg !10116, !tbaa !894
  %66 = add i32 %46, 4, !dbg !10117
  call void @llvm.dbg.value(metadata i32 %66, metadata !10028, metadata !DIExpression()), !dbg !10031
  %67 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !10118
  %68 = inttoptr i32 %66 to i32*, !dbg !10119
  store i32 %67, i32* %68, align 4, !dbg !10120, !tbaa !894
  %69 = add i32 %46, 8, !dbg !10121
  call void @llvm.dbg.value(metadata i32 %69, metadata !10028, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 1, metadata !10025, metadata !DIExpression()), !dbg !10031
  %70 = add i32 %45, 8, !dbg !10122
  call void @llvm.dbg.value(metadata i32 %70, metadata !10030, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %63, metadata !10027, metadata !DIExpression()), !dbg !10031
  %71 = icmp ult i32 %70, %4, !dbg !10085
  br i1 %71, label %44, label %72, !dbg !10088, !llvm.loop !10123

72:                                               ; preds = %61, %62, %6
  %73 = phi i32 [ 1, %6 ], [ 0, %61 ], [ 1, %62 ], !dbg !10031
  call void @llvm.dbg.value(metadata i32 %73, metadata !10025, metadata !DIExpression()), !dbg !10031
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 0) #5, !dbg !10125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14), !dbg !10126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6, !dbg !10126
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6, !dbg !10126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !10126
  ret i32 %73, !dbg !10127
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @HASH_MD5(i8* %0, i32 %1, i8* %2) local_unnamed_addr #3 !dbg !10128 {
  %4 = alloca %struct.DMA_TypeDef, align 4
  %5 = alloca %struct.HASH_MsgDigest, align 4
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10132, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i32 %1, metadata !10133, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i8* %2, metadata !10134, metadata !DIExpression()), !dbg !10155
  %8 = bitcast %struct.DMA_TypeDef* %4 to i8*, !dbg !10156
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6, !dbg !10156
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %4, metadata !10135, metadata !DIExpression()), !dbg !10157
  %9 = bitcast %struct.HASH_MsgDigest* %5 to i8*, !dbg !10158
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %9) #6, !dbg !10158
  call void @llvm.dbg.declare(metadata %struct.HASH_MsgDigest* %5, metadata !10143, metadata !DIExpression()), !dbg !10159
  %10 = bitcast i16* %6 to i8*, !dbg !10160
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10), !dbg !10160
  call void @llvm.dbg.declare(metadata i16* %6, metadata !10148, metadata !DIExpression()), !dbg !10161
  store volatile i16 0, i16* %6, align 2, !dbg !10161, !tbaa !3025
  call void @llvm.dbg.value(metadata i32 0, metadata !10149, metadata !DIExpression()), !dbg !10155
  %11 = bitcast i32* %7 to i8*, !dbg !10162
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !10162
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10150, metadata !DIExpression()), !dbg !10163
  store volatile i32 0, i32* %7, align 4, !dbg !10163, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !10151, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i32 1, metadata !10152, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i8* %0, metadata !10153, metadata !DIExpression()), !dbg !10155
  %12 = ptrtoint i8* %2 to i32, !dbg !10164
  call void @llvm.dbg.value(metadata i32 %12, metadata !10154, metadata !DIExpression()), !dbg !10155
  %13 = trunc i32 %1 to i16, !dbg !10165
  %14 = shl i16 %13, 3, !dbg !10165
  %15 = and i16 %14, 24, !dbg !10165
  store volatile i16 %15, i16* %6, align 2, !dbg !10166, !tbaa !3025
  tail call arm_aapcs_vfpcc void @HASH_DeInit() #5, !dbg !10167
  %16 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %4, i32 0, i32 0, !dbg !10168
  store i32 128, i32* %16, align 4, !dbg !10169, !tbaa !934
  %17 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %4, i32 0, i32 1, !dbg !10170
  store i32 0, i32* %17, align 4, !dbg !10171, !tbaa !1690
  %18 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %4, i32 0, i32 2, !dbg !10172
  store i32 32, i32* %18, align 4, !dbg !10173, !tbaa !968
  call arm_aapcs_vfpcc void @HASH_Init(%struct.DMA_TypeDef* nonnull %4) #5, !dbg !10174
  %19 = load volatile i16, i16* %6, align 2, !dbg !10175, !tbaa !3025
  call arm_aapcs_vfpcc void @HASH_SetLastWordValidBitsNbr(i16 zeroext %19) #5, !dbg !10176
  call void @llvm.dbg.value(metadata i32 0, metadata !10149, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i8* %0, metadata !10153, metadata !DIExpression()), !dbg !10155
  %20 = icmp eq i32 %1, 0, !dbg !10177
  br i1 %20, label %31, label %21, !dbg !10180

21:                                               ; preds = %3
  %22 = ptrtoint i8* %0 to i32, !dbg !10181
  call void @llvm.dbg.value(metadata i32 %22, metadata !10153, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i32 %22, metadata !10153, metadata !DIExpression()), !dbg !10155
  br label %23, !dbg !10180

23:                                               ; preds = %21, %23
  %24 = phi i32 [ %28, %23 ], [ %22, %21 ]
  %25 = phi i32 [ %29, %23 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !10153, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i32 %25, metadata !10149, metadata !DIExpression()), !dbg !10155
  %26 = inttoptr i32 %24 to i32*, !dbg !10182
  %27 = load i32, i32* %26, align 4, !dbg !10184, !tbaa !894
  call arm_aapcs_vfpcc void @HASH_DataIn(i32 %27) #5, !dbg !10185
  %28 = add i32 %24, 4, !dbg !10186
  call void @llvm.dbg.value(metadata i32 %28, metadata !10153, metadata !DIExpression()), !dbg !10155
  %29 = add i32 %25, 4, !dbg !10187
  call void @llvm.dbg.value(metadata i32 %29, metadata !10149, metadata !DIExpression()), !dbg !10155
  %30 = icmp ult i32 %29, %1, !dbg !10177
  br i1 %30, label %23, label %31, !dbg !10180, !llvm.loop !10188

31:                                               ; preds = %23, %3
  call arm_aapcs_vfpcc void @HASH_StartDigest() #5, !dbg !10190
  br label %32, !dbg !10191

32:                                               ; preds = %32, %31
  %33 = call arm_aapcs_vfpcc i32 @HASH_GetFlagStatus(i16 zeroext 8) #5, !dbg !10192
  call void @llvm.dbg.value(metadata i32 %33, metadata !10151, metadata !DIExpression()), !dbg !10155
  %34 = load volatile i32, i32* %7, align 4, !dbg !10194, !tbaa !894
  %35 = add i32 %34, 1, !dbg !10194
  store volatile i32 %35, i32* %7, align 4, !dbg !10194, !tbaa !894
  %36 = load volatile i32, i32* %7, align 4, !dbg !10195, !tbaa !894
  %37 = icmp ne i32 %36, 65536, !dbg !10196
  %38 = icmp ne i32 %33, 0, !dbg !10197
  %39 = and i1 %38, %37, !dbg !10197
  br i1 %39, label %32, label %40, !dbg !10198, !llvm.loop !10199

40:                                               ; preds = %32
  br i1 %38, label %61, label %41, !dbg !10201

41:                                               ; preds = %40
  call arm_aapcs_vfpcc void @HASH_GetDigest(%struct.HASH_MsgDigest* nonnull %5) #5, !dbg !10202
  %42 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %5, i32 0, i32 0, i32 0, !dbg !10205
  %43 = load i32, i32* %42, align 4, !dbg !10205, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %43, metadata !10206, metadata !DIExpression()) #6, !dbg !10210
  %44 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %43) #6, !dbg !10212, !srcloc !10213
  call void @llvm.dbg.value(metadata i32 %44, metadata !10209, metadata !DIExpression()) #6, !dbg !10210
  %45 = bitcast i8* %2 to i32*, !dbg !10214
  store i32 %44, i32* %45, align 4, !dbg !10215, !tbaa !894
  %46 = add i32 %12, 4, !dbg !10216
  call void @llvm.dbg.value(metadata i32 %46, metadata !10154, metadata !DIExpression()), !dbg !10155
  %47 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %5, i32 0, i32 0, i32 1, !dbg !10217
  %48 = load i32, i32* %47, align 4, !dbg !10217, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %48, metadata !10206, metadata !DIExpression()) #6, !dbg !10218
  %49 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %48) #6, !dbg !10220, !srcloc !10213
  call void @llvm.dbg.value(metadata i32 %49, metadata !10209, metadata !DIExpression()) #6, !dbg !10218
  %50 = inttoptr i32 %46 to i32*, !dbg !10221
  store i32 %49, i32* %50, align 4, !dbg !10222, !tbaa !894
  %51 = add i32 %12, 8, !dbg !10223
  call void @llvm.dbg.value(metadata i32 %51, metadata !10154, metadata !DIExpression()), !dbg !10155
  %52 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %5, i32 0, i32 0, i32 2, !dbg !10224
  %53 = load i32, i32* %52, align 4, !dbg !10224, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %53, metadata !10206, metadata !DIExpression()) #6, !dbg !10225
  %54 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %53) #6, !dbg !10227, !srcloc !10213
  call void @llvm.dbg.value(metadata i32 %54, metadata !10209, metadata !DIExpression()) #6, !dbg !10225
  %55 = inttoptr i32 %51 to i32*, !dbg !10228
  store i32 %54, i32* %55, align 4, !dbg !10229, !tbaa !894
  %56 = add i32 %12, 12, !dbg !10230
  call void @llvm.dbg.value(metadata i32 %56, metadata !10154, metadata !DIExpression()), !dbg !10155
  %57 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %5, i32 0, i32 0, i32 3, !dbg !10231
  %58 = load i32, i32* %57, align 4, !dbg !10231, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %58, metadata !10206, metadata !DIExpression()) #6, !dbg !10232
  %59 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %58) #6, !dbg !10234, !srcloc !10213
  call void @llvm.dbg.value(metadata i32 %59, metadata !10209, metadata !DIExpression()) #6, !dbg !10232
  %60 = inttoptr i32 %56 to i32*, !dbg !10235
  store i32 %59, i32* %60, align 4, !dbg !10236, !tbaa !894
  br label %61

61:                                               ; preds = %40, %41
  %62 = phi i32 [ 1, %41 ], [ 0, %40 ], !dbg !10155
  call void @llvm.dbg.value(metadata i32 %62, metadata !10152, metadata !DIExpression()), !dbg !10155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11), !dbg !10237
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10), !dbg !10237
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %9) #6, !dbg !10237
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6, !dbg !10237
  ret i32 %62, !dbg !10238
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @HMAC_MD5(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4) local_unnamed_addr #3 !dbg !10239 {
  %6 = alloca %struct.DMA_TypeDef, align 4
  %7 = alloca %struct.HASH_MsgDigest, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10243, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 %1, metadata !10244, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i8* %2, metadata !10245, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 %3, metadata !10246, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i8* %4, metadata !10247, metadata !DIExpression()), !dbg !10259
  %11 = bitcast %struct.DMA_TypeDef* %6 to i8*, !dbg !10260
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6, !dbg !10260
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %6, metadata !10248, metadata !DIExpression()), !dbg !10261
  %12 = bitcast %struct.HASH_MsgDigest* %7 to i8*, !dbg !10262
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %12) #6, !dbg !10262
  call void @llvm.dbg.declare(metadata %struct.HASH_MsgDigest* %7, metadata !10249, metadata !DIExpression()), !dbg !10263
  %13 = bitcast i16* %8 to i8*, !dbg !10264
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %13), !dbg !10264
  call void @llvm.dbg.declare(metadata i16* %8, metadata !10250, metadata !DIExpression()), !dbg !10265
  store volatile i16 0, i16* %8, align 2, !dbg !10265, !tbaa !3025
  %14 = bitcast i16* %9 to i8*, !dbg !10266
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %14), !dbg !10266
  call void @llvm.dbg.declare(metadata i16* %9, metadata !10251, metadata !DIExpression()), !dbg !10267
  store volatile i16 0, i16* %9, align 2, !dbg !10267, !tbaa !3025
  call void @llvm.dbg.value(metadata i32 0, metadata !10252, metadata !DIExpression()), !dbg !10259
  %15 = bitcast i32* %10 to i8*, !dbg !10268
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15), !dbg !10268
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10253, metadata !DIExpression()), !dbg !10269
  store volatile i32 0, i32* %10, align 4, !dbg !10269, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !10254, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 1, metadata !10255, metadata !DIExpression()), !dbg !10259
  %16 = ptrtoint i8* %0 to i32, !dbg !10270
  call void @llvm.dbg.value(metadata i32 %16, metadata !10256, metadata !DIExpression()), !dbg !10259
  %17 = ptrtoint i8* %2 to i32, !dbg !10271
  call void @llvm.dbg.value(metadata i32 %17, metadata !10257, metadata !DIExpression()), !dbg !10259
  %18 = ptrtoint i8* %4 to i32, !dbg !10272
  call void @llvm.dbg.value(metadata i32 %18, metadata !10258, metadata !DIExpression()), !dbg !10259
  %19 = trunc i32 %3 to i16, !dbg !10273
  %20 = shl i16 %19, 3, !dbg !10273
  %21 = and i16 %20, 24, !dbg !10273
  store volatile i16 %21, i16* %8, align 2, !dbg !10274, !tbaa !3025
  %22 = trunc i32 %1 to i16, !dbg !10275
  %23 = shl i16 %22, 3, !dbg !10275
  %24 = and i16 %23, 24, !dbg !10275
  store volatile i16 %24, i16* %9, align 2, !dbg !10276, !tbaa !3025
  tail call arm_aapcs_vfpcc void @HASH_DeInit() #5, !dbg !10277
  %25 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 0, !dbg !10278
  store i32 128, i32* %25, align 4, !dbg !10279, !tbaa !934
  %26 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 1, !dbg !10280
  store i32 64, i32* %26, align 4, !dbg !10281, !tbaa !1690
  %27 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 2, !dbg !10282
  store i32 32, i32* %27, align 4, !dbg !10283, !tbaa !968
  %28 = icmp ugt i32 %1, 64, !dbg !10284
  %29 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 3, !dbg !10286
  %30 = select i1 %28, i32 65536, i32 0
  store i32 %30, i32* %29, align 4, !dbg !10286, !tbaa !985
  call arm_aapcs_vfpcc void @HASH_Init(%struct.DMA_TypeDef* nonnull %6) #5, !dbg !10287
  %31 = load volatile i16, i16* %9, align 2, !dbg !10288, !tbaa !3025
  call arm_aapcs_vfpcc void @HASH_SetLastWordValidBitsNbr(i16 zeroext %31) #5, !dbg !10289
  call void @llvm.dbg.value(metadata i32 %16, metadata !10256, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 0, metadata !10252, metadata !DIExpression()), !dbg !10259
  %32 = icmp eq i32 %1, 0, !dbg !10290
  br i1 %32, label %41, label %33, !dbg !10293

33:                                               ; preds = %5, %33
  %34 = phi i32 [ %38, %33 ], [ %16, %5 ]
  %35 = phi i32 [ %39, %33 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %34, metadata !10256, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 %35, metadata !10252, metadata !DIExpression()), !dbg !10259
  %36 = inttoptr i32 %34 to i32*, !dbg !10294
  %37 = load i32, i32* %36, align 4, !dbg !10296, !tbaa !894
  call arm_aapcs_vfpcc void @HASH_DataIn(i32 %37) #5, !dbg !10297
  %38 = add i32 %34, 4, !dbg !10298
  call void @llvm.dbg.value(metadata i32 %38, metadata !10256, metadata !DIExpression()), !dbg !10259
  %39 = add i32 %35, 4, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %39, metadata !10252, metadata !DIExpression()), !dbg !10259
  %40 = icmp ult i32 %39, %1, !dbg !10290
  br i1 %40, label %33, label %41, !dbg !10293, !llvm.loop !10300

41:                                               ; preds = %33, %5
  call arm_aapcs_vfpcc void @HASH_StartDigest() #5, !dbg !10302
  br label %42, !dbg !10303

42:                                               ; preds = %42, %41
  %43 = call arm_aapcs_vfpcc i32 @HASH_GetFlagStatus(i16 zeroext 8) #5, !dbg !10304
  call void @llvm.dbg.value(metadata i32 %43, metadata !10254, metadata !DIExpression()), !dbg !10259
  %44 = load volatile i32, i32* %10, align 4, !dbg !10306, !tbaa !894
  %45 = add i32 %44, 1, !dbg !10306
  store volatile i32 %45, i32* %10, align 4, !dbg !10306, !tbaa !894
  %46 = load volatile i32, i32* %10, align 4, !dbg !10307, !tbaa !894
  %47 = icmp ne i32 %46, 65536, !dbg !10308
  %48 = icmp ne i32 %43, 0, !dbg !10309
  %49 = and i1 %48, %47, !dbg !10309
  br i1 %49, label %42, label %50, !dbg !10310, !llvm.loop !10311

50:                                               ; preds = %42
  br i1 %48, label %112, label %51, !dbg !10313

51:                                               ; preds = %50
  %52 = load volatile i16, i16* %8, align 2, !dbg !10314, !tbaa !3025
  call arm_aapcs_vfpcc void @HASH_SetLastWordValidBitsNbr(i16 zeroext %52) #5, !dbg !10317
  call void @llvm.dbg.value(metadata i32 0, metadata !10252, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 %17, metadata !10257, metadata !DIExpression()), !dbg !10259
  %53 = icmp eq i32 %3, 0, !dbg !10318
  br i1 %53, label %62, label %54, !dbg !10321

54:                                               ; preds = %51, %54
  %55 = phi i32 [ %59, %54 ], [ %17, %51 ]
  %56 = phi i32 [ %60, %54 ], [ 0, %51 ]
  call void @llvm.dbg.value(metadata i32 %55, metadata !10257, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 %56, metadata !10252, metadata !DIExpression()), !dbg !10259
  %57 = inttoptr i32 %55 to i32*, !dbg !10322
  %58 = load i32, i32* %57, align 4, !dbg !10324, !tbaa !894
  call arm_aapcs_vfpcc void @HASH_DataIn(i32 %58) #5, !dbg !10325
  %59 = add i32 %55, 4, !dbg !10326
  call void @llvm.dbg.value(metadata i32 %59, metadata !10257, metadata !DIExpression()), !dbg !10259
  %60 = add i32 %56, 4, !dbg !10327
  call void @llvm.dbg.value(metadata i32 %60, metadata !10252, metadata !DIExpression()), !dbg !10259
  %61 = icmp ult i32 %60, %3, !dbg !10318
  br i1 %61, label %54, label %62, !dbg !10321, !llvm.loop !10328

62:                                               ; preds = %54, %51
  call arm_aapcs_vfpcc void @HASH_StartDigest() #5, !dbg !10330
  store volatile i32 0, i32* %10, align 4, !dbg !10331, !tbaa !894
  br label %63, !dbg !10332

63:                                               ; preds = %63, %62
  %64 = call arm_aapcs_vfpcc i32 @HASH_GetFlagStatus(i16 zeroext 8) #5, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %64, metadata !10254, metadata !DIExpression()), !dbg !10259
  %65 = load volatile i32, i32* %10, align 4, !dbg !10335, !tbaa !894
  %66 = add i32 %65, 1, !dbg !10335
  store volatile i32 %66, i32* %10, align 4, !dbg !10335, !tbaa !894
  %67 = load volatile i32, i32* %10, align 4, !dbg !10336, !tbaa !894
  %68 = icmp ne i32 %67, 65536, !dbg !10337
  %69 = icmp ne i32 %64, 0, !dbg !10338
  %70 = and i1 %69, %68, !dbg !10338
  br i1 %70, label %63, label %71, !dbg !10339, !llvm.loop !10340

71:                                               ; preds = %63
  br i1 %69, label %112, label %72, !dbg !10342

72:                                               ; preds = %71
  %73 = load volatile i16, i16* %9, align 2, !dbg !10343, !tbaa !3025
  call arm_aapcs_vfpcc void @HASH_SetLastWordValidBitsNbr(i16 zeroext %73) #5, !dbg !10346
  call void @llvm.dbg.value(metadata i32 %16, metadata !10256, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 0, metadata !10252, metadata !DIExpression()), !dbg !10259
  br i1 %32, label %82, label %74, !dbg !10347

74:                                               ; preds = %72, %74
  %75 = phi i32 [ %79, %74 ], [ %16, %72 ]
  %76 = phi i32 [ %80, %74 ], [ 0, %72 ]
  call void @llvm.dbg.value(metadata i32 %75, metadata !10256, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 %76, metadata !10252, metadata !DIExpression()), !dbg !10259
  %77 = inttoptr i32 %75 to i32*, !dbg !10349
  %78 = load i32, i32* %77, align 4, !dbg !10352, !tbaa !894
  call arm_aapcs_vfpcc void @HASH_DataIn(i32 %78) #5, !dbg !10353
  %79 = add i32 %75, 4, !dbg !10354
  call void @llvm.dbg.value(metadata i32 %79, metadata !10256, metadata !DIExpression()), !dbg !10259
  %80 = add i32 %76, 4, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %80, metadata !10252, metadata !DIExpression()), !dbg !10259
  %81 = icmp ult i32 %80, %1, !dbg !10356
  br i1 %81, label %74, label %82, !dbg !10347, !llvm.loop !10357

82:                                               ; preds = %74, %72
  call arm_aapcs_vfpcc void @HASH_StartDigest() #5, !dbg !10359
  store volatile i32 0, i32* %10, align 4, !dbg !10360, !tbaa !894
  br label %83, !dbg !10361

83:                                               ; preds = %83, %82
  %84 = call arm_aapcs_vfpcc i32 @HASH_GetFlagStatus(i16 zeroext 8) #5, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %84, metadata !10254, metadata !DIExpression()), !dbg !10259
  %85 = load volatile i32, i32* %10, align 4, !dbg !10364, !tbaa !894
  %86 = add i32 %85, 1, !dbg !10364
  store volatile i32 %86, i32* %10, align 4, !dbg !10364, !tbaa !894
  %87 = load volatile i32, i32* %10, align 4, !dbg !10365, !tbaa !894
  %88 = icmp ne i32 %87, 65536, !dbg !10366
  %89 = icmp ne i32 %84, 0, !dbg !10367
  %90 = and i1 %89, %88, !dbg !10367
  br i1 %90, label %83, label %91, !dbg !10368, !llvm.loop !10369

91:                                               ; preds = %83
  br i1 %89, label %112, label %92, !dbg !10371

92:                                               ; preds = %91
  call arm_aapcs_vfpcc void @HASH_GetDigest(%struct.HASH_MsgDigest* nonnull %7) #5, !dbg !10372
  %93 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %7, i32 0, i32 0, i32 0, !dbg !10375
  %94 = load i32, i32* %93, align 4, !dbg !10375, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %94, metadata !10206, metadata !DIExpression()) #6, !dbg !10376
  %95 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %94) #6, !dbg !10378, !srcloc !10213
  call void @llvm.dbg.value(metadata i32 %95, metadata !10209, metadata !DIExpression()) #6, !dbg !10376
  %96 = bitcast i8* %4 to i32*, !dbg !10379
  store i32 %95, i32* %96, align 4, !dbg !10380, !tbaa !894
  %97 = add i32 %18, 4, !dbg !10381
  call void @llvm.dbg.value(metadata i32 %97, metadata !10258, metadata !DIExpression()), !dbg !10259
  %98 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %7, i32 0, i32 0, i32 1, !dbg !10382
  %99 = load i32, i32* %98, align 4, !dbg !10382, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %99, metadata !10206, metadata !DIExpression()) #6, !dbg !10383
  %100 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %99) #6, !dbg !10385, !srcloc !10213
  call void @llvm.dbg.value(metadata i32 %100, metadata !10209, metadata !DIExpression()) #6, !dbg !10383
  %101 = inttoptr i32 %97 to i32*, !dbg !10386
  store i32 %100, i32* %101, align 4, !dbg !10387, !tbaa !894
  %102 = add i32 %18, 8, !dbg !10388
  call void @llvm.dbg.value(metadata i32 %102, metadata !10258, metadata !DIExpression()), !dbg !10259
  %103 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %7, i32 0, i32 0, i32 2, !dbg !10389
  %104 = load i32, i32* %103, align 4, !dbg !10389, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %104, metadata !10206, metadata !DIExpression()) #6, !dbg !10390
  %105 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %104) #6, !dbg !10392, !srcloc !10213
  call void @llvm.dbg.value(metadata i32 %105, metadata !10209, metadata !DIExpression()) #6, !dbg !10390
  %106 = inttoptr i32 %102 to i32*, !dbg !10393
  store i32 %105, i32* %106, align 4, !dbg !10394, !tbaa !894
  %107 = add i32 %18, 12, !dbg !10395
  call void @llvm.dbg.value(metadata i32 %107, metadata !10258, metadata !DIExpression()), !dbg !10259
  %108 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %7, i32 0, i32 0, i32 3, !dbg !10396
  %109 = load i32, i32* %108, align 4, !dbg !10396, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %109, metadata !10206, metadata !DIExpression()) #6, !dbg !10397
  %110 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %109) #6, !dbg !10399, !srcloc !10213
  call void @llvm.dbg.value(metadata i32 %110, metadata !10209, metadata !DIExpression()) #6, !dbg !10397
  %111 = inttoptr i32 %107 to i32*, !dbg !10400
  store i32 %110, i32* %111, align 4, !dbg !10401, !tbaa !894
  br label %112

112:                                              ; preds = %91, %71, %50, %92
  %113 = phi i32 [ 1, %92 ], [ 0, %50 ], [ 0, %71 ], [ 0, %91 ], !dbg !10259
  call void @llvm.dbg.value(metadata i32 %113, metadata !10255, metadata !DIExpression()), !dbg !10259
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !10402
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %14), !dbg !10402
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %13), !dbg !10402
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %12) #6, !dbg !10402
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6, !dbg !10402
  ret i32 %113, !dbg !10403
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @TIM_DeInit(%struct.TIM_TypeDef* %0) local_unnamed_addr #3 !dbg !10404 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10408, metadata !DIExpression()), !dbg !10409
  %2 = ptrtoint %struct.TIM_TypeDef* %0 to i32, !dbg !10410
  switch i32 %2, label %17 [
    i32 1073807360, label %3
    i32 1073741824, label %4
    i32 1073742848, label %5
    i32 1073743872, label %6
    i32 1073744896, label %7
    i32 1073745920, label %8
    i32 1073746944, label %9
    i32 1073808384, label %10
    i32 1073823744, label %11
    i32 1073824768, label %12
    i32 1073825792, label %13
    i32 1073747968, label %14
    i32 1073748992, label %15
    i32 1073750016, label %16
  ], !dbg !10410

3:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 1, i32 1) #5, !dbg !10411
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 1, i32 0) #5, !dbg !10414
  br label %17, !dbg !10415

4:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 1, i32 1) #5, !dbg !10416
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 1, i32 0) #5, !dbg !10419
  br label %17, !dbg !10420

5:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 2, i32 1) #5, !dbg !10421
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 2, i32 0) #5, !dbg !10424
  br label %17, !dbg !10425

6:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 4, i32 1) #5, !dbg !10426
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 4, i32 0) #5, !dbg !10429
  br label %17, !dbg !10430

7:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 8, i32 1) #5, !dbg !10431
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 8, i32 0) #5, !dbg !10434
  br label %17, !dbg !10435

8:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 16, i32 1) #5, !dbg !10436
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 16, i32 0) #5, !dbg !10439
  br label %17, !dbg !10440

9:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 32, i32 1) #5, !dbg !10441
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 32, i32 0) #5, !dbg !10444
  br label %17, !dbg !10445

10:                                               ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 2, i32 1) #5, !dbg !10446
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 2, i32 0) #5, !dbg !10449
  br label %17, !dbg !10450

11:                                               ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 65536, i32 1) #5, !dbg !10451
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 65536, i32 0) #5, !dbg !10454
  br label %17, !dbg !10455

12:                                               ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 131072, i32 1) #5, !dbg !10456
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 131072, i32 0) #5, !dbg !10459
  br label %17, !dbg !10460

13:                                               ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 262144, i32 1) #5, !dbg !10461
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 262144, i32 0) #5, !dbg !10464
  br label %17, !dbg !10465

14:                                               ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 64, i32 1) #5, !dbg !10466
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 64, i32 0) #5, !dbg !10469
  br label %17, !dbg !10470

15:                                               ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 128, i32 1) #5, !dbg !10471
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 128, i32 0) #5, !dbg !10474
  br label %17, !dbg !10475

16:                                               ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 256, i32 1) #5, !dbg !10476
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 256, i32 0) #5, !dbg !10480
  br label %17, !dbg !10481

17:                                               ; preds = %1, %4, %6, %8, %10, %12, %14, %16, %15, %13, %11, %9, %7, %5, %3
  ret void, !dbg !10482
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_TimeBaseInit(%struct.TIM_TypeDef* %0, %struct.TIM_TimeBaseInitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10497, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata %struct.TIM_TimeBaseInitTypeDef* %1, metadata !10498, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i16 0, metadata !10499, metadata !DIExpression()), !dbg !10500
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 0, !dbg !10501
  %4 = load volatile i16, i16* %3, align 4, !dbg !10501, !tbaa !10502
  call void @llvm.dbg.value(metadata i16 %4, metadata !10499, metadata !DIExpression()), !dbg !10500
  %5 = ptrtoint %struct.TIM_TypeDef* %0 to i32, !dbg !10504
  switch i32 %5, label %11 [
    i32 1073808384, label %6
    i32 1073807360, label %6
    i32 1073744896, label %6
    i32 1073743872, label %6
    i32 1073742848, label %6
    i32 1073741824, label %6
  ], !dbg !10504

6:                                                ; preds = %2, %2, %2, %2, %2, %2
  %7 = and i16 %4, -113, !dbg !10506
  call void @llvm.dbg.value(metadata i16 %7, metadata !10499, metadata !DIExpression()), !dbg !10500
  %8 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %1, i32 0, i32 1, !dbg !10508
  %9 = load i16, i16* %8, align 2, !dbg !10508, !tbaa !10509
  %10 = or i16 %9, %7, !dbg !10511
  call void @llvm.dbg.value(metadata i16 %10, metadata !10499, metadata !DIExpression()), !dbg !10500
  br label %11, !dbg !10512

11:                                               ; preds = %2, %6
  %12 = phi i16 [ %10, %6 ], [ %4, %2 ], !dbg !10500
  call void @llvm.dbg.value(metadata i16 %12, metadata !10499, metadata !DIExpression()), !dbg !10500
  switch i32 %5, label %13 [
    i32 1073746944, label %18
    i32 1073745920, label %18
  ], !dbg !10513

13:                                               ; preds = %11
  %14 = and i16 %12, -769, !dbg !10515
  call void @llvm.dbg.value(metadata i16 %14, metadata !10499, metadata !DIExpression()), !dbg !10500
  %15 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %1, i32 0, i32 3, !dbg !10517
  %16 = load i16, i16* %15, align 4, !dbg !10517, !tbaa !10518
  %17 = or i16 %16, %14, !dbg !10519
  call void @llvm.dbg.value(metadata i16 %17, metadata !10499, metadata !DIExpression()), !dbg !10500
  br label %18, !dbg !10520

18:                                               ; preds = %11, %11, %13
  %19 = phi i16 [ %17, %13 ], [ %12, %11 ], [ %12, %11 ], !dbg !10500
  call void @llvm.dbg.value(metadata i16 %19, metadata !10499, metadata !DIExpression()), !dbg !10500
  store volatile i16 %19, i16* %3, align 4, !dbg !10521, !tbaa !10502
  %20 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %1, i32 0, i32 2, !dbg !10522
  %21 = load i32, i32* %20, align 4, !dbg !10522, !tbaa !10523
  %22 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 21, !dbg !10524
  store volatile i32 %21, i32* %22, align 4, !dbg !10525, !tbaa !10526
  %23 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %1, i32 0, i32 0, !dbg !10527
  %24 = load i16, i16* %23, align 4, !dbg !10527, !tbaa !10528
  %25 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 19, !dbg !10529
  store volatile i16 %24, i16* %25, align 4, !dbg !10530, !tbaa !10531
  switch i32 %5, label %31 [
    i32 1073808384, label %26
    i32 1073807360, label %26
  ], !dbg !10532

26:                                               ; preds = %18, %18
  %27 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %1, i32 0, i32 4, !dbg !10534
  %28 = load i8, i8* %27, align 2, !dbg !10534, !tbaa !10536
  %29 = zext i8 %28 to i16, !dbg !10537
  %30 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 22, !dbg !10538
  store volatile i16 %29, i16* %30, align 4, !dbg !10539, !tbaa !10540
  br label %31, !dbg !10541

31:                                               ; preds = %18, %26
  %32 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 10, !dbg !10542
  store volatile i16 1, i16* %32, align 4, !dbg !10543, !tbaa !10544
  ret void, !dbg !10545
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @TIM_TimeBaseStructInit(%struct.TIM_TimeBaseInitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !10546 {
  call void @llvm.dbg.value(metadata %struct.TIM_TimeBaseInitTypeDef* %0, metadata !10550, metadata !DIExpression()), !dbg !10551
  %2 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %0, i32 0, i32 2, !dbg !10552
  store i32 -1, i32* %2, align 4, !dbg !10553, !tbaa !10523
  %3 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %0, i32 0, i32 0, !dbg !10554
  store i16 0, i16* %3, align 4, !dbg !10555, !tbaa !10528
  %4 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %0, i32 0, i32 3, !dbg !10556
  store i16 0, i16* %4, align 4, !dbg !10557, !tbaa !10518
  %5 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %0, i32 0, i32 1, !dbg !10558
  store i16 0, i16* %5, align 2, !dbg !10559, !tbaa !10509
  %6 = getelementptr inbounds %struct.TIM_TimeBaseInitTypeDef, %struct.TIM_TimeBaseInitTypeDef* %0, i32 0, i32 4, !dbg !10560
  store i8 0, i8* %6, align 2, !dbg !10561, !tbaa !10536
  ret void, !dbg !10562
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_PrescalerConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2) local_unnamed_addr #0 !dbg !10563 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10567, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i16 %1, metadata !10568, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i16 %2, metadata !10569, metadata !DIExpression()), !dbg !10570
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 19, !dbg !10571
  store volatile i16 %1, i16* %4, align 4, !dbg !10572, !tbaa !10531
  %5 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 10, !dbg !10573
  store volatile i16 %2, i16* %5, align 4, !dbg !10574, !tbaa !10544
  ret void, !dbg !10575
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_CounterModeConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !10576 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10580, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i16 %1, metadata !10581, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i16 0, metadata !10582, metadata !DIExpression()), !dbg !10583
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 0, !dbg !10584
  %4 = load volatile i16, i16* %3, align 4, !dbg !10584, !tbaa !10502
  call void @llvm.dbg.value(metadata i16 %4, metadata !10582, metadata !DIExpression()), !dbg !10583
  %5 = and i16 %4, -113, !dbg !10585
  call void @llvm.dbg.value(metadata i16 %5, metadata !10582, metadata !DIExpression()), !dbg !10583
  %6 = or i16 %5, %1, !dbg !10586
  call void @llvm.dbg.value(metadata i16 %6, metadata !10582, metadata !DIExpression()), !dbg !10583
  store volatile i16 %6, i16* %3, align 4, !dbg !10587, !tbaa !10502
  ret void, !dbg !10588
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetCounter(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !10589 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10593, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i32 %1, metadata !10594, metadata !DIExpression()), !dbg !10595
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 18, !dbg !10596
  store volatile i32 %1, i32* %3, align 4, !dbg !10597, !tbaa !10598
  ret void, !dbg !10599
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetAutoreload(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !10600 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10602, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i32 %1, metadata !10603, metadata !DIExpression()), !dbg !10604
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 21, !dbg !10605
  store volatile i32 %1, i32* %3, align 4, !dbg !10606, !tbaa !10526
  ret void, !dbg !10607
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @TIM_GetCounter(%struct.TIM_TypeDef* %0) local_unnamed_addr #0 !dbg !10608 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10612, metadata !DIExpression()), !dbg !10613
  %2 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 18, !dbg !10614
  %3 = load volatile i32, i32* %2, align 4, !dbg !10614, !tbaa !10598
  ret i32 %3, !dbg !10615
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @TIM_GetPrescaler(%struct.TIM_TypeDef* %0) local_unnamed_addr #0 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10620, metadata !DIExpression()), !dbg !10621
  %2 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 19, !dbg !10622
  %3 = load volatile i16, i16* %2, align 4, !dbg !10622, !tbaa !10531
  ret i16 %3, !dbg !10623
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_UpdateDisableConfig(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !10624 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10628, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.value(metadata i32 %1, metadata !10629, metadata !DIExpression()), !dbg !10630
  %3 = icmp eq i32 %1, 0, !dbg !10631
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 0, !dbg !10633
  %5 = load volatile i16, i16* %4, align 4, !dbg !10633, !tbaa !10502
  %6 = and i16 %5, -3, !dbg !10634
  %7 = select i1 %3, i16 0, i16 2, !dbg !10634
  %8 = or i16 %6, %7, !dbg !10634
  store volatile i16 %8, i16* %4, align 4, !dbg !10633, !tbaa !10502
  ret void, !dbg !10635
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_UpdateRequestConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !10636 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10638, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata i16 %1, metadata !10639, metadata !DIExpression()), !dbg !10640
  %3 = icmp eq i16 %1, 0, !dbg !10641
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 0, !dbg !10643
  %5 = load volatile i16, i16* %4, align 4, !dbg !10643, !tbaa !10502
  %6 = and i16 %5, -5, !dbg !10644
  %7 = select i1 %3, i16 0, i16 4, !dbg !10644
  %8 = or i16 %6, %7, !dbg !10644
  store volatile i16 %8, i16* %4, align 4, !dbg !10643, !tbaa !10502
  ret void, !dbg !10645
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ARRPreloadConfig(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !10646 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10648, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i32 %1, metadata !10649, metadata !DIExpression()), !dbg !10650
  %3 = icmp eq i32 %1, 0, !dbg !10651
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 0, !dbg !10653
  %5 = load volatile i16, i16* %4, align 4, !dbg !10653, !tbaa !10502
  %6 = and i16 %5, -129, !dbg !10654
  %7 = select i1 %3, i16 0, i16 128, !dbg !10654
  %8 = or i16 %6, %7, !dbg !10654
  store volatile i16 %8, i16* %4, align 4, !dbg !10653, !tbaa !10502
  ret void, !dbg !10655
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SelectOnePulseMode(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !10656 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10658, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.value(metadata i16 %1, metadata !10659, metadata !DIExpression()), !dbg !10660
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 0, !dbg !10661
  %4 = load volatile i16, i16* %3, align 4, !dbg !10662, !tbaa !10502
  %5 = and i16 %4, -9, !dbg !10662
  store volatile i16 %5, i16* %3, align 4, !dbg !10662, !tbaa !10502
  %6 = load volatile i16, i16* %3, align 4, !dbg !10663, !tbaa !10502
  %7 = or i16 %6, %1, !dbg !10663
  store volatile i16 %7, i16* %3, align 4, !dbg !10663, !tbaa !10502
  ret void, !dbg !10664
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetClockDivision(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !10665 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10667, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata i16 %1, metadata !10668, metadata !DIExpression()), !dbg !10669
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 0, !dbg !10670
  %4 = load volatile i16, i16* %3, align 4, !dbg !10671, !tbaa !10502
  %5 = and i16 %4, -769, !dbg !10671
  store volatile i16 %5, i16* %3, align 4, !dbg !10671, !tbaa !10502
  %6 = load volatile i16, i16* %3, align 4, !dbg !10672, !tbaa !10502
  %7 = or i16 %6, %1, !dbg !10672
  store volatile i16 %7, i16* %3, align 4, !dbg !10672, !tbaa !10502
  ret void, !dbg !10673
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_Cmd(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !10674 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10676, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.value(metadata i32 %1, metadata !10677, metadata !DIExpression()), !dbg !10678
  %3 = icmp ne i32 %1, 0, !dbg !10679
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 0, !dbg !10681
  %5 = load volatile i16, i16* %4, align 4, !dbg !10681, !tbaa !10502
  %6 = and i16 %5, -2, !dbg !10682
  %7 = zext i1 %3 to i16, !dbg !10682
  %8 = or i16 %6, %7, !dbg !10682
  store volatile i16 %8, i16* %4, align 4, !dbg !10681, !tbaa !10502
  ret void, !dbg !10683
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC1Init(%struct.TIM_TypeDef* %0, %struct.TIM_OCInitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !10684 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10700, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata %struct.TIM_OCInitTypeDef* %1, metadata !10701, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i16 0, metadata !10702, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i16 0, metadata !10703, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i16 0, metadata !10704, metadata !DIExpression()), !dbg !10705
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !10706
  %4 = load volatile i16, i16* %3, align 4, !dbg !10707, !tbaa !10708
  %5 = and i16 %4, -2, !dbg !10707
  store volatile i16 %5, i16* %3, align 4, !dbg !10707, !tbaa !10708
  %6 = load volatile i16, i16* %3, align 4, !dbg !10709, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %6, metadata !10703, metadata !DIExpression()), !dbg !10705
  %7 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 2, !dbg !10710
  %8 = load volatile i16, i16* %7, align 4, !dbg !10710, !tbaa !10711
  call void @llvm.dbg.value(metadata i16 %8, metadata !10704, metadata !DIExpression()), !dbg !10705
  %9 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !10712
  %10 = load volatile i16, i16* %9, align 4, !dbg !10712, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %10, metadata !10702, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i16 %10, metadata !10702, metadata !DIExpression(DW_OP_constu, 18446744073709551503, DW_OP_and, DW_OP_stack_value)), !dbg !10705
  call void @llvm.dbg.value(metadata i16 %10, metadata !10702, metadata !DIExpression(DW_OP_constu, 18446744073709551500, DW_OP_and, DW_OP_stack_value)), !dbg !10705
  %11 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 0, !dbg !10714
  %12 = load i16, i16* %11, align 4, !dbg !10714, !tbaa !10715
  call void @llvm.dbg.value(metadata i16 undef, metadata !10702, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10705
  %13 = and i16 %6, -3, !dbg !10717
  call void @llvm.dbg.value(metadata i16 %13, metadata !10703, metadata !DIExpression()), !dbg !10705
  %14 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 4, !dbg !10718
  %15 = load i16, i16* %14, align 4, !dbg !10718, !tbaa !10719
  %16 = or i16 %15, %13, !dbg !10720
  call void @llvm.dbg.value(metadata i16 %16, metadata !10703, metadata !DIExpression()), !dbg !10705
  %17 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 1, !dbg !10721
  %18 = load i16, i16* %17, align 2, !dbg !10721, !tbaa !10722
  %19 = or i16 %16, %18, !dbg !10723
  call void @llvm.dbg.value(metadata i16 %19, metadata !10703, metadata !DIExpression()), !dbg !10705
  %20 = ptrtoint %struct.TIM_TypeDef* %0 to i32, !dbg !10724
  switch i32 %20, label %37 [
    i32 1073808384, label %21
    i32 1073807360, label %21
  ], !dbg !10724

21:                                               ; preds = %2, %2
  %22 = and i16 %19, -13, !dbg !10726
  call void @llvm.dbg.value(metadata i16 %19, metadata !10703, metadata !DIExpression(DW_OP_constu, 18446744073709551603, DW_OP_and, DW_OP_stack_value)), !dbg !10705
  %23 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 5, !dbg !10728
  %24 = load i16, i16* %23, align 2, !dbg !10728, !tbaa !10729
  call void @llvm.dbg.value(metadata i16 undef, metadata !10703, metadata !DIExpression()), !dbg !10705
  %25 = and i16 %24, -5, !dbg !10730
  %26 = or i16 %25, %22, !dbg !10730
  call void @llvm.dbg.value(metadata i16 %26, metadata !10703, metadata !DIExpression()), !dbg !10705
  %27 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 2, !dbg !10731
  %28 = load i16, i16* %27, align 4, !dbg !10731, !tbaa !10732
  %29 = or i16 %26, %28, !dbg !10733
  call void @llvm.dbg.value(metadata i16 %29, metadata !10703, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i16 %8, metadata !10704, metadata !DIExpression(DW_OP_constu, 18446744073709551359, DW_OP_and, DW_OP_stack_value)), !dbg !10705
  %30 = and i16 %8, -769, !dbg !10734
  call void @llvm.dbg.value(metadata i16 %30, metadata !10704, metadata !DIExpression()), !dbg !10705
  %31 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 6, !dbg !10735
  %32 = load i16, i16* %31, align 4, !dbg !10735, !tbaa !10736
  %33 = or i16 %32, %30, !dbg !10737
  call void @llvm.dbg.value(metadata i16 %33, metadata !10704, metadata !DIExpression()), !dbg !10705
  %34 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 7, !dbg !10738
  %35 = load i16, i16* %34, align 2, !dbg !10738, !tbaa !10739
  %36 = or i16 %33, %35, !dbg !10740
  call void @llvm.dbg.value(metadata i16 %36, metadata !10704, metadata !DIExpression()), !dbg !10705
  br label %37, !dbg !10741

37:                                               ; preds = %2, %21
  %38 = phi i16 [ %29, %21 ], [ %19, %2 ], !dbg !10705
  %39 = phi i16 [ %36, %21 ], [ %8, %2 ], !dbg !10705
  %40 = and i16 %10, -116, !dbg !10742
  call void @llvm.dbg.value(metadata i16 %40, metadata !10702, metadata !DIExpression()), !dbg !10705
  %41 = or i16 %40, %12, !dbg !10743
  call void @llvm.dbg.value(metadata i16 %41, metadata !10702, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10705
  call void @llvm.dbg.value(metadata i16 %41, metadata !10702, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i16 %39, metadata !10704, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i16 %38, metadata !10703, metadata !DIExpression()), !dbg !10705
  store volatile i16 %39, i16* %7, align 4, !dbg !10744, !tbaa !10711
  store volatile i16 %41, i16* %9, align 4, !dbg !10745, !tbaa !10713
  %42 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 3, !dbg !10746
  %43 = load i32, i32* %42, align 4, !dbg !10746, !tbaa !10747
  %44 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 24, !dbg !10748
  store volatile i32 %43, i32* %44, align 4, !dbg !10749, !tbaa !10750
  store volatile i16 %38, i16* %3, align 4, !dbg !10751, !tbaa !10708
  ret void, !dbg !10752
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC2Init(%struct.TIM_TypeDef* %0, %struct.TIM_OCInitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !10753 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10755, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata %struct.TIM_OCInitTypeDef* %1, metadata !10756, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i16 0, metadata !10757, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i16 0, metadata !10758, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i16 0, metadata !10759, metadata !DIExpression()), !dbg !10760
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !10761
  %4 = load volatile i16, i16* %3, align 4, !dbg !10762, !tbaa !10708
  %5 = and i16 %4, -17, !dbg !10762
  store volatile i16 %5, i16* %3, align 4, !dbg !10762, !tbaa !10708
  %6 = load volatile i16, i16* %3, align 4, !dbg !10763, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %6, metadata !10758, metadata !DIExpression()), !dbg !10760
  %7 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 2, !dbg !10764
  %8 = load volatile i16, i16* %7, align 4, !dbg !10764, !tbaa !10711
  call void @llvm.dbg.value(metadata i16 %8, metadata !10759, metadata !DIExpression()), !dbg !10760
  %9 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !10765
  %10 = load volatile i16, i16* %9, align 4, !dbg !10765, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %10, metadata !10757, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i16 %10, metadata !10757, metadata !DIExpression(DW_OP_constu, 18446744073709522943, DW_OP_and, DW_OP_stack_value)), !dbg !10760
  call void @llvm.dbg.value(metadata i16 %10, metadata !10757, metadata !DIExpression(DW_OP_constu, 18446744073709522175, DW_OP_and, DW_OP_stack_value)), !dbg !10760
  %11 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 0, !dbg !10766
  %12 = load i16, i16* %11, align 4, !dbg !10766, !tbaa !10715
  call void @llvm.dbg.value(metadata i16 undef, metadata !10757, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10760
  %13 = and i16 %6, -33, !dbg !10767
  call void @llvm.dbg.value(metadata i16 %13, metadata !10758, metadata !DIExpression()), !dbg !10760
  %14 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 4, !dbg !10768
  %15 = load i16, i16* %14, align 4, !dbg !10768, !tbaa !10719
  %16 = shl i16 %15, 4, !dbg !10769
  %17 = or i16 %16, %13, !dbg !10770
  call void @llvm.dbg.value(metadata i16 %17, metadata !10758, metadata !DIExpression()), !dbg !10760
  %18 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 1, !dbg !10771
  %19 = load i16, i16* %18, align 2, !dbg !10771, !tbaa !10722
  %20 = shl i16 %19, 4, !dbg !10772
  %21 = or i16 %17, %20, !dbg !10773
  call void @llvm.dbg.value(metadata i16 %21, metadata !10758, metadata !DIExpression()), !dbg !10760
  %22 = ptrtoint %struct.TIM_TypeDef* %0 to i32, !dbg !10774
  switch i32 %22, label %43 [
    i32 1073808384, label %23
    i32 1073807360, label %23
  ], !dbg !10774

23:                                               ; preds = %2, %2
  %24 = and i16 %21, -193, !dbg !10776
  call void @llvm.dbg.value(metadata i16 %21, metadata !10758, metadata !DIExpression(DW_OP_constu, 18446744073709551423, DW_OP_and, DW_OP_stack_value)), !dbg !10760
  %25 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 5, !dbg !10778
  %26 = load i16, i16* %25, align 2, !dbg !10778, !tbaa !10729
  %27 = shl i16 %26, 4, !dbg !10779
  call void @llvm.dbg.value(metadata i16 undef, metadata !10758, metadata !DIExpression()), !dbg !10760
  %28 = and i16 %27, -80, !dbg !10780
  %29 = or i16 %28, %24, !dbg !10780
  call void @llvm.dbg.value(metadata i16 %29, metadata !10758, metadata !DIExpression()), !dbg !10760
  %30 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 2, !dbg !10781
  %31 = load i16, i16* %30, align 4, !dbg !10781, !tbaa !10732
  %32 = shl i16 %31, 4, !dbg !10782
  %33 = or i16 %29, %32, !dbg !10783
  call void @llvm.dbg.value(metadata i16 %33, metadata !10758, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i16 %8, metadata !10759, metadata !DIExpression(DW_OP_constu, 18446744073709550591, DW_OP_and, DW_OP_stack_value)), !dbg !10760
  %34 = and i16 %8, -3073, !dbg !10784
  call void @llvm.dbg.value(metadata i16 %34, metadata !10759, metadata !DIExpression()), !dbg !10760
  %35 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 6, !dbg !10785
  %36 = load i16, i16* %35, align 4, !dbg !10785, !tbaa !10736
  %37 = shl i16 %36, 2, !dbg !10786
  %38 = or i16 %37, %34, !dbg !10787
  call void @llvm.dbg.value(metadata i16 %38, metadata !10759, metadata !DIExpression()), !dbg !10760
  %39 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 7, !dbg !10788
  %40 = load i16, i16* %39, align 2, !dbg !10788, !tbaa !10739
  %41 = shl i16 %40, 2, !dbg !10789
  %42 = or i16 %38, %41, !dbg !10790
  call void @llvm.dbg.value(metadata i16 %42, metadata !10759, metadata !DIExpression()), !dbg !10760
  br label %43, !dbg !10791

43:                                               ; preds = %2, %23
  %44 = phi i16 [ %33, %23 ], [ %21, %2 ], !dbg !10760
  %45 = phi i16 [ %42, %23 ], [ %8, %2 ], !dbg !10760
  %46 = and i16 %10, -29441, !dbg !10792
  call void @llvm.dbg.value(metadata i16 %46, metadata !10757, metadata !DIExpression()), !dbg !10760
  %47 = shl i16 %12, 8, !dbg !10793
  %48 = or i16 %47, %46, !dbg !10794
  call void @llvm.dbg.value(metadata i16 %48, metadata !10757, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10760
  call void @llvm.dbg.value(metadata i16 %48, metadata !10757, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i16 %45, metadata !10759, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i16 %44, metadata !10758, metadata !DIExpression()), !dbg !10760
  store volatile i16 %45, i16* %7, align 4, !dbg !10795, !tbaa !10711
  store volatile i16 %48, i16* %9, align 4, !dbg !10796, !tbaa !10713
  %49 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 3, !dbg !10797
  %50 = load i32, i32* %49, align 4, !dbg !10797, !tbaa !10747
  %51 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 25, !dbg !10798
  store volatile i32 %50, i32* %51, align 4, !dbg !10799, !tbaa !10800
  store volatile i16 %44, i16* %3, align 4, !dbg !10801, !tbaa !10708
  ret void, !dbg !10802
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC3Init(%struct.TIM_TypeDef* %0, %struct.TIM_OCInitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !10803 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10805, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata %struct.TIM_OCInitTypeDef* %1, metadata !10806, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata i16 0, metadata !10807, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata i16 0, metadata !10808, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata i16 0, metadata !10809, metadata !DIExpression()), !dbg !10810
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !10811
  %4 = load volatile i16, i16* %3, align 4, !dbg !10812, !tbaa !10708
  %5 = and i16 %4, -257, !dbg !10812
  store volatile i16 %5, i16* %3, align 4, !dbg !10812, !tbaa !10708
  %6 = load volatile i16, i16* %3, align 4, !dbg !10813, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %6, metadata !10808, metadata !DIExpression()), !dbg !10810
  %7 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 2, !dbg !10814
  %8 = load volatile i16, i16* %7, align 4, !dbg !10814, !tbaa !10711
  call void @llvm.dbg.value(metadata i16 %8, metadata !10809, metadata !DIExpression()), !dbg !10810
  %9 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !10815
  %10 = load volatile i16, i16* %9, align 4, !dbg !10815, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %10, metadata !10807, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata i16 %10, metadata !10807, metadata !DIExpression(DW_OP_constu, 18446744073709551503, DW_OP_and, DW_OP_stack_value)), !dbg !10810
  call void @llvm.dbg.value(metadata i16 %10, metadata !10807, metadata !DIExpression(DW_OP_constu, 18446744073709551500, DW_OP_and, DW_OP_stack_value)), !dbg !10810
  %11 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 0, !dbg !10817
  %12 = load i16, i16* %11, align 4, !dbg !10817, !tbaa !10715
  call void @llvm.dbg.value(metadata i16 undef, metadata !10807, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10810
  %13 = and i16 %6, -513, !dbg !10818
  call void @llvm.dbg.value(metadata i16 %13, metadata !10808, metadata !DIExpression()), !dbg !10810
  %14 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 4, !dbg !10819
  %15 = load i16, i16* %14, align 4, !dbg !10819, !tbaa !10719
  %16 = shl i16 %15, 8, !dbg !10820
  %17 = or i16 %16, %13, !dbg !10821
  call void @llvm.dbg.value(metadata i16 %17, metadata !10808, metadata !DIExpression()), !dbg !10810
  %18 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 1, !dbg !10822
  %19 = load i16, i16* %18, align 2, !dbg !10822, !tbaa !10722
  %20 = shl i16 %19, 8, !dbg !10823
  %21 = or i16 %17, %20, !dbg !10824
  call void @llvm.dbg.value(metadata i16 %21, metadata !10808, metadata !DIExpression()), !dbg !10810
  %22 = ptrtoint %struct.TIM_TypeDef* %0 to i32, !dbg !10825
  switch i32 %22, label %43 [
    i32 1073808384, label %23
    i32 1073807360, label %23
  ], !dbg !10825

23:                                               ; preds = %2, %2
  %24 = and i16 %21, -3073, !dbg !10827
  call void @llvm.dbg.value(metadata i16 %21, metadata !10808, metadata !DIExpression(DW_OP_constu, 18446744073709548543, DW_OP_and, DW_OP_stack_value)), !dbg !10810
  %25 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 5, !dbg !10829
  %26 = load i16, i16* %25, align 2, !dbg !10829, !tbaa !10729
  %27 = shl i16 %26, 8, !dbg !10830
  call void @llvm.dbg.value(metadata i16 undef, metadata !10808, metadata !DIExpression()), !dbg !10810
  %28 = and i16 %27, -1280, !dbg !10831
  %29 = or i16 %28, %24, !dbg !10831
  call void @llvm.dbg.value(metadata i16 %29, metadata !10808, metadata !DIExpression()), !dbg !10810
  %30 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 2, !dbg !10832
  %31 = load i16, i16* %30, align 4, !dbg !10832, !tbaa !10732
  %32 = shl i16 %31, 8, !dbg !10833
  %33 = or i16 %29, %32, !dbg !10834
  call void @llvm.dbg.value(metadata i16 %33, metadata !10808, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata i16 %8, metadata !10809, metadata !DIExpression(DW_OP_constu, 18446744073709547519, DW_OP_and, DW_OP_stack_value)), !dbg !10810
  %34 = and i16 %8, -12289, !dbg !10835
  call void @llvm.dbg.value(metadata i16 %34, metadata !10809, metadata !DIExpression()), !dbg !10810
  %35 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 6, !dbg !10836
  %36 = load i16, i16* %35, align 4, !dbg !10836, !tbaa !10736
  %37 = shl i16 %36, 4, !dbg !10837
  %38 = or i16 %37, %34, !dbg !10838
  call void @llvm.dbg.value(metadata i16 %38, metadata !10809, metadata !DIExpression()), !dbg !10810
  %39 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 7, !dbg !10839
  %40 = load i16, i16* %39, align 2, !dbg !10839, !tbaa !10739
  %41 = shl i16 %40, 4, !dbg !10840
  %42 = or i16 %38, %41, !dbg !10841
  call void @llvm.dbg.value(metadata i16 %42, metadata !10809, metadata !DIExpression()), !dbg !10810
  br label %43, !dbg !10842

43:                                               ; preds = %2, %23
  %44 = phi i16 [ %33, %23 ], [ %21, %2 ], !dbg !10810
  %45 = phi i16 [ %42, %23 ], [ %8, %2 ], !dbg !10810
  %46 = and i16 %10, -116, !dbg !10843
  call void @llvm.dbg.value(metadata i16 %46, metadata !10807, metadata !DIExpression()), !dbg !10810
  %47 = or i16 %46, %12, !dbg !10844
  call void @llvm.dbg.value(metadata i16 %47, metadata !10807, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10810
  call void @llvm.dbg.value(metadata i16 %47, metadata !10807, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata i16 %45, metadata !10809, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata i16 %44, metadata !10808, metadata !DIExpression()), !dbg !10810
  store volatile i16 %45, i16* %7, align 4, !dbg !10845, !tbaa !10711
  store volatile i16 %47, i16* %9, align 4, !dbg !10846, !tbaa !10816
  %48 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 3, !dbg !10847
  %49 = load i32, i32* %48, align 4, !dbg !10847, !tbaa !10747
  %50 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 26, !dbg !10848
  store volatile i32 %49, i32* %50, align 4, !dbg !10849, !tbaa !10850
  store volatile i16 %44, i16* %3, align 4, !dbg !10851, !tbaa !10708
  ret void, !dbg !10852
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC4Init(%struct.TIM_TypeDef* %0, %struct.TIM_OCInitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !10853 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10855, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata %struct.TIM_OCInitTypeDef* %1, metadata !10856, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i16 0, metadata !10857, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i16 0, metadata !10858, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i16 0, metadata !10859, metadata !DIExpression()), !dbg !10860
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !10861
  %4 = load volatile i16, i16* %3, align 4, !dbg !10862, !tbaa !10708
  %5 = and i16 %4, -4097, !dbg !10862
  store volatile i16 %5, i16* %3, align 4, !dbg !10862, !tbaa !10708
  %6 = load volatile i16, i16* %3, align 4, !dbg !10863, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %6, metadata !10858, metadata !DIExpression()), !dbg !10860
  %7 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 2, !dbg !10864
  %8 = load volatile i16, i16* %7, align 4, !dbg !10864, !tbaa !10711
  call void @llvm.dbg.value(metadata i16 %8, metadata !10859, metadata !DIExpression()), !dbg !10860
  %9 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !10865
  %10 = load volatile i16, i16* %9, align 4, !dbg !10865, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %10, metadata !10857, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i16 %10, metadata !10857, metadata !DIExpression(DW_OP_constu, 18446744073709522943, DW_OP_and, DW_OP_stack_value)), !dbg !10860
  call void @llvm.dbg.value(metadata i16 %10, metadata !10857, metadata !DIExpression(DW_OP_constu, 18446744073709522175, DW_OP_and, DW_OP_stack_value)), !dbg !10860
  %11 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 0, !dbg !10866
  %12 = load i16, i16* %11, align 4, !dbg !10866, !tbaa !10715
  call void @llvm.dbg.value(metadata i16 undef, metadata !10857, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10860
  call void @llvm.dbg.value(metadata i16 %6, metadata !10858, metadata !DIExpression(DW_OP_constu, 18446744073709543423, DW_OP_and, DW_OP_stack_value)), !dbg !10860
  %13 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 4, !dbg !10867
  %14 = load i16, i16* %13, align 4, !dbg !10867, !tbaa !10719
  call void @llvm.dbg.value(metadata i16 undef, metadata !10858, metadata !DIExpression()), !dbg !10860
  %15 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 1, !dbg !10868
  %16 = load i16, i16* %15, align 2, !dbg !10868, !tbaa !10722
  call void @llvm.dbg.value(metadata i16 undef, metadata !10858, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10860
  %17 = ptrtoint %struct.TIM_TypeDef* %0 to i32, !dbg !10869
  switch i32 %17, label %24 [
    i32 1073808384, label %18
    i32 1073807360, label %18
  ], !dbg !10869

18:                                               ; preds = %2, %2
  %19 = and i16 %8, -16385, !dbg !10871
  call void @llvm.dbg.value(metadata i16 %19, metadata !10859, metadata !DIExpression()), !dbg !10860
  %20 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 6, !dbg !10873
  %21 = load i16, i16* %20, align 4, !dbg !10873, !tbaa !10736
  %22 = shl i16 %21, 6, !dbg !10874
  %23 = or i16 %22, %19, !dbg !10875
  call void @llvm.dbg.value(metadata i16 %23, metadata !10859, metadata !DIExpression()), !dbg !10860
  br label %24, !dbg !10876

24:                                               ; preds = %2, %18
  %25 = phi i16 [ %23, %18 ], [ %8, %2 ], !dbg !10860
  %26 = and i16 %6, -8193, !dbg !10877
  call void @llvm.dbg.value(metadata i16 %26, metadata !10858, metadata !DIExpression()), !dbg !10860
  %27 = shl i16 %14, 12, !dbg !10878
  %28 = or i16 %27, %26, !dbg !10879
  call void @llvm.dbg.value(metadata i16 %28, metadata !10858, metadata !DIExpression()), !dbg !10860
  %29 = shl i16 %16, 12, !dbg !10880
  %30 = or i16 %28, %29, !dbg !10881
  call void @llvm.dbg.value(metadata i16 %30, metadata !10858, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10860
  call void @llvm.dbg.value(metadata i16 %30, metadata !10858, metadata !DIExpression()), !dbg !10860
  %31 = and i16 %10, -29441, !dbg !10882
  call void @llvm.dbg.value(metadata i16 %31, metadata !10857, metadata !DIExpression()), !dbg !10860
  %32 = shl i16 %12, 8, !dbg !10883
  %33 = or i16 %32, %31, !dbg !10884
  call void @llvm.dbg.value(metadata i16 %33, metadata !10857, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10860
  call void @llvm.dbg.value(metadata i16 %33, metadata !10857, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i16 %25, metadata !10859, metadata !DIExpression()), !dbg !10860
  store volatile i16 %25, i16* %7, align 4, !dbg !10885, !tbaa !10711
  store volatile i16 %33, i16* %9, align 4, !dbg !10886, !tbaa !10816
  %34 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %1, i32 0, i32 3, !dbg !10887
  %35 = load i32, i32* %34, align 4, !dbg !10887, !tbaa !10747
  %36 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 27, !dbg !10888
  store volatile i32 %35, i32* %36, align 4, !dbg !10889, !tbaa !10890
  store volatile i16 %30, i16* %3, align 4, !dbg !10891, !tbaa !10708
  ret void, !dbg !10892
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @TIM_OCStructInit(%struct.TIM_OCInitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !10893 {
  call void @llvm.dbg.value(metadata %struct.TIM_OCInitTypeDef* %0, metadata !10897, metadata !DIExpression()), !dbg !10898
  %2 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %0, i32 0, i32 0, !dbg !10899
  store i16 0, i16* %2, align 4, !dbg !10900, !tbaa !10715
  %3 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %0, i32 0, i32 1, !dbg !10901
  store i16 0, i16* %3, align 2, !dbg !10902, !tbaa !10722
  %4 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %0, i32 0, i32 2, !dbg !10903
  store i16 0, i16* %4, align 4, !dbg !10904, !tbaa !10732
  %5 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %0, i32 0, i32 3, !dbg !10905
  store i32 0, i32* %5, align 4, !dbg !10906, !tbaa !10747
  %6 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %0, i32 0, i32 4, !dbg !10907
  store i16 0, i16* %6, align 4, !dbg !10908, !tbaa !10719
  %7 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %0, i32 0, i32 5, !dbg !10909
  store i16 0, i16* %7, align 2, !dbg !10910, !tbaa !10729
  %8 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %0, i32 0, i32 6, !dbg !10911
  store i16 0, i16* %8, align 4, !dbg !10912, !tbaa !10736
  %9 = getelementptr inbounds %struct.TIM_OCInitTypeDef, %struct.TIM_OCInitTypeDef* %0, i32 0, i32 7, !dbg !10913
  store i16 0, i16* %9, align 2, !dbg !10914, !tbaa !10739
  ret void, !dbg !10915
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SelectOCxM(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2) local_unnamed_addr #0 !dbg !10916 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10918, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i16 %1, metadata !10919, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i16 %2, metadata !10920, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i32 0, metadata !10921, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i16 0, metadata !10922, metadata !DIExpression()), !dbg !10923
  %4 = ptrtoint %struct.TIM_TypeDef* %0 to i32, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %4, metadata !10921, metadata !DIExpression()), !dbg !10923
  %5 = add i32 %4, 24, !dbg !10925
  call void @llvm.dbg.value(metadata i32 %5, metadata !10921, metadata !DIExpression()), !dbg !10923
  %6 = zext i16 %1 to i32, !dbg !10926
  %7 = shl nuw i32 1, %6, !dbg !10927
  call void @llvm.dbg.value(metadata i32 %7, metadata !10922, metadata !DIExpression()), !dbg !10923
  %8 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !10928
  %9 = load volatile i16, i16* %8, align 4, !dbg !10929, !tbaa !10708
  %10 = trunc i32 %7 to i16, !dbg !10929
  %11 = xor i16 %10, -1, !dbg !10929
  %12 = and i16 %9, %11, !dbg !10929
  store volatile i16 %12, i16* %8, align 4, !dbg !10929, !tbaa !10708
  switch i16 %1, label %19 [
    i16 0, label %13
    i16 8, label %13
  ], !dbg !10930

13:                                               ; preds = %3, %3
  %14 = lshr i32 %6, 1, !dbg !10932
  %15 = add i32 %14, %5, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %15, metadata !10921, metadata !DIExpression()), !dbg !10923
  %16 = inttoptr i32 %15 to i32*, !dbg !10935
  %17 = load volatile i32, i32* %16, align 4, !dbg !10936, !tbaa !894
  %18 = and i32 %17, 65423, !dbg !10936
  store volatile i32 %18, i32* %16, align 4, !dbg !10936, !tbaa !894
  br label %28, !dbg !10937

19:                                               ; preds = %3
  %20 = add i16 %1, -4, !dbg !10938
  %21 = lshr i16 %20, 1, !dbg !10940
  %22 = zext i16 %21 to i32, !dbg !10940
  %23 = add i32 %5, %22, !dbg !10941
  call void @llvm.dbg.value(metadata i32 %23, metadata !10921, metadata !DIExpression()), !dbg !10923
  %24 = inttoptr i32 %23 to i32*, !dbg !10942
  %25 = load volatile i32, i32* %24, align 4, !dbg !10943, !tbaa !894
  %26 = and i32 %25, 36863, !dbg !10943
  store volatile i32 %26, i32* %24, align 4, !dbg !10943, !tbaa !894
  %27 = shl i16 %2, 8, !dbg !10944
  br label %28

28:                                               ; preds = %19, %13
  %29 = phi i16 [ %27, %19 ], [ %2, %13 ]
  %30 = phi i32* [ %24, %19 ], [ %16, %13 ]
  %31 = zext i16 %29 to i32, !dbg !10945
  %32 = load volatile i32, i32* %30, align 4, !dbg !10945, !tbaa !894
  %33 = or i32 %32, %31, !dbg !10945
  store volatile i32 %33, i32* %30, align 4, !dbg !10945, !tbaa !894
  ret void, !dbg !10946
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetCompare1(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !10947 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10949, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.value(metadata i32 %1, metadata !10950, metadata !DIExpression()), !dbg !10951
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 24, !dbg !10952
  store volatile i32 %1, i32* %3, align 4, !dbg !10953, !tbaa !10750
  ret void, !dbg !10954
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetCompare2(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !10955 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10957, metadata !DIExpression()), !dbg !10959
  call void @llvm.dbg.value(metadata i32 %1, metadata !10958, metadata !DIExpression()), !dbg !10959
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 25, !dbg !10960
  store volatile i32 %1, i32* %3, align 4, !dbg !10961, !tbaa !10800
  ret void, !dbg !10962
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetCompare3(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !10963 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10965, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata i32 %1, metadata !10966, metadata !DIExpression()), !dbg !10967
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 26, !dbg !10968
  store volatile i32 %1, i32* %3, align 4, !dbg !10969, !tbaa !10850
  ret void, !dbg !10970
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetCompare4(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !10971 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10973, metadata !DIExpression()), !dbg !10975
  call void @llvm.dbg.value(metadata i32 %1, metadata !10974, metadata !DIExpression()), !dbg !10975
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 27, !dbg !10976
  store volatile i32 %1, i32* %3, align 4, !dbg !10977, !tbaa !10890
  ret void, !dbg !10978
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ForcedOC1Config(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !10979 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10981, metadata !DIExpression()), !dbg !10984
  call void @llvm.dbg.value(metadata i16 %1, metadata !10982, metadata !DIExpression()), !dbg !10984
  call void @llvm.dbg.value(metadata i16 0, metadata !10983, metadata !DIExpression()), !dbg !10984
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !10985
  %4 = load volatile i16, i16* %3, align 4, !dbg !10985, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %4, metadata !10983, metadata !DIExpression()), !dbg !10984
  %5 = and i16 %4, -113, !dbg !10986
  call void @llvm.dbg.value(metadata i16 %5, metadata !10983, metadata !DIExpression()), !dbg !10984
  %6 = or i16 %5, %1, !dbg !10987
  call void @llvm.dbg.value(metadata i16 %6, metadata !10983, metadata !DIExpression()), !dbg !10984
  store volatile i16 %6, i16* %3, align 4, !dbg !10988, !tbaa !10713
  ret void, !dbg !10989
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ForcedOC2Config(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !10990 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !10992, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.value(metadata i16 %1, metadata !10993, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.value(metadata i16 0, metadata !10994, metadata !DIExpression()), !dbg !10995
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !10996
  %4 = load volatile i16, i16* %3, align 4, !dbg !10996, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %4, metadata !10994, metadata !DIExpression()), !dbg !10995
  %5 = and i16 %4, -28673, !dbg !10997
  call void @llvm.dbg.value(metadata i16 %5, metadata !10994, metadata !DIExpression()), !dbg !10995
  %6 = shl i16 %1, 8, !dbg !10998
  %7 = or i16 %5, %6, !dbg !10999
  call void @llvm.dbg.value(metadata i16 %7, metadata !10994, metadata !DIExpression()), !dbg !10995
  store volatile i16 %7, i16* %3, align 4, !dbg !11000, !tbaa !10713
  ret void, !dbg !11001
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ForcedOC3Config(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11002 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11004, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i16 %1, metadata !11005, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i16 0, metadata !11006, metadata !DIExpression()), !dbg !11007
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11008
  %4 = load volatile i16, i16* %3, align 4, !dbg !11008, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %4, metadata !11006, metadata !DIExpression()), !dbg !11007
  %5 = and i16 %4, -113, !dbg !11009
  call void @llvm.dbg.value(metadata i16 %5, metadata !11006, metadata !DIExpression()), !dbg !11007
  %6 = or i16 %5, %1, !dbg !11010
  call void @llvm.dbg.value(metadata i16 %6, metadata !11006, metadata !DIExpression()), !dbg !11007
  store volatile i16 %6, i16* %3, align 4, !dbg !11011, !tbaa !10816
  ret void, !dbg !11012
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ForcedOC4Config(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11013 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11015, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i16 %1, metadata !11016, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i16 0, metadata !11017, metadata !DIExpression()), !dbg !11018
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11019
  %4 = load volatile i16, i16* %3, align 4, !dbg !11019, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %4, metadata !11017, metadata !DIExpression()), !dbg !11018
  %5 = and i16 %4, -28673, !dbg !11020
  call void @llvm.dbg.value(metadata i16 %5, metadata !11017, metadata !DIExpression()), !dbg !11018
  %6 = shl i16 %1, 8, !dbg !11021
  %7 = or i16 %5, %6, !dbg !11022
  call void @llvm.dbg.value(metadata i16 %7, metadata !11017, metadata !DIExpression()), !dbg !11018
  store volatile i16 %7, i16* %3, align 4, !dbg !11023, !tbaa !10816
  ret void, !dbg !11024
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC1PreloadConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11025 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11027, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i16 %1, metadata !11028, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i16 0, metadata !11029, metadata !DIExpression()), !dbg !11030
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11031
  %4 = load volatile i16, i16* %3, align 4, !dbg !11031, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %4, metadata !11029, metadata !DIExpression()), !dbg !11030
  %5 = and i16 %4, -9, !dbg !11032
  call void @llvm.dbg.value(metadata i16 %5, metadata !11029, metadata !DIExpression()), !dbg !11030
  %6 = or i16 %5, %1, !dbg !11033
  call void @llvm.dbg.value(metadata i16 %6, metadata !11029, metadata !DIExpression()), !dbg !11030
  store volatile i16 %6, i16* %3, align 4, !dbg !11034, !tbaa !10713
  ret void, !dbg !11035
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC2PreloadConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11036 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11038, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i16 %1, metadata !11039, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i16 0, metadata !11040, metadata !DIExpression()), !dbg !11041
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11042
  %4 = load volatile i16, i16* %3, align 4, !dbg !11042, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %4, metadata !11040, metadata !DIExpression()), !dbg !11041
  %5 = and i16 %4, -2049, !dbg !11043
  call void @llvm.dbg.value(metadata i16 %5, metadata !11040, metadata !DIExpression()), !dbg !11041
  %6 = shl i16 %1, 8, !dbg !11044
  %7 = or i16 %5, %6, !dbg !11045
  call void @llvm.dbg.value(metadata i16 %7, metadata !11040, metadata !DIExpression()), !dbg !11041
  store volatile i16 %7, i16* %3, align 4, !dbg !11046, !tbaa !10713
  ret void, !dbg !11047
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC3PreloadConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11048 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11050, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i16 %1, metadata !11051, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i16 0, metadata !11052, metadata !DIExpression()), !dbg !11053
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11054
  %4 = load volatile i16, i16* %3, align 4, !dbg !11054, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %4, metadata !11052, metadata !DIExpression()), !dbg !11053
  %5 = and i16 %4, -9, !dbg !11055
  call void @llvm.dbg.value(metadata i16 %5, metadata !11052, metadata !DIExpression()), !dbg !11053
  %6 = or i16 %5, %1, !dbg !11056
  call void @llvm.dbg.value(metadata i16 %6, metadata !11052, metadata !DIExpression()), !dbg !11053
  store volatile i16 %6, i16* %3, align 4, !dbg !11057, !tbaa !10816
  ret void, !dbg !11058
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC4PreloadConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11059 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11061, metadata !DIExpression()), !dbg !11064
  call void @llvm.dbg.value(metadata i16 %1, metadata !11062, metadata !DIExpression()), !dbg !11064
  call void @llvm.dbg.value(metadata i16 0, metadata !11063, metadata !DIExpression()), !dbg !11064
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11065
  %4 = load volatile i16, i16* %3, align 4, !dbg !11065, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %4, metadata !11063, metadata !DIExpression()), !dbg !11064
  %5 = and i16 %4, -2049, !dbg !11066
  call void @llvm.dbg.value(metadata i16 %5, metadata !11063, metadata !DIExpression()), !dbg !11064
  %6 = shl i16 %1, 8, !dbg !11067
  %7 = or i16 %5, %6, !dbg !11068
  call void @llvm.dbg.value(metadata i16 %7, metadata !11063, metadata !DIExpression()), !dbg !11064
  store volatile i16 %7, i16* %3, align 4, !dbg !11069, !tbaa !10816
  ret void, !dbg !11070
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC1FastConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11071 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11073, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i16 %1, metadata !11074, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i16 0, metadata !11075, metadata !DIExpression()), !dbg !11076
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11077
  %4 = load volatile i16, i16* %3, align 4, !dbg !11077, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %4, metadata !11075, metadata !DIExpression()), !dbg !11076
  %5 = and i16 %4, -5, !dbg !11078
  call void @llvm.dbg.value(metadata i16 %5, metadata !11075, metadata !DIExpression()), !dbg !11076
  %6 = or i16 %5, %1, !dbg !11079
  call void @llvm.dbg.value(metadata i16 %6, metadata !11075, metadata !DIExpression()), !dbg !11076
  store volatile i16 %6, i16* %3, align 4, !dbg !11080, !tbaa !10713
  ret void, !dbg !11081
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC2FastConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11082 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11084, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i16 %1, metadata !11085, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i16 0, metadata !11086, metadata !DIExpression()), !dbg !11087
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11088
  %4 = load volatile i16, i16* %3, align 4, !dbg !11088, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %4, metadata !11086, metadata !DIExpression()), !dbg !11087
  %5 = and i16 %4, -1025, !dbg !11089
  call void @llvm.dbg.value(metadata i16 %5, metadata !11086, metadata !DIExpression()), !dbg !11087
  %6 = shl i16 %1, 8, !dbg !11090
  %7 = or i16 %5, %6, !dbg !11091
  call void @llvm.dbg.value(metadata i16 %7, metadata !11086, metadata !DIExpression()), !dbg !11087
  store volatile i16 %7, i16* %3, align 4, !dbg !11092, !tbaa !10713
  ret void, !dbg !11093
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC3FastConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11094 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11096, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i16 %1, metadata !11097, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i16 0, metadata !11098, metadata !DIExpression()), !dbg !11099
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11100
  %4 = load volatile i16, i16* %3, align 4, !dbg !11100, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %4, metadata !11098, metadata !DIExpression()), !dbg !11099
  %5 = and i16 %4, -5, !dbg !11101
  call void @llvm.dbg.value(metadata i16 %5, metadata !11098, metadata !DIExpression()), !dbg !11099
  %6 = or i16 %5, %1, !dbg !11102
  call void @llvm.dbg.value(metadata i16 %6, metadata !11098, metadata !DIExpression()), !dbg !11099
  store volatile i16 %6, i16* %3, align 4, !dbg !11103, !tbaa !10816
  ret void, !dbg !11104
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC4FastConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11105 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11107, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.value(metadata i16 %1, metadata !11108, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.value(metadata i16 0, metadata !11109, metadata !DIExpression()), !dbg !11110
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11111
  %4 = load volatile i16, i16* %3, align 4, !dbg !11111, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %4, metadata !11109, metadata !DIExpression()), !dbg !11110
  %5 = and i16 %4, -1025, !dbg !11112
  call void @llvm.dbg.value(metadata i16 %5, metadata !11109, metadata !DIExpression()), !dbg !11110
  %6 = shl i16 %1, 8, !dbg !11113
  %7 = or i16 %5, %6, !dbg !11114
  call void @llvm.dbg.value(metadata i16 %7, metadata !11109, metadata !DIExpression()), !dbg !11110
  store volatile i16 %7, i16* %3, align 4, !dbg !11115, !tbaa !10816
  ret void, !dbg !11116
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ClearOC1Ref(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11117 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11119, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.value(metadata i16 %1, metadata !11120, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.value(metadata i16 0, metadata !11121, metadata !DIExpression()), !dbg !11122
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11123
  %4 = load volatile i16, i16* %3, align 4, !dbg !11123, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %4, metadata !11121, metadata !DIExpression()), !dbg !11122
  %5 = and i16 %4, -129, !dbg !11124
  call void @llvm.dbg.value(metadata i16 %5, metadata !11121, metadata !DIExpression()), !dbg !11122
  %6 = or i16 %5, %1, !dbg !11125
  call void @llvm.dbg.value(metadata i16 %6, metadata !11121, metadata !DIExpression()), !dbg !11122
  store volatile i16 %6, i16* %3, align 4, !dbg !11126, !tbaa !10713
  ret void, !dbg !11127
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ClearOC2Ref(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11128 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11130, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i16 %1, metadata !11131, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i16 0, metadata !11132, metadata !DIExpression()), !dbg !11133
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11134
  %4 = load volatile i16, i16* %3, align 4, !dbg !11134, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %4, metadata !11132, metadata !DIExpression()), !dbg !11133
  %5 = and i16 %4, 32767, !dbg !11135
  call void @llvm.dbg.value(metadata i16 %5, metadata !11132, metadata !DIExpression()), !dbg !11133
  %6 = shl i16 %1, 8, !dbg !11136
  %7 = or i16 %5, %6, !dbg !11137
  call void @llvm.dbg.value(metadata i16 %7, metadata !11132, metadata !DIExpression()), !dbg !11133
  store volatile i16 %7, i16* %3, align 4, !dbg !11138, !tbaa !10713
  ret void, !dbg !11139
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ClearOC3Ref(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11140 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11142, metadata !DIExpression()), !dbg !11145
  call void @llvm.dbg.value(metadata i16 %1, metadata !11143, metadata !DIExpression()), !dbg !11145
  call void @llvm.dbg.value(metadata i16 0, metadata !11144, metadata !DIExpression()), !dbg !11145
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11146
  %4 = load volatile i16, i16* %3, align 4, !dbg !11146, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %4, metadata !11144, metadata !DIExpression()), !dbg !11145
  %5 = and i16 %4, -129, !dbg !11147
  call void @llvm.dbg.value(metadata i16 %5, metadata !11144, metadata !DIExpression()), !dbg !11145
  %6 = or i16 %5, %1, !dbg !11148
  call void @llvm.dbg.value(metadata i16 %6, metadata !11144, metadata !DIExpression()), !dbg !11145
  store volatile i16 %6, i16* %3, align 4, !dbg !11149, !tbaa !10816
  ret void, !dbg !11150
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ClearOC4Ref(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11151 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11153, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i16 %1, metadata !11154, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i16 0, metadata !11155, metadata !DIExpression()), !dbg !11156
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11157
  %4 = load volatile i16, i16* %3, align 4, !dbg !11157, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %4, metadata !11155, metadata !DIExpression()), !dbg !11156
  %5 = and i16 %4, 32767, !dbg !11158
  call void @llvm.dbg.value(metadata i16 %5, metadata !11155, metadata !DIExpression()), !dbg !11156
  %6 = shl i16 %1, 8, !dbg !11159
  %7 = or i16 %5, %6, !dbg !11160
  call void @llvm.dbg.value(metadata i16 %7, metadata !11155, metadata !DIExpression()), !dbg !11156
  store volatile i16 %7, i16* %3, align 4, !dbg !11161, !tbaa !10816
  ret void, !dbg !11162
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC1PolarityConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11163 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11165, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i16 %1, metadata !11166, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i16 0, metadata !11167, metadata !DIExpression()), !dbg !11168
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11169
  %4 = load volatile i16, i16* %3, align 4, !dbg !11169, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %4, metadata !11167, metadata !DIExpression()), !dbg !11168
  %5 = and i16 %4, -3, !dbg !11170
  call void @llvm.dbg.value(metadata i16 %5, metadata !11167, metadata !DIExpression()), !dbg !11168
  %6 = or i16 %5, %1, !dbg !11171
  call void @llvm.dbg.value(metadata i16 %6, metadata !11167, metadata !DIExpression()), !dbg !11168
  store volatile i16 %6, i16* %3, align 4, !dbg !11172, !tbaa !10708
  ret void, !dbg !11173
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC1NPolarityConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11174 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11176, metadata !DIExpression()), !dbg !11179
  call void @llvm.dbg.value(metadata i16 %1, metadata !11177, metadata !DIExpression()), !dbg !11179
  call void @llvm.dbg.value(metadata i16 0, metadata !11178, metadata !DIExpression()), !dbg !11179
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11180
  %4 = load volatile i16, i16* %3, align 4, !dbg !11180, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %4, metadata !11178, metadata !DIExpression()), !dbg !11179
  %5 = and i16 %4, -9, !dbg !11181
  call void @llvm.dbg.value(metadata i16 %5, metadata !11178, metadata !DIExpression()), !dbg !11179
  %6 = or i16 %5, %1, !dbg !11182
  call void @llvm.dbg.value(metadata i16 %6, metadata !11178, metadata !DIExpression()), !dbg !11179
  store volatile i16 %6, i16* %3, align 4, !dbg !11183, !tbaa !10708
  ret void, !dbg !11184
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC2PolarityConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11185 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11187, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.value(metadata i16 %1, metadata !11188, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.value(metadata i16 0, metadata !11189, metadata !DIExpression()), !dbg !11190
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11191
  %4 = load volatile i16, i16* %3, align 4, !dbg !11191, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %4, metadata !11189, metadata !DIExpression()), !dbg !11190
  %5 = and i16 %4, -33, !dbg !11192
  call void @llvm.dbg.value(metadata i16 %5, metadata !11189, metadata !DIExpression()), !dbg !11190
  %6 = shl i16 %1, 4, !dbg !11193
  %7 = or i16 %5, %6, !dbg !11194
  call void @llvm.dbg.value(metadata i16 %7, metadata !11189, metadata !DIExpression()), !dbg !11190
  store volatile i16 %7, i16* %3, align 4, !dbg !11195, !tbaa !10708
  ret void, !dbg !11196
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC2NPolarityConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11197 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11199, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i16 %1, metadata !11200, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.value(metadata i16 0, metadata !11201, metadata !DIExpression()), !dbg !11202
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11203
  %4 = load volatile i16, i16* %3, align 4, !dbg !11203, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %4, metadata !11201, metadata !DIExpression()), !dbg !11202
  %5 = and i16 %4, -129, !dbg !11204
  call void @llvm.dbg.value(metadata i16 %5, metadata !11201, metadata !DIExpression()), !dbg !11202
  %6 = shl i16 %1, 4, !dbg !11205
  %7 = or i16 %5, %6, !dbg !11206
  call void @llvm.dbg.value(metadata i16 %7, metadata !11201, metadata !DIExpression()), !dbg !11202
  store volatile i16 %7, i16* %3, align 4, !dbg !11207, !tbaa !10708
  ret void, !dbg !11208
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC3PolarityConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11209 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11211, metadata !DIExpression()), !dbg !11214
  call void @llvm.dbg.value(metadata i16 %1, metadata !11212, metadata !DIExpression()), !dbg !11214
  call void @llvm.dbg.value(metadata i16 0, metadata !11213, metadata !DIExpression()), !dbg !11214
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11215
  %4 = load volatile i16, i16* %3, align 4, !dbg !11215, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %4, metadata !11213, metadata !DIExpression()), !dbg !11214
  %5 = and i16 %4, -513, !dbg !11216
  call void @llvm.dbg.value(metadata i16 %5, metadata !11213, metadata !DIExpression()), !dbg !11214
  %6 = shl i16 %1, 8, !dbg !11217
  %7 = or i16 %5, %6, !dbg !11218
  call void @llvm.dbg.value(metadata i16 %7, metadata !11213, metadata !DIExpression()), !dbg !11214
  store volatile i16 %7, i16* %3, align 4, !dbg !11219, !tbaa !10708
  ret void, !dbg !11220
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC3NPolarityConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11221 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11223, metadata !DIExpression()), !dbg !11226
  call void @llvm.dbg.value(metadata i16 %1, metadata !11224, metadata !DIExpression()), !dbg !11226
  call void @llvm.dbg.value(metadata i16 0, metadata !11225, metadata !DIExpression()), !dbg !11226
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11227
  %4 = load volatile i16, i16* %3, align 4, !dbg !11227, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %4, metadata !11225, metadata !DIExpression()), !dbg !11226
  %5 = and i16 %4, -2049, !dbg !11228
  call void @llvm.dbg.value(metadata i16 %5, metadata !11225, metadata !DIExpression()), !dbg !11226
  %6 = shl i16 %1, 8, !dbg !11229
  %7 = or i16 %5, %6, !dbg !11230
  call void @llvm.dbg.value(metadata i16 %7, metadata !11225, metadata !DIExpression()), !dbg !11226
  store volatile i16 %7, i16* %3, align 4, !dbg !11231, !tbaa !10708
  ret void, !dbg !11232
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_OC4PolarityConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11233 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11235, metadata !DIExpression()), !dbg !11238
  call void @llvm.dbg.value(metadata i16 %1, metadata !11236, metadata !DIExpression()), !dbg !11238
  call void @llvm.dbg.value(metadata i16 0, metadata !11237, metadata !DIExpression()), !dbg !11238
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11239
  %4 = load volatile i16, i16* %3, align 4, !dbg !11239, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %4, metadata !11237, metadata !DIExpression()), !dbg !11238
  %5 = and i16 %4, -8193, !dbg !11240
  call void @llvm.dbg.value(metadata i16 %5, metadata !11237, metadata !DIExpression()), !dbg !11238
  %6 = shl i16 %1, 12, !dbg !11241
  %7 = or i16 %5, %6, !dbg !11242
  call void @llvm.dbg.value(metadata i16 %7, metadata !11237, metadata !DIExpression()), !dbg !11238
  store volatile i16 %7, i16* %3, align 4, !dbg !11243, !tbaa !10708
  ret void, !dbg !11244
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_CCxCmd(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2) local_unnamed_addr #0 !dbg !11245 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11247, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.value(metadata i16 %1, metadata !11248, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.value(metadata i16 %2, metadata !11249, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.value(metadata i16 0, metadata !11250, metadata !DIExpression()), !dbg !11251
  %4 = zext i16 %1 to i32, !dbg !11252
  %5 = shl nuw i32 1, %4, !dbg !11253
  call void @llvm.dbg.value(metadata i32 %5, metadata !11250, metadata !DIExpression()), !dbg !11251
  %6 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11254
  %7 = load volatile i16, i16* %6, align 4, !dbg !11255, !tbaa !10708
  %8 = trunc i32 %5 to i16, !dbg !11255
  %9 = xor i16 %8, -1, !dbg !11255
  %10 = and i16 %7, %9, !dbg !11255
  store volatile i16 %10, i16* %6, align 4, !dbg !11255, !tbaa !10708
  %11 = zext i16 %2 to i32, !dbg !11256
  %12 = shl i32 %11, %4, !dbg !11257
  %13 = load volatile i16, i16* %6, align 4, !dbg !11258, !tbaa !10708
  %14 = trunc i32 %12 to i16, !dbg !11258
  %15 = or i16 %13, %14, !dbg !11258
  store volatile i16 %15, i16* %6, align 4, !dbg !11258, !tbaa !10708
  ret void, !dbg !11259
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_CCxNCmd(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2) local_unnamed_addr #0 !dbg !11260 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11262, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.value(metadata i16 %1, metadata !11263, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.value(metadata i16 %2, metadata !11264, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.value(metadata i16 0, metadata !11265, metadata !DIExpression()), !dbg !11266
  %4 = zext i16 %1 to i32, !dbg !11267
  %5 = shl i32 4, %4, !dbg !11268
  call void @llvm.dbg.value(metadata i32 %5, metadata !11265, metadata !DIExpression()), !dbg !11266
  %6 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11269
  %7 = load volatile i16, i16* %6, align 4, !dbg !11270, !tbaa !10708
  %8 = trunc i32 %5 to i16, !dbg !11270
  %9 = xor i16 %8, -1, !dbg !11270
  %10 = and i16 %7, %9, !dbg !11270
  store volatile i16 %10, i16* %6, align 4, !dbg !11270, !tbaa !10708
  %11 = zext i16 %2 to i32, !dbg !11271
  %12 = shl i32 %11, %4, !dbg !11272
  %13 = load volatile i16, i16* %6, align 4, !dbg !11273, !tbaa !10708
  %14 = trunc i32 %12 to i16, !dbg !11273
  %15 = or i16 %13, %14, !dbg !11273
  store volatile i16 %15, i16* %6, align 4, !dbg !11273, !tbaa !10708
  ret void, !dbg !11274
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ICInit(%struct.TIM_TypeDef* %0, %struct.TIM_ICInitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !11275 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11288, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata %struct.TIM_ICInitTypeDef* %1, metadata !11289, metadata !DIExpression()), !dbg !11290
  %3 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 0, !dbg !11291
  %4 = load i16, i16* %3, align 2, !dbg !11291, !tbaa !11293
  switch i16 %4, label %56 [
    i16 0, label %5
    i16 4, label %29
  ], !dbg !11295

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 1, !dbg !11296
  %7 = load i16, i16* %6, align 2, !dbg !11296, !tbaa !11298
  %8 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 2, !dbg !11299
  %9 = load i16, i16* %8, align 2, !dbg !11299, !tbaa !11300
  %10 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 4, !dbg !11301
  %11 = load i16, i16* %10, align 2, !dbg !11301, !tbaa !11302
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11303, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata i16 %7, metadata !11308, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata i16 %9, metadata !11309, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata i16 %11, metadata !11310, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata i16 0, metadata !11311, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata i16 0, metadata !11312, metadata !DIExpression()), !dbg !11313
  %12 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11315
  %13 = load volatile i16, i16* %12, align 4, !dbg !11316, !tbaa !10708
  %14 = and i16 %13, -2, !dbg !11316
  store volatile i16 %14, i16* %12, align 4, !dbg !11316, !tbaa !10708
  %15 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11317
  %16 = load volatile i16, i16* %15, align 4, !dbg !11317, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %16, metadata !11311, metadata !DIExpression()), !dbg !11313
  %17 = load volatile i16, i16* %12, align 4, !dbg !11318, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %17, metadata !11312, metadata !DIExpression()), !dbg !11313
  %18 = and i16 %16, -244, !dbg !11319
  call void @llvm.dbg.value(metadata i16 %18, metadata !11311, metadata !DIExpression()), !dbg !11313
  %19 = shl i16 %11, 4, !dbg !11320
  %20 = or i16 %19, %9, !dbg !11321
  %21 = or i16 %20, %18, !dbg !11322
  call void @llvm.dbg.value(metadata i16 %21, metadata !11311, metadata !DIExpression()), !dbg !11313
  %22 = and i16 %17, -12, !dbg !11323
  call void @llvm.dbg.value(metadata i16 %17, metadata !11312, metadata !DIExpression(DW_OP_constu, 18446744073709551604, DW_OP_and, DW_OP_stack_value)), !dbg !11313
  %23 = or i16 %7, %22, !dbg !11324
  %24 = or i16 %23, 1, !dbg !11324
  call void @llvm.dbg.value(metadata i16 %24, metadata !11312, metadata !DIExpression()), !dbg !11313
  store volatile i16 %21, i16* %15, align 4, !dbg !11325, !tbaa !10713
  store volatile i16 %24, i16* %12, align 4, !dbg !11326, !tbaa !10708
  %25 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 3, !dbg !11327
  %26 = load i16, i16* %25, align 2, !dbg !11327, !tbaa !11328
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11329, metadata !DIExpression()), !dbg !11333
  call void @llvm.dbg.value(metadata i16 %26, metadata !11332, metadata !DIExpression()), !dbg !11333
  %27 = load volatile i16, i16* %15, align 4, !dbg !11335, !tbaa !10713
  %28 = and i16 %27, -13, !dbg !11335
  store volatile i16 %28, i16* %15, align 4, !dbg !11335, !tbaa !10713
  br label %102, !dbg !11336

29:                                               ; preds = %2
  %30 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 1, !dbg !11337
  %31 = load i16, i16* %30, align 2, !dbg !11337, !tbaa !11298
  %32 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 2, !dbg !11340
  %33 = load i16, i16* %32, align 2, !dbg !11340, !tbaa !11300
  %34 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 4, !dbg !11341
  %35 = load i16, i16* %34, align 2, !dbg !11341, !tbaa !11302
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11342, metadata !DIExpression()), !dbg !11351
  call void @llvm.dbg.value(metadata i16 %31, metadata !11345, metadata !DIExpression()), !dbg !11351
  call void @llvm.dbg.value(metadata i16 %33, metadata !11346, metadata !DIExpression()), !dbg !11351
  call void @llvm.dbg.value(metadata i16 %35, metadata !11347, metadata !DIExpression()), !dbg !11351
  call void @llvm.dbg.value(metadata i16 0, metadata !11348, metadata !DIExpression()), !dbg !11351
  call void @llvm.dbg.value(metadata i16 0, metadata !11349, metadata !DIExpression()), !dbg !11351
  call void @llvm.dbg.value(metadata i16 0, metadata !11350, metadata !DIExpression()), !dbg !11351
  %36 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11353
  %37 = load volatile i16, i16* %36, align 4, !dbg !11354, !tbaa !10708
  %38 = and i16 %37, -17, !dbg !11354
  store volatile i16 %38, i16* %36, align 4, !dbg !11354, !tbaa !10708
  %39 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11355
  %40 = load volatile i16, i16* %39, align 4, !dbg !11355, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %40, metadata !11348, metadata !DIExpression()), !dbg !11351
  %41 = load volatile i16, i16* %36, align 4, !dbg !11356, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %41, metadata !11349, metadata !DIExpression()), !dbg !11351
  %42 = shl i16 %31, 4, !dbg !11357
  call void @llvm.dbg.value(metadata i16 %42, metadata !11350, metadata !DIExpression()), !dbg !11351
  %43 = and i16 %40, 3327, !dbg !11358
  call void @llvm.dbg.value(metadata i16 %43, metadata !11348, metadata !DIExpression()), !dbg !11351
  %44 = shl i16 %35, 12, !dbg !11359
  call void @llvm.dbg.value(metadata i16 undef, metadata !11348, metadata !DIExpression()), !dbg !11351
  %45 = shl i16 %33, 8, !dbg !11360
  %46 = or i16 %44, %45, !dbg !11361
  %47 = or i16 %46, %43, !dbg !11362
  call void @llvm.dbg.value(metadata i16 %47, metadata !11348, metadata !DIExpression()), !dbg !11351
  %48 = and i16 %41, -177, !dbg !11363
  call void @llvm.dbg.value(metadata i16 %41, metadata !11349, metadata !DIExpression(DW_OP_constu, 18446744073709551439, DW_OP_and, DW_OP_stack_value)), !dbg !11351
  %49 = or i16 %42, %48, !dbg !11364
  %50 = or i16 %49, 16, !dbg !11364
  call void @llvm.dbg.value(metadata i16 %50, metadata !11349, metadata !DIExpression()), !dbg !11351
  store volatile i16 %47, i16* %39, align 4, !dbg !11365, !tbaa !10713
  store volatile i16 %50, i16* %36, align 4, !dbg !11366, !tbaa !10708
  %51 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 3, !dbg !11367
  %52 = load i16, i16* %51, align 2, !dbg !11367, !tbaa !11328
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11368, metadata !DIExpression()), !dbg !11372
  call void @llvm.dbg.value(metadata i16 %52, metadata !11371, metadata !DIExpression()), !dbg !11372
  %53 = load volatile i16, i16* %39, align 4, !dbg !11374, !tbaa !10713
  %54 = and i16 %53, -3073, !dbg !11374
  store volatile i16 %54, i16* %39, align 4, !dbg !11374, !tbaa !10713
  %55 = shl i16 %52, 8, !dbg !11375
  br label %102, !dbg !11376

56:                                               ; preds = %2
  %57 = icmp eq i16 %4, 8, !dbg !11377
  %58 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 1, !dbg !11379
  %59 = load i16, i16* %58, align 2, !dbg !11379, !tbaa !11298
  %60 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 2, !dbg !11379
  %61 = load i16, i16* %60, align 2, !dbg !11379, !tbaa !11300
  %62 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 4, !dbg !11379
  %63 = load i16, i16* %62, align 2, !dbg !11379, !tbaa !11302
  %64 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11379
  %65 = load volatile i16, i16* %64, align 4, !dbg !11379, !tbaa !10708
  br i1 %57, label %66, label %83, !dbg !11380

66:                                               ; preds = %56
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11381, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i16 %59, metadata !11384, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i16 %61, metadata !11385, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i16 %63, metadata !11386, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i16 0, metadata !11387, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i16 0, metadata !11388, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i16 0, metadata !11389, metadata !DIExpression()), !dbg !11390
  %67 = and i16 %65, -257, !dbg !11393
  store volatile i16 %67, i16* %64, align 4, !dbg !11393, !tbaa !10708
  %68 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11394
  %69 = load volatile i16, i16* %68, align 4, !dbg !11394, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %69, metadata !11387, metadata !DIExpression()), !dbg !11390
  %70 = load volatile i16, i16* %64, align 4, !dbg !11395, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %70, metadata !11388, metadata !DIExpression()), !dbg !11390
  %71 = shl i16 %59, 8, !dbg !11396
  call void @llvm.dbg.value(metadata i16 %71, metadata !11389, metadata !DIExpression()), !dbg !11390
  %72 = and i16 %69, -244, !dbg !11397
  call void @llvm.dbg.value(metadata i16 %72, metadata !11387, metadata !DIExpression()), !dbg !11390
  %73 = shl i16 %63, 4, !dbg !11398
  %74 = or i16 %73, %61, !dbg !11399
  %75 = or i16 %74, %72, !dbg !11400
  call void @llvm.dbg.value(metadata i16 %75, metadata !11387, metadata !DIExpression()), !dbg !11390
  %76 = and i16 %70, -2817, !dbg !11401
  call void @llvm.dbg.value(metadata i16 %70, metadata !11388, metadata !DIExpression(DW_OP_constu, 18446744073709548799, DW_OP_and, DW_OP_stack_value)), !dbg !11390
  %77 = or i16 %71, %76, !dbg !11402
  %78 = or i16 %77, 256, !dbg !11402
  call void @llvm.dbg.value(metadata i16 %78, metadata !11388, metadata !DIExpression()), !dbg !11390
  store volatile i16 %75, i16* %68, align 4, !dbg !11403, !tbaa !10816
  store volatile i16 %78, i16* %64, align 4, !dbg !11404, !tbaa !10708
  %79 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 3, !dbg !11405
  %80 = load i16, i16* %79, align 2, !dbg !11405, !tbaa !11328
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11406, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.value(metadata i16 %80, metadata !11409, metadata !DIExpression()), !dbg !11410
  %81 = load volatile i16, i16* %68, align 4, !dbg !11412, !tbaa !10816
  %82 = and i16 %81, -13, !dbg !11412
  store volatile i16 %82, i16* %68, align 4, !dbg !11412, !tbaa !10816
  br label %102, !dbg !11413

83:                                               ; preds = %56
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11414, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i16 %59, metadata !11417, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i16 %61, metadata !11418, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i16 %63, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i16 0, metadata !11420, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i16 0, metadata !11421, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i16 0, metadata !11422, metadata !DIExpression()), !dbg !11423
  %84 = and i16 %65, -4097, !dbg !11426
  store volatile i16 %84, i16* %64, align 4, !dbg !11426, !tbaa !10708
  %85 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11427
  %86 = load volatile i16, i16* %85, align 4, !dbg !11427, !tbaa !10816
  call void @llvm.dbg.value(metadata i16 %86, metadata !11420, metadata !DIExpression()), !dbg !11423
  %87 = load volatile i16, i16* %64, align 4, !dbg !11428, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %87, metadata !11421, metadata !DIExpression()), !dbg !11423
  %88 = shl i16 %59, 12, !dbg !11429
  call void @llvm.dbg.value(metadata i16 %88, metadata !11422, metadata !DIExpression()), !dbg !11423
  %89 = and i16 %86, 3327, !dbg !11430
  call void @llvm.dbg.value(metadata i16 %89, metadata !11420, metadata !DIExpression()), !dbg !11423
  %90 = shl i16 %61, 8, !dbg !11431
  call void @llvm.dbg.value(metadata i16 undef, metadata !11420, metadata !DIExpression()), !dbg !11423
  %91 = shl i16 %63, 12, !dbg !11432
  %92 = or i16 %91, %90, !dbg !11433
  %93 = or i16 %92, %89, !dbg !11434
  call void @llvm.dbg.value(metadata i16 %93, metadata !11420, metadata !DIExpression()), !dbg !11423
  %94 = and i16 %87, 20479, !dbg !11435
  call void @llvm.dbg.value(metadata i16 %87, metadata !11421, metadata !DIExpression(DW_OP_constu, 20479, DW_OP_and, DW_OP_stack_value)), !dbg !11423
  %95 = or i16 %88, %94, !dbg !11436
  %96 = or i16 %95, 4096, !dbg !11436
  call void @llvm.dbg.value(metadata i16 %96, metadata !11421, metadata !DIExpression()), !dbg !11423
  store volatile i16 %93, i16* %85, align 4, !dbg !11437, !tbaa !10816
  store volatile i16 %96, i16* %64, align 4, !dbg !11438, !tbaa !10708
  %97 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 3, !dbg !11439
  %98 = load i16, i16* %97, align 2, !dbg !11439, !tbaa !11328
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11440, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.value(metadata i16 %98, metadata !11443, metadata !DIExpression()), !dbg !11444
  %99 = load volatile i16, i16* %85, align 4, !dbg !11446, !tbaa !10816
  %100 = and i16 %99, -3073, !dbg !11446
  store volatile i16 %100, i16* %85, align 4, !dbg !11446, !tbaa !10816
  %101 = shl i16 %98, 8, !dbg !11447
  br label %102

102:                                              ; preds = %29, %83, %66, %5
  %103 = phi i16* [ %39, %29 ], [ %85, %83 ], [ %68, %66 ], [ %15, %5 ]
  %104 = phi i16 [ %55, %29 ], [ %101, %83 ], [ %80, %66 ], [ %26, %5 ]
  %105 = load volatile i16, i16* %103, align 4, !dbg !11448, !tbaa !3025
  %106 = or i16 %105, %104, !dbg !11448
  store volatile i16 %106, i16* %103, align 4, !dbg !11448, !tbaa !3025
  ret void, !dbg !11449
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetIC1Prescaler(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11330 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11329, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata i16 %1, metadata !11332, metadata !DIExpression()), !dbg !11450
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11451
  %4 = load volatile i16, i16* %3, align 4, !dbg !11452, !tbaa !10713
  %5 = and i16 %4, -13, !dbg !11452
  store volatile i16 %5, i16* %3, align 4, !dbg !11452, !tbaa !10713
  %6 = load volatile i16, i16* %3, align 4, !dbg !11453, !tbaa !10713
  %7 = or i16 %6, %1, !dbg !11453
  store volatile i16 %7, i16* %3, align 4, !dbg !11453, !tbaa !10713
  ret void, !dbg !11454
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetIC2Prescaler(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11369 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11368, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.value(metadata i16 %1, metadata !11371, metadata !DIExpression()), !dbg !11455
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11456
  %4 = load volatile i16, i16* %3, align 4, !dbg !11457, !tbaa !10713
  %5 = and i16 %4, -3073, !dbg !11457
  store volatile i16 %5, i16* %3, align 4, !dbg !11457, !tbaa !10713
  %6 = shl i16 %1, 8, !dbg !11458
  %7 = load volatile i16, i16* %3, align 4, !dbg !11459, !tbaa !10713
  %8 = or i16 %7, %6, !dbg !11459
  store volatile i16 %8, i16* %3, align 4, !dbg !11459, !tbaa !10713
  ret void, !dbg !11460
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetIC3Prescaler(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11407 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11406, metadata !DIExpression()), !dbg !11461
  call void @llvm.dbg.value(metadata i16 %1, metadata !11409, metadata !DIExpression()), !dbg !11461
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11462
  %4 = load volatile i16, i16* %3, align 4, !dbg !11463, !tbaa !10816
  %5 = and i16 %4, -13, !dbg !11463
  store volatile i16 %5, i16* %3, align 4, !dbg !11463, !tbaa !10816
  %6 = load volatile i16, i16* %3, align 4, !dbg !11464, !tbaa !10816
  %7 = or i16 %6, %1, !dbg !11464
  store volatile i16 %7, i16* %3, align 4, !dbg !11464, !tbaa !10816
  ret void, !dbg !11465
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SetIC4Prescaler(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11441 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11440, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i16 %1, metadata !11443, metadata !DIExpression()), !dbg !11466
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 14, !dbg !11467
  %4 = load volatile i16, i16* %3, align 4, !dbg !11468, !tbaa !10816
  %5 = and i16 %4, -3073, !dbg !11468
  store volatile i16 %5, i16* %3, align 4, !dbg !11468, !tbaa !10816
  %6 = shl i16 %1, 8, !dbg !11469
  %7 = load volatile i16, i16* %3, align 4, !dbg !11470, !tbaa !10816
  %8 = or i16 %7, %6, !dbg !11470
  store volatile i16 %8, i16* %3, align 4, !dbg !11470, !tbaa !10816
  ret void, !dbg !11471
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @TIM_ICStructInit(%struct.TIM_ICInitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !11472 {
  call void @llvm.dbg.value(metadata %struct.TIM_ICInitTypeDef* %0, metadata !11476, metadata !DIExpression()), !dbg !11477
  %2 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %0, i32 0, i32 0, !dbg !11478
  store i16 0, i16* %2, align 2, !dbg !11479, !tbaa !11293
  %3 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %0, i32 0, i32 1, !dbg !11480
  store i16 0, i16* %3, align 2, !dbg !11481, !tbaa !11298
  %4 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %0, i32 0, i32 2, !dbg !11482
  store i16 1, i16* %4, align 2, !dbg !11483, !tbaa !11300
  %5 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %0, i32 0, i32 3, !dbg !11484
  store i16 0, i16* %5, align 2, !dbg !11485, !tbaa !11328
  %6 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %0, i32 0, i32 4, !dbg !11486
  store i16 0, i16* %6, align 2, !dbg !11487, !tbaa !11302
  ret void, !dbg !11488
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_PWMIConfig(%struct.TIM_TypeDef* %0, %struct.TIM_ICInitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !11489 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11491, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata %struct.TIM_ICInitTypeDef* %1, metadata !11492, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i16 0, metadata !11493, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata i16 1, metadata !11494, metadata !DIExpression()), !dbg !11495
  %3 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 1, !dbg !11496
  %4 = load i16, i16* %3, align 2, !dbg !11496, !tbaa !11298
  %5 = icmp eq i16 %4, 0, !dbg !11498
  %6 = select i1 %5, i16 2, i16 0
  call void @llvm.dbg.value(metadata i16 %6, metadata !11493, metadata !DIExpression()), !dbg !11495
  %7 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 2, !dbg !11499
  %8 = load i16, i16* %7, align 2, !dbg !11499, !tbaa !11300
  %9 = icmp eq i16 %8, 1, !dbg !11501
  %10 = select i1 %9, i16 2, i16 1, !dbg !11502
  call void @llvm.dbg.value(metadata i16 %10, metadata !11494, metadata !DIExpression()), !dbg !11495
  %11 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 0, !dbg !11503
  %12 = load i16, i16* %11, align 2, !dbg !11503, !tbaa !11293
  %13 = icmp eq i16 %12, 0, !dbg !11505
  %14 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 4, !dbg !11506
  %15 = load i16, i16* %14, align 2, !dbg !11506, !tbaa !11302
  %16 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11506
  %17 = load volatile i16, i16* %16, align 4, !dbg !11506, !tbaa !10708
  br i1 %13, label %18, label %52, !dbg !11507

18:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11303, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i16 %4, metadata !11308, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i16 %8, metadata !11309, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i16 %15, metadata !11310, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i16 0, metadata !11311, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i16 0, metadata !11312, metadata !DIExpression()), !dbg !11508
  %19 = and i16 %17, -2, !dbg !11511
  store volatile i16 %19, i16* %16, align 4, !dbg !11511, !tbaa !10708
  %20 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11512
  %21 = load volatile i16, i16* %20, align 4, !dbg !11512, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %21, metadata !11311, metadata !DIExpression()), !dbg !11508
  %22 = load volatile i16, i16* %16, align 4, !dbg !11513, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %22, metadata !11312, metadata !DIExpression()), !dbg !11508
  %23 = and i16 %21, -244, !dbg !11514
  call void @llvm.dbg.value(metadata i16 %23, metadata !11311, metadata !DIExpression()), !dbg !11508
  %24 = shl i16 %15, 4, !dbg !11515
  %25 = or i16 %24, %8, !dbg !11516
  %26 = or i16 %25, %23, !dbg !11517
  call void @llvm.dbg.value(metadata i16 %26, metadata !11311, metadata !DIExpression()), !dbg !11508
  %27 = and i16 %22, -12, !dbg !11518
  call void @llvm.dbg.value(metadata i16 %22, metadata !11312, metadata !DIExpression(DW_OP_constu, 18446744073709551604, DW_OP_and, DW_OP_stack_value)), !dbg !11508
  %28 = or i16 %4, %27, !dbg !11519
  %29 = or i16 %28, 1, !dbg !11519
  call void @llvm.dbg.value(metadata i16 %29, metadata !11312, metadata !DIExpression()), !dbg !11508
  store volatile i16 %26, i16* %20, align 4, !dbg !11520, !tbaa !10713
  store volatile i16 %29, i16* %16, align 4, !dbg !11521, !tbaa !10708
  %30 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 3, !dbg !11522
  %31 = load i16, i16* %30, align 2, !dbg !11522, !tbaa !11328
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11329, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i16 %31, metadata !11332, metadata !DIExpression()), !dbg !11523
  %32 = load volatile i16, i16* %20, align 4, !dbg !11525, !tbaa !10713
  %33 = and i16 %32, -13, !dbg !11525
  store volatile i16 %33, i16* %20, align 4, !dbg !11525, !tbaa !10713
  %34 = load volatile i16, i16* %20, align 4, !dbg !11526, !tbaa !10713
  %35 = or i16 %34, %31, !dbg !11526
  store volatile i16 %35, i16* %20, align 4, !dbg !11526, !tbaa !10713
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11342, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i16 %6, metadata !11345, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i16 %10, metadata !11346, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i16 %15, metadata !11347, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i16 0, metadata !11348, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i16 0, metadata !11349, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i16 0, metadata !11350, metadata !DIExpression()), !dbg !11527
  %36 = load volatile i16, i16* %16, align 4, !dbg !11529, !tbaa !10708
  %37 = and i16 %36, -17, !dbg !11529
  store volatile i16 %37, i16* %16, align 4, !dbg !11529, !tbaa !10708
  %38 = load volatile i16, i16* %20, align 4, !dbg !11530, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %38, metadata !11348, metadata !DIExpression()), !dbg !11527
  %39 = load volatile i16, i16* %16, align 4, !dbg !11531, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %39, metadata !11349, metadata !DIExpression()), !dbg !11527
  %40 = shl nuw nsw i16 %6, 4, !dbg !11532
  call void @llvm.dbg.value(metadata i16 %40, metadata !11350, metadata !DIExpression()), !dbg !11527
  %41 = and i16 %38, 3327, !dbg !11533
  call void @llvm.dbg.value(metadata i16 %41, metadata !11348, metadata !DIExpression()), !dbg !11527
  %42 = shl i16 %15, 12, !dbg !11534
  call void @llvm.dbg.value(metadata i16 undef, metadata !11348, metadata !DIExpression()), !dbg !11527
  %43 = shl nuw nsw i16 %10, 8, !dbg !11535
  %44 = or i16 %42, %43, !dbg !11536
  %45 = or i16 %44, %41, !dbg !11537
  call void @llvm.dbg.value(metadata i16 %45, metadata !11348, metadata !DIExpression()), !dbg !11527
  %46 = and i16 %39, -177, !dbg !11538
  call void @llvm.dbg.value(metadata i16 %39, metadata !11349, metadata !DIExpression(DW_OP_constu, 18446744073709551439, DW_OP_and, DW_OP_stack_value)), !dbg !11527
  %47 = or i16 %40, %46, !dbg !11539
  %48 = or i16 %47, 16, !dbg !11539
  call void @llvm.dbg.value(metadata i16 %48, metadata !11349, metadata !DIExpression()), !dbg !11527
  store volatile i16 %45, i16* %20, align 4, !dbg !11540, !tbaa !10713
  store volatile i16 %48, i16* %16, align 4, !dbg !11541, !tbaa !10708
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11368, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.value(metadata i16 %31, metadata !11371, metadata !DIExpression()), !dbg !11542
  %49 = load volatile i16, i16* %20, align 4, !dbg !11544, !tbaa !10713
  %50 = and i16 %49, -3073, !dbg !11544
  store volatile i16 %50, i16* %20, align 4, !dbg !11544, !tbaa !10713
  %51 = shl i16 %31, 8, !dbg !11545
  br label %86, !dbg !11546

52:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11342, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i16 %4, metadata !11345, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i16 %8, metadata !11346, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i16 %15, metadata !11347, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i16 0, metadata !11348, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i16 0, metadata !11349, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i16 0, metadata !11350, metadata !DIExpression()), !dbg !11547
  %53 = and i16 %17, -17, !dbg !11550
  store volatile i16 %53, i16* %16, align 4, !dbg !11550, !tbaa !10708
  %54 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11551
  %55 = load volatile i16, i16* %54, align 4, !dbg !11551, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %55, metadata !11348, metadata !DIExpression()), !dbg !11547
  %56 = load volatile i16, i16* %16, align 4, !dbg !11552, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %56, metadata !11349, metadata !DIExpression()), !dbg !11547
  %57 = shl i16 %4, 4, !dbg !11553
  call void @llvm.dbg.value(metadata i16 %57, metadata !11350, metadata !DIExpression()), !dbg !11547
  %58 = and i16 %55, 3327, !dbg !11554
  call void @llvm.dbg.value(metadata i16 %58, metadata !11348, metadata !DIExpression()), !dbg !11547
  %59 = shl i16 %15, 12, !dbg !11555
  call void @llvm.dbg.value(metadata i16 undef, metadata !11348, metadata !DIExpression()), !dbg !11547
  %60 = shl i16 %8, 8, !dbg !11556
  %61 = or i16 %59, %60, !dbg !11557
  %62 = or i16 %61, %58, !dbg !11558
  call void @llvm.dbg.value(metadata i16 %62, metadata !11348, metadata !DIExpression()), !dbg !11547
  %63 = and i16 %56, -177, !dbg !11559
  call void @llvm.dbg.value(metadata i16 %56, metadata !11349, metadata !DIExpression(DW_OP_constu, 18446744073709551439, DW_OP_and, DW_OP_stack_value)), !dbg !11547
  %64 = or i16 %57, %63, !dbg !11560
  %65 = or i16 %64, 16, !dbg !11560
  call void @llvm.dbg.value(metadata i16 %65, metadata !11349, metadata !DIExpression()), !dbg !11547
  store volatile i16 %62, i16* %54, align 4, !dbg !11561, !tbaa !10713
  store volatile i16 %65, i16* %16, align 4, !dbg !11562, !tbaa !10708
  %66 = getelementptr inbounds %struct.TIM_ICInitTypeDef, %struct.TIM_ICInitTypeDef* %1, i32 0, i32 3, !dbg !11563
  %67 = load i16, i16* %66, align 2, !dbg !11563, !tbaa !11328
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11368, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i16 %67, metadata !11371, metadata !DIExpression()), !dbg !11564
  %68 = load volatile i16, i16* %54, align 4, !dbg !11566, !tbaa !10713
  %69 = and i16 %68, -3073, !dbg !11566
  store volatile i16 %69, i16* %54, align 4, !dbg !11566, !tbaa !10713
  %70 = shl i16 %67, 8, !dbg !11567
  %71 = load volatile i16, i16* %54, align 4, !dbg !11568, !tbaa !10713
  %72 = or i16 %71, %70, !dbg !11568
  store volatile i16 %72, i16* %54, align 4, !dbg !11568, !tbaa !10713
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11303, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i16 %6, metadata !11308, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i16 %10, metadata !11309, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i16 %15, metadata !11310, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i16 0, metadata !11311, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i16 0, metadata !11312, metadata !DIExpression()), !dbg !11569
  %73 = load volatile i16, i16* %16, align 4, !dbg !11571, !tbaa !10708
  %74 = and i16 %73, -2, !dbg !11571
  store volatile i16 %74, i16* %16, align 4, !dbg !11571, !tbaa !10708
  %75 = load volatile i16, i16* %54, align 4, !dbg !11572, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %75, metadata !11311, metadata !DIExpression()), !dbg !11569
  %76 = load volatile i16, i16* %16, align 4, !dbg !11573, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %76, metadata !11312, metadata !DIExpression()), !dbg !11569
  %77 = and i16 %75, -244, !dbg !11574
  call void @llvm.dbg.value(metadata i16 %77, metadata !11311, metadata !DIExpression()), !dbg !11569
  %78 = shl i16 %15, 4, !dbg !11575
  %79 = or i16 %78, %10, !dbg !11576
  %80 = or i16 %79, %77, !dbg !11577
  call void @llvm.dbg.value(metadata i16 %80, metadata !11311, metadata !DIExpression()), !dbg !11569
  %81 = and i16 %76, -12, !dbg !11578
  call void @llvm.dbg.value(metadata i16 %76, metadata !11312, metadata !DIExpression(DW_OP_constu, 18446744073709551604, DW_OP_and, DW_OP_stack_value)), !dbg !11569
  %82 = or i16 %6, %81, !dbg !11579
  %83 = or i16 %82, 1, !dbg !11579
  call void @llvm.dbg.value(metadata i16 %83, metadata !11312, metadata !DIExpression()), !dbg !11569
  store volatile i16 %80, i16* %54, align 4, !dbg !11580, !tbaa !10713
  store volatile i16 %83, i16* %16, align 4, !dbg !11581, !tbaa !10708
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11329, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i16 %67, metadata !11332, metadata !DIExpression()), !dbg !11582
  %84 = load volatile i16, i16* %54, align 4, !dbg !11584, !tbaa !10713
  %85 = and i16 %84, -13, !dbg !11584
  store volatile i16 %85, i16* %54, align 4, !dbg !11584, !tbaa !10713
  br label %86

86:                                               ; preds = %52, %18
  %87 = phi i16* [ %54, %52 ], [ %20, %18 ]
  %88 = phi i16 [ %67, %52 ], [ %51, %18 ]
  %89 = load volatile i16, i16* %87, align 4, !dbg !11506, !tbaa !10713
  %90 = or i16 %89, %88, !dbg !11506
  store volatile i16 %90, i16* %87, align 4, !dbg !11506, !tbaa !10713
  ret void, !dbg !11585
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @TIM_GetCapture1(%struct.TIM_TypeDef* %0) local_unnamed_addr #0 !dbg !11586 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11588, metadata !DIExpression()), !dbg !11589
  %2 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 24, !dbg !11590
  %3 = load volatile i32, i32* %2, align 4, !dbg !11590, !tbaa !10750
  ret i32 %3, !dbg !11591
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @TIM_GetCapture2(%struct.TIM_TypeDef* %0) local_unnamed_addr #0 !dbg !11592 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11594, metadata !DIExpression()), !dbg !11595
  %2 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 25, !dbg !11596
  %3 = load volatile i32, i32* %2, align 4, !dbg !11596, !tbaa !10800
  ret i32 %3, !dbg !11597
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @TIM_GetCapture3(%struct.TIM_TypeDef* %0) local_unnamed_addr #0 !dbg !11598 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11600, metadata !DIExpression()), !dbg !11601
  %2 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 26, !dbg !11602
  %3 = load volatile i32, i32* %2, align 4, !dbg !11602, !tbaa !10850
  ret i32 %3, !dbg !11603
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @TIM_GetCapture4(%struct.TIM_TypeDef* %0) local_unnamed_addr #0 !dbg !11604 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11606, metadata !DIExpression()), !dbg !11607
  %2 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 27, !dbg !11608
  %3 = load volatile i32, i32* %2, align 4, !dbg !11608, !tbaa !10890
  ret i32 %3, !dbg !11609
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_BDTRConfig(%struct.TIM_TypeDef* %0, %struct.TIM_BDTRInitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !11610 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11625, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.value(metadata %struct.TIM_BDTRInitTypeDef* %1, metadata !11626, metadata !DIExpression()), !dbg !11627
  %3 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %1, i32 0, i32 0, !dbg !11628
  %4 = load i16, i16* %3, align 2, !dbg !11628, !tbaa !11629
  %5 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %1, i32 0, i32 1, !dbg !11631
  %6 = load i16, i16* %5, align 2, !dbg !11631, !tbaa !11632
  %7 = or i16 %6, %4, !dbg !11633
  %8 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %1, i32 0, i32 2, !dbg !11634
  %9 = load i16, i16* %8, align 2, !dbg !11634, !tbaa !11635
  %10 = or i16 %7, %9, !dbg !11636
  %11 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %1, i32 0, i32 3, !dbg !11637
  %12 = load i16, i16* %11, align 2, !dbg !11637, !tbaa !11638
  %13 = or i16 %10, %12, !dbg !11639
  %14 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %1, i32 0, i32 4, !dbg !11640
  %15 = load i16, i16* %14, align 2, !dbg !11640, !tbaa !11641
  %16 = or i16 %13, %15, !dbg !11642
  %17 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %1, i32 0, i32 5, !dbg !11643
  %18 = load i16, i16* %17, align 2, !dbg !11643, !tbaa !11644
  %19 = or i16 %16, %18, !dbg !11645
  %20 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %1, i32 0, i32 6, !dbg !11646
  %21 = load i16, i16* %20, align 2, !dbg !11646, !tbaa !11647
  %22 = or i16 %19, %21, !dbg !11648
  %23 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 28, !dbg !11649
  store volatile i16 %22, i16* %23, align 4, !dbg !11650, !tbaa !11651
  ret void, !dbg !11652
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @TIM_BDTRStructInit(%struct.TIM_BDTRInitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !11653 {
  call void @llvm.dbg.value(metadata %struct.TIM_BDTRInitTypeDef* %0, metadata !11657, metadata !DIExpression()), !dbg !11658
  %2 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 0, !dbg !11659
  store i16 0, i16* %2, align 2, !dbg !11660, !tbaa !11629
  %3 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 1, !dbg !11661
  store i16 0, i16* %3, align 2, !dbg !11662, !tbaa !11632
  %4 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 2, !dbg !11663
  store i16 0, i16* %4, align 2, !dbg !11664, !tbaa !11635
  %5 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 3, !dbg !11665
  store i16 0, i16* %5, align 2, !dbg !11666, !tbaa !11638
  %6 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 4, !dbg !11667
  store i16 0, i16* %6, align 2, !dbg !11668, !tbaa !11641
  %7 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 5, !dbg !11669
  store i16 0, i16* %7, align 2, !dbg !11670, !tbaa !11644
  %8 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 6, !dbg !11671
  store i16 0, i16* %8, align 2, !dbg !11672, !tbaa !11647
  ret void, !dbg !11673
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_CtrlPWMOutputs(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !11674 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11676, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata i32 %1, metadata !11677, metadata !DIExpression()), !dbg !11678
  %3 = icmp eq i32 %1, 0, !dbg !11679
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 28, !dbg !11681
  %5 = load volatile i16, i16* %4, align 4, !dbg !11681, !tbaa !11651
  %6 = and i16 %5, 32767, !dbg !11682
  %7 = select i1 %3, i16 0, i16 -32768, !dbg !11682
  %8 = or i16 %6, %7, !dbg !11682
  store volatile i16 %8, i16* %4, align 4, !dbg !11681, !tbaa !11651
  ret void, !dbg !11683
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SelectCOM(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !11684 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11686, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i32 %1, metadata !11687, metadata !DIExpression()), !dbg !11688
  %3 = icmp eq i32 %1, 0, !dbg !11689
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 2, !dbg !11691
  %5 = load volatile i16, i16* %4, align 4, !dbg !11691, !tbaa !10711
  %6 = and i16 %5, -5, !dbg !11692
  %7 = select i1 %3, i16 0, i16 4, !dbg !11692
  %8 = or i16 %6, %7, !dbg !11692
  store volatile i16 %8, i16* %4, align 4, !dbg !11691, !tbaa !10711
  ret void, !dbg !11693
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_CCPreloadControl(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !11694 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11696, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i32 %1, metadata !11697, metadata !DIExpression()), !dbg !11698
  %3 = icmp ne i32 %1, 0, !dbg !11699
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 2, !dbg !11701
  %5 = load volatile i16, i16* %4, align 4, !dbg !11701, !tbaa !10711
  %6 = and i16 %5, -2, !dbg !11702
  %7 = zext i1 %3 to i16, !dbg !11702
  %8 = or i16 %6, %7, !dbg !11702
  store volatile i16 %8, i16* %4, align 4, !dbg !11701, !tbaa !10711
  ret void, !dbg !11703
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ITConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1, i32 %2) local_unnamed_addr #0 !dbg !11704 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11708, metadata !DIExpression()), !dbg !11711
  call void @llvm.dbg.value(metadata i16 %1, metadata !11709, metadata !DIExpression()), !dbg !11711
  call void @llvm.dbg.value(metadata i32 %2, metadata !11710, metadata !DIExpression()), !dbg !11711
  %4 = icmp eq i32 %2, 0, !dbg !11712
  br i1 %4, label %9, label %5, !dbg !11714

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 6, !dbg !11715
  %7 = load volatile i16, i16* %6, align 4, !dbg !11717, !tbaa !11718
  %8 = or i16 %7, %1, !dbg !11717
  store volatile i16 %8, i16* %6, align 4, !dbg !11717, !tbaa !11718
  br label %14, !dbg !11719

9:                                                ; preds = %3
  %10 = xor i16 %1, -1, !dbg !11720
  %11 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 6, !dbg !11722
  %12 = load volatile i16, i16* %11, align 4, !dbg !11723, !tbaa !11718
  %13 = and i16 %12, %10, !dbg !11723
  store volatile i16 %13, i16* %11, align 4, !dbg !11723, !tbaa !11718
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !11724
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_GenerateEvent(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11725 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11727, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.value(metadata i16 %1, metadata !11728, metadata !DIExpression()), !dbg !11729
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 10, !dbg !11730
  store volatile i16 %1, i16* %3, align 4, !dbg !11731, !tbaa !10544
  ret void, !dbg !11732
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @TIM_GetFlagStatus(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11733 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11737, metadata !DIExpression()), !dbg !11740
  call void @llvm.dbg.value(metadata i16 %1, metadata !11738, metadata !DIExpression()), !dbg !11740
  call void @llvm.dbg.value(metadata i32 0, metadata !11739, metadata !DIExpression()), !dbg !11740
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 8, !dbg !11741
  %4 = load volatile i16, i16* %3, align 4, !dbg !11741, !tbaa !11743
  %5 = and i16 %4, %1, !dbg !11744
  %6 = icmp ne i16 %5, 0, !dbg !11745
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !11739, metadata !DIExpression()), !dbg !11740
  ret i32 %7, !dbg !11746
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ClearFlag(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11747 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11749, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.value(metadata i16 %1, metadata !11750, metadata !DIExpression()), !dbg !11751
  %3 = xor i16 %1, -1, !dbg !11752
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 8, !dbg !11753
  store volatile i16 %3, i16* %4, align 4, !dbg !11754, !tbaa !11743
  ret void, !dbg !11755
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @TIM_GetITStatus(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11756 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11760, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i16 %1, metadata !11761, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i32 0, metadata !11762, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i16 0, metadata !11763, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i16 0, metadata !11764, metadata !DIExpression()), !dbg !11765
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 8, !dbg !11766
  %4 = load volatile i16, i16* %3, align 4, !dbg !11766, !tbaa !11743
  %5 = and i16 %4, %1, !dbg !11767
  call void @llvm.dbg.value(metadata i16 %5, metadata !11763, metadata !DIExpression()), !dbg !11765
  %6 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 6, !dbg !11768
  %7 = load volatile i16, i16* %6, align 4, !dbg !11768, !tbaa !11718
  call void @llvm.dbg.value(metadata i16 undef, metadata !11764, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11765
  %8 = icmp ne i16 %5, 0, !dbg !11769
  %9 = and i16 %7, %1
  %10 = icmp ne i16 %9, 0
  call void @llvm.dbg.value(metadata i16 %9, metadata !11764, metadata !DIExpression()), !dbg !11765
  %11 = and i1 %8, %10, !dbg !11771
  %12 = zext i1 %11 to i32, !dbg !11771
  call void @llvm.dbg.value(metadata i32 %12, metadata !11762, metadata !DIExpression()), !dbg !11765
  ret i32 %12, !dbg !11772
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ClearITPendingBit(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11773 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11775, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i16 %1, metadata !11776, metadata !DIExpression()), !dbg !11777
  %3 = xor i16 %1, -1, !dbg !11778
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 8, !dbg !11779
  store volatile i16 %3, i16* %4, align 4, !dbg !11780, !tbaa !11743
  ret void, !dbg !11781
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_DMAConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2) local_unnamed_addr #0 !dbg !11782 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11784, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i16 %1, metadata !11785, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i16 %2, metadata !11786, metadata !DIExpression()), !dbg !11787
  %4 = or i16 %2, %1, !dbg !11788
  %5 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 30, !dbg !11789
  store volatile i16 %4, i16* %5, align 4, !dbg !11790, !tbaa !11791
  ret void, !dbg !11792
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_DMACmd(%struct.TIM_TypeDef* %0, i16 zeroext %1, i32 %2) local_unnamed_addr #0 !dbg !11793 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11795, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i16 %1, metadata !11796, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %2, metadata !11797, metadata !DIExpression()), !dbg !11798
  %4 = icmp eq i32 %2, 0, !dbg !11799
  br i1 %4, label %9, label %5, !dbg !11801

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 6, !dbg !11802
  %7 = load volatile i16, i16* %6, align 4, !dbg !11804, !tbaa !11718
  %8 = or i16 %7, %1, !dbg !11804
  store volatile i16 %8, i16* %6, align 4, !dbg !11804, !tbaa !11718
  br label %14, !dbg !11805

9:                                                ; preds = %3
  %10 = xor i16 %1, -1, !dbg !11806
  %11 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 6, !dbg !11808
  %12 = load volatile i16, i16* %11, align 4, !dbg !11809, !tbaa !11718
  %13 = and i16 %12, %10, !dbg !11809
  store volatile i16 %13, i16* %11, align 4, !dbg !11809, !tbaa !11718
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !11810
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SelectCCDMA(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !11811 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11813, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i32 %1, metadata !11814, metadata !DIExpression()), !dbg !11815
  %3 = icmp eq i32 %1, 0, !dbg !11816
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 2, !dbg !11818
  %5 = load volatile i16, i16* %4, align 4, !dbg !11818, !tbaa !10711
  %6 = and i16 %5, -9, !dbg !11819
  %7 = select i1 %3, i16 0, i16 8, !dbg !11819
  %8 = or i16 %6, %7, !dbg !11819
  store volatile i16 %8, i16* %4, align 4, !dbg !11818, !tbaa !10711
  ret void, !dbg !11820
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_InternalClockConfig(%struct.TIM_TypeDef* %0) local_unnamed_addr #0 !dbg !11821 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11823, metadata !DIExpression()), !dbg !11824
  %2 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11825
  %3 = load volatile i16, i16* %2, align 4, !dbg !11826, !tbaa !11827
  %4 = and i16 %3, -8, !dbg !11826
  store volatile i16 %4, i16* %2, align 4, !dbg !11826, !tbaa !11827
  ret void, !dbg !11828
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ITRxExternalClockConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11829 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11831, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata i16 %1, metadata !11832, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11834, metadata !DIExpression()), !dbg !11839
  call void @llvm.dbg.value(metadata i16 %1, metadata !11837, metadata !DIExpression()), !dbg !11839
  call void @llvm.dbg.value(metadata i16 0, metadata !11838, metadata !DIExpression()), !dbg !11839
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11841
  %4 = load volatile i16, i16* %3, align 4, !dbg !11841, !tbaa !11827
  call void @llvm.dbg.value(metadata i16 %4, metadata !11838, metadata !DIExpression()), !dbg !11839
  %5 = and i16 %4, -113, !dbg !11842
  call void @llvm.dbg.value(metadata i16 %5, metadata !11838, metadata !DIExpression()), !dbg !11839
  %6 = or i16 %5, %1, !dbg !11843
  call void @llvm.dbg.value(metadata i16 %6, metadata !11838, metadata !DIExpression()), !dbg !11839
  store volatile i16 %6, i16* %3, align 4, !dbg !11844, !tbaa !11827
  %7 = load volatile i16, i16* %3, align 4, !dbg !11845, !tbaa !11827
  %8 = or i16 %7, 7, !dbg !11845
  store volatile i16 %8, i16* %3, align 4, !dbg !11845, !tbaa !11827
  ret void, !dbg !11846
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SelectInputTrigger(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11835 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11834, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.value(metadata i16 %1, metadata !11837, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.value(metadata i16 0, metadata !11838, metadata !DIExpression()), !dbg !11847
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11848
  %4 = load volatile i16, i16* %3, align 4, !dbg !11848, !tbaa !11827
  call void @llvm.dbg.value(metadata i16 %4, metadata !11838, metadata !DIExpression()), !dbg !11847
  %5 = and i16 %4, -113, !dbg !11849
  call void @llvm.dbg.value(metadata i16 %5, metadata !11838, metadata !DIExpression()), !dbg !11847
  %6 = or i16 %5, %1, !dbg !11850
  call void @llvm.dbg.value(metadata i16 %6, metadata !11838, metadata !DIExpression()), !dbg !11847
  store volatile i16 %6, i16* %3, align 4, !dbg !11851, !tbaa !11827
  ret void, !dbg !11852
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_TIxExternalClockConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2, i16 zeroext %3) local_unnamed_addr #0 !dbg !11853 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11855, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i16 %1, metadata !11856, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i16 %2, metadata !11857, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i16 %3, metadata !11858, metadata !DIExpression()), !dbg !11859
  %5 = icmp eq i16 %1, 96, !dbg !11860
  %6 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11862
  %7 = load volatile i16, i16* %6, align 4, !dbg !11862, !tbaa !10708
  br i1 %5, label %8, label %19, !dbg !11863

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11342, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i16 %2, metadata !11345, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i16 1, metadata !11346, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i16 %3, metadata !11347, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i16 0, metadata !11348, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i16 0, metadata !11349, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i16 0, metadata !11350, metadata !DIExpression()), !dbg !11864
  %9 = and i16 %7, -17, !dbg !11867
  store volatile i16 %9, i16* %6, align 4, !dbg !11867, !tbaa !10708
  %10 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11868
  %11 = load volatile i16, i16* %10, align 4, !dbg !11868, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %11, metadata !11348, metadata !DIExpression()), !dbg !11864
  %12 = load volatile i16, i16* %6, align 4, !dbg !11869, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %12, metadata !11349, metadata !DIExpression()), !dbg !11864
  %13 = shl i16 %2, 4, !dbg !11870
  call void @llvm.dbg.value(metadata i16 %13, metadata !11350, metadata !DIExpression()), !dbg !11864
  %14 = and i16 %11, 3327, !dbg !11871
  call void @llvm.dbg.value(metadata i16 %14, metadata !11348, metadata !DIExpression()), !dbg !11864
  %15 = shl i16 %3, 12, !dbg !11872
  call void @llvm.dbg.value(metadata i16 undef, metadata !11348, metadata !DIExpression()), !dbg !11864
  %16 = or i16 %15, %14, !dbg !11873
  %17 = or i16 %16, 256, !dbg !11873
  call void @llvm.dbg.value(metadata i16 %17, metadata !11348, metadata !DIExpression()), !dbg !11864
  %18 = and i16 %12, -177, !dbg !11874
  call void @llvm.dbg.value(metadata i16 %12, metadata !11349, metadata !DIExpression(DW_OP_constu, 18446744073709551439, DW_OP_and, DW_OP_stack_value)), !dbg !11864
  call void @llvm.dbg.value(metadata i16 undef, metadata !11349, metadata !DIExpression()), !dbg !11864
  br label %29, !dbg !11875

19:                                               ; preds = %4
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11303, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i16 %2, metadata !11308, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i16 1, metadata !11309, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i16 %3, metadata !11310, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i16 0, metadata !11311, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.value(metadata i16 0, metadata !11312, metadata !DIExpression()), !dbg !11876
  %20 = and i16 %7, -2, !dbg !11879
  store volatile i16 %20, i16* %6, align 4, !dbg !11879, !tbaa !10708
  %21 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11880
  %22 = load volatile i16, i16* %21, align 4, !dbg !11880, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %22, metadata !11311, metadata !DIExpression()), !dbg !11876
  %23 = load volatile i16, i16* %6, align 4, !dbg !11881, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %23, metadata !11312, metadata !DIExpression()), !dbg !11876
  %24 = and i16 %22, -244, !dbg !11882
  call void @llvm.dbg.value(metadata i16 %24, metadata !11311, metadata !DIExpression()), !dbg !11876
  %25 = shl i16 %3, 4, !dbg !11883
  %26 = or i16 %25, %24, !dbg !11884
  %27 = or i16 %26, 1, !dbg !11884
  call void @llvm.dbg.value(metadata i16 %27, metadata !11311, metadata !DIExpression()), !dbg !11876
  %28 = and i16 %23, -12, !dbg !11885
  call void @llvm.dbg.value(metadata i16 %23, metadata !11312, metadata !DIExpression(DW_OP_constu, 18446744073709551604, DW_OP_and, DW_OP_stack_value)), !dbg !11876
  call void @llvm.dbg.value(metadata i16 %36, metadata !11312, metadata !DIExpression()), !dbg !11876
  br label %29

29:                                               ; preds = %19, %8
  %30 = phi i16 [ %2, %19 ], [ %18, %8 ]
  %31 = phi i16 [ %28, %19 ], [ %13, %8 ]
  %32 = phi i16 [ 1, %19 ], [ 16, %8 ]
  %33 = phi i16* [ %21, %19 ], [ %10, %8 ]
  %34 = phi i16 [ %27, %19 ], [ %17, %8 ]
  %35 = or i16 %31, %30, !dbg !11862
  %36 = or i16 %35, %32, !dbg !11862
  store volatile i16 %34, i16* %33, align 4, !dbg !11862, !tbaa !10713
  store volatile i16 %36, i16* %6, align 4, !dbg !11862, !tbaa !10708
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11834, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i16 %1, metadata !11837, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i16 0, metadata !11838, metadata !DIExpression()), !dbg !11886
  %37 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11888
  %38 = load volatile i16, i16* %37, align 4, !dbg !11888, !tbaa !11827
  call void @llvm.dbg.value(metadata i16 %38, metadata !11838, metadata !DIExpression()), !dbg !11886
  %39 = and i16 %38, -113, !dbg !11889
  call void @llvm.dbg.value(metadata i16 %39, metadata !11838, metadata !DIExpression()), !dbg !11886
  %40 = or i16 %39, %1, !dbg !11890
  call void @llvm.dbg.value(metadata i16 %40, metadata !11838, metadata !DIExpression()), !dbg !11886
  store volatile i16 %40, i16* %37, align 4, !dbg !11891, !tbaa !11827
  %41 = load volatile i16, i16* %37, align 4, !dbg !11892, !tbaa !11827
  %42 = or i16 %41, 7, !dbg !11892
  store volatile i16 %42, i16* %37, align 4, !dbg !11892, !tbaa !11827
  ret void, !dbg !11893
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ETRClockMode1Config(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2, i16 zeroext %3) local_unnamed_addr #0 !dbg !11894 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11896, metadata !DIExpression()), !dbg !11901
  call void @llvm.dbg.value(metadata i16 %1, metadata !11897, metadata !DIExpression()), !dbg !11901
  call void @llvm.dbg.value(metadata i16 %2, metadata !11898, metadata !DIExpression()), !dbg !11901
  call void @llvm.dbg.value(metadata i16 %3, metadata !11899, metadata !DIExpression()), !dbg !11901
  call void @llvm.dbg.value(metadata i16 0, metadata !11900, metadata !DIExpression()), !dbg !11901
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11902, metadata !DIExpression()), !dbg !11909
  call void @llvm.dbg.value(metadata i16 %1, metadata !11905, metadata !DIExpression()), !dbg !11909
  call void @llvm.dbg.value(metadata i16 %2, metadata !11906, metadata !DIExpression()), !dbg !11909
  call void @llvm.dbg.value(metadata i16 %3, metadata !11907, metadata !DIExpression()), !dbg !11909
  call void @llvm.dbg.value(metadata i16 0, metadata !11908, metadata !DIExpression()), !dbg !11909
  %5 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11911
  %6 = load volatile i16, i16* %5, align 4, !dbg !11911, !tbaa !11827
  call void @llvm.dbg.value(metadata i16 %6, metadata !11908, metadata !DIExpression()), !dbg !11909
  %7 = and i16 %6, 255, !dbg !11912
  call void @llvm.dbg.value(metadata i16 %7, metadata !11908, metadata !DIExpression()), !dbg !11909
  %8 = shl i16 %3, 8, !dbg !11913
  %9 = or i16 %2, %1, !dbg !11914
  %10 = or i16 %9, %8, !dbg !11915
  %11 = or i16 %10, %7, !dbg !11916
  call void @llvm.dbg.value(metadata i16 %11, metadata !11908, metadata !DIExpression()), !dbg !11909
  store volatile i16 %11, i16* %5, align 4, !dbg !11917, !tbaa !11827
  %12 = load volatile i16, i16* %5, align 4, !dbg !11918, !tbaa !11827
  call void @llvm.dbg.value(metadata i16 %12, metadata !11900, metadata !DIExpression()), !dbg !11901
  call void @llvm.dbg.value(metadata i16 %12, metadata !11900, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !11901
  call void @llvm.dbg.value(metadata i16 %12, metadata !11900, metadata !DIExpression(DW_OP_constu, 7, DW_OP_or, DW_OP_stack_value)), !dbg !11901
  call void @llvm.dbg.value(metadata i16 %12, metadata !11900, metadata !DIExpression(DW_OP_constu, 18446744073709551496, DW_OP_and, DW_OP_constu, 7, DW_OP_or, DW_OP_stack_value)), !dbg !11901
  %13 = or i16 %12, 119, !dbg !11919
  call void @llvm.dbg.value(metadata i16 %13, metadata !11900, metadata !DIExpression()), !dbg !11901
  store volatile i16 %13, i16* %5, align 4, !dbg !11920, !tbaa !11827
  ret void, !dbg !11921
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ETRConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2, i16 zeroext %3) local_unnamed_addr #0 !dbg !11903 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11902, metadata !DIExpression()), !dbg !11922
  call void @llvm.dbg.value(metadata i16 %1, metadata !11905, metadata !DIExpression()), !dbg !11922
  call void @llvm.dbg.value(metadata i16 %2, metadata !11906, metadata !DIExpression()), !dbg !11922
  call void @llvm.dbg.value(metadata i16 %3, metadata !11907, metadata !DIExpression()), !dbg !11922
  call void @llvm.dbg.value(metadata i16 0, metadata !11908, metadata !DIExpression()), !dbg !11922
  %5 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11923
  %6 = load volatile i16, i16* %5, align 4, !dbg !11923, !tbaa !11827
  call void @llvm.dbg.value(metadata i16 %6, metadata !11908, metadata !DIExpression()), !dbg !11922
  %7 = and i16 %6, 255, !dbg !11924
  call void @llvm.dbg.value(metadata i16 %7, metadata !11908, metadata !DIExpression()), !dbg !11922
  %8 = shl i16 %3, 8, !dbg !11925
  %9 = or i16 %2, %1, !dbg !11926
  %10 = or i16 %9, %8, !dbg !11927
  %11 = or i16 %10, %7, !dbg !11928
  call void @llvm.dbg.value(metadata i16 %11, metadata !11908, metadata !DIExpression()), !dbg !11922
  store volatile i16 %11, i16* %5, align 4, !dbg !11929, !tbaa !11827
  ret void, !dbg !11930
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_ETRClockMode2Config(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2, i16 zeroext %3) local_unnamed_addr #0 !dbg !11931 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11933, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i16 %1, metadata !11934, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i16 %2, metadata !11935, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i16 %3, metadata !11936, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11902, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata i16 %1, metadata !11905, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata i16 %2, metadata !11906, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata i16 %3, metadata !11907, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata i16 0, metadata !11908, metadata !DIExpression()), !dbg !11938
  %5 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11940
  %6 = load volatile i16, i16* %5, align 4, !dbg !11940, !tbaa !11827
  call void @llvm.dbg.value(metadata i16 %6, metadata !11908, metadata !DIExpression()), !dbg !11938
  %7 = and i16 %6, 255, !dbg !11941
  call void @llvm.dbg.value(metadata i16 %7, metadata !11908, metadata !DIExpression()), !dbg !11938
  %8 = shl i16 %3, 8, !dbg !11942
  %9 = or i16 %2, %1, !dbg !11943
  %10 = or i16 %9, %8, !dbg !11944
  %11 = or i16 %10, %7, !dbg !11945
  call void @llvm.dbg.value(metadata i16 %11, metadata !11908, metadata !DIExpression()), !dbg !11938
  store volatile i16 %11, i16* %5, align 4, !dbg !11946, !tbaa !11827
  %12 = load volatile i16, i16* %5, align 4, !dbg !11947, !tbaa !11827
  %13 = or i16 %12, 16384, !dbg !11947
  store volatile i16 %13, i16* %5, align 4, !dbg !11947, !tbaa !11827
  ret void, !dbg !11948
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SelectOutputTrigger(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11949 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11951, metadata !DIExpression()), !dbg !11953
  call void @llvm.dbg.value(metadata i16 %1, metadata !11952, metadata !DIExpression()), !dbg !11953
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 2, !dbg !11954
  %4 = load volatile i16, i16* %3, align 4, !dbg !11955, !tbaa !10711
  %5 = and i16 %4, -113, !dbg !11955
  store volatile i16 %5, i16* %3, align 4, !dbg !11955, !tbaa !10711
  %6 = load volatile i16, i16* %3, align 4, !dbg !11956, !tbaa !10711
  %7 = or i16 %6, %1, !dbg !11956
  store volatile i16 %7, i16* %3, align 4, !dbg !11956, !tbaa !10711
  ret void, !dbg !11957
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SelectSlaveMode(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11958 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11960, metadata !DIExpression()), !dbg !11962
  call void @llvm.dbg.value(metadata i16 %1, metadata !11961, metadata !DIExpression()), !dbg !11962
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11963
  %4 = load volatile i16, i16* %3, align 4, !dbg !11964, !tbaa !11827
  %5 = and i16 %4, -8, !dbg !11964
  store volatile i16 %5, i16* %3, align 4, !dbg !11964, !tbaa !11827
  %6 = load volatile i16, i16* %3, align 4, !dbg !11965, !tbaa !11827
  %7 = or i16 %6, %1, !dbg !11965
  store volatile i16 %7, i16* %3, align 4, !dbg !11965, !tbaa !11827
  ret void, !dbg !11966
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SelectMasterSlaveMode(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !11967 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11969, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.value(metadata i16 %1, metadata !11970, metadata !DIExpression()), !dbg !11971
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11972
  %4 = load volatile i16, i16* %3, align 4, !dbg !11973, !tbaa !11827
  %5 = and i16 %4, -129, !dbg !11973
  store volatile i16 %5, i16* %3, align 4, !dbg !11973, !tbaa !11827
  %6 = load volatile i16, i16* %3, align 4, !dbg !11974, !tbaa !11827
  %7 = or i16 %6, %1, !dbg !11974
  store volatile i16 %7, i16* %3, align 4, !dbg !11974, !tbaa !11827
  ret void, !dbg !11975
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_EncoderInterfaceConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1, i16 zeroext %2, i16 zeroext %3) local_unnamed_addr #0 !dbg !11976 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !11978, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i16 %1, metadata !11979, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i16 %2, metadata !11980, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i16 %3, metadata !11981, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i16 0, metadata !11982, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i16 0, metadata !11983, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i16 0, metadata !11984, metadata !DIExpression()), !dbg !11985
  %5 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 4, !dbg !11986
  %6 = load volatile i16, i16* %5, align 4, !dbg !11986, !tbaa !11827
  call void @llvm.dbg.value(metadata i16 %6, metadata !11982, metadata !DIExpression()), !dbg !11985
  %7 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 12, !dbg !11987
  %8 = load volatile i16, i16* %7, align 4, !dbg !11987, !tbaa !10713
  call void @llvm.dbg.value(metadata i16 %8, metadata !11983, metadata !DIExpression()), !dbg !11985
  %9 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 16, !dbg !11988
  %10 = load volatile i16, i16* %9, align 4, !dbg !11988, !tbaa !10708
  call void @llvm.dbg.value(metadata i16 %10, metadata !11984, metadata !DIExpression()), !dbg !11985
  %11 = and i16 %6, -8, !dbg !11989
  call void @llvm.dbg.value(metadata i16 %11, metadata !11982, metadata !DIExpression()), !dbg !11985
  %12 = or i16 %11, %1, !dbg !11990
  call void @llvm.dbg.value(metadata i16 %12, metadata !11982, metadata !DIExpression()), !dbg !11985
  %13 = and i16 %8, -772, !dbg !11991
  call void @llvm.dbg.value(metadata i16 %13, metadata !11983, metadata !DIExpression()), !dbg !11985
  %14 = or i16 %13, 257, !dbg !11992
  call void @llvm.dbg.value(metadata i16 %14, metadata !11983, metadata !DIExpression()), !dbg !11985
  %15 = and i16 %10, -35, !dbg !11993
  call void @llvm.dbg.value(metadata i16 %15, metadata !11984, metadata !DIExpression()), !dbg !11985
  %16 = shl i16 %3, 4, !dbg !11994
  %17 = or i16 %16, %2, !dbg !11995
  %18 = or i16 %17, %15, !dbg !11996
  call void @llvm.dbg.value(metadata i16 %18, metadata !11984, metadata !DIExpression()), !dbg !11985
  store volatile i16 %12, i16* %5, align 4, !dbg !11997, !tbaa !11827
  store volatile i16 %14, i16* %7, align 4, !dbg !11998, !tbaa !10713
  store volatile i16 %18, i16* %9, align 4, !dbg !11999, !tbaa !10708
  ret void, !dbg !12000
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_SelectHallSensor(%struct.TIM_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12001 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !12003, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 %1, metadata !12004, metadata !DIExpression()), !dbg !12005
  %3 = icmp eq i32 %1, 0, !dbg !12006
  %4 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 2, !dbg !12008
  %5 = load volatile i16, i16* %4, align 4, !dbg !12008, !tbaa !10711
  %6 = and i16 %5, -129, !dbg !12009
  %7 = select i1 %3, i16 0, i16 128, !dbg !12009
  %8 = or i16 %6, %7, !dbg !12009
  store volatile i16 %8, i16* %4, align 4, !dbg !12008, !tbaa !10711
  ret void, !dbg !12010
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @TIM_RemapConfig(%struct.TIM_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !12011 {
  call void @llvm.dbg.value(metadata %struct.TIM_TypeDef* %0, metadata !12013, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.value(metadata i16 %1, metadata !12014, metadata !DIExpression()), !dbg !12015
  %3 = getelementptr inbounds %struct.TIM_TypeDef, %struct.TIM_TypeDef* %0, i32 0, i32 34, !dbg !12016
  store volatile i16 %1, i16* %3, align 4, !dbg !12017, !tbaa !12018
  ret void, !dbg !12019
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_TDES_ECB(i8 zeroext %0, i8* %1, i8* %2, i32 %3, i8* %4) local_unnamed_addr #3 !dbg !12020 {
  %6 = alloca %struct.CRYP_InitTypeDef, align 2
  %7 = alloca %struct.CRYP_KeyInitTypeDef, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !12022, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* %1, metadata !12023, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* %2, metadata !12024, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %3, metadata !12025, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* %4, metadata !12026, metadata !DIExpression()), !dbg !12054
  %9 = bitcast %struct.CRYP_InitTypeDef* %6 to i8*, !dbg !12055
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !12055
  call void @llvm.dbg.declare(metadata %struct.CRYP_InitTypeDef* %6, metadata !12027, metadata !DIExpression()), !dbg !12056
  %10 = bitcast %struct.CRYP_KeyInitTypeDef* %7 to i8*, !dbg !12057
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6, !dbg !12057
  call void @llvm.dbg.declare(metadata %struct.CRYP_KeyInitTypeDef* %7, metadata !12035, metadata !DIExpression()), !dbg !12058
  %11 = bitcast i32* %8 to i8*, !dbg !12059
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !12059
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12047, metadata !DIExpression()), !dbg !12060
  store volatile i32 0, i32* %8, align 4, !dbg !12060, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !12048, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 1, metadata !12049, metadata !DIExpression()), !dbg !12054
  %12 = ptrtoint i8* %1 to i32, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %12, metadata !12050, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* %2, metadata !12051, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* %4, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12053, metadata !DIExpression()), !dbg !12054
  call arm_aapcs_vfpcc void @CRYP_KeyStructInit(%struct.CRYP_KeyInitTypeDef* nonnull %7) #5, !dbg !12062
  %13 = icmp eq i8 %0, 1, !dbg !12063
  %14 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %6, i32 0, i32 0, !dbg !12065
  %15 = select i1 %13, i16 0, i16 4
  store i16 %15, i16* %14, align 2, !dbg !12065, !tbaa !7773
  %16 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %6, i32 0, i32 1, !dbg !12066
  store i16 0, i16* %16, align 2, !dbg !12067, !tbaa !7776
  %17 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %6, i32 0, i32 2, !dbg !12068
  store i16 128, i16* %17, align 2, !dbg !12069, !tbaa !7779
  call arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nonnull %6) #5, !dbg !12070
  %18 = bitcast i8* %1 to i32*, !dbg !12071
  %19 = load i32, i32* %18, align 4, !dbg !12072, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %19, metadata !12073, metadata !DIExpression()) #6, !dbg !12077
  %20 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %19) #6, !dbg !12079, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %20, metadata !12076, metadata !DIExpression()) #6, !dbg !12077
  %21 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %7, i32 0, i32 2, !dbg !12081
  store i32 %20, i32* %21, align 4, !dbg !12082, !tbaa !7657
  %22 = add i32 %12, 4, !dbg !12083
  call void @llvm.dbg.value(metadata i32 %22, metadata !12050, metadata !DIExpression()), !dbg !12054
  %23 = inttoptr i32 %22 to i32*, !dbg !12084
  %24 = load i32, i32* %23, align 4, !dbg !12085, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %24, metadata !12073, metadata !DIExpression()) #6, !dbg !12086
  %25 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %24) #6, !dbg !12088, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %25, metadata !12076, metadata !DIExpression()) #6, !dbg !12086
  %26 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %7, i32 0, i32 3, !dbg !12089
  store i32 %25, i32* %26, align 4, !dbg !12090, !tbaa !7666
  %27 = add i32 %12, 8, !dbg !12091
  call void @llvm.dbg.value(metadata i32 %27, metadata !12050, metadata !DIExpression()), !dbg !12054
  %28 = inttoptr i32 %27 to i32*, !dbg !12092
  %29 = load i32, i32* %28, align 4, !dbg !12093, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %29, metadata !12073, metadata !DIExpression()) #6, !dbg !12094
  %30 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %29) #6, !dbg !12096, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %30, metadata !12076, metadata !DIExpression()) #6, !dbg !12094
  %31 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %7, i32 0, i32 4, !dbg !12097
  store i32 %30, i32* %31, align 4, !dbg !12098, !tbaa !7621
  %32 = add i32 %12, 12, !dbg !12099
  call void @llvm.dbg.value(metadata i32 %32, metadata !12050, metadata !DIExpression()), !dbg !12054
  %33 = inttoptr i32 %32 to i32*, !dbg !12100
  %34 = load i32, i32* %33, align 4, !dbg !12101, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %34, metadata !12073, metadata !DIExpression()) #6, !dbg !12102
  %35 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %34) #6, !dbg !12104, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %35, metadata !12076, metadata !DIExpression()) #6, !dbg !12102
  %36 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %7, i32 0, i32 5, !dbg !12105
  store i32 %35, i32* %36, align 4, !dbg !12106, !tbaa !7631
  %37 = add i32 %12, 16, !dbg !12107
  call void @llvm.dbg.value(metadata i32 %37, metadata !12050, metadata !DIExpression()), !dbg !12054
  %38 = inttoptr i32 %37 to i32*, !dbg !12108
  %39 = load i32, i32* %38, align 4, !dbg !12109, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %39, metadata !12073, metadata !DIExpression()) #6, !dbg !12110
  %40 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %39) #6, !dbg !12112, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %40, metadata !12076, metadata !DIExpression()) #6, !dbg !12110
  %41 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %7, i32 0, i32 6, !dbg !12113
  store i32 %40, i32* %41, align 4, !dbg !12114, !tbaa !7640
  %42 = add i32 %12, 20, !dbg !12115
  call void @llvm.dbg.value(metadata i32 %42, metadata !12050, metadata !DIExpression()), !dbg !12054
  %43 = inttoptr i32 %42 to i32*, !dbg !12116
  %44 = load i32, i32* %43, align 4, !dbg !12117, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %44, metadata !12073, metadata !DIExpression()) #6, !dbg !12118
  %45 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %44) #6, !dbg !12120, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %45, metadata !12076, metadata !DIExpression()) #6, !dbg !12118
  %46 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %7, i32 0, i32 7, !dbg !12121
  store i32 %45, i32* %46, align 4, !dbg !12122, !tbaa !7765
  call arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nonnull %7) #5, !dbg !12123
  call arm_aapcs_vfpcc void @CRYP_FIFOFlush() #5, !dbg !12124
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 1) #5, !dbg !12125
  call void @llvm.dbg.value(metadata i32 0, metadata !12053, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* %4, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* %2, metadata !12051, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 1, metadata !12049, metadata !DIExpression()), !dbg !12054
  %47 = icmp eq i32 %3, 0, !dbg !12126
  br i1 %47, label %79, label %48, !dbg !12129

48:                                               ; preds = %5
  %49 = ptrtoint i8* %4 to i32, !dbg !12130
  call void @llvm.dbg.value(metadata i32 %49, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %49, metadata !12052, metadata !DIExpression()), !dbg !12054
  %50 = ptrtoint i8* %2 to i32, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %50, metadata !12051, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %50, metadata !12051, metadata !DIExpression()), !dbg !12054
  br label %51, !dbg !12129

51:                                               ; preds = %48, %69
  %52 = phi i32 [ %77, %69 ], [ 0, %48 ]
  %53 = phi i32 [ %76, %69 ], [ %49, %48 ]
  %54 = phi i32 [ %70, %69 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !12053, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %53, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %54, metadata !12051, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 1, metadata !12049, metadata !DIExpression()), !dbg !12054
  %55 = inttoptr i32 %54 to i32*, !dbg !12132
  %56 = load i32, i32* %55, align 4, !dbg !12134, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %56) #5, !dbg !12135
  %57 = add i32 %54, 4, !dbg !12136
  call void @llvm.dbg.value(metadata i32 %57, metadata !12051, metadata !DIExpression()), !dbg !12054
  %58 = inttoptr i32 %57 to i32*, !dbg !12137
  %59 = load i32, i32* %58, align 4, !dbg !12138, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %59) #5, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %70, metadata !12051, metadata !DIExpression()), !dbg !12054
  store volatile i32 0, i32* %8, align 4, !dbg !12140, !tbaa !894
  br label %60, !dbg !12141

60:                                               ; preds = %60, %51
  %61 = call arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext 16) #5, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %61, metadata !12048, metadata !DIExpression()), !dbg !12054
  %62 = load volatile i32, i32* %8, align 4, !dbg !12144, !tbaa !894
  %63 = add i32 %62, 1, !dbg !12144
  store volatile i32 %63, i32* %8, align 4, !dbg !12144, !tbaa !894
  %64 = load volatile i32, i32* %8, align 4, !dbg !12145, !tbaa !894
  %65 = icmp ne i32 %64, 65536, !dbg !12146
  %66 = icmp ne i32 %61, 0, !dbg !12147
  %67 = and i1 %66, %65, !dbg !12147
  br i1 %67, label %60, label %68, !dbg !12148, !llvm.loop !12149

68:                                               ; preds = %60
  br i1 %66, label %79, label %69, !dbg !12151

69:                                               ; preds = %68
  %70 = add i32 %54, 8, !dbg !12152
  %71 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !12153
  %72 = inttoptr i32 %53 to i32*, !dbg !12156
  store i32 %71, i32* %72, align 4, !dbg !12157, !tbaa !894
  %73 = add i32 %53, 4, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %73, metadata !12052, metadata !DIExpression()), !dbg !12054
  %74 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !12159
  %75 = inttoptr i32 %73 to i32*, !dbg !12160
  store i32 %74, i32* %75, align 4, !dbg !12161, !tbaa !894
  %76 = add i32 %53, 8, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %76, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 1, metadata !12049, metadata !DIExpression()), !dbg !12054
  %77 = add i32 %52, 8, !dbg !12163
  call void @llvm.dbg.value(metadata i32 %77, metadata !12053, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %70, metadata !12051, metadata !DIExpression()), !dbg !12054
  %78 = icmp ult i32 %77, %3, !dbg !12126
  br i1 %78, label %51, label %79, !dbg !12129, !llvm.loop !12164

79:                                               ; preds = %68, %69, %5
  %80 = phi i32 [ 1, %5 ], [ 0, %68 ], [ 1, %69 ], !dbg !12054
  call void @llvm.dbg.value(metadata i32 %80, metadata !12049, metadata !DIExpression()), !dbg !12054
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 0) #5, !dbg !12166
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11), !dbg !12167
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6, !dbg !12167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !12167
  ret i32 %80, !dbg !12168
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @CRYP_TDES_CBC(i8 zeroext %0, i8* %1, i8* %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3 !dbg !12169 {
  %7 = alloca %struct.CRYP_InitTypeDef, align 2
  %8 = alloca %struct.CRYP_KeyInitTypeDef, align 4
  %9 = alloca %struct.DMA_TypeDef, align 4
  %10 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !12171, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %1, metadata !12172, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %2, metadata !12173, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %3, metadata !12174, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 %4, metadata !12175, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %5, metadata !12176, metadata !DIExpression()), !dbg !12195
  %11 = bitcast %struct.CRYP_InitTypeDef* %7 to i8*, !dbg !12196
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !12196
  call void @llvm.dbg.declare(metadata %struct.CRYP_InitTypeDef* %7, metadata !12177, metadata !DIExpression()), !dbg !12197
  %12 = bitcast %struct.CRYP_KeyInitTypeDef* %8 to i8*, !dbg !12198
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6, !dbg !12198
  call void @llvm.dbg.declare(metadata %struct.CRYP_KeyInitTypeDef* %8, metadata !12178, metadata !DIExpression()), !dbg !12199
  %13 = bitcast %struct.DMA_TypeDef* %9 to i8*, !dbg !12200
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6, !dbg !12200
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %9, metadata !12179, metadata !DIExpression()), !dbg !12201
  %14 = bitcast i32* %10 to i8*, !dbg !12202
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14), !dbg !12202
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12187, metadata !DIExpression()), !dbg !12203
  store volatile i32 0, i32* %10, align 4, !dbg !12203, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !12188, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 1, metadata !12189, metadata !DIExpression()), !dbg !12195
  %15 = ptrtoint i8* %1 to i32, !dbg !12204
  call void @llvm.dbg.value(metadata i32 %15, metadata !12190, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %3, metadata !12191, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %5, metadata !12192, metadata !DIExpression()), !dbg !12195
  %16 = ptrtoint i8* %2 to i32, !dbg !12205
  call void @llvm.dbg.value(metadata i32 %16, metadata !12193, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 0, metadata !12194, metadata !DIExpression()), !dbg !12195
  call arm_aapcs_vfpcc void @CRYP_KeyStructInit(%struct.CRYP_KeyInitTypeDef* nonnull %8) #5, !dbg !12206
  %17 = icmp eq i8 %0, 1, !dbg !12207
  %18 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 0, !dbg !12209
  %19 = select i1 %17, i16 0, i16 4
  store i16 %19, i16* %18, align 2, !dbg !12209, !tbaa !7773
  %20 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 1, !dbg !12210
  store i16 8, i16* %20, align 2, !dbg !12211, !tbaa !7776
  %21 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %7, i32 0, i32 2, !dbg !12212
  store i16 128, i16* %21, align 2, !dbg !12213, !tbaa !7779
  call arm_aapcs_vfpcc void @CRYP_Init(%struct.CRYP_InitTypeDef* nonnull %7) #5, !dbg !12214
  %22 = bitcast i8* %1 to i32*, !dbg !12215
  %23 = load i32, i32* %22, align 4, !dbg !12216, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %23, metadata !12073, metadata !DIExpression()) #6, !dbg !12217
  %24 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %23) #6, !dbg !12219, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %24, metadata !12076, metadata !DIExpression()) #6, !dbg !12217
  %25 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 2, !dbg !12220
  store i32 %24, i32* %25, align 4, !dbg !12221, !tbaa !7657
  %26 = add i32 %15, 4, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %26, metadata !12190, metadata !DIExpression()), !dbg !12195
  %27 = inttoptr i32 %26 to i32*, !dbg !12223
  %28 = load i32, i32* %27, align 4, !dbg !12224, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %28, metadata !12073, metadata !DIExpression()) #6, !dbg !12225
  %29 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %28) #6, !dbg !12227, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %29, metadata !12076, metadata !DIExpression()) #6, !dbg !12225
  %30 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 3, !dbg !12228
  store i32 %29, i32* %30, align 4, !dbg !12229, !tbaa !7666
  %31 = add i32 %15, 8, !dbg !12230
  call void @llvm.dbg.value(metadata i32 %31, metadata !12190, metadata !DIExpression()), !dbg !12195
  %32 = inttoptr i32 %31 to i32*, !dbg !12231
  %33 = load i32, i32* %32, align 4, !dbg !12232, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %33, metadata !12073, metadata !DIExpression()) #6, !dbg !12233
  %34 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %33) #6, !dbg !12235, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %34, metadata !12076, metadata !DIExpression()) #6, !dbg !12233
  %35 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 4, !dbg !12236
  store i32 %34, i32* %35, align 4, !dbg !12237, !tbaa !7621
  %36 = add i32 %15, 12, !dbg !12238
  call void @llvm.dbg.value(metadata i32 %36, metadata !12190, metadata !DIExpression()), !dbg !12195
  %37 = inttoptr i32 %36 to i32*, !dbg !12239
  %38 = load i32, i32* %37, align 4, !dbg !12240, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %38, metadata !12073, metadata !DIExpression()) #6, !dbg !12241
  %39 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %38) #6, !dbg !12243, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %39, metadata !12076, metadata !DIExpression()) #6, !dbg !12241
  %40 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 5, !dbg !12244
  store i32 %39, i32* %40, align 4, !dbg !12245, !tbaa !7631
  %41 = add i32 %15, 16, !dbg !12246
  call void @llvm.dbg.value(metadata i32 %41, metadata !12190, metadata !DIExpression()), !dbg !12195
  %42 = inttoptr i32 %41 to i32*, !dbg !12247
  %43 = load i32, i32* %42, align 4, !dbg !12248, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %43, metadata !12073, metadata !DIExpression()) #6, !dbg !12249
  %44 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %43) #6, !dbg !12251, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %44, metadata !12076, metadata !DIExpression()) #6, !dbg !12249
  %45 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 6, !dbg !12252
  store i32 %44, i32* %45, align 4, !dbg !12253, !tbaa !7640
  %46 = add i32 %15, 20, !dbg !12254
  call void @llvm.dbg.value(metadata i32 %46, metadata !12190, metadata !DIExpression()), !dbg !12195
  %47 = inttoptr i32 %46 to i32*, !dbg !12255
  %48 = load i32, i32* %47, align 4, !dbg !12256, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %48, metadata !12073, metadata !DIExpression()) #6, !dbg !12257
  %49 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %48) #6, !dbg !12259, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %49, metadata !12076, metadata !DIExpression()) #6, !dbg !12257
  %50 = getelementptr inbounds %struct.CRYP_KeyInitTypeDef, %struct.CRYP_KeyInitTypeDef* %8, i32 0, i32 7, !dbg !12260
  store i32 %49, i32* %50, align 4, !dbg !12261, !tbaa !7765
  call arm_aapcs_vfpcc void @CRYP_KeyInit(%struct.CRYP_KeyInitTypeDef* nonnull %8) #5, !dbg !12262
  %51 = bitcast i8* %2 to i32*, !dbg !12263
  %52 = load i32, i32* %51, align 4, !dbg !12264, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %52, metadata !12073, metadata !DIExpression()) #6, !dbg !12265
  %53 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %52) #6, !dbg !12267, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %53, metadata !12076, metadata !DIExpression()) #6, !dbg !12265
  %54 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %9, i32 0, i32 0, !dbg !12268
  store i32 %53, i32* %54, align 4, !dbg !12269, !tbaa !934
  %55 = add i32 %16, 4, !dbg !12270
  call void @llvm.dbg.value(metadata i32 %55, metadata !12193, metadata !DIExpression()), !dbg !12195
  %56 = inttoptr i32 %55 to i32*, !dbg !12271
  %57 = load i32, i32* %56, align 4, !dbg !12272, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %57, metadata !12073, metadata !DIExpression()) #6, !dbg !12273
  %58 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %57) #6, !dbg !12275, !srcloc !12080
  call void @llvm.dbg.value(metadata i32 %58, metadata !12076, metadata !DIExpression()) #6, !dbg !12273
  %59 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %9, i32 0, i32 1, !dbg !12276
  store i32 %58, i32* %59, align 4, !dbg !12277, !tbaa !1690
  call arm_aapcs_vfpcc void @CRYP_IVInit(%struct.DMA_TypeDef* nonnull %9) #5, !dbg !12278
  call arm_aapcs_vfpcc void @CRYP_FIFOFlush() #5, !dbg !12279
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 1) #5, !dbg !12280
  call void @llvm.dbg.value(metadata i32 0, metadata !12194, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %5, metadata !12192, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %3, metadata !12191, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 1, metadata !12189, metadata !DIExpression()), !dbg !12195
  %60 = icmp eq i32 %4, 0, !dbg !12281
  br i1 %60, label %92, label %61, !dbg !12284

61:                                               ; preds = %6
  %62 = ptrtoint i8* %5 to i32, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %62, metadata !12192, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 %62, metadata !12192, metadata !DIExpression()), !dbg !12195
  %63 = ptrtoint i8* %3 to i32, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %63, metadata !12191, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 %63, metadata !12191, metadata !DIExpression()), !dbg !12195
  br label %64, !dbg !12284

64:                                               ; preds = %61, %82
  %65 = phi i32 [ %90, %82 ], [ 0, %61 ]
  %66 = phi i32 [ %89, %82 ], [ %62, %61 ]
  %67 = phi i32 [ %83, %82 ], [ %63, %61 ]
  call void @llvm.dbg.value(metadata i32 %65, metadata !12194, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 %66, metadata !12192, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 %67, metadata !12191, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 1, metadata !12189, metadata !DIExpression()), !dbg !12195
  %68 = inttoptr i32 %67 to i32*, !dbg !12287
  %69 = load i32, i32* %68, align 4, !dbg !12289, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %69) #5, !dbg !12290
  %70 = add i32 %67, 4, !dbg !12291
  call void @llvm.dbg.value(metadata i32 %70, metadata !12191, metadata !DIExpression()), !dbg !12195
  %71 = inttoptr i32 %70 to i32*, !dbg !12292
  %72 = load i32, i32* %71, align 4, !dbg !12293, !tbaa !894
  call arm_aapcs_vfpcc void @CRYP_DataIn(i32 %72) #5, !dbg !12294
  call void @llvm.dbg.value(metadata i32 %83, metadata !12191, metadata !DIExpression()), !dbg !12195
  store volatile i32 0, i32* %10, align 4, !dbg !12295, !tbaa !894
  br label %73, !dbg !12296

73:                                               ; preds = %73, %64
  %74 = call arm_aapcs_vfpcc i32 @CRYP_GetFlagStatus(i8 zeroext 16) #5, !dbg !12297
  call void @llvm.dbg.value(metadata i32 %74, metadata !12188, metadata !DIExpression()), !dbg !12195
  %75 = load volatile i32, i32* %10, align 4, !dbg !12299, !tbaa !894
  %76 = add i32 %75, 1, !dbg !12299
  store volatile i32 %76, i32* %10, align 4, !dbg !12299, !tbaa !894
  %77 = load volatile i32, i32* %10, align 4, !dbg !12300, !tbaa !894
  %78 = icmp ne i32 %77, 65536, !dbg !12301
  %79 = icmp ne i32 %74, 0, !dbg !12302
  %80 = and i1 %79, %78, !dbg !12302
  br i1 %80, label %73, label %81, !dbg !12303, !llvm.loop !12304

81:                                               ; preds = %73
  br i1 %79, label %92, label %82, !dbg !12306

82:                                               ; preds = %81
  %83 = add i32 %67, 8, !dbg !12307
  %84 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !12308
  %85 = inttoptr i32 %66 to i32*, !dbg !12311
  store i32 %84, i32* %85, align 4, !dbg !12312, !tbaa !894
  %86 = add i32 %66, 4, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %86, metadata !12192, metadata !DIExpression()), !dbg !12195
  %87 = call arm_aapcs_vfpcc i32 @CRYP_DataOut() #5, !dbg !12314
  %88 = inttoptr i32 %86 to i32*, !dbg !12315
  store i32 %87, i32* %88, align 4, !dbg !12316, !tbaa !894
  %89 = add i32 %66, 8, !dbg !12317
  call void @llvm.dbg.value(metadata i32 %89, metadata !12192, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 1, metadata !12189, metadata !DIExpression()), !dbg !12195
  %90 = add i32 %65, 8, !dbg !12318
  call void @llvm.dbg.value(metadata i32 %90, metadata !12194, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 %83, metadata !12191, metadata !DIExpression()), !dbg !12195
  %91 = icmp ult i32 %90, %4, !dbg !12281
  br i1 %91, label %64, label %92, !dbg !12284, !llvm.loop !12319

92:                                               ; preds = %81, %82, %6
  %93 = phi i32 [ 1, %6 ], [ 0, %81 ], [ 1, %82 ], !dbg !12195
  call void @llvm.dbg.value(metadata i32 %93, metadata !12189, metadata !DIExpression()), !dbg !12195
  call arm_aapcs_vfpcc void @CRYP_Cmd(i32 0) #5, !dbg !12321
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14), !dbg !12322
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6, !dbg !12322
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6, !dbg !12322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !12322
  ret i32 %93, !dbg !12323
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @HASH_SHA1(i8* %0, i32 %1, i8* %2) local_unnamed_addr #3 !dbg !12324 {
  %4 = alloca %struct.DMA_TypeDef, align 4
  %5 = alloca %struct.HASH_MsgDigest, align 4
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12326, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i32 %1, metadata !12327, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i8* %2, metadata !12328, metadata !DIExpression()), !dbg !12349
  %8 = bitcast %struct.DMA_TypeDef* %4 to i8*, !dbg !12350
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6, !dbg !12350
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %4, metadata !12329, metadata !DIExpression()), !dbg !12351
  %9 = bitcast %struct.HASH_MsgDigest* %5 to i8*, !dbg !12352
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %9) #6, !dbg !12352
  call void @llvm.dbg.declare(metadata %struct.HASH_MsgDigest* %5, metadata !12337, metadata !DIExpression()), !dbg !12353
  %10 = bitcast i16* %6 to i8*, !dbg !12354
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10), !dbg !12354
  call void @llvm.dbg.declare(metadata i16* %6, metadata !12342, metadata !DIExpression()), !dbg !12355
  store volatile i16 0, i16* %6, align 2, !dbg !12355, !tbaa !3025
  call void @llvm.dbg.value(metadata i32 0, metadata !12343, metadata !DIExpression()), !dbg !12349
  %11 = bitcast i32* %7 to i8*, !dbg !12356
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !12356
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12344, metadata !DIExpression()), !dbg !12357
  store volatile i32 0, i32* %7, align 4, !dbg !12357, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !12345, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i32 1, metadata !12346, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i8* %0, metadata !12347, metadata !DIExpression()), !dbg !12349
  %12 = ptrtoint i8* %2 to i32, !dbg !12358
  call void @llvm.dbg.value(metadata i32 %12, metadata !12348, metadata !DIExpression()), !dbg !12349
  %13 = trunc i32 %1 to i16, !dbg !12359
  %14 = shl i16 %13, 3, !dbg !12359
  %15 = and i16 %14, 24, !dbg !12359
  store volatile i16 %15, i16* %6, align 2, !dbg !12360, !tbaa !3025
  tail call arm_aapcs_vfpcc void @HASH_DeInit() #5, !dbg !12361
  %16 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %4, i32 0, i32 0, !dbg !12362
  store i32 0, i32* %16, align 4, !dbg !12363, !tbaa !934
  %17 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %4, i32 0, i32 1, !dbg !12364
  store i32 0, i32* %17, align 4, !dbg !12365, !tbaa !1690
  %18 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %4, i32 0, i32 2, !dbg !12366
  store i32 32, i32* %18, align 4, !dbg !12367, !tbaa !968
  call arm_aapcs_vfpcc void @HASH_Init(%struct.DMA_TypeDef* nonnull %4) #5, !dbg !12368
  %19 = load volatile i16, i16* %6, align 2, !dbg !12369, !tbaa !3025
  call arm_aapcs_vfpcc void @HASH_SetLastWordValidBitsNbr(i16 zeroext %19) #5, !dbg !12370
  call void @llvm.dbg.value(metadata i32 0, metadata !12343, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i8* %0, metadata !12347, metadata !DIExpression()), !dbg !12349
  %20 = icmp eq i32 %1, 0, !dbg !12371
  br i1 %20, label %31, label %21, !dbg !12374

21:                                               ; preds = %3
  %22 = ptrtoint i8* %0 to i32, !dbg !12375
  call void @llvm.dbg.value(metadata i32 %22, metadata !12347, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i32 %22, metadata !12347, metadata !DIExpression()), !dbg !12349
  br label %23, !dbg !12374

23:                                               ; preds = %21, %23
  %24 = phi i32 [ %28, %23 ], [ %22, %21 ]
  %25 = phi i32 [ %29, %23 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !12347, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i32 %25, metadata !12343, metadata !DIExpression()), !dbg !12349
  %26 = inttoptr i32 %24 to i32*, !dbg !12376
  %27 = load i32, i32* %26, align 4, !dbg !12378, !tbaa !894
  call arm_aapcs_vfpcc void @HASH_DataIn(i32 %27) #5, !dbg !12379
  %28 = add i32 %24, 4, !dbg !12380
  call void @llvm.dbg.value(metadata i32 %28, metadata !12347, metadata !DIExpression()), !dbg !12349
  %29 = add i32 %25, 4, !dbg !12381
  call void @llvm.dbg.value(metadata i32 %29, metadata !12343, metadata !DIExpression()), !dbg !12349
  %30 = icmp ult i32 %29, %1, !dbg !12371
  br i1 %30, label %23, label %31, !dbg !12374, !llvm.loop !12382

31:                                               ; preds = %23, %3
  call arm_aapcs_vfpcc void @HASH_StartDigest() #5, !dbg !12384
  br label %32, !dbg !12385

32:                                               ; preds = %32, %31
  %33 = call arm_aapcs_vfpcc i32 @HASH_GetFlagStatus(i16 zeroext 8) #5, !dbg !12386
  call void @llvm.dbg.value(metadata i32 %33, metadata !12345, metadata !DIExpression()), !dbg !12349
  %34 = load volatile i32, i32* %7, align 4, !dbg !12388, !tbaa !894
  %35 = add i32 %34, 1, !dbg !12388
  store volatile i32 %35, i32* %7, align 4, !dbg !12388, !tbaa !894
  %36 = load volatile i32, i32* %7, align 4, !dbg !12389, !tbaa !894
  %37 = icmp ne i32 %36, 65536, !dbg !12390
  %38 = icmp ne i32 %33, 0, !dbg !12391
  %39 = and i1 %38, %37, !dbg !12391
  br i1 %39, label %32, label %40, !dbg !12392, !llvm.loop !12393

40:                                               ; preds = %32
  br i1 %38, label %66, label %41, !dbg !12395

41:                                               ; preds = %40
  call arm_aapcs_vfpcc void @HASH_GetDigest(%struct.HASH_MsgDigest* nonnull %5) #5, !dbg !12396
  %42 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %5, i32 0, i32 0, i32 0, !dbg !12399
  %43 = load i32, i32* %42, align 4, !dbg !12399, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %43, metadata !12400, metadata !DIExpression()) #6, !dbg !12404
  %44 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %43) #6, !dbg !12406, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %44, metadata !12403, metadata !DIExpression()) #6, !dbg !12404
  %45 = bitcast i8* %2 to i32*, !dbg !12408
  store i32 %44, i32* %45, align 4, !dbg !12409, !tbaa !894
  %46 = add i32 %12, 4, !dbg !12410
  call void @llvm.dbg.value(metadata i32 %46, metadata !12348, metadata !DIExpression()), !dbg !12349
  %47 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %5, i32 0, i32 0, i32 1, !dbg !12411
  %48 = load i32, i32* %47, align 4, !dbg !12411, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %48, metadata !12400, metadata !DIExpression()) #6, !dbg !12412
  %49 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %48) #6, !dbg !12414, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %49, metadata !12403, metadata !DIExpression()) #6, !dbg !12412
  %50 = inttoptr i32 %46 to i32*, !dbg !12415
  store i32 %49, i32* %50, align 4, !dbg !12416, !tbaa !894
  %51 = add i32 %12, 8, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %51, metadata !12348, metadata !DIExpression()), !dbg !12349
  %52 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %5, i32 0, i32 0, i32 2, !dbg !12418
  %53 = load i32, i32* %52, align 4, !dbg !12418, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %53, metadata !12400, metadata !DIExpression()) #6, !dbg !12419
  %54 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %53) #6, !dbg !12421, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %54, metadata !12403, metadata !DIExpression()) #6, !dbg !12419
  %55 = inttoptr i32 %51 to i32*, !dbg !12422
  store i32 %54, i32* %55, align 4, !dbg !12423, !tbaa !894
  %56 = add i32 %12, 12, !dbg !12424
  call void @llvm.dbg.value(metadata i32 %56, metadata !12348, metadata !DIExpression()), !dbg !12349
  %57 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %5, i32 0, i32 0, i32 3, !dbg !12425
  %58 = load i32, i32* %57, align 4, !dbg !12425, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %58, metadata !12400, metadata !DIExpression()) #6, !dbg !12426
  %59 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %58) #6, !dbg !12428, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %59, metadata !12403, metadata !DIExpression()) #6, !dbg !12426
  %60 = inttoptr i32 %56 to i32*, !dbg !12429
  store i32 %59, i32* %60, align 4, !dbg !12430, !tbaa !894
  %61 = add i32 %12, 16, !dbg !12431
  call void @llvm.dbg.value(metadata i32 %61, metadata !12348, metadata !DIExpression()), !dbg !12349
  %62 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %5, i32 0, i32 0, i32 4, !dbg !12432
  %63 = load i32, i32* %62, align 4, !dbg !12432, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %63, metadata !12400, metadata !DIExpression()) #6, !dbg !12433
  %64 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %63) #6, !dbg !12435, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %64, metadata !12403, metadata !DIExpression()) #6, !dbg !12433
  %65 = inttoptr i32 %61 to i32*, !dbg !12436
  store i32 %64, i32* %65, align 4, !dbg !12437, !tbaa !894
  br label %66

66:                                               ; preds = %40, %41
  %67 = phi i32 [ 1, %41 ], [ 0, %40 ], !dbg !12349
  call void @llvm.dbg.value(metadata i32 %67, metadata !12346, metadata !DIExpression()), !dbg !12349
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11), !dbg !12438
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10), !dbg !12438
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %9) #6, !dbg !12438
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6, !dbg !12438
  ret i32 %67, !dbg !12439
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @HMAC_SHA1(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4) local_unnamed_addr #3 !dbg !12440 {
  %6 = alloca %struct.DMA_TypeDef, align 4
  %7 = alloca %struct.HASH_MsgDigest, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12442, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 %1, metadata !12443, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i8* %2, metadata !12444, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 %3, metadata !12445, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i8* %4, metadata !12446, metadata !DIExpression()), !dbg !12458
  %11 = bitcast %struct.DMA_TypeDef* %6 to i8*, !dbg !12459
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6, !dbg !12459
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %6, metadata !12447, metadata !DIExpression()), !dbg !12460
  %12 = bitcast %struct.HASH_MsgDigest* %7 to i8*, !dbg !12461
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %12) #6, !dbg !12461
  call void @llvm.dbg.declare(metadata %struct.HASH_MsgDigest* %7, metadata !12448, metadata !DIExpression()), !dbg !12462
  %13 = bitcast i16* %8 to i8*, !dbg !12463
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %13), !dbg !12463
  call void @llvm.dbg.declare(metadata i16* %8, metadata !12449, metadata !DIExpression()), !dbg !12464
  store volatile i16 0, i16* %8, align 2, !dbg !12464, !tbaa !3025
  %14 = bitcast i16* %9 to i8*, !dbg !12465
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %14), !dbg !12465
  call void @llvm.dbg.declare(metadata i16* %9, metadata !12450, metadata !DIExpression()), !dbg !12466
  store volatile i16 0, i16* %9, align 2, !dbg !12466, !tbaa !3025
  call void @llvm.dbg.value(metadata i32 0, metadata !12451, metadata !DIExpression()), !dbg !12458
  %15 = bitcast i32* %10 to i8*, !dbg !12467
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15), !dbg !12467
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12452, metadata !DIExpression()), !dbg !12468
  store volatile i32 0, i32* %10, align 4, !dbg !12468, !tbaa !894
  call void @llvm.dbg.value(metadata i32 0, metadata !12453, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 1, metadata !12454, metadata !DIExpression()), !dbg !12458
  %16 = ptrtoint i8* %0 to i32, !dbg !12469
  call void @llvm.dbg.value(metadata i32 %16, metadata !12455, metadata !DIExpression()), !dbg !12458
  %17 = ptrtoint i8* %2 to i32, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %17, metadata !12456, metadata !DIExpression()), !dbg !12458
  %18 = ptrtoint i8* %4 to i32, !dbg !12471
  call void @llvm.dbg.value(metadata i32 %18, metadata !12457, metadata !DIExpression()), !dbg !12458
  %19 = trunc i32 %3 to i16, !dbg !12472
  %20 = shl i16 %19, 3, !dbg !12472
  %21 = and i16 %20, 24, !dbg !12472
  store volatile i16 %21, i16* %8, align 2, !dbg !12473, !tbaa !3025
  %22 = trunc i32 %1 to i16, !dbg !12474
  %23 = shl i16 %22, 3, !dbg !12474
  %24 = and i16 %23, 24, !dbg !12474
  store volatile i16 %24, i16* %9, align 2, !dbg !12475, !tbaa !3025
  tail call arm_aapcs_vfpcc void @HASH_DeInit() #5, !dbg !12476
  %25 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 0, !dbg !12477
  store i32 0, i32* %25, align 4, !dbg !12478, !tbaa !934
  %26 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 1, !dbg !12479
  store i32 64, i32* %26, align 4, !dbg !12480, !tbaa !1690
  %27 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 2, !dbg !12481
  store i32 32, i32* %27, align 4, !dbg !12482, !tbaa !968
  %28 = icmp ugt i32 %1, 64, !dbg !12483
  %29 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %6, i32 0, i32 3, !dbg !12485
  %30 = select i1 %28, i32 65536, i32 0
  store i32 %30, i32* %29, align 4, !dbg !12485, !tbaa !985
  call arm_aapcs_vfpcc void @HASH_Init(%struct.DMA_TypeDef* nonnull %6) #5, !dbg !12486
  %31 = load volatile i16, i16* %9, align 2, !dbg !12487, !tbaa !3025
  call arm_aapcs_vfpcc void @HASH_SetLastWordValidBitsNbr(i16 zeroext %31) #5, !dbg !12488
  call void @llvm.dbg.value(metadata i32 %16, metadata !12455, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 0, metadata !12451, metadata !DIExpression()), !dbg !12458
  %32 = icmp eq i32 %1, 0, !dbg !12489
  br i1 %32, label %41, label %33, !dbg !12492

33:                                               ; preds = %5, %33
  %34 = phi i32 [ %38, %33 ], [ %16, %5 ]
  %35 = phi i32 [ %39, %33 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %34, metadata !12455, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 %35, metadata !12451, metadata !DIExpression()), !dbg !12458
  %36 = inttoptr i32 %34 to i32*, !dbg !12493
  %37 = load i32, i32* %36, align 4, !dbg !12495, !tbaa !894
  call arm_aapcs_vfpcc void @HASH_DataIn(i32 %37) #5, !dbg !12496
  %38 = add i32 %34, 4, !dbg !12497
  call void @llvm.dbg.value(metadata i32 %38, metadata !12455, metadata !DIExpression()), !dbg !12458
  %39 = add i32 %35, 4, !dbg !12498
  call void @llvm.dbg.value(metadata i32 %39, metadata !12451, metadata !DIExpression()), !dbg !12458
  %40 = icmp ult i32 %39, %1, !dbg !12489
  br i1 %40, label %33, label %41, !dbg !12492, !llvm.loop !12499

41:                                               ; preds = %33, %5
  call arm_aapcs_vfpcc void @HASH_StartDigest() #5, !dbg !12501
  br label %42, !dbg !12502

42:                                               ; preds = %42, %41
  %43 = call arm_aapcs_vfpcc i32 @HASH_GetFlagStatus(i16 zeroext 8) #5, !dbg !12503
  call void @llvm.dbg.value(metadata i32 %43, metadata !12453, metadata !DIExpression()), !dbg !12458
  %44 = load volatile i32, i32* %10, align 4, !dbg !12505, !tbaa !894
  %45 = add i32 %44, 1, !dbg !12505
  store volatile i32 %45, i32* %10, align 4, !dbg !12505, !tbaa !894
  %46 = load volatile i32, i32* %10, align 4, !dbg !12506, !tbaa !894
  %47 = icmp ne i32 %46, 65536, !dbg !12507
  %48 = icmp ne i32 %43, 0, !dbg !12508
  %49 = and i1 %48, %47, !dbg !12508
  br i1 %49, label %42, label %50, !dbg !12509, !llvm.loop !12510

50:                                               ; preds = %42
  br i1 %48, label %117, label %51, !dbg !12512

51:                                               ; preds = %50
  %52 = load volatile i16, i16* %8, align 2, !dbg !12513, !tbaa !3025
  call arm_aapcs_vfpcc void @HASH_SetLastWordValidBitsNbr(i16 zeroext %52) #5, !dbg !12516
  call void @llvm.dbg.value(metadata i32 0, metadata !12451, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 %17, metadata !12456, metadata !DIExpression()), !dbg !12458
  %53 = icmp eq i32 %3, 0, !dbg !12517
  br i1 %53, label %62, label %54, !dbg !12520

54:                                               ; preds = %51, %54
  %55 = phi i32 [ %59, %54 ], [ %17, %51 ]
  %56 = phi i32 [ %60, %54 ], [ 0, %51 ]
  call void @llvm.dbg.value(metadata i32 %55, metadata !12456, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 %56, metadata !12451, metadata !DIExpression()), !dbg !12458
  %57 = inttoptr i32 %55 to i32*, !dbg !12521
  %58 = load i32, i32* %57, align 4, !dbg !12523, !tbaa !894
  call arm_aapcs_vfpcc void @HASH_DataIn(i32 %58) #5, !dbg !12524
  %59 = add i32 %55, 4, !dbg !12525
  call void @llvm.dbg.value(metadata i32 %59, metadata !12456, metadata !DIExpression()), !dbg !12458
  %60 = add i32 %56, 4, !dbg !12526
  call void @llvm.dbg.value(metadata i32 %60, metadata !12451, metadata !DIExpression()), !dbg !12458
  %61 = icmp ult i32 %60, %3, !dbg !12517
  br i1 %61, label %54, label %62, !dbg !12520, !llvm.loop !12527

62:                                               ; preds = %54, %51
  call arm_aapcs_vfpcc void @HASH_StartDigest() #5, !dbg !12529
  store volatile i32 0, i32* %10, align 4, !dbg !12530, !tbaa !894
  br label %63, !dbg !12531

63:                                               ; preds = %63, %62
  %64 = call arm_aapcs_vfpcc i32 @HASH_GetFlagStatus(i16 zeroext 8) #5, !dbg !12532
  call void @llvm.dbg.value(metadata i32 %64, metadata !12453, metadata !DIExpression()), !dbg !12458
  %65 = load volatile i32, i32* %10, align 4, !dbg !12534, !tbaa !894
  %66 = add i32 %65, 1, !dbg !12534
  store volatile i32 %66, i32* %10, align 4, !dbg !12534, !tbaa !894
  %67 = load volatile i32, i32* %10, align 4, !dbg !12535, !tbaa !894
  %68 = icmp ne i32 %67, 65536, !dbg !12536
  %69 = icmp ne i32 %64, 0, !dbg !12537
  %70 = and i1 %69, %68, !dbg !12537
  br i1 %70, label %63, label %71, !dbg !12538, !llvm.loop !12539

71:                                               ; preds = %63
  br i1 %69, label %117, label %72, !dbg !12541

72:                                               ; preds = %71
  %73 = load volatile i16, i16* %9, align 2, !dbg !12542, !tbaa !3025
  call arm_aapcs_vfpcc void @HASH_SetLastWordValidBitsNbr(i16 zeroext %73) #5, !dbg !12545
  call void @llvm.dbg.value(metadata i32 %16, metadata !12455, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 0, metadata !12451, metadata !DIExpression()), !dbg !12458
  br i1 %32, label %82, label %74, !dbg !12546

74:                                               ; preds = %72, %74
  %75 = phi i32 [ %79, %74 ], [ %16, %72 ]
  %76 = phi i32 [ %80, %74 ], [ 0, %72 ]
  call void @llvm.dbg.value(metadata i32 %75, metadata !12455, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 %76, metadata !12451, metadata !DIExpression()), !dbg !12458
  %77 = inttoptr i32 %75 to i32*, !dbg !12548
  %78 = load i32, i32* %77, align 4, !dbg !12551, !tbaa !894
  call arm_aapcs_vfpcc void @HASH_DataIn(i32 %78) #5, !dbg !12552
  %79 = add i32 %75, 4, !dbg !12553
  call void @llvm.dbg.value(metadata i32 %79, metadata !12455, metadata !DIExpression()), !dbg !12458
  %80 = add i32 %76, 4, !dbg !12554
  call void @llvm.dbg.value(metadata i32 %80, metadata !12451, metadata !DIExpression()), !dbg !12458
  %81 = icmp ult i32 %80, %1, !dbg !12555
  br i1 %81, label %74, label %82, !dbg !12546, !llvm.loop !12556

82:                                               ; preds = %74, %72
  call arm_aapcs_vfpcc void @HASH_StartDigest() #5, !dbg !12558
  store volatile i32 0, i32* %10, align 4, !dbg !12559, !tbaa !894
  br label %83, !dbg !12560

83:                                               ; preds = %83, %82
  %84 = call arm_aapcs_vfpcc i32 @HASH_GetFlagStatus(i16 zeroext 8) #5, !dbg !12561
  call void @llvm.dbg.value(metadata i32 %84, metadata !12453, metadata !DIExpression()), !dbg !12458
  %85 = load volatile i32, i32* %10, align 4, !dbg !12563, !tbaa !894
  %86 = add i32 %85, 1, !dbg !12563
  store volatile i32 %86, i32* %10, align 4, !dbg !12563, !tbaa !894
  %87 = load volatile i32, i32* %10, align 4, !dbg !12564, !tbaa !894
  %88 = icmp ne i32 %87, 65536, !dbg !12565
  %89 = icmp ne i32 %84, 0, !dbg !12566
  %90 = and i1 %89, %88, !dbg !12566
  br i1 %90, label %83, label %91, !dbg !12567, !llvm.loop !12568

91:                                               ; preds = %83
  br i1 %89, label %117, label %92, !dbg !12570

92:                                               ; preds = %91
  call arm_aapcs_vfpcc void @HASH_GetDigest(%struct.HASH_MsgDigest* nonnull %7) #5, !dbg !12571
  %93 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %7, i32 0, i32 0, i32 0, !dbg !12574
  %94 = load i32, i32* %93, align 4, !dbg !12574, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %94, metadata !12400, metadata !DIExpression()) #6, !dbg !12575
  %95 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %94) #6, !dbg !12577, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %95, metadata !12403, metadata !DIExpression()) #6, !dbg !12575
  %96 = bitcast i8* %4 to i32*, !dbg !12578
  store i32 %95, i32* %96, align 4, !dbg !12579, !tbaa !894
  %97 = add i32 %18, 4, !dbg !12580
  call void @llvm.dbg.value(metadata i32 %97, metadata !12457, metadata !DIExpression()), !dbg !12458
  %98 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %7, i32 0, i32 0, i32 1, !dbg !12581
  %99 = load i32, i32* %98, align 4, !dbg !12581, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %99, metadata !12400, metadata !DIExpression()) #6, !dbg !12582
  %100 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %99) #6, !dbg !12584, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %100, metadata !12403, metadata !DIExpression()) #6, !dbg !12582
  %101 = inttoptr i32 %97 to i32*, !dbg !12585
  store i32 %100, i32* %101, align 4, !dbg !12586, !tbaa !894
  %102 = add i32 %18, 8, !dbg !12587
  call void @llvm.dbg.value(metadata i32 %102, metadata !12457, metadata !DIExpression()), !dbg !12458
  %103 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %7, i32 0, i32 0, i32 2, !dbg !12588
  %104 = load i32, i32* %103, align 4, !dbg !12588, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %104, metadata !12400, metadata !DIExpression()) #6, !dbg !12589
  %105 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %104) #6, !dbg !12591, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %105, metadata !12403, metadata !DIExpression()) #6, !dbg !12589
  %106 = inttoptr i32 %102 to i32*, !dbg !12592
  store i32 %105, i32* %106, align 4, !dbg !12593, !tbaa !894
  %107 = add i32 %18, 12, !dbg !12594
  call void @llvm.dbg.value(metadata i32 %107, metadata !12457, metadata !DIExpression()), !dbg !12458
  %108 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %7, i32 0, i32 0, i32 3, !dbg !12595
  %109 = load i32, i32* %108, align 4, !dbg !12595, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %109, metadata !12400, metadata !DIExpression()) #6, !dbg !12596
  %110 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %109) #6, !dbg !12598, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %110, metadata !12403, metadata !DIExpression()) #6, !dbg !12596
  %111 = inttoptr i32 %107 to i32*, !dbg !12599
  store i32 %110, i32* %111, align 4, !dbg !12600, !tbaa !894
  %112 = add i32 %18, 16, !dbg !12601
  call void @llvm.dbg.value(metadata i32 %112, metadata !12457, metadata !DIExpression()), !dbg !12458
  %113 = getelementptr inbounds %struct.HASH_MsgDigest, %struct.HASH_MsgDigest* %7, i32 0, i32 0, i32 4, !dbg !12602
  %114 = load i32, i32* %113, align 4, !dbg !12602, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %114, metadata !12400, metadata !DIExpression()) #6, !dbg !12603
  %115 = call i32 asm sideeffect "rev $0, $1", "=r,r"(i32 %114) #6, !dbg !12605, !srcloc !12407
  call void @llvm.dbg.value(metadata i32 %115, metadata !12403, metadata !DIExpression()) #6, !dbg !12603
  %116 = inttoptr i32 %112 to i32*, !dbg !12606
  store i32 %115, i32* %116, align 4, !dbg !12607, !tbaa !894
  br label %117

117:                                              ; preds = %91, %71, %50, %92
  %118 = phi i32 [ 1, %92 ], [ 0, %50 ], [ 0, %71 ], [ 0, %91 ], !dbg !12458
  call void @llvm.dbg.value(metadata i32 %118, metadata !12454, metadata !DIExpression()), !dbg !12458
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !12608
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %14), !dbg !12608
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %13), !dbg !12608
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %12) #6, !dbg !12608
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6, !dbg !12608
  ret i32 %118, !dbg !12609
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @USART_DeInit(%struct.USART_TypeDef* %0) local_unnamed_addr #3 !dbg !12610 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12614, metadata !DIExpression()), !dbg !12615
  %2 = ptrtoint %struct.USART_TypeDef* %0 to i32, !dbg !12616
  switch i32 %2, label %9 [
    i32 1073811456, label %3
    i32 1073759232, label %4
    i32 1073760256, label %5
    i32 1073761280, label %6
    i32 1073762304, label %7
    i32 1073812480, label %8
  ], !dbg !12616

3:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 16, i32 1) #5, !dbg !12617
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 16, i32 0) #5, !dbg !12620
  br label %9, !dbg !12621

4:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 131072, i32 1) #5, !dbg !12622
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 131072, i32 0) #5, !dbg !12625
  br label %9, !dbg !12626

5:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 262144, i32 1) #5, !dbg !12627
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 262144, i32 0) #5, !dbg !12630
  br label %9, !dbg !12631

6:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 524288, i32 1) #5, !dbg !12632
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 524288, i32 0) #5, !dbg !12635
  br label %9, !dbg !12636

7:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 1048576, i32 1) #5, !dbg !12637
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 1048576, i32 0) #5, !dbg !12640
  br label %9, !dbg !12641

8:                                                ; preds = %1
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 32, i32 1) #5, !dbg !12642
  tail call arm_aapcs_vfpcc void @RCC_APB2PeriphResetCmd(i32 32, i32 0) #5, !dbg !12646
  br label %9, !dbg !12647

9:                                                ; preds = %1, %4, %6, %8, %7, %5, %3
  ret void, !dbg !12648
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @USART_Init(%struct.USART_TypeDef* %0, %struct.USART_InitTypeDef* nocapture readonly %1) local_unnamed_addr #3 !dbg !12649 {
  %3 = alloca %struct.DMA_TypeDef, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12664, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.value(metadata %struct.USART_InitTypeDef* %1, metadata !12665, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.value(metadata i32 0, metadata !12666, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.value(metadata i32 0, metadata !12667, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.value(metadata i32 0, metadata !12668, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.value(metadata i32 0, metadata !12669, metadata !DIExpression()), !dbg !12678
  %4 = bitcast %struct.DMA_TypeDef* %3 to i8*, !dbg !12679
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #6, !dbg !12679
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %3, metadata !12670, metadata !DIExpression()), !dbg !12680
  %5 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 5, !dbg !12681
  %6 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 8, !dbg !12683
  %7 = load volatile i16, i16* %6, align 2, !dbg !12683, !tbaa !12684
  call void @llvm.dbg.value(metadata i16 %7, metadata !12666, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12678
  %8 = and i16 %7, -12289, !dbg !12686
  call void @llvm.dbg.value(metadata i16 %8, metadata !12666, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12678
  %9 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 2, !dbg !12687
  %10 = load i16, i16* %9, align 2, !dbg !12687, !tbaa !12688
  %11 = or i16 %8, %10, !dbg !12690
  call void @llvm.dbg.value(metadata i16 %11, metadata !12666, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12678
  store volatile i16 %11, i16* %6, align 2, !dbg !12691, !tbaa !12684
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !12692
  %13 = load volatile i16, i16* %12, align 2, !dbg !12692, !tbaa !12693
  call void @llvm.dbg.value(metadata i16 %13, metadata !12666, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12678
  %14 = and i16 %13, -5645, !dbg !12694
  call void @llvm.dbg.value(metadata i16 %14, metadata !12666, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12678
  %15 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 1, !dbg !12695
  %16 = load i16, i16* %15, align 4, !dbg !12695, !tbaa !12696
  %17 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 3, !dbg !12697
  %18 = load i16, i16* %17, align 4, !dbg !12697, !tbaa !12698
  %19 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 4, !dbg !12699
  %20 = load i16, i16* %19, align 2, !dbg !12699, !tbaa !12700
  %21 = or i16 %14, %16, !dbg !12701
  %22 = or i16 %21, %18, !dbg !12702
  %23 = or i16 %22, %20, !dbg !12703
  call void @llvm.dbg.value(metadata i16 %23, metadata !12666, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12678
  store volatile i16 %23, i16* %12, align 2, !dbg !12704, !tbaa !12693
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !12705
  %25 = load volatile i16, i16* %24, align 2, !dbg !12705, !tbaa !12706
  call void @llvm.dbg.value(metadata i16 %25, metadata !12666, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12678
  %26 = and i16 %25, -769, !dbg !12707
  call void @llvm.dbg.value(metadata i16 %26, metadata !12666, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12678
  %27 = load i16, i16* %5, align 4, !dbg !12708, !tbaa !12709
  %28 = or i16 %26, %27, !dbg !12710
  call void @llvm.dbg.value(metadata i16 %28, metadata !12666, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12678
  store volatile i16 %28, i16* %24, align 2, !dbg !12711, !tbaa !12706
  call arm_aapcs_vfpcc void @RCC_GetClocksFreq(%struct.DMA_TypeDef* nonnull %3) #5, !dbg !12712
  %29 = ptrtoint %struct.USART_TypeDef* %0 to i32, !dbg !12713
  switch i32 %29, label %32 [
    i32 1073812480, label %30
    i32 1073811456, label %30
  ], !dbg !12713

30:                                               ; preds = %2, %2
  %31 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %3, i32 0, i32 3, !dbg !12715
  call void @llvm.dbg.value(metadata i32 undef, metadata !12667, metadata !DIExpression()), !dbg !12678
  br label %34, !dbg !12717

32:                                               ; preds = %2
  %33 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %3, i32 0, i32 2, !dbg !12718
  call void @llvm.dbg.value(metadata i32 %36, metadata !12667, metadata !DIExpression()), !dbg !12678
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i32* [ %33, %32 ], [ %31, %30 ]
  %36 = load i32, i32* %35, align 4, !dbg !12720, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %36, metadata !12667, metadata !DIExpression()), !dbg !12678
  %37 = load volatile i16, i16* %12, align 2, !dbg !12721, !tbaa !12693
  %38 = icmp sgt i16 %37, -1, !dbg !12723
  %39 = mul i32 %36, 25, !dbg !12724
  %40 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 0, !dbg !12724
  %41 = load i32, i32* %40, align 4, !dbg !12724, !tbaa !12725
  %42 = select i1 %38, i32 2, i32 1, !dbg !12726
  %43 = shl i32 %41, %42, !dbg !12726
  %44 = udiv i32 %39, %43, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %44, metadata !12668, metadata !DIExpression()), !dbg !12678
  %45 = udiv i32 %44, 100, !dbg !12727
  call void @llvm.dbg.value(metadata i32 %45, metadata !12666, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shl, DW_OP_stack_value)), !dbg !12678
  %46 = mul i32 %45, -100, !dbg !12728
  %47 = add i32 %46, %44, !dbg !12729
  call void @llvm.dbg.value(metadata i32 %47, metadata !12669, metadata !DIExpression()), !dbg !12678
  %48 = load volatile i16, i16* %12, align 2, !dbg !12730, !tbaa !12693
  %49 = icmp sgt i16 %48, -1, !dbg !12732
  %50 = select i1 %49, i32 4, i32 3, !dbg !12733
  %51 = select i1 %49, i32 15, i32 7, !dbg !12733
  %52 = shl i32 %47, %50, !dbg !12734
  %53 = add i32 %52, 50, !dbg !12734
  %54 = udiv i32 %53, 100, !dbg !12734
  %55 = and i32 %54, %51, !dbg !12734
  %56 = shl nuw nsw i32 %45, 4, !dbg !12735
  call void @llvm.dbg.value(metadata i32 %56, metadata !12666, metadata !DIExpression()), !dbg !12678
  %57 = or i32 %55, %56, !dbg !12734
  call void @llvm.dbg.value(metadata i32 %57, metadata !12666, metadata !DIExpression()), !dbg !12678
  %58 = trunc i32 %57 to i16, !dbg !12736
  %59 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12737
  store volatile i16 %58, i16* %59, align 2, !dbg !12738, !tbaa !12739
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #6, !dbg !12740
  ret void, !dbg !12740
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @USART_StructInit(%struct.USART_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !12741 {
  call void @llvm.dbg.value(metadata %struct.USART_InitTypeDef* %0, metadata !12745, metadata !DIExpression()), !dbg !12746
  %2 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 0, !dbg !12747
  store i32 9600, i32* %2, align 4, !dbg !12748, !tbaa !12725
  %3 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 1, !dbg !12749
  store i16 0, i16* %3, align 4, !dbg !12750, !tbaa !12696
  %4 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 2, !dbg !12751
  store i16 0, i16* %4, align 2, !dbg !12752, !tbaa !12688
  %5 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 3, !dbg !12753
  store i16 0, i16* %5, align 4, !dbg !12754, !tbaa !12698
  %6 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 4, !dbg !12755
  store i16 12, i16* %6, align 2, !dbg !12756, !tbaa !12700
  %7 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 5, !dbg !12757
  store i16 0, i16* %7, align 4, !dbg !12758, !tbaa !12709
  ret void, !dbg !12759
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_ClockInit(%struct.USART_TypeDef* %0, %struct.CRYP_InitTypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !12760 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12772, metadata !DIExpression()), !dbg !12775
  call void @llvm.dbg.value(metadata %struct.CRYP_InitTypeDef* %1, metadata !12773, metadata !DIExpression()), !dbg !12775
  call void @llvm.dbg.value(metadata i32 0, metadata !12774, metadata !DIExpression()), !dbg !12775
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 8, !dbg !12776
  %4 = load volatile i16, i16* %3, align 2, !dbg !12776, !tbaa !12684
  call void @llvm.dbg.value(metadata i16 %4, metadata !12774, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12775
  %5 = and i16 %4, -3841, !dbg !12777
  call void @llvm.dbg.value(metadata i16 %5, metadata !12774, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12775
  %6 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %1, i32 0, i32 0, !dbg !12778
  %7 = load i16, i16* %6, align 2, !dbg !12778, !tbaa !7773
  %8 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %1, i32 0, i32 1, !dbg !12779
  %9 = load i16, i16* %8, align 2, !dbg !12779, !tbaa !7776
  %10 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %1, i32 0, i32 2, !dbg !12780
  %11 = load i16, i16* %10, align 2, !dbg !12780, !tbaa !7779
  %12 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %1, i32 0, i32 3, !dbg !12781
  %13 = load i16, i16* %12, align 2, !dbg !12781, !tbaa !7606
  %14 = or i16 %5, %7, !dbg !12782
  %15 = or i16 %14, %9, !dbg !12783
  %16 = or i16 %15, %11, !dbg !12784
  %17 = or i16 %16, %13, !dbg !12785
  call void @llvm.dbg.value(metadata i16 %17, metadata !12774, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12775
  store volatile i16 %17, i16* %3, align 2, !dbg !12786, !tbaa !12684
  ret void, !dbg !12787
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @USART_ClockStructInit(%struct.CRYP_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !12788 {
  call void @llvm.dbg.value(metadata %struct.CRYP_InitTypeDef* %0, metadata !12792, metadata !DIExpression()), !dbg !12793
  %2 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 0, !dbg !12794
  store i16 0, i16* %2, align 2, !dbg !12795, !tbaa !7773
  %3 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 1, !dbg !12796
  store i16 0, i16* %3, align 2, !dbg !12797, !tbaa !7776
  %4 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 2, !dbg !12798
  store i16 0, i16* %4, align 2, !dbg !12799, !tbaa !7779
  %5 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 3, !dbg !12800
  store i16 0, i16* %5, align 2, !dbg !12801, !tbaa !7606
  ret void, !dbg !12802
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_Cmd(%struct.USART_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12803 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12807, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i32 %1, metadata !12808, metadata !DIExpression()), !dbg !12809
  %3 = icmp eq i32 %1, 0, !dbg !12810
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !12812
  %5 = load volatile i16, i16* %4, align 2, !dbg !12812, !tbaa !12693
  %6 = and i16 %5, -8193, !dbg !12813
  %7 = select i1 %3, i16 0, i16 8192, !dbg !12813
  %8 = or i16 %6, %7, !dbg !12813
  store volatile i16 %8, i16* %4, align 2, !dbg !12812, !tbaa !12693
  ret void, !dbg !12814
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_SetPrescaler(%struct.USART_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !12815 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12819, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.value(metadata i8 %1, metadata !12820, metadata !DIExpression()), !dbg !12821
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 12, !dbg !12822
  %4 = load volatile i16, i16* %3, align 2, !dbg !12823, !tbaa !12824
  %5 = and i16 %4, -256, !dbg !12823
  store volatile i16 %5, i16* %3, align 2, !dbg !12823, !tbaa !12824
  %6 = zext i8 %1 to i16, !dbg !12825
  %7 = load volatile i16, i16* %3, align 2, !dbg !12826, !tbaa !12824
  %8 = or i16 %7, %6, !dbg !12826
  store volatile i16 %8, i16* %3, align 2, !dbg !12826, !tbaa !12824
  ret void, !dbg !12827
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_OverSampling8Cmd(%struct.USART_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12828 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12830, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata i32 %1, metadata !12831, metadata !DIExpression()), !dbg !12832
  %3 = icmp eq i32 %1, 0, !dbg !12833
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !12835
  %5 = load volatile i16, i16* %4, align 2, !dbg !12835, !tbaa !12693
  %6 = and i16 %5, 32767, !dbg !12836
  %7 = select i1 %3, i16 0, i16 -32768, !dbg !12836
  %8 = or i16 %6, %7, !dbg !12836
  store volatile i16 %8, i16* %4, align 2, !dbg !12835, !tbaa !12693
  ret void, !dbg !12837
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_OneBitMethodCmd(%struct.USART_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12838 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12840, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata i32 %1, metadata !12841, metadata !DIExpression()), !dbg !12842
  %3 = icmp eq i32 %1, 0, !dbg !12843
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !12845
  %5 = load volatile i16, i16* %4, align 2, !dbg !12845, !tbaa !12706
  %6 = and i16 %5, -2049, !dbg !12846
  %7 = select i1 %3, i16 0, i16 2048, !dbg !12846
  %8 = or i16 %6, %7, !dbg !12846
  store volatile i16 %8, i16* %4, align 2, !dbg !12845, !tbaa !12706
  ret void, !dbg !12847
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_SendData(%struct.USART_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !12848 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12852, metadata !DIExpression()), !dbg !12854
  call void @llvm.dbg.value(metadata i16 %1, metadata !12853, metadata !DIExpression()), !dbg !12854
  %3 = and i16 %1, 511, !dbg !12855
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12856
  store volatile i16 %3, i16* %4, align 2, !dbg !12857, !tbaa !12858
  ret void, !dbg !12859
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @USART_ReceiveData(%struct.USART_TypeDef* %0) local_unnamed_addr #0 !dbg !12860 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12864, metadata !DIExpression()), !dbg !12865
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12866
  %3 = load volatile i16, i16* %2, align 2, !dbg !12866, !tbaa !12858
  %4 = and i16 %3, 511, !dbg !12867
  ret i16 %4, !dbg !12868
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_SetAddress(%struct.USART_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !12869 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12871, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.value(metadata i8 %1, metadata !12872, metadata !DIExpression()), !dbg !12873
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 8, !dbg !12874
  %4 = load volatile i16, i16* %3, align 2, !dbg !12875, !tbaa !12684
  %5 = and i16 %4, -16, !dbg !12875
  store volatile i16 %5, i16* %3, align 2, !dbg !12875, !tbaa !12684
  %6 = zext i8 %1 to i16, !dbg !12876
  %7 = load volatile i16, i16* %3, align 2, !dbg !12877, !tbaa !12684
  %8 = or i16 %7, %6, !dbg !12877
  store volatile i16 %8, i16* %3, align 2, !dbg !12877, !tbaa !12684
  ret void, !dbg !12878
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_ReceiverWakeUpCmd(%struct.USART_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12879 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12881, metadata !DIExpression()), !dbg !12883
  call void @llvm.dbg.value(metadata i32 %1, metadata !12882, metadata !DIExpression()), !dbg !12883
  %3 = icmp eq i32 %1, 0, !dbg !12884
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !12886
  %5 = load volatile i16, i16* %4, align 2, !dbg !12886, !tbaa !12693
  %6 = and i16 %5, -3, !dbg !12887
  %7 = select i1 %3, i16 0, i16 2, !dbg !12887
  %8 = or i16 %6, %7, !dbg !12887
  store volatile i16 %8, i16* %4, align 2, !dbg !12886, !tbaa !12693
  ret void, !dbg !12888
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_WakeUpConfig(%struct.USART_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !12889 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12891, metadata !DIExpression()), !dbg !12893
  call void @llvm.dbg.value(metadata i16 %1, metadata !12892, metadata !DIExpression()), !dbg !12893
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !12894
  %4 = load volatile i16, i16* %3, align 2, !dbg !12895, !tbaa !12693
  %5 = and i16 %4, -2049, !dbg !12895
  store volatile i16 %5, i16* %3, align 2, !dbg !12895, !tbaa !12693
  %6 = load volatile i16, i16* %3, align 2, !dbg !12896, !tbaa !12693
  %7 = or i16 %6, %1, !dbg !12896
  store volatile i16 %7, i16* %3, align 2, !dbg !12896, !tbaa !12693
  ret void, !dbg !12897
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_LINBreakDetectLengthConfig(%struct.USART_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !12898 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12900, metadata !DIExpression()), !dbg !12902
  call void @llvm.dbg.value(metadata i16 %1, metadata !12901, metadata !DIExpression()), !dbg !12902
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 8, !dbg !12903
  %4 = load volatile i16, i16* %3, align 2, !dbg !12904, !tbaa !12684
  %5 = and i16 %4, -33, !dbg !12904
  store volatile i16 %5, i16* %3, align 2, !dbg !12904, !tbaa !12684
  %6 = load volatile i16, i16* %3, align 2, !dbg !12905, !tbaa !12684
  %7 = or i16 %6, %1, !dbg !12905
  store volatile i16 %7, i16* %3, align 2, !dbg !12905, !tbaa !12684
  ret void, !dbg !12906
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_LINCmd(%struct.USART_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12907 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12909, metadata !DIExpression()), !dbg !12911
  call void @llvm.dbg.value(metadata i32 %1, metadata !12910, metadata !DIExpression()), !dbg !12911
  %3 = icmp eq i32 %1, 0, !dbg !12912
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 8, !dbg !12914
  %5 = load volatile i16, i16* %4, align 2, !dbg !12914, !tbaa !12684
  %6 = and i16 %5, -16385, !dbg !12915
  %7 = select i1 %3, i16 0, i16 16384, !dbg !12915
  %8 = or i16 %6, %7, !dbg !12915
  store volatile i16 %8, i16* %4, align 2, !dbg !12914, !tbaa !12684
  ret void, !dbg !12916
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_SendBreak(%struct.USART_TypeDef* %0) local_unnamed_addr #0 !dbg !12917 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12919, metadata !DIExpression()), !dbg !12920
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !12921
  %3 = load volatile i16, i16* %2, align 2, !dbg !12922, !tbaa !12693
  %4 = or i16 %3, 1, !dbg !12922
  store volatile i16 %4, i16* %2, align 2, !dbg !12922, !tbaa !12693
  ret void, !dbg !12923
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_HalfDuplexCmd(%struct.USART_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12924 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12926, metadata !DIExpression()), !dbg !12928
  call void @llvm.dbg.value(metadata i32 %1, metadata !12927, metadata !DIExpression()), !dbg !12928
  %3 = icmp eq i32 %1, 0, !dbg !12929
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !12931
  %5 = load volatile i16, i16* %4, align 2, !dbg !12931, !tbaa !12706
  %6 = and i16 %5, -9, !dbg !12932
  %7 = select i1 %3, i16 0, i16 8, !dbg !12932
  %8 = or i16 %6, %7, !dbg !12932
  store volatile i16 %8, i16* %4, align 2, !dbg !12931, !tbaa !12706
  ret void, !dbg !12933
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_SetGuardTime(%struct.USART_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !12934 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12936, metadata !DIExpression()), !dbg !12938
  call void @llvm.dbg.value(metadata i8 %1, metadata !12937, metadata !DIExpression()), !dbg !12938
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 12, !dbg !12939
  %4 = load volatile i16, i16* %3, align 2, !dbg !12940, !tbaa !12824
  %5 = and i16 %4, 255, !dbg !12940
  store volatile i16 %5, i16* %3, align 2, !dbg !12940, !tbaa !12824
  %6 = zext i8 %1 to i16, !dbg !12941
  %7 = shl nuw i16 %6, 8, !dbg !12942
  %8 = load volatile i16, i16* %3, align 2, !dbg !12943, !tbaa !12824
  %9 = or i16 %8, %7, !dbg !12943
  store volatile i16 %9, i16* %3, align 2, !dbg !12943, !tbaa !12824
  ret void, !dbg !12944
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_SmartCardCmd(%struct.USART_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12945 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12947, metadata !DIExpression()), !dbg !12949
  call void @llvm.dbg.value(metadata i32 %1, metadata !12948, metadata !DIExpression()), !dbg !12949
  %3 = icmp eq i32 %1, 0, !dbg !12950
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !12952
  %5 = load volatile i16, i16* %4, align 2, !dbg !12952, !tbaa !12706
  %6 = and i16 %5, -33, !dbg !12953
  %7 = select i1 %3, i16 0, i16 32, !dbg !12953
  %8 = or i16 %6, %7, !dbg !12953
  store volatile i16 %8, i16* %4, align 2, !dbg !12952, !tbaa !12706
  ret void, !dbg !12954
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_SmartCardNACKCmd(%struct.USART_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12955 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12957, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.value(metadata i32 %1, metadata !12958, metadata !DIExpression()), !dbg !12959
  %3 = icmp eq i32 %1, 0, !dbg !12960
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !12962
  %5 = load volatile i16, i16* %4, align 2, !dbg !12962, !tbaa !12706
  %6 = and i16 %5, -17, !dbg !12963
  %7 = select i1 %3, i16 0, i16 16, !dbg !12963
  %8 = or i16 %6, %7, !dbg !12963
  store volatile i16 %8, i16* %4, align 2, !dbg !12962, !tbaa !12706
  ret void, !dbg !12964
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_IrDAConfig(%struct.USART_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !12965 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12967, metadata !DIExpression()), !dbg !12969
  call void @llvm.dbg.value(metadata i16 %1, metadata !12968, metadata !DIExpression()), !dbg !12969
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !12970
  %4 = load volatile i16, i16* %3, align 2, !dbg !12971, !tbaa !12706
  %5 = and i16 %4, -5, !dbg !12971
  store volatile i16 %5, i16* %3, align 2, !dbg !12971, !tbaa !12706
  %6 = load volatile i16, i16* %3, align 2, !dbg !12972, !tbaa !12706
  %7 = or i16 %6, %1, !dbg !12972
  store volatile i16 %7, i16* %3, align 2, !dbg !12972, !tbaa !12706
  ret void, !dbg !12973
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_IrDACmd(%struct.USART_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !12974 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12976, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.value(metadata i32 %1, metadata !12977, metadata !DIExpression()), !dbg !12978
  %3 = icmp eq i32 %1, 0, !dbg !12979
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !12981
  %5 = load volatile i16, i16* %4, align 2, !dbg !12981, !tbaa !12706
  %6 = and i16 %5, -3, !dbg !12982
  %7 = select i1 %3, i16 0, i16 2, !dbg !12982
  %8 = or i16 %6, %7, !dbg !12982
  store volatile i16 %8, i16* %4, align 2, !dbg !12981, !tbaa !12706
  ret void, !dbg !12983
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_DMACmd(%struct.USART_TypeDef* %0, i16 zeroext %1, i32 %2) local_unnamed_addr #0 !dbg !12984 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12988, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata i16 %1, metadata !12989, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata i32 %2, metadata !12990, metadata !DIExpression()), !dbg !12991
  %4 = icmp eq i32 %2, 0, !dbg !12992
  br i1 %4, label %9, label %5, !dbg !12994

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !12995
  %7 = load volatile i16, i16* %6, align 2, !dbg !12997, !tbaa !12706
  %8 = or i16 %7, %1, !dbg !12997
  store volatile i16 %8, i16* %6, align 2, !dbg !12997, !tbaa !12706
  br label %14, !dbg !12998

9:                                                ; preds = %3
  %10 = xor i16 %1, -1, !dbg !12999
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !13001
  %12 = load volatile i16, i16* %11, align 2, !dbg !13002, !tbaa !12706
  %13 = and i16 %12, %10, !dbg !13002
  store volatile i16 %13, i16* %11, align 2, !dbg !13002, !tbaa !12706
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !13003
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_ITConfig(%struct.USART_TypeDef* %0, i16 zeroext %1, i32 %2) local_unnamed_addr #0 !dbg !13004 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13006, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata i16 %1, metadata !13007, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata i32 %2, metadata !13008, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata i32 0, metadata !13009, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata i32 0, metadata !13010, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata i32 0, metadata !13011, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.value(metadata i32 0, metadata !13012, metadata !DIExpression()), !dbg !13013
  %4 = ptrtoint %struct.USART_TypeDef* %0 to i32, !dbg !13014
  call void @llvm.dbg.value(metadata i32 %4, metadata !13012, metadata !DIExpression()), !dbg !13013
  %5 = lshr i16 %1, 5, !dbg !13015
  call void @llvm.dbg.value(metadata i16 %5, metadata !13009, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13013
  %6 = and i16 %1, 31, !dbg !13016
  %7 = zext i16 %6 to i32, !dbg !13016
  call void @llvm.dbg.value(metadata i32 %7, metadata !13010, metadata !DIExpression()), !dbg !13013
  %8 = shl nuw i32 1, %7, !dbg !13017
  call void @llvm.dbg.value(metadata i32 %8, metadata !13011, metadata !DIExpression()), !dbg !13013
  %9 = trunc i16 %5 to i3, !dbg !13018
  %10 = icmp eq i3 %9, 2, !dbg !13018
  %11 = select i1 %10, i32 16, i32 20, !dbg !13018
  %12 = icmp eq i3 %9, 1, !dbg !13018
  %13 = select i1 %12, i32 12, i32 %11, !dbg !13018
  %14 = add i32 %13, %4, !dbg !13019
  call void @llvm.dbg.value(metadata i32 %14, metadata !13012, metadata !DIExpression()), !dbg !13013
  %15 = icmp eq i32 %2, 0, !dbg !13021
  br i1 %15, label %20, label %16, !dbg !13023

16:                                               ; preds = %3
  %17 = inttoptr i32 %14 to i32*, !dbg !13024
  %18 = load volatile i32, i32* %17, align 4, !dbg !13026, !tbaa !894
  %19 = or i32 %18, %8, !dbg !13026
  store volatile i32 %19, i32* %17, align 4, !dbg !13026, !tbaa !894
  br label %25, !dbg !13027

20:                                               ; preds = %3
  %21 = xor i32 %8, -1, !dbg !13028
  %22 = inttoptr i32 %14 to i32*, !dbg !13030
  %23 = load volatile i32, i32* %22, align 4, !dbg !13031, !tbaa !894
  %24 = and i32 %23, %21, !dbg !13031
  store volatile i32 %24, i32* %22, align 4, !dbg !13031, !tbaa !894
  br label %25

25:                                               ; preds = %20, %16
  ret void, !dbg !13032
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @USART_GetFlagStatus(%struct.USART_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !13033 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13037, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata i16 %1, metadata !13038, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata i32 0, metadata !13039, metadata !DIExpression()), !dbg !13040
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !13041
  %4 = load volatile i16, i16* %3, align 2, !dbg !13041, !tbaa !13043
  %5 = and i16 %4, %1, !dbg !13044
  %6 = icmp ne i16 %5, 0, !dbg !13045
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !13039, metadata !DIExpression()), !dbg !13040
  ret i32 %7, !dbg !13046
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_ClearFlag(%struct.USART_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !13047 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13049, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i16 %1, metadata !13050, metadata !DIExpression()), !dbg !13051
  %3 = xor i16 %1, -1, !dbg !13052
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !13053
  store volatile i16 %3, i16* %4, align 2, !dbg !13054, !tbaa !13043
  ret void, !dbg !13055
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @USART_GetITStatus(%struct.USART_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !13056 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13060, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i16 %1, metadata !13061, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 0, metadata !13062, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 0, metadata !13063, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 0, metadata !13064, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 0, metadata !13065, metadata !DIExpression()), !dbg !13066
  %3 = zext i16 %1 to i32, !dbg !13067
  %4 = lshr i16 %1, 5, !dbg !13069
  call void @llvm.dbg.value(metadata i16 %4, metadata !13064, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13066
  call void @llvm.dbg.value(metadata i32 %3, metadata !13063, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !13066
  call void @llvm.dbg.value(metadata i32 undef, metadata !13063, metadata !DIExpression()), !dbg !13066
  %5 = trunc i16 %4 to i3, !dbg !13070
  switch i3 %5, label %10 [
    i3 1, label %6
    i3 2, label %8
  ], !dbg !13070

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !13071
  call void @llvm.dbg.value(metadata i32 undef, metadata !13063, metadata !DIExpression()), !dbg !13066
  br label %12, !dbg !13074

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 8, !dbg !13075
  call void @llvm.dbg.value(metadata i32 undef, metadata !13063, metadata !DIExpression()), !dbg !13066
  br label %12, !dbg !13078

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 10, !dbg !13079
  call void @llvm.dbg.value(metadata i32 undef, metadata !13063, metadata !DIExpression()), !dbg !13066
  br label %12

12:                                               ; preds = %8, %10, %6
  %13 = phi i16* [ %7, %6 ], [ %9, %8 ], [ %11, %10 ]
  %14 = and i32 %3, 31, !dbg !13081
  call void @llvm.dbg.value(metadata i32 %14, metadata !13063, metadata !DIExpression()), !dbg !13066
  %15 = shl nuw i32 1, %14, !dbg !13082
  call void @llvm.dbg.value(metadata i32 %15, metadata !13063, metadata !DIExpression()), !dbg !13066
  %16 = load volatile i16, i16* %13, align 2, !dbg !13083, !tbaa !3025
  %17 = zext i16 %16 to i32, !dbg !13083
  %18 = and i32 %15, %17, !dbg !13083
  call void @llvm.dbg.value(metadata i32 %18, metadata !13063, metadata !DIExpression()), !dbg !13066
  %19 = lshr i32 %3, 8, !dbg !13084
  call void @llvm.dbg.value(metadata i32 %19, metadata !13062, metadata !DIExpression()), !dbg !13066
  %20 = shl nuw i32 1, %19, !dbg !13085
  call void @llvm.dbg.value(metadata i32 %20, metadata !13062, metadata !DIExpression()), !dbg !13066
  %21 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !13086
  %22 = load volatile i16, i16* %21, align 2, !dbg !13086, !tbaa !13043
  %23 = zext i16 %22 to i32, !dbg !13087
  %24 = and i32 %20, %23, !dbg !13088
  call void @llvm.dbg.value(metadata i32 %24, metadata !13062, metadata !DIExpression()), !dbg !13066
  %25 = icmp ne i32 %18, 0, !dbg !13089
  %26 = icmp ne i32 %24, 0
  %27 = and i1 %25, %26, !dbg !13091
  %28 = zext i1 %27 to i32
  call void @llvm.dbg.value(metadata i32 %28, metadata !13065, metadata !DIExpression()), !dbg !13066
  ret i32 %28, !dbg !13092
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @USART_ClearITPendingBit(%struct.USART_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !13093 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13095, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i16 %1, metadata !13096, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i16 0, metadata !13097, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i16 0, metadata !13098, metadata !DIExpression()), !dbg !13099
  %3 = lshr i16 %1, 8, !dbg !13100
  call void @llvm.dbg.value(metadata i16 %3, metadata !13097, metadata !DIExpression()), !dbg !13099
  %4 = zext i16 %3 to i32, !dbg !13101
  %5 = shl nuw i32 1, %4, !dbg !13102
  call void @llvm.dbg.value(metadata i32 %5, metadata !13098, metadata !DIExpression()), !dbg !13099
  %6 = trunc i32 %5 to i16, !dbg !13103
  %7 = xor i16 %6, -1, !dbg !13103
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !13104
  store volatile i16 %7, i16* %8, align 2, !dbg !13105, !tbaa !13043
  ret void, !dbg !13106
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @DAC_DeInit() local_unnamed_addr #3 !dbg !13107 {
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 536870912, i32 1) #5, !dbg !13108
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 536870912, i32 0) #5, !dbg !13109
  ret void, !dbg !13110
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_Init(i32 %0, %struct.DMA_TypeDef* nocapture readonly %1) local_unnamed_addr #0 !dbg !13111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13124, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %1, metadata !13125, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i32 0, metadata !13126, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i32 0, metadata !13127, metadata !DIExpression()), !dbg !13128
  %3 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13129, !tbaa !13130
  call void @llvm.dbg.value(metadata i32 %3, metadata !13126, metadata !DIExpression()), !dbg !13128
  %4 = shl i32 4094, %0, !dbg !13132
  %5 = xor i32 %4, -1, !dbg !13133
  %6 = and i32 %3, %5, !dbg !13134
  call void @llvm.dbg.value(metadata i32 %6, metadata !13126, metadata !DIExpression()), !dbg !13128
  %7 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %1, i32 0, i32 0, !dbg !13135
  %8 = load i32, i32* %7, align 4, !dbg !13135, !tbaa !934
  %9 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %1, i32 0, i32 1, !dbg !13136
  %10 = load i32, i32* %9, align 4, !dbg !13136, !tbaa !1690
  %11 = or i32 %10, %8, !dbg !13137
  %12 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %1, i32 0, i32 2, !dbg !13138
  %13 = load i32, i32* %12, align 4, !dbg !13138, !tbaa !968
  %14 = or i32 %11, %13, !dbg !13139
  %15 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %1, i32 0, i32 3, !dbg !13140
  %16 = load i32, i32* %15, align 4, !dbg !13140, !tbaa !985
  %17 = or i32 %14, %16, !dbg !13141
  call void @llvm.dbg.value(metadata i32 %17, metadata !13127, metadata !DIExpression()), !dbg !13128
  %18 = shl i32 %17, %0, !dbg !13142
  %19 = or i32 %18, %6, !dbg !13143
  call void @llvm.dbg.value(metadata i32 %19, metadata !13126, metadata !DIExpression()), !dbg !13128
  store volatile i32 %19, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13144, !tbaa !13130
  ret void, !dbg !13145
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @DAC_StructInit(%struct.DMA_TypeDef* nocapture %0) local_unnamed_addr #2 !dbg !13146 {
  call void @llvm.dbg.value(metadata %struct.DMA_TypeDef* %0, metadata !13150, metadata !DIExpression()), !dbg !13151
  %2 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 0, !dbg !13152
  store i32 0, i32* %2, align 4, !dbg !13153, !tbaa !934
  %3 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 1, !dbg !13154
  store i32 0, i32* %3, align 4, !dbg !13155, !tbaa !1690
  %4 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 2, !dbg !13156
  store i32 0, i32* %4, align 4, !dbg !13157, !tbaa !968
  %5 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %0, i32 0, i32 3, !dbg !13158
  store i32 0, i32* %5, align 4, !dbg !13159, !tbaa !985
  ret void, !dbg !13160
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_Cmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13163, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i32 %1, metadata !13164, metadata !DIExpression()), !dbg !13165
  %3 = icmp eq i32 %1, 0, !dbg !13166
  %4 = shl nuw i32 1, %0, !dbg !13168
  br i1 %3, label %8, label %5, !dbg !13169

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13170, !tbaa !13130
  %7 = or i32 %6, %4, !dbg !13170
  br label %12, !dbg !13172

8:                                                ; preds = %2
  %9 = xor i32 %4, -1, !dbg !13173
  %10 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13175, !tbaa !13130
  %11 = and i32 %10, %9, !dbg !13175
  br label %12

12:                                               ; preds = %8, %5
  %13 = phi i32 [ %11, %8 ], [ %7, %5 ]
  store volatile i32 %13, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13168, !tbaa !13130
  ret void, !dbg !13176
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_SoftwareTriggerCmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13179, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.value(metadata i32 %1, metadata !13180, metadata !DIExpression()), !dbg !13181
  %3 = icmp eq i32 %1, 0, !dbg !13182
  %4 = lshr i32 %0, 4, !dbg !13184
  %5 = shl nuw i32 1, %4, !dbg !13184
  br i1 %3, label %9, label %6, !dbg !13185

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073771524 to i32*), align 4, !dbg !13186, !tbaa !13188
  %8 = or i32 %7, %5, !dbg !13186
  br label %13, !dbg !13189

9:                                                ; preds = %2
  %10 = xor i32 %5, -1, !dbg !13190
  %11 = load volatile i32, i32* inttoptr (i32 1073771524 to i32*), align 4, !dbg !13192, !tbaa !13188
  %12 = and i32 %11, %10, !dbg !13192
  br label %13

13:                                               ; preds = %9, %6
  %14 = phi i32 [ %12, %9 ], [ %8, %6 ]
  store volatile i32 %14, i32* inttoptr (i32 1073771524 to i32*), align 4, !dbg !13184, !tbaa !13188
  ret void, !dbg !13193
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_DualSoftwareTriggerCmd(i32 %0) local_unnamed_addr #0 !dbg !13194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13196, metadata !DIExpression()), !dbg !13197
  %2 = icmp eq i32 %0, 0, !dbg !13198
  %3 = load volatile i32, i32* inttoptr (i32 1073771524 to i32*), align 4, !dbg !13200, !tbaa !13188
  %4 = and i32 %3, -4, !dbg !13201
  %5 = select i1 %2, i32 0, i32 3, !dbg !13201
  %6 = or i32 %4, %5, !dbg !13201
  store volatile i32 %6, i32* inttoptr (i32 1073771524 to i32*), align 4, !dbg !13200, !tbaa !13188
  ret void, !dbg !13202
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_WaveGenerationCmd(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !13203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13205, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i32 %1, metadata !13206, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i32 %2, metadata !13207, metadata !DIExpression()), !dbg !13208
  %4 = icmp eq i32 %2, 0, !dbg !13209
  %5 = shl i32 %1, %0, !dbg !13211
  br i1 %4, label %9, label %6, !dbg !13212

6:                                                ; preds = %3
  %7 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13213, !tbaa !13130
  %8 = or i32 %7, %5, !dbg !13213
  br label %13, !dbg !13215

9:                                                ; preds = %3
  %10 = xor i32 %5, -1, !dbg !13216
  %11 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13218, !tbaa !13130
  %12 = and i32 %11, %10, !dbg !13218
  br label %13

13:                                               ; preds = %9, %6
  %14 = phi i32 [ %12, %9 ], [ %8, %6 ]
  store volatile i32 %14, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13211, !tbaa !13130
  ret void, !dbg !13219
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @DAC_SetChannel1Data(i32 %0, i16 zeroext %1) local_unnamed_addr #3 !dbg !13220 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13224, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i16 %1, metadata !13225, metadata !DIExpression()), !dbg !13227
  %4 = bitcast i32* %3 to i8*, !dbg !13228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !13228
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13226, metadata !DIExpression()), !dbg !13229
  store volatile i32 0, i32* %3, align 4, !dbg !13229, !tbaa !894
  store volatile i32 1073771520, i32* %3, align 4, !dbg !13230, !tbaa !894
  %5 = add i32 %0, 8, !dbg !13231
  %6 = load volatile i32, i32* %3, align 4, !dbg !13232, !tbaa !894
  %7 = add i32 %5, %6, !dbg !13232
  store volatile i32 %7, i32* %3, align 4, !dbg !13232, !tbaa !894
  %8 = zext i16 %1 to i32, !dbg !13233
  %9 = load volatile i32, i32* %3, align 4, !dbg !13234, !tbaa !894
  %10 = inttoptr i32 %9 to i32*, !dbg !13235
  store volatile i32 %8, i32* %10, align 4, !dbg !13236, !tbaa !894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !13237
  ret void, !dbg !13237
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @DAC_SetChannel2Data(i32 %0, i16 zeroext %1) local_unnamed_addr #3 !dbg !13238 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13240, metadata !DIExpression()), !dbg !13243
  call void @llvm.dbg.value(metadata i16 %1, metadata !13241, metadata !DIExpression()), !dbg !13243
  %4 = bitcast i32* %3 to i8*, !dbg !13244
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !13244
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13242, metadata !DIExpression()), !dbg !13245
  store volatile i32 0, i32* %3, align 4, !dbg !13245, !tbaa !894
  store volatile i32 1073771520, i32* %3, align 4, !dbg !13246, !tbaa !894
  %5 = add i32 %0, 20, !dbg !13247
  %6 = load volatile i32, i32* %3, align 4, !dbg !13248, !tbaa !894
  %7 = add i32 %5, %6, !dbg !13248
  store volatile i32 %7, i32* %3, align 4, !dbg !13248, !tbaa !894
  %8 = zext i16 %1 to i32, !dbg !13249
  %9 = load volatile i32, i32* %3, align 4, !dbg !13250, !tbaa !894
  %10 = inttoptr i32 %9 to i32*, !dbg !13251
  store volatile i32 %8, i32* %10, align 4, !dbg !13252, !tbaa !894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !13253
  ret void, !dbg !13253
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_SetDualChannelData(i32 %0, i16 zeroext %1, i16 zeroext %2) local_unnamed_addr #0 !dbg !13254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13258, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i16 %1, metadata !13259, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i16 %2, metadata !13260, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i32 0, metadata !13261, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i32 0, metadata !13262, metadata !DIExpression()), !dbg !13263
  %4 = icmp eq i32 %0, 8, !dbg !13264
  %5 = zext i16 %1 to i32, !dbg !13266
  %6 = select i1 %4, i32 8, i32 16, !dbg !13267
  %7 = shl nuw i32 %5, %6, !dbg !13266
  %8 = zext i16 %2 to i32, !dbg !13266
  %9 = or i32 %7, %8, !dbg !13266
  call void @llvm.dbg.value(metadata i32 %9, metadata !13261, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i32 1073771520, metadata !13262, metadata !DIExpression()), !dbg !13263
  %10 = add i32 %0, 1073771552, !dbg !13268
  call void @llvm.dbg.value(metadata i32 %10, metadata !13262, metadata !DIExpression()), !dbg !13263
  %11 = inttoptr i32 %10 to i32*, !dbg !13269
  store volatile i32 %9, i32* %11, align 4, !dbg !13270, !tbaa !894
  ret void, !dbg !13271
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @DAC_GetDataOutputValue(i32 %0) local_unnamed_addr #3 !dbg !13272 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13276, metadata !DIExpression()), !dbg !13278
  %3 = bitcast i32* %2 to i8*, !dbg !13279
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13279
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13277, metadata !DIExpression()), !dbg !13280
  store volatile i32 0, i32* %2, align 4, !dbg !13280, !tbaa !894
  store volatile i32 1073771520, i32* %2, align 4, !dbg !13281, !tbaa !894
  %4 = lshr i32 %0, 2, !dbg !13282
  %5 = add nuw nsw i32 %4, 44, !dbg !13283
  %6 = load volatile i32, i32* %2, align 4, !dbg !13284, !tbaa !894
  %7 = add i32 %5, %6, !dbg !13284
  store volatile i32 %7, i32* %2, align 4, !dbg !13284, !tbaa !894
  %8 = load volatile i32, i32* %2, align 4, !dbg !13285, !tbaa !894
  %9 = inttoptr i32 %8 to i32*, !dbg !13286
  %10 = load volatile i32, i32* %9, align 4, !dbg !13287, !tbaa !894
  %11 = trunc i32 %10 to i16, !dbg !13288
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13289
  ret i16 %11, !dbg !13290
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_DMACmd(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13293, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.value(metadata i32 %1, metadata !13294, metadata !DIExpression()), !dbg !13295
  %3 = icmp eq i32 %1, 0, !dbg !13296
  %4 = shl i32 4096, %0, !dbg !13298
  br i1 %3, label %8, label %5, !dbg !13299

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13300, !tbaa !13130
  %7 = or i32 %6, %4, !dbg !13300
  br label %12, !dbg !13302

8:                                                ; preds = %2
  %9 = xor i32 %4, -1, !dbg !13303
  %10 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13305, !tbaa !13130
  %11 = and i32 %10, %9, !dbg !13305
  br label %12

12:                                               ; preds = %8, %5
  %13 = phi i32 [ %11, %8 ], [ %7, %5 ]
  store volatile i32 %13, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13298, !tbaa !13130
  ret void, !dbg !13306
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_ITConfig(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !13307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13309, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata i32 %1, metadata !13310, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata i32 %2, metadata !13311, metadata !DIExpression()), !dbg !13312
  %4 = icmp eq i32 %2, 0, !dbg !13313
  %5 = shl i32 %1, %0, !dbg !13315
  br i1 %4, label %9, label %6, !dbg !13316

6:                                                ; preds = %3
  %7 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13317, !tbaa !13130
  %8 = or i32 %7, %5, !dbg !13317
  br label %13, !dbg !13319

9:                                                ; preds = %3
  %10 = xor i32 %5, -1, !dbg !13320
  %11 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13322, !tbaa !13130
  %12 = and i32 %11, %10, !dbg !13322
  br label %13

13:                                               ; preds = %9, %6
  %14 = phi i32 [ %12, %9 ], [ %8, %6 ]
  store volatile i32 %14, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13315, !tbaa !13130
  ret void, !dbg !13323
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DAC_GetFlagStatus(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13326, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32 %1, metadata !13327, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32 0, metadata !13328, metadata !DIExpression()), !dbg !13329
  %3 = load volatile i32, i32* inttoptr (i32 1073771572 to i32*), align 4, !dbg !13330, !tbaa !13332
  %4 = shl i32 %1, %0, !dbg !13333
  %5 = and i32 %3, %4, !dbg !13334
  %6 = icmp ne i32 %5, 0, !dbg !13335
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !13328, metadata !DIExpression()), !dbg !13329
  ret i32 %7, !dbg !13336
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_ClearFlag(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13339, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 %1, metadata !13340, metadata !DIExpression()), !dbg !13341
  %3 = shl i32 %1, %0, !dbg !13342
  store volatile i32 %3, i32* inttoptr (i32 1073771572 to i32*), align 4, !dbg !13343, !tbaa !13332
  ret void, !dbg !13344
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DAC_GetITStatus(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13347, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.value(metadata i32 %1, metadata !13348, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.value(metadata i32 0, metadata !13349, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.value(metadata i32 0, metadata !13350, metadata !DIExpression()), !dbg !13351
  %3 = load volatile i32, i32* inttoptr (i32 1073771520 to i32*), align 1024, !dbg !13352, !tbaa !13130
  %4 = shl i32 %1, %0, !dbg !13353
  %5 = and i32 %3, %4, !dbg !13354
  call void @llvm.dbg.value(metadata i32 %5, metadata !13350, metadata !DIExpression()), !dbg !13351
  %6 = load volatile i32, i32* inttoptr (i32 1073771572 to i32*), align 4, !dbg !13355, !tbaa !13332
  %7 = and i32 %6, %4, !dbg !13357
  %8 = icmp ne i32 %7, 0, !dbg !13358
  %9 = icmp ne i32 %5, 0
  %10 = and i1 %9, %8, !dbg !13359
  %11 = zext i1 %10 to i32
  call void @llvm.dbg.value(metadata i32 %11, metadata !13349, metadata !DIExpression()), !dbg !13351
  ret i32 %11, !dbg !13360
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DAC_ClearITPendingBit(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13363, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i32 %1, metadata !13364, metadata !DIExpression()), !dbg !13365
  %3 = shl i32 %1, %0, !dbg !13366
  store volatile i32 %3, i32* inttoptr (i32 1073771572 to i32*), align 4, !dbg !13367, !tbaa !13332
  ret void, !dbg !13368
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @I2C_DeInit(%struct.SPI_TypeDef* %0) local_unnamed_addr #3 !dbg !13369 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13373, metadata !DIExpression()), !dbg !13374
  %2 = ptrtoint %struct.SPI_TypeDef* %0 to i32, !dbg !13375
  switch i32 %2, label %7 [
    i32 1073763328, label %5
    i32 1073764352, label %3
    i32 1073765376, label %4
  ], !dbg !13375

3:                                                ; preds = %1
  br label %5, !dbg !13376

4:                                                ; preds = %1
  br label %5, !dbg !13380

5:                                                ; preds = %1, %4, %3
  %6 = phi i32 [ 4194304, %3 ], [ 8388608, %4 ], [ 2097152, %1 ]
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 %6, i32 1) #5, !dbg !13384
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 %6, i32 0) #5, !dbg !13384
  br label %7, !dbg !13385

7:                                                ; preds = %5, %1
  ret void, !dbg !13385
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @I2C_Init(%struct.SPI_TypeDef* %0, %struct.USART_InitTypeDef* nocapture readonly %1) local_unnamed_addr #3 !dbg !13386 {
  %3 = alloca %struct.DMA_TypeDef, align 4
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13401, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata %struct.USART_InitTypeDef* %1, metadata !13402, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i16 0, metadata !13403, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i16 0, metadata !13404, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i16 4, metadata !13405, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i32 8000000, metadata !13406, metadata !DIExpression()), !dbg !13415
  %4 = bitcast %struct.DMA_TypeDef* %3 to i8*, !dbg !13416
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #6, !dbg !13416
  call void @llvm.dbg.declare(metadata %struct.DMA_TypeDef* %3, metadata !13407, metadata !DIExpression()), !dbg !13417
  %5 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !13418
  %6 = load volatile i16, i16* %5, align 2, !dbg !13418, !tbaa !8998
  call void @llvm.dbg.value(metadata i16 %6, metadata !13403, metadata !DIExpression()), !dbg !13415
  %7 = and i16 %6, -64, !dbg !13419
  call void @llvm.dbg.value(metadata i16 %7, metadata !13403, metadata !DIExpression()), !dbg !13415
  call arm_aapcs_vfpcc void @RCC_GetClocksFreq(%struct.DMA_TypeDef* nonnull %3) #5, !dbg !13420
  %8 = getelementptr inbounds %struct.DMA_TypeDef, %struct.DMA_TypeDef* %3, i32 0, i32 2, !dbg !13421
  %9 = load i32, i32* %8, align 4, !dbg !13421, !tbaa !968
  call void @llvm.dbg.value(metadata i32 %9, metadata !13406, metadata !DIExpression()), !dbg !13415
  %10 = udiv i32 %9, 1000000, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %10, metadata !13404, metadata !DIExpression()), !dbg !13415
  %11 = trunc i32 %10 to i16, !dbg !13423
  %12 = or i16 %7, %11, !dbg !13423
  call void @llvm.dbg.value(metadata i16 %12, metadata !13403, metadata !DIExpression()), !dbg !13415
  store volatile i16 %12, i16* %5, align 2, !dbg !13424, !tbaa !8998
  %13 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13425
  %14 = load volatile i16, i16* %13, align 2, !dbg !13426, !tbaa !8766
  %15 = and i16 %14, -2, !dbg !13426
  store volatile i16 %15, i16* %13, align 2, !dbg !13426, !tbaa !8766
  call void @llvm.dbg.value(metadata i16 0, metadata !13403, metadata !DIExpression()), !dbg !13415
  %16 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 0, !dbg !13427
  %17 = load i32, i32* %16, align 4, !dbg !13427, !tbaa !12725
  %18 = icmp ult i32 %17, 100001, !dbg !13429
  br i1 %18, label %19, label %26, !dbg !13430

19:                                               ; preds = %2
  %20 = shl nuw nsw i32 %17, 1, !dbg !13431
  %21 = udiv i32 %9, %20, !dbg !13433
  %22 = trunc i32 %21 to i16, !dbg !13434
  call void @llvm.dbg.value(metadata i16 %22, metadata !13405, metadata !DIExpression()), !dbg !13415
  %23 = and i32 %21, 65532, !dbg !13435
  %24 = icmp eq i32 %23, 0, !dbg !13437
  %25 = select i1 %24, i16 4, i16 %22, !dbg !13438
  call void @llvm.dbg.value(metadata i16 %25, metadata !13405, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i16 %25, metadata !13403, metadata !DIExpression()), !dbg !13415
  br label %49, !dbg !13439

26:                                               ; preds = %2
  %27 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 2, !dbg !13440
  %28 = load i16, i16* %27, align 2, !dbg !13440, !tbaa !12688
  %29 = icmp eq i16 %28, -16385, !dbg !13443
  br i1 %29, label %30, label %34, !dbg !13444

30:                                               ; preds = %26
  %31 = mul i32 %17, 3, !dbg !13445
  %32 = udiv i32 %9, %31, !dbg !13447
  %33 = trunc i32 %32 to i16, !dbg !13448
  call void @llvm.dbg.value(metadata i16 %33, metadata !13405, metadata !DIExpression()), !dbg !13415
  br label %39, !dbg !13449

34:                                               ; preds = %26
  %35 = mul i32 %17, 25, !dbg !13450
  %36 = udiv i32 %9, %35, !dbg !13452
  call void @llvm.dbg.value(metadata i32 %36, metadata !13405, metadata !DIExpression()), !dbg !13415
  %37 = trunc i32 %36 to i16, !dbg !13453
  %38 = or i16 %37, 16384, !dbg !13453
  call void @llvm.dbg.value(metadata i16 %38, metadata !13405, metadata !DIExpression()), !dbg !13415
  br label %39

39:                                               ; preds = %34, %30
  %40 = phi i16 [ %33, %30 ], [ %38, %34 ], !dbg !13454
  call void @llvm.dbg.value(metadata i16 %40, metadata !13405, metadata !DIExpression()), !dbg !13415
  %41 = and i16 %40, 4095, !dbg !13455
  %42 = icmp eq i16 %41, 0, !dbg !13457
  %43 = zext i1 %42 to i16, !dbg !13458
  call void @llvm.dbg.value(metadata i16 undef, metadata !13405, metadata !DIExpression()), !dbg !13415
  %44 = or i16 %40, %43, !dbg !13459
  %45 = or i16 %44, -32768, !dbg !13459
  call void @llvm.dbg.value(metadata i16 %45, metadata !13403, metadata !DIExpression()), !dbg !13415
  %46 = mul nuw nsw i32 %10, 300, !dbg !13460
  %47 = udiv i32 %46, 1000, !dbg !13461
  %48 = trunc i32 %47 to i16, !dbg !13462
  br label %49

49:                                               ; preds = %39, %19
  %50 = phi i16 [ %48, %39 ], [ %11, %19 ]
  %51 = phi i16 [ %45, %39 ], [ %25, %19 ], !dbg !13463
  %52 = add nuw nsw i16 %50, 1, !dbg !13463
  %53 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 16, !dbg !13463
  store volatile i16 %52, i16* %53, align 2, !dbg !13463, !tbaa !8834
  call void @llvm.dbg.value(metadata i16 %51, metadata !13403, metadata !DIExpression()), !dbg !13415
  %54 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 14, !dbg !13464
  store volatile i16 %51, i16* %54, align 2, !dbg !13465, !tbaa !8797
  %55 = load volatile i16, i16* %13, align 2, !dbg !13466, !tbaa !8766
  %56 = or i16 %55, 1, !dbg !13466
  store volatile i16 %56, i16* %13, align 2, !dbg !13466, !tbaa !8766
  %57 = load volatile i16, i16* %13, align 2, !dbg !13467, !tbaa !8766
  call void @llvm.dbg.value(metadata i16 %57, metadata !13403, metadata !DIExpression()), !dbg !13415
  %58 = and i16 %57, -1035, !dbg !13468
  call void @llvm.dbg.value(metadata i16 %58, metadata !13403, metadata !DIExpression()), !dbg !13415
  %59 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 1, !dbg !13469
  %60 = load i16, i16* %59, align 4, !dbg !13469, !tbaa !12696
  %61 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 4, !dbg !13470
  %62 = load i16, i16* %61, align 2, !dbg !13470, !tbaa !12700
  %63 = or i16 %58, %60, !dbg !13471
  %64 = or i16 %63, %62, !dbg !13472
  call void @llvm.dbg.value(metadata i16 %64, metadata !13403, metadata !DIExpression()), !dbg !13415
  store volatile i16 %64, i16* %13, align 2, !dbg !13473, !tbaa !8766
  %65 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 5, !dbg !13474
  %66 = load i16, i16* %65, align 4, !dbg !13474, !tbaa !12709
  %67 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %1, i32 0, i32 3, !dbg !13475
  %68 = load i16, i16* %67, align 4, !dbg !13475, !tbaa !12698
  %69 = or i16 %68, %66, !dbg !13476
  %70 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 4, !dbg !13477
  store volatile i16 %69, i16* %70, align 2, !dbg !13478, !tbaa !9147
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #6, !dbg !13479
  ret void, !dbg !13479
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @I2C_StructInit(%struct.USART_InitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !13480 {
  call void @llvm.dbg.value(metadata %struct.USART_InitTypeDef* %0, metadata !13484, metadata !DIExpression()), !dbg !13485
  %2 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 0, !dbg !13486
  store i32 5000, i32* %2, align 4, !dbg !13487, !tbaa !12725
  %3 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 1, !dbg !13488
  store i16 0, i16* %3, align 4, !dbg !13489, !tbaa !12696
  %4 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 2, !dbg !13490
  store i16 -16385, i16* %4, align 2, !dbg !13491, !tbaa !12688
  %5 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 3, !dbg !13492
  store i16 0, i16* %5, align 4, !dbg !13493, !tbaa !12698
  %6 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 4, !dbg !13494
  store i16 0, i16* %6, align 2, !dbg !13495, !tbaa !12700
  %7 = getelementptr inbounds %struct.USART_InitTypeDef, %struct.USART_InitTypeDef* %0, i32 0, i32 5, !dbg !13496
  store i16 16384, i16* %7, align 4, !dbg !13497, !tbaa !12709
  ret void, !dbg !13498
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_Cmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13499 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13503, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata i32 %1, metadata !13504, metadata !DIExpression()), !dbg !13505
  %3 = icmp ne i32 %1, 0, !dbg !13506
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13508
  %5 = load volatile i16, i16* %4, align 2, !dbg !13508, !tbaa !8766
  %6 = and i16 %5, -2, !dbg !13509
  %7 = zext i1 %3 to i16, !dbg !13509
  %8 = or i16 %6, %7, !dbg !13509
  store volatile i16 %8, i16* %4, align 2, !dbg !13508, !tbaa !8766
  ret void, !dbg !13510
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_GenerateSTART(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13511 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13513, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i32 %1, metadata !13514, metadata !DIExpression()), !dbg !13515
  %3 = icmp eq i32 %1, 0, !dbg !13516
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13518
  %5 = load volatile i16, i16* %4, align 2, !dbg !13518, !tbaa !8766
  %6 = and i16 %5, -257, !dbg !13519
  %7 = select i1 %3, i16 0, i16 256, !dbg !13519
  %8 = or i16 %6, %7, !dbg !13519
  store volatile i16 %8, i16* %4, align 2, !dbg !13518, !tbaa !8766
  ret void, !dbg !13520
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_GenerateSTOP(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13521 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13523, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.value(metadata i32 %1, metadata !13524, metadata !DIExpression()), !dbg !13525
  %3 = icmp eq i32 %1, 0, !dbg !13526
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13528
  %5 = load volatile i16, i16* %4, align 2, !dbg !13528, !tbaa !8766
  %6 = and i16 %5, -513, !dbg !13529
  %7 = select i1 %3, i16 0, i16 512, !dbg !13529
  %8 = or i16 %6, %7, !dbg !13529
  store volatile i16 %8, i16* %4, align 2, !dbg !13528, !tbaa !8766
  ret void, !dbg !13530
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_Send7bitAddress(%struct.SPI_TypeDef* %0, i8 zeroext %1, i8 zeroext %2) local_unnamed_addr #0 !dbg !13531 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13535, metadata !DIExpression()), !dbg !13538
  call void @llvm.dbg.value(metadata i8 %1, metadata !13536, metadata !DIExpression()), !dbg !13538
  call void @llvm.dbg.value(metadata i8 %2, metadata !13537, metadata !DIExpression()), !dbg !13538
  %4 = icmp ne i8 %2, 0, !dbg !13539
  %5 = and i8 %1, -2, !dbg !13541
  %6 = zext i1 %4 to i8, !dbg !13541
  %7 = or i8 %5, %6, !dbg !13541
  call void @llvm.dbg.value(metadata i8 %7, metadata !13536, metadata !DIExpression()), !dbg !13538
  %8 = zext i8 %7 to i16, !dbg !13542
  %9 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 8, !dbg !13543
  store volatile i16 %8, i16* %9, align 2, !dbg !13544, !tbaa !8802
  ret void, !dbg !13545
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_AcknowledgeConfig(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13546 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13548, metadata !DIExpression()), !dbg !13550
  call void @llvm.dbg.value(metadata i32 %1, metadata !13549, metadata !DIExpression()), !dbg !13550
  %3 = icmp eq i32 %1, 0, !dbg !13551
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13553
  %5 = load volatile i16, i16* %4, align 2, !dbg !13553, !tbaa !8766
  %6 = and i16 %5, -1025, !dbg !13554
  %7 = select i1 %3, i16 0, i16 1024, !dbg !13554
  %8 = or i16 %6, %7, !dbg !13554
  store volatile i16 %8, i16* %4, align 2, !dbg !13553, !tbaa !8766
  ret void, !dbg !13555
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_OwnAddress2Config(%struct.SPI_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !13556 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13560, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.value(metadata i8 %1, metadata !13561, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.value(metadata i16 0, metadata !13562, metadata !DIExpression()), !dbg !13563
  %3 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 6, !dbg !13564
  %4 = load volatile i16, i16* %3, align 2, !dbg !13564, !tbaa !9046
  call void @llvm.dbg.value(metadata i16 %4, metadata !13562, metadata !DIExpression()), !dbg !13563
  %5 = and i16 %4, -255, !dbg !13565
  call void @llvm.dbg.value(metadata i16 %5, metadata !13562, metadata !DIExpression()), !dbg !13563
  %6 = and i8 %1, -2, !dbg !13566
  %7 = zext i8 %6 to i16, !dbg !13567
  %8 = or i16 %5, %7, !dbg !13568
  call void @llvm.dbg.value(metadata i16 %8, metadata !13562, metadata !DIExpression()), !dbg !13563
  store volatile i16 %8, i16* %3, align 2, !dbg !13569, !tbaa !9046
  ret void, !dbg !13570
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_DualAddressCmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13571 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13573, metadata !DIExpression()), !dbg !13575
  call void @llvm.dbg.value(metadata i32 %1, metadata !13574, metadata !DIExpression()), !dbg !13575
  %3 = icmp ne i32 %1, 0, !dbg !13576
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 6, !dbg !13578
  %5 = load volatile i16, i16* %4, align 2, !dbg !13578, !tbaa !9046
  %6 = and i16 %5, -2, !dbg !13579
  %7 = zext i1 %3 to i16, !dbg !13579
  %8 = or i16 %6, %7, !dbg !13579
  store volatile i16 %8, i16* %4, align 2, !dbg !13578, !tbaa !9046
  ret void, !dbg !13580
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_GeneralCallCmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13581 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13583, metadata !DIExpression()), !dbg !13585
  call void @llvm.dbg.value(metadata i32 %1, metadata !13584, metadata !DIExpression()), !dbg !13585
  %3 = icmp eq i32 %1, 0, !dbg !13586
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13588
  %5 = load volatile i16, i16* %4, align 2, !dbg !13588, !tbaa !8766
  %6 = and i16 %5, -65, !dbg !13589
  %7 = select i1 %3, i16 0, i16 64, !dbg !13589
  %8 = or i16 %6, %7, !dbg !13589
  store volatile i16 %8, i16* %4, align 2, !dbg !13588, !tbaa !8766
  ret void, !dbg !13590
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_SoftwareResetCmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13591 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13593, metadata !DIExpression()), !dbg !13595
  call void @llvm.dbg.value(metadata i32 %1, metadata !13594, metadata !DIExpression()), !dbg !13595
  %3 = icmp eq i32 %1, 0, !dbg !13596
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13598
  %5 = load volatile i16, i16* %4, align 2, !dbg !13598, !tbaa !8766
  %6 = and i16 %5, 32767, !dbg !13599
  %7 = select i1 %3, i16 0, i16 -32768, !dbg !13599
  %8 = or i16 %6, %7, !dbg !13599
  store volatile i16 %8, i16* %4, align 2, !dbg !13598, !tbaa !8766
  ret void, !dbg !13600
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_StretchClockCmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13601 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13603, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 %1, metadata !13604, metadata !DIExpression()), !dbg !13605
  %3 = icmp eq i32 %1, 0, !dbg !13606
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13608
  %5 = load volatile i16, i16* %4, align 2, !dbg !13608, !tbaa !8766
  %6 = and i16 %5, -129, !dbg !13609
  %7 = select i1 %3, i16 128, i16 0, !dbg !13609
  %8 = or i16 %6, %7, !dbg !13609
  store volatile i16 %8, i16* %4, align 2, !dbg !13608, !tbaa !8766
  ret void, !dbg !13610
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_FastModeDutyCycleConfig(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !13611 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13615, metadata !DIExpression()), !dbg !13617
  call void @llvm.dbg.value(metadata i16 %1, metadata !13616, metadata !DIExpression()), !dbg !13617
  %3 = icmp eq i16 %1, 16384, !dbg !13618
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 14, !dbg !13620
  %5 = load volatile i16, i16* %4, align 2, !dbg !13620, !tbaa !8797
  %6 = and i16 %5, -16385, !dbg !13621
  %7 = select i1 %3, i16 16384, i16 0, !dbg !13621
  %8 = or i16 %6, %7, !dbg !13621
  store volatile i16 %8, i16* %4, align 2, !dbg !13620, !tbaa !8797
  ret void, !dbg !13622
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_NACKPositionConfig(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !13623 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13625, metadata !DIExpression()), !dbg !13627
  call void @llvm.dbg.value(metadata i16 %1, metadata !13626, metadata !DIExpression()), !dbg !13627
  %3 = icmp eq i16 %1, 2048, !dbg !13628
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13630
  %5 = load volatile i16, i16* %4, align 2, !dbg !13630, !tbaa !8766
  %6 = and i16 %5, -2049, !dbg !13631
  %7 = select i1 %3, i16 2048, i16 0, !dbg !13631
  %8 = or i16 %6, %7, !dbg !13631
  store volatile i16 %8, i16* %4, align 2, !dbg !13630, !tbaa !8766
  ret void, !dbg !13632
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_SMBusAlertConfig(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !13633 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13635, metadata !DIExpression()), !dbg !13637
  call void @llvm.dbg.value(metadata i16 %1, metadata !13636, metadata !DIExpression()), !dbg !13637
  %3 = icmp eq i16 %1, 8192, !dbg !13638
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13640
  %5 = load volatile i16, i16* %4, align 2, !dbg !13640, !tbaa !8766
  %6 = and i16 %5, -8193, !dbg !13641
  %7 = select i1 %3, i16 8192, i16 0, !dbg !13641
  %8 = or i16 %6, %7, !dbg !13641
  store volatile i16 %8, i16* %4, align 2, !dbg !13640, !tbaa !8766
  ret void, !dbg !13642
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_ARPCmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13643 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13645, metadata !DIExpression()), !dbg !13647
  call void @llvm.dbg.value(metadata i32 %1, metadata !13646, metadata !DIExpression()), !dbg !13647
  %3 = icmp eq i32 %1, 0, !dbg !13648
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13650
  %5 = load volatile i16, i16* %4, align 2, !dbg !13650, !tbaa !8766
  %6 = and i16 %5, -17, !dbg !13651
  %7 = select i1 %3, i16 0, i16 16, !dbg !13651
  %8 = or i16 %6, %7, !dbg !13651
  store volatile i16 %8, i16* %4, align 2, !dbg !13650, !tbaa !8766
  ret void, !dbg !13652
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_SendData(%struct.SPI_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !13653 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13655, metadata !DIExpression()), !dbg !13657
  call void @llvm.dbg.value(metadata i8 %1, metadata !13656, metadata !DIExpression()), !dbg !13657
  %3 = zext i8 %1 to i16, !dbg !13658
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 8, !dbg !13659
  store volatile i16 %3, i16* %4, align 2, !dbg !13660, !tbaa !8802
  ret void, !dbg !13661
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @I2C_ReceiveData(%struct.SPI_TypeDef* %0) local_unnamed_addr #0 !dbg !13662 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13666, metadata !DIExpression()), !dbg !13667
  %2 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 8, !dbg !13668
  %3 = load volatile i16, i16* %2, align 2, !dbg !13668, !tbaa !8802
  %4 = trunc i16 %3 to i8, !dbg !13669
  ret i8 %4, !dbg !13670
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_TransmitPEC(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13671 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13673, metadata !DIExpression()), !dbg !13675
  call void @llvm.dbg.value(metadata i32 %1, metadata !13674, metadata !DIExpression()), !dbg !13675
  %3 = icmp eq i32 %1, 0, !dbg !13676
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13678
  %5 = load volatile i16, i16* %4, align 2, !dbg !13678, !tbaa !8766
  %6 = and i16 %5, -4097, !dbg !13679
  %7 = select i1 %3, i16 0, i16 4096, !dbg !13679
  %8 = or i16 %6, %7, !dbg !13679
  store volatile i16 %8, i16* %4, align 2, !dbg !13678, !tbaa !8766
  ret void, !dbg !13680
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_PECPositionConfig(%struct.SPI_TypeDef* %0, i16 zeroext %1) local_unnamed_addr #0 !dbg !13681 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13683, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i16 %1, metadata !13684, metadata !DIExpression()), !dbg !13685
  %3 = icmp eq i16 %1, 2048, !dbg !13686
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13688
  %5 = load volatile i16, i16* %4, align 2, !dbg !13688, !tbaa !8766
  %6 = and i16 %5, -2049, !dbg !13689
  %7 = select i1 %3, i16 2048, i16 0, !dbg !13689
  %8 = or i16 %6, %7, !dbg !13689
  store volatile i16 %8, i16* %4, align 2, !dbg !13688, !tbaa !8766
  ret void, !dbg !13690
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_CalculatePEC(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13691 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13693, metadata !DIExpression()), !dbg !13695
  call void @llvm.dbg.value(metadata i32 %1, metadata !13694, metadata !DIExpression()), !dbg !13695
  %3 = icmp eq i32 %1, 0, !dbg !13696
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 0, !dbg !13698
  %5 = load volatile i16, i16* %4, align 2, !dbg !13698, !tbaa !8766
  %6 = and i16 %5, -33, !dbg !13699
  %7 = select i1 %3, i16 0, i16 32, !dbg !13699
  %8 = or i16 %6, %7, !dbg !13699
  store volatile i16 %8, i16* %4, align 2, !dbg !13698, !tbaa !8766
  ret void, !dbg !13700
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc zeroext i8 @I2C_GetPEC(%struct.SPI_TypeDef* %0) local_unnamed_addr #0 !dbg !13701 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13703, metadata !DIExpression()), !dbg !13704
  %2 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 12, !dbg !13705
  %3 = load volatile i16, i16* %2, align 2, !dbg !13705, !tbaa !13706
  %4 = lshr i16 %3, 8, !dbg !13707
  %5 = trunc i16 %4 to i8, !dbg !13708
  ret i8 %5, !dbg !13709
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_DMACmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13710 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13712, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i32 %1, metadata !13713, metadata !DIExpression()), !dbg !13714
  %3 = icmp eq i32 %1, 0, !dbg !13715
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !13717
  %5 = load volatile i16, i16* %4, align 2, !dbg !13717, !tbaa !8998
  %6 = and i16 %5, -2049, !dbg !13718
  %7 = select i1 %3, i16 0, i16 2048, !dbg !13718
  %8 = or i16 %6, %7, !dbg !13718
  store volatile i16 %8, i16* %4, align 2, !dbg !13717, !tbaa !8998
  ret void, !dbg !13719
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_DMALastTransferCmd(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13720 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13722, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 %1, metadata !13723, metadata !DIExpression()), !dbg !13724
  %3 = icmp eq i32 %1, 0, !dbg !13725
  %4 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !13727
  %5 = load volatile i16, i16* %4, align 2, !dbg !13727, !tbaa !8998
  %6 = and i16 %5, -4097, !dbg !13728
  %7 = select i1 %3, i16 0, i16 4096, !dbg !13728
  %8 = or i16 %6, %7, !dbg !13728
  store volatile i16 %8, i16* %4, align 2, !dbg !13727, !tbaa !8998
  ret void, !dbg !13729
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc zeroext i16 @I2C_ReadRegister(%struct.SPI_TypeDef* %0, i8 zeroext %1) local_unnamed_addr #3 !dbg !13730 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13734, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.value(metadata i8 %1, metadata !13735, metadata !DIExpression()), !dbg !13737
  %4 = bitcast i32* %3 to i8*, !dbg !13738
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !13738
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13736, metadata !DIExpression()), !dbg !13739
  store volatile i32 0, i32* %3, align 4, !dbg !13739, !tbaa !894
  %5 = ptrtoint %struct.SPI_TypeDef* %0 to i32, !dbg !13740
  store volatile i32 %5, i32* %3, align 4, !dbg !13741, !tbaa !894
  %6 = zext i8 %1 to i32, !dbg !13742
  %7 = load volatile i32, i32* %3, align 4, !dbg !13743, !tbaa !894
  %8 = add i32 %7, %6, !dbg !13743
  store volatile i32 %8, i32* %3, align 4, !dbg !13743, !tbaa !894
  %9 = load volatile i32, i32* %3, align 4, !dbg !13744, !tbaa !894
  %10 = inttoptr i32 %9 to i16*, !dbg !13745
  %11 = load volatile i16, i16* %10, align 2, !dbg !13746, !tbaa !3025
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !13747
  ret i16 %11, !dbg !13748
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_ITConfig(%struct.SPI_TypeDef* %0, i16 zeroext %1, i32 %2) local_unnamed_addr #0 !dbg !13749 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13753, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.value(metadata i16 %1, metadata !13754, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.value(metadata i32 %2, metadata !13755, metadata !DIExpression()), !dbg !13756
  %4 = icmp eq i32 %2, 0, !dbg !13757
  br i1 %4, label %9, label %5, !dbg !13759

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !13760
  %7 = load volatile i16, i16* %6, align 2, !dbg !13762, !tbaa !8998
  %8 = or i16 %7, %1, !dbg !13762
  store volatile i16 %8, i16* %6, align 2, !dbg !13762, !tbaa !8998
  br label %14, !dbg !13763

9:                                                ; preds = %3
  %10 = xor i16 %1, -1, !dbg !13764
  %11 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !13766
  %12 = load volatile i16, i16* %11, align 2, !dbg !13767, !tbaa !8998
  %13 = and i16 %12, %10, !dbg !13767
  store volatile i16 %13, i16* %11, align 2, !dbg !13767, !tbaa !8998
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !13768
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @I2C_CheckEvent(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13769 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13773, metadata !DIExpression()), !dbg !13779
  call void @llvm.dbg.value(metadata i32 %1, metadata !13774, metadata !DIExpression()), !dbg !13779
  call void @llvm.dbg.value(metadata i32 0, metadata !13775, metadata !DIExpression()), !dbg !13779
  call void @llvm.dbg.value(metadata i32 0, metadata !13776, metadata !DIExpression()), !dbg !13779
  call void @llvm.dbg.value(metadata i32 0, metadata !13777, metadata !DIExpression()), !dbg !13779
  call void @llvm.dbg.value(metadata i32 0, metadata !13778, metadata !DIExpression()), !dbg !13779
  %3 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 10, !dbg !13780
  %4 = load volatile i16, i16* %3, align 2, !dbg !13780, !tbaa !13781
  %5 = zext i16 %4 to i32, !dbg !13782
  call void @llvm.dbg.value(metadata i32 %5, metadata !13776, metadata !DIExpression()), !dbg !13779
  %6 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 12, !dbg !13783
  %7 = load volatile i16, i16* %6, align 2, !dbg !13783, !tbaa !13706
  %8 = zext i16 %7 to i32, !dbg !13784
  call void @llvm.dbg.value(metadata i32 %8, metadata !13777, metadata !DIExpression()), !dbg !13779
  %9 = shl nuw i32 %8, 16, !dbg !13785
  call void @llvm.dbg.value(metadata i32 %9, metadata !13777, metadata !DIExpression()), !dbg !13779
  %10 = and i32 %9, 16711680, !dbg !13786
  %11 = or i32 %10, %5, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %11, metadata !13775, metadata !DIExpression()), !dbg !13779
  %12 = and i32 %11, %1, !dbg !13787
  %13 = icmp eq i32 %12, %1, !dbg !13789
  %14 = zext i1 %13 to i32
  call void @llvm.dbg.value(metadata i32 %14, metadata !13778, metadata !DIExpression()), !dbg !13779
  ret i32 %14, !dbg !13790
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @I2C_GetLastEvent(%struct.SPI_TypeDef* %0) local_unnamed_addr #0 !dbg !13791 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13795, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 0, metadata !13796, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 0, metadata !13797, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 0, metadata !13798, metadata !DIExpression()), !dbg !13799
  %2 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 10, !dbg !13800
  %3 = load volatile i16, i16* %2, align 2, !dbg !13800, !tbaa !13781
  %4 = zext i16 %3 to i32, !dbg !13801
  call void @llvm.dbg.value(metadata i32 %4, metadata !13797, metadata !DIExpression()), !dbg !13799
  %5 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 12, !dbg !13802
  %6 = load volatile i16, i16* %5, align 2, !dbg !13802, !tbaa !13706
  %7 = zext i16 %6 to i32, !dbg !13803
  call void @llvm.dbg.value(metadata i32 %7, metadata !13798, metadata !DIExpression()), !dbg !13799
  %8 = shl nuw i32 %7, 16, !dbg !13804
  call void @llvm.dbg.value(metadata i32 %8, metadata !13798, metadata !DIExpression()), !dbg !13799
  %9 = and i32 %8, 16711680, !dbg !13805
  %10 = or i32 %9, %4, !dbg !13805
  call void @llvm.dbg.value(metadata i32 %10, metadata !13796, metadata !DIExpression()), !dbg !13799
  ret i32 %10, !dbg !13806
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc i32 @I2C_GetFlagStatus(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #3 !dbg !13807 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13811, metadata !DIExpression()), !dbg !13816
  call void @llvm.dbg.value(metadata i32 %1, metadata !13812, metadata !DIExpression()), !dbg !13816
  call void @llvm.dbg.value(metadata i32 0, metadata !13813, metadata !DIExpression()), !dbg !13816
  %5 = bitcast i32* %3 to i8*, !dbg !13817
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !13817
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13814, metadata !DIExpression()), !dbg !13818
  store volatile i32 0, i32* %3, align 4, !dbg !13818, !tbaa !894
  %6 = bitcast i32* %4 to i8*, !dbg !13817
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !13817
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13815, metadata !DIExpression()), !dbg !13819
  store volatile i32 0, i32* %4, align 4, !dbg !13819, !tbaa !894
  %7 = ptrtoint %struct.SPI_TypeDef* %0 to i32, !dbg !13820
  store volatile i32 %7, i32* %4, align 4, !dbg !13821, !tbaa !894
  %8 = lshr i32 %1, 28, !dbg !13822
  store volatile i32 %8, i32* %3, align 4, !dbg !13823, !tbaa !894
  %9 = and i32 %1, 16777215, !dbg !13824
  call void @llvm.dbg.value(metadata i32 %9, metadata !13812, metadata !DIExpression()), !dbg !13816
  %10 = load volatile i32, i32* %3, align 4, !dbg !13825, !tbaa !894
  %11 = icmp eq i32 %10, 0, !dbg !13827
  br i1 %11, label %15, label %12, !dbg !13828

12:                                               ; preds = %2
  %13 = load volatile i32, i32* %4, align 4, !dbg !13829, !tbaa !894
  %14 = add i32 %13, 20, !dbg !13829
  store volatile i32 %14, i32* %4, align 4, !dbg !13829, !tbaa !894
  br label %19, !dbg !13831

15:                                               ; preds = %2
  %16 = lshr i32 %9, 16, !dbg !13832
  call void @llvm.dbg.value(metadata i32 %16, metadata !13812, metadata !DIExpression()), !dbg !13816
  %17 = load volatile i32, i32* %4, align 4, !dbg !13834, !tbaa !894
  %18 = add i32 %17, 24, !dbg !13834
  store volatile i32 %18, i32* %4, align 4, !dbg !13834, !tbaa !894
  br label %19

19:                                               ; preds = %15, %12
  %20 = phi i32 [ %9, %12 ], [ %16, %15 ], !dbg !13816
  call void @llvm.dbg.value(metadata i32 %20, metadata !13812, metadata !DIExpression()), !dbg !13816
  %21 = load volatile i32, i32* %4, align 4, !dbg !13835, !tbaa !894
  %22 = inttoptr i32 %21 to i32*, !dbg !13837
  %23 = load volatile i32, i32* %22, align 4, !dbg !13838, !tbaa !894
  %24 = and i32 %23, %20, !dbg !13839
  %25 = icmp ne i32 %24, 0, !dbg !13840
  %26 = zext i1 %25 to i32
  call void @llvm.dbg.value(metadata i32 %26, metadata !13813, metadata !DIExpression()), !dbg !13816
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !13841
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !13841
  ret i32 %26, !dbg !13842
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_ClearFlag(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13843 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13847, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i32 %1, metadata !13848, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i32 0, metadata !13849, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i32 %1, metadata !13849, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !13850
  %3 = trunc i32 %1 to i16, !dbg !13851
  %4 = xor i16 %3, -1, !dbg !13851
  %5 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 10, !dbg !13852
  store volatile i16 %4, i16* %5, align 2, !dbg !13853, !tbaa !13781
  ret void, !dbg !13854
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @I2C_GetITStatus(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13855 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13859, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i32 %1, metadata !13860, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i32 0, metadata !13861, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i32 0, metadata !13862, metadata !DIExpression()), !dbg !13863
  %3 = lshr i32 %1, 16, !dbg !13864
  %4 = and i32 %3, 1792, !dbg !13864
  %5 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 2, !dbg !13865
  %6 = load volatile i16, i16* %5, align 2, !dbg !13865, !tbaa !8998
  %7 = zext i16 %6 to i32, !dbg !13866
  %8 = and i32 %4, %7, !dbg !13867
  call void @llvm.dbg.value(metadata i32 %8, metadata !13862, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i32 %1, metadata !13860, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !13863
  %9 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 10, !dbg !13868
  %10 = load volatile i16, i16* %9, align 2, !dbg !13868, !tbaa !13781
  %11 = zext i16 %10 to i32, !dbg !13870
  %12 = and i32 %11, %1, !dbg !13871
  %13 = icmp ne i32 %12, 0, !dbg !13872
  %14 = icmp ne i32 %8, 0
  %15 = and i1 %14, %13, !dbg !13873
  %16 = zext i1 %15 to i32
  call void @llvm.dbg.value(metadata i32 %16, metadata !13861, metadata !DIExpression()), !dbg !13863
  ret i32 %16, !dbg !13874
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @I2C_ClearITPendingBit(%struct.SPI_TypeDef* %0, i32 %1) local_unnamed_addr #0 !dbg !13875 {
  call void @llvm.dbg.value(metadata %struct.SPI_TypeDef* %0, metadata !13877, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.value(metadata i32 %1, metadata !13878, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.value(metadata i32 0, metadata !13879, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.value(metadata i32 %1, metadata !13879, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !13880
  %3 = trunc i32 %1 to i16, !dbg !13881
  %4 = xor i16 %3, -1, !dbg !13881
  %5 = getelementptr inbounds %struct.SPI_TypeDef, %struct.SPI_TypeDef* %0, i32 0, i32 10, !dbg !13882
  store volatile i16 %4, i16* %5, align 2, !dbg !13883, !tbaa !13781
  ret void, !dbg !13884
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @WWDG_DeInit() local_unnamed_addr #3 !dbg !13885 {
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 2048, i32 1) #5, !dbg !13886
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 2048, i32 0) #5, !dbg !13887
  ret void, !dbg !13888
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @WWDG_SetPrescaler(i32 %0) local_unnamed_addr #0 !dbg !13889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13891, metadata !DIExpression()), !dbg !13893
  call void @llvm.dbg.value(metadata i32 0, metadata !13892, metadata !DIExpression()), !dbg !13893
  %2 = load volatile i32, i32* inttoptr (i32 1073753092 to i32*), align 4, !dbg !13894, !tbaa !2165
  %3 = and i32 %2, -385, !dbg !13895
  call void @llvm.dbg.value(metadata i32 %3, metadata !13892, metadata !DIExpression()), !dbg !13893
  %4 = or i32 %3, %0, !dbg !13896
  call void @llvm.dbg.value(metadata i32 %4, metadata !13892, metadata !DIExpression()), !dbg !13893
  store volatile i32 %4, i32* inttoptr (i32 1073753092 to i32*), align 4, !dbg !13897, !tbaa !2165
  ret void, !dbg !13898
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @WWDG_SetWindowValue(i8 zeroext %0) local_unnamed_addr #3 !dbg !13899 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !13901, metadata !DIExpression()), !dbg !13903
  %3 = bitcast i32* %2 to i8*, !dbg !13904
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13904
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13902, metadata !DIExpression()), !dbg !13905
  store volatile i32 0, i32* %2, align 4, !dbg !13905, !tbaa !894
  %4 = load volatile i32, i32* inttoptr (i32 1073753092 to i32*), align 4, !dbg !13906, !tbaa !2165
  %5 = and i32 %4, -128, !dbg !13907
  store volatile i32 %5, i32* %2, align 4, !dbg !13908, !tbaa !894
  %6 = and i8 %0, 127, !dbg !13909
  %7 = zext i8 %6 to i32, !dbg !13909
  %8 = load volatile i32, i32* %2, align 4, !dbg !13910, !tbaa !894
  %9 = or i32 %8, %7, !dbg !13910
  store volatile i32 %9, i32* %2, align 4, !dbg !13910, !tbaa !894
  %10 = load volatile i32, i32* %2, align 4, !dbg !13911, !tbaa !894
  store volatile i32 %10, i32* inttoptr (i32 1073753092 to i32*), align 4, !dbg !13912, !tbaa !2165
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13913
  ret void, !dbg !13913
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @WWDG_EnableIT() local_unnamed_addr #0 !dbg !13914 {
  store volatile i32 1, i32* inttoptr (i32 1107656868 to i32*), align 4, !dbg !13915, !tbaa !894
  ret void, !dbg !13916
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @WWDG_SetCounter(i8 zeroext %0) local_unnamed_addr #0 !dbg !13917 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13919, metadata !DIExpression()), !dbg !13920
  %2 = and i8 %0, 127, !dbg !13921
  %3 = zext i8 %2 to i32, !dbg !13921
  store volatile i32 %3, i32* inttoptr (i32 1073753088 to i32*), align 1024, !dbg !13922, !tbaa !2767
  ret void, !dbg !13923
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @WWDG_Enable(i8 zeroext %0) local_unnamed_addr #0 !dbg !13924 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13926, metadata !DIExpression()), !dbg !13927
  %2 = or i8 %0, -128, !dbg !13928
  %3 = zext i8 %2 to i32, !dbg !13928
  store volatile i32 %3, i32* inttoptr (i32 1073753088 to i32*), align 1024, !dbg !13929, !tbaa !2767
  ret void, !dbg !13930
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @WWDG_GetFlagStatus() local_unnamed_addr #0 !dbg !13931 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13933, metadata !DIExpression()), !dbg !13934
  %1 = load volatile i32, i32* inttoptr (i32 1073753096 to i32*), align 8, !dbg !13935, !tbaa !2772
  %2 = icmp ne i32 %1, 0, !dbg !13937
  %3 = zext i1 %2 to i32
  call void @llvm.dbg.value(metadata i32 %3, metadata !13933, metadata !DIExpression()), !dbg !13934
  ret i32 %3, !dbg !13938
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @WWDG_ClearFlag() local_unnamed_addr #0 !dbg !13939 {
  store volatile i32 0, i32* inttoptr (i32 1073753096 to i32*), align 8, !dbg !13940, !tbaa !2772
  ret void, !dbg !13941
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DBGMCU_GetREVID() local_unnamed_addr #0 !dbg !13942 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !13943, !tbaa !934
  %2 = lshr i32 %1, 16, !dbg !13944
  ret i32 %2, !dbg !13945
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DBGMCU_GetDEVID() local_unnamed_addr #0 !dbg !13946 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !13947, !tbaa !934
  %2 = and i32 %1, 4095, !dbg !13948
  ret i32 %2, !dbg !13949
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DBGMCU_Config(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13952, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 %1, metadata !13953, metadata !DIExpression()), !dbg !13954
  %3 = icmp eq i32 %1, 0, !dbg !13955
  br i1 %3, label %7, label %4, !dbg !13957

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !13958, !tbaa !1690
  %6 = or i32 %5, %0, !dbg !13958
  br label %11, !dbg !13960

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !13961
  %9 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !13963, !tbaa !1690
  %10 = and i32 %9, %8, !dbg !13963
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !13964, !tbaa !1690
  ret void, !dbg !13965
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DBGMCU_APB1PeriphConfig(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13968, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata i32 %1, metadata !13969, metadata !DIExpression()), !dbg !13970
  %3 = icmp eq i32 %1, 0, !dbg !13971
  br i1 %3, label %7, label %4, !dbg !13973

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 -536600568 to i32*), align 8, !dbg !13974, !tbaa !968
  %6 = or i32 %5, %0, !dbg !13974
  br label %11, !dbg !13976

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !13977
  %9 = load volatile i32, i32* inttoptr (i32 -536600568 to i32*), align 8, !dbg !13979, !tbaa !968
  %10 = and i32 %9, %8, !dbg !13979
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 -536600568 to i32*), align 8, !dbg !13980, !tbaa !968
  ret void, !dbg !13981
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DBGMCU_APB2PeriphConfig(i32 %0, i32 %1) local_unnamed_addr #0 !dbg !13982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13984, metadata !DIExpression()), !dbg !13986
  call void @llvm.dbg.value(metadata i32 %1, metadata !13985, metadata !DIExpression()), !dbg !13986
  %3 = icmp eq i32 %1, 0, !dbg !13987
  br i1 %3, label %7, label %4, !dbg !13989

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 -536600564 to i32*), align 4, !dbg !13990, !tbaa !985
  %6 = or i32 %5, %0, !dbg !13990
  br label %11, !dbg !13992

7:                                                ; preds = %2
  %8 = xor i32 %0, -1, !dbg !13993
  %9 = load volatile i32, i32* inttoptr (i32 -536600564 to i32*), align 4, !dbg !13995, !tbaa !985
  %10 = and i32 %9, %8, !dbg !13995
  br label %11

11:                                               ; preds = %7, %4
  %12 = phi i32 [ %10, %7 ], [ %6, %4 ]
  store volatile i32 %12, i32* inttoptr (i32 -536600564 to i32*), align 4, !dbg !13996, !tbaa !985
  ret void, !dbg !13997
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @IWDG_WriteAccessCmd(i16 zeroext %0) local_unnamed_addr #0 !dbg !13998 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14000, metadata !DIExpression()), !dbg !14001
  %2 = zext i16 %0 to i32, !dbg !14002
  store volatile i32 %2, i32* inttoptr (i32 1073754112 to i32*), align 4096, !dbg !14003, !tbaa !934
  ret void, !dbg !14004
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @IWDG_SetPrescaler(i8 zeroext %0) local_unnamed_addr #0 !dbg !14005 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14007, metadata !DIExpression()), !dbg !14008
  %2 = zext i8 %0 to i32, !dbg !14009
  store volatile i32 %2, i32* inttoptr (i32 1073754116 to i32*), align 4, !dbg !14010, !tbaa !1690
  ret void, !dbg !14011
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @IWDG_SetReload(i16 zeroext %0) local_unnamed_addr #0 !dbg !14012 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14014, metadata !DIExpression()), !dbg !14015
  %2 = zext i16 %0 to i32, !dbg !14016
  store volatile i32 %2, i32* inttoptr (i32 1073754120 to i32*), align 8, !dbg !14017, !tbaa !968
  ret void, !dbg !14018
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @IWDG_ReloadCounter() local_unnamed_addr #0 !dbg !14019 {
  store volatile i32 43690, i32* inttoptr (i32 1073754112 to i32*), align 4096, !dbg !14020, !tbaa !934
  ret void, !dbg !14021
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @IWDG_Enable() local_unnamed_addr #0 !dbg !14022 {
  store volatile i32 52428, i32* inttoptr (i32 1073754112 to i32*), align 4096, !dbg !14023, !tbaa !934
  ret void, !dbg !14024
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @IWDG_GetFlagStatus(i16 zeroext %0) local_unnamed_addr #0 !dbg !14025 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14027, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.value(metadata i32 0, metadata !14028, metadata !DIExpression()), !dbg !14029
  %2 = load volatile i32, i32* inttoptr (i32 1073754124 to i32*), align 4, !dbg !14030, !tbaa !985
  %3 = zext i16 %0 to i32, !dbg !14032
  %4 = and i32 %2, %3, !dbg !14033
  %5 = icmp ne i32 %4, 0, !dbg !14034
  %6 = zext i1 %5 to i32
  call void @llvm.dbg.value(metadata i32 %6, metadata !14028, metadata !DIExpression()), !dbg !14029
  ret i32 %6, !dbg !14035
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_DeInit() local_unnamed_addr #0 !dbg !14036 {
  store volatile i32 0, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14037, !tbaa !14038
  store volatile i32 0, i32* inttoptr (i32 1342504972 to i32*), align 4, !dbg !14040, !tbaa !14041
  store volatile i32 31, i32* inttoptr (i32 1342504980 to i32*), align 4, !dbg !14042, !tbaa !14043
  store volatile i32 0, i32* inttoptr (i32 1342504984 to i32*), align 8, !dbg !14044, !tbaa !14045
  store volatile i32 0, i32* inttoptr (i32 1342504988 to i32*), align 4, !dbg !14046, !tbaa !14047
  store volatile i32 0, i32* inttoptr (i32 1342504992 to i32*), align 32, !dbg !14048, !tbaa !14049
  store volatile i32 0, i32* inttoptr (i32 1342504996 to i32*), align 4, !dbg !14050, !tbaa !14051
  ret void, !dbg !14052
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_Init(%struct.TIM_BDTRInitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !14053 {
  call void @llvm.dbg.value(metadata %struct.TIM_BDTRInitTypeDef* %0, metadata !14069, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 0, metadata !14070, metadata !DIExpression()), !dbg !14071
  %2 = load volatile i32, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14072, !tbaa !14038
  %3 = and i32 %2, -16386, !dbg !14072
  store volatile i32 %3, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14072, !tbaa !14038
  %4 = load volatile i32, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14073, !tbaa !14038
  call void @llvm.dbg.value(metadata i32 %4, metadata !14070, metadata !DIExpression()), !dbg !14071
  %5 = and i32 %4, -4083, !dbg !14074
  call void @llvm.dbg.value(metadata i32 %5, metadata !14070, metadata !DIExpression()), !dbg !14071
  %6 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 0, !dbg !14075
  %7 = load i16, i16* %6, align 2, !dbg !14075, !tbaa !11629
  %8 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 1, !dbg !14076
  %9 = load i16, i16* %8, align 2, !dbg !14076, !tbaa !11632
  %10 = or i16 %9, %7, !dbg !14077
  %11 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 2, !dbg !14078
  %12 = load i16, i16* %11, align 2, !dbg !14078, !tbaa !11635
  %13 = or i16 %10, %12, !dbg !14079
  %14 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 3, !dbg !14080
  %15 = load i16, i16* %14, align 2, !dbg !14080, !tbaa !11638
  %16 = or i16 %13, %15, !dbg !14081
  %17 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 4, !dbg !14082
  %18 = load i16, i16* %17, align 2, !dbg !14082, !tbaa !11641
  %19 = or i16 %16, %18, !dbg !14083
  %20 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 5, !dbg !14084
  %21 = load i16, i16* %20, align 2, !dbg !14084, !tbaa !11644
  %22 = or i16 %19, %21, !dbg !14085
  %23 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 6, !dbg !14086
  %24 = load i16, i16* %23, align 2, !dbg !14086, !tbaa !11647
  %25 = or i16 %22, %24, !dbg !14087
  %26 = zext i16 %25 to i32, !dbg !14087
  %27 = or i32 %5, %26, !dbg !14088
  call void @llvm.dbg.value(metadata i32 %27, metadata !14070, metadata !DIExpression()), !dbg !14071
  store volatile i32 %27, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14089, !tbaa !14038
  ret void, !dbg !14090
}

; Function Attrs: nofree norecurse nounwind writeonly
define dso_local arm_aapcs_vfpcc void @DCMI_StructInit(%struct.TIM_BDTRInitTypeDef* nocapture %0) local_unnamed_addr #2 !dbg !14091 {
  call void @llvm.dbg.value(metadata %struct.TIM_BDTRInitTypeDef* %0, metadata !14093, metadata !DIExpression()), !dbg !14094
  %2 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 0, !dbg !14095
  store i16 0, i16* %2, align 2, !dbg !14096, !tbaa !11629
  %3 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 1, !dbg !14097
  store i16 0, i16* %3, align 2, !dbg !14098, !tbaa !11632
  %4 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 2, !dbg !14099
  store i16 0, i16* %4, align 2, !dbg !14100, !tbaa !11635
  %5 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 3, !dbg !14101
  store i16 0, i16* %5, align 2, !dbg !14102, !tbaa !11638
  %6 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 4, !dbg !14103
  store i16 0, i16* %6, align 2, !dbg !14104, !tbaa !11641
  %7 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 5, !dbg !14105
  store i16 0, i16* %7, align 2, !dbg !14106, !tbaa !11644
  %8 = getelementptr inbounds %struct.TIM_BDTRInitTypeDef, %struct.TIM_BDTRInitTypeDef* %0, i32 0, i32 6, !dbg !14107
  store i16 0, i16* %8, align 2, !dbg !14108, !tbaa !11647
  ret void, !dbg !14109
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_CROPConfig(%struct.CRYP_InitTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !14110 {
  call void @llvm.dbg.value(metadata %struct.CRYP_InitTypeDef* %0, metadata !14122, metadata !DIExpression()), !dbg !14123
  %2 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 1, !dbg !14124
  %3 = load i16, i16* %2, align 2, !dbg !14124, !tbaa !7776
  %4 = zext i16 %3 to i32, !dbg !14125
  %5 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 0, !dbg !14126
  %6 = load i16, i16* %5, align 2, !dbg !14126, !tbaa !7773
  %7 = zext i16 %6 to i32, !dbg !14127
  %8 = shl nuw i32 %7, 16, !dbg !14128
  %9 = or i32 %8, %4, !dbg !14129
  store volatile i32 %9, i32* inttoptr (i32 1342504992 to i32*), align 32, !dbg !14130, !tbaa !14049
  %10 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 3, !dbg !14131
  %11 = load i16, i16* %10, align 2, !dbg !14131, !tbaa !7606
  %12 = zext i16 %11 to i32, !dbg !14132
  %13 = getelementptr inbounds %struct.CRYP_InitTypeDef, %struct.CRYP_InitTypeDef* %0, i32 0, i32 2, !dbg !14133
  %14 = load i16, i16* %13, align 2, !dbg !14133, !tbaa !7779
  %15 = zext i16 %14 to i32, !dbg !14134
  %16 = shl nuw i32 %15, 16, !dbg !14135
  %17 = or i32 %16, %12, !dbg !14136
  store volatile i32 %17, i32* inttoptr (i32 1342504996 to i32*), align 4, !dbg !14137, !tbaa !14051
  ret void, !dbg !14138
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_CROPCmd(i32 %0) local_unnamed_addr #0 !dbg !14139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14141, metadata !DIExpression()), !dbg !14142
  %2 = icmp eq i32 %0, 0, !dbg !14143
  %3 = load volatile i32, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14145, !tbaa !14038
  %4 = and i32 %3, -5, !dbg !14146
  %5 = select i1 %2, i32 0, i32 4, !dbg !14146
  %6 = or i32 %4, %5, !dbg !14146
  store volatile i32 %6, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14145, !tbaa !14038
  ret void, !dbg !14147
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_SetEmbeddedSynchroCodes(%struct.RTC_TimeTypeDef* nocapture readonly %0) local_unnamed_addr #0 !dbg !14148 {
  call void @llvm.dbg.value(metadata %struct.RTC_TimeTypeDef* %0, metadata !14160, metadata !DIExpression()), !dbg !14161
  %2 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 0, !dbg !14162
  %3 = load i8, i8* %2, align 1, !dbg !14162, !tbaa !5257
  %4 = zext i8 %3 to i32, !dbg !14163
  %5 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 1, !dbg !14164
  %6 = load i8, i8* %5, align 1, !dbg !14164, !tbaa !5261
  %7 = zext i8 %6 to i32, !dbg !14165
  %8 = shl nuw nsw i32 %7, 8, !dbg !14166
  %9 = or i32 %8, %4, !dbg !14167
  %10 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 2, !dbg !14168
  %11 = load i8, i8* %10, align 1, !dbg !14168, !tbaa !5266
  %12 = zext i8 %11 to i32, !dbg !14169
  %13 = shl nuw nsw i32 %12, 16, !dbg !14170
  %14 = or i32 %9, %13, !dbg !14171
  %15 = getelementptr inbounds %struct.RTC_TimeTypeDef, %struct.RTC_TimeTypeDef* %0, i32 0, i32 3, !dbg !14172
  %16 = load i8, i8* %15, align 1, !dbg !14172, !tbaa !5246
  %17 = zext i8 %16 to i32, !dbg !14173
  %18 = shl nuw i32 %17, 24, !dbg !14174
  %19 = or i32 %14, %18, !dbg !14175
  store volatile i32 %19, i32* inttoptr (i32 1342504984 to i32*), align 8, !dbg !14176, !tbaa !14045
  ret void, !dbg !14177
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_JPEGCmd(i32 %0) local_unnamed_addr #0 !dbg !14178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14180, metadata !DIExpression()), !dbg !14181
  %2 = icmp eq i32 %0, 0, !dbg !14182
  %3 = load volatile i32, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14184, !tbaa !14038
  %4 = and i32 %3, -9, !dbg !14185
  %5 = select i1 %2, i32 0, i32 8, !dbg !14185
  %6 = or i32 %4, %5, !dbg !14185
  store volatile i32 %6, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14184, !tbaa !14038
  ret void, !dbg !14186
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_Cmd(i32 %0) local_unnamed_addr #0 !dbg !14187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14189, metadata !DIExpression()), !dbg !14190
  %2 = icmp eq i32 %0, 0, !dbg !14191
  %3 = load volatile i32, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14193, !tbaa !14038
  %4 = and i32 %3, -16385, !dbg !14194
  %5 = select i1 %2, i32 0, i32 16384, !dbg !14194
  %6 = or i32 %4, %5, !dbg !14194
  store volatile i32 %6, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14193, !tbaa !14038
  ret void, !dbg !14195
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_CaptureCmd(i32 %0) local_unnamed_addr #0 !dbg !14196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14198, metadata !DIExpression()), !dbg !14199
  %2 = icmp ne i32 %0, 0, !dbg !14200
  %3 = load volatile i32, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14202, !tbaa !14038
  %4 = and i32 %3, -2, !dbg !14203
  %5 = zext i1 %2 to i32, !dbg !14203
  %6 = or i32 %4, %5, !dbg !14203
  store volatile i32 %6, i32* inttoptr (i32 1342504960 to i32*), align 65536, !dbg !14202, !tbaa !14038
  ret void, !dbg !14204
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DCMI_ReadData() local_unnamed_addr #0 !dbg !14205 {
  %1 = load volatile i32, i32* inttoptr (i32 1342505000 to i32*), align 8, !dbg !14206, !tbaa !14207
  ret i32 %1, !dbg !14208
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_ITConfig(i16 zeroext %0, i32 %1) local_unnamed_addr #0 !dbg !14209 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14213, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i32 %1, metadata !14214, metadata !DIExpression()), !dbg !14215
  %3 = icmp eq i32 %1, 0, !dbg !14216
  br i1 %3, label %8, label %4, !dbg !14218

4:                                                ; preds = %2
  %5 = zext i16 %0 to i32, !dbg !14219
  %6 = load volatile i32, i32* inttoptr (i32 1342504972 to i32*), align 4, !dbg !14220, !tbaa !14041
  %7 = or i32 %6, %5, !dbg !14220
  br label %13, !dbg !14222

8:                                                ; preds = %2
  %9 = xor i16 %0, -1, !dbg !14223
  %10 = zext i16 %9 to i32, !dbg !14225
  %11 = load volatile i32, i32* inttoptr (i32 1342504972 to i32*), align 4, !dbg !14226, !tbaa !14041
  %12 = and i32 %11, %10, !dbg !14226
  br label %13

13:                                               ; preds = %8, %4
  %14 = phi i32 [ %12, %8 ], [ %7, %4 ]
  store volatile i32 %14, i32* inttoptr (i32 1342504972 to i32*), align 4, !dbg !14219, !tbaa !14041
  ret void, !dbg !14227
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DCMI_GetFlagStatus(i16 zeroext %0) local_unnamed_addr #0 !dbg !14228 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14230, metadata !DIExpression()), !dbg !14234
  call void @llvm.dbg.value(metadata i32 0, metadata !14231, metadata !DIExpression()), !dbg !14234
  call void @llvm.dbg.value(metadata i32 0, metadata !14233, metadata !DIExpression()), !dbg !14234
  %2 = zext i16 %0 to i32, !dbg !14235
  %3 = lshr i32 %2, 12, !dbg !14236
  call void @llvm.dbg.value(metadata i32 %3, metadata !14232, metadata !DIExpression()), !dbg !14234
  switch i32 %3, label %5 [
    i32 1, label %6
    i32 2, label %4
  ], !dbg !14237

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14233, metadata !DIExpression()), !dbg !14234
  br label %6, !dbg !14238

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14233, metadata !DIExpression()), !dbg !14234
  br label %6

6:                                                ; preds = %1, %4, %5
  %7 = phi i32* [ inttoptr (i32 1342504964 to i32*), %4 ], [ inttoptr (i32 1342504976 to i32*), %5 ], [ inttoptr (i32 1342504968 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 4, !dbg !14242, !tbaa !894
  call void @llvm.dbg.value(metadata i32 %8, metadata !14233, metadata !DIExpression()), !dbg !14234
  %9 = and i32 %8, %2, !dbg !14243
  %10 = icmp ne i32 %9, 0, !dbg !14245
  %11 = zext i1 %10 to i32
  call void @llvm.dbg.value(metadata i32 %11, metadata !14231, metadata !DIExpression()), !dbg !14234
  ret i32 %11, !dbg !14246
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_ClearFlag(i16 zeroext %0) local_unnamed_addr #0 !dbg !14247 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14249, metadata !DIExpression()), !dbg !14250
  %2 = zext i16 %0 to i32, !dbg !14251
  store volatile i32 %2, i32* inttoptr (i32 1342504980 to i32*), align 4, !dbg !14252, !tbaa !14043
  ret void, !dbg !14253
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @DCMI_GetITStatus(i16 zeroext %0) local_unnamed_addr #0 !dbg !14254 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14258, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 0, metadata !14259, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 0, metadata !14260, metadata !DIExpression()), !dbg !14261
  %2 = load volatile i32, i32* inttoptr (i32 1342504976 to i32*), align 16, !dbg !14262, !tbaa !14263
  %3 = zext i16 %0 to i32, !dbg !14264
  %4 = and i32 %2, %3, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %4, metadata !14260, metadata !DIExpression()), !dbg !14261
  %5 = icmp ne i32 %4, 0, !dbg !14266
  %6 = zext i1 %5 to i32
  call void @llvm.dbg.value(metadata i32 %6, metadata !14259, metadata !DIExpression()), !dbg !14261
  ret i32 %6, !dbg !14268
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @DCMI_ClearITPendingBit(i16 zeroext %0) local_unnamed_addr #0 !dbg !14269 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14271, metadata !DIExpression()), !dbg !14272
  %2 = zext i16 %0 to i32, !dbg !14273
  store volatile i32 %2, i32* inttoptr (i32 1342504980 to i32*), align 4, !dbg !14274, !tbaa !14043
  ret void, !dbg !14275
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @PWR_DeInit() local_unnamed_addr #3 !dbg !14276 {
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 268435456, i32 1) #5, !dbg !14277
  tail call arm_aapcs_vfpcc void @RCC_APB1PeriphResetCmd(i32 268435456, i32 0) #5, !dbg !14278
  ret void, !dbg !14279
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @PWR_BackupAccessCmd(i32 %0) local_unnamed_addr #0 !dbg !14280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14282, metadata !DIExpression()), !dbg !14283
  store volatile i32 %0, i32* inttoptr (i32 1108213792 to i32*), align 32, !dbg !14284, !tbaa !894
  ret void, !dbg !14285
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @PWR_PVDLevelConfig(i32 %0) local_unnamed_addr #0 !dbg !14286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14288, metadata !DIExpression()), !dbg !14290
  call void @llvm.dbg.value(metadata i32 0, metadata !14289, metadata !DIExpression()), !dbg !14290
  %2 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14291, !tbaa !3006
  call void @llvm.dbg.value(metadata i32 %2, metadata !14289, metadata !DIExpression()), !dbg !14290
  %3 = and i32 %2, -225, !dbg !14292
  call void @llvm.dbg.value(metadata i32 %3, metadata !14289, metadata !DIExpression()), !dbg !14290
  %4 = or i32 %3, %0, !dbg !14293
  call void @llvm.dbg.value(metadata i32 %4, metadata !14289, metadata !DIExpression()), !dbg !14290
  store volatile i32 %4, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14294, !tbaa !3006
  ret void, !dbg !14295
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @PWR_PVDCmd(i32 %0) local_unnamed_addr #0 !dbg !14296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14298, metadata !DIExpression()), !dbg !14299
  store volatile i32 %0, i32* inttoptr (i32 1108213776 to i32*), align 16, !dbg !14300, !tbaa !894
  ret void, !dbg !14301
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @PWR_WakeUpPinCmd(i32 %0) local_unnamed_addr #0 !dbg !14302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14304, metadata !DIExpression()), !dbg !14305
  store volatile i32 %0, i32* inttoptr (i32 1108213920 to i32*), align 32, !dbg !14306, !tbaa !894
  ret void, !dbg !14307
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @PWR_BackupRegulatorCmd(i32 %0) local_unnamed_addr #0 !dbg !14308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14310, metadata !DIExpression()), !dbg !14311
  store volatile i32 %0, i32* inttoptr (i32 1108213924 to i32*), align 4, !dbg !14312, !tbaa !894
  ret void, !dbg !14313
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @PWR_MainRegulatorModeConfig(i32 %0) local_unnamed_addr #0 !dbg !14314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14316, metadata !DIExpression()), !dbg !14317
  %2 = icmp eq i32 %0, 0, !dbg !14318
  %3 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14320, !tbaa !3006
  %4 = and i32 %3, -16385, !dbg !14321
  %5 = select i1 %2, i32 0, i32 16384, !dbg !14321
  %6 = or i32 %4, %5, !dbg !14321
  store volatile i32 %6, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14320, !tbaa !3006
  ret void, !dbg !14322
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @PWR_FlashPowerDownCmd(i32 %0) local_unnamed_addr #0 !dbg !14323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14325, metadata !DIExpression()), !dbg !14326
  store volatile i32 %0, i32* inttoptr (i32 1108213796 to i32*), align 4, !dbg !14327, !tbaa !894
  ret void, !dbg !14328
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @PWR_EnterSTOPMode(i32 %0, i8 zeroext %1) local_unnamed_addr #3 !dbg !14329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14333, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata i8 %1, metadata !14334, metadata !DIExpression()), !dbg !14336
  call void @llvm.dbg.value(metadata i32 0, metadata !14335, metadata !DIExpression()), !dbg !14336
  %3 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14337, !tbaa !3006
  call void @llvm.dbg.value(metadata i32 %3, metadata !14335, metadata !DIExpression()), !dbg !14336
  %4 = and i32 %3, -4, !dbg !14338
  call void @llvm.dbg.value(metadata i32 %4, metadata !14335, metadata !DIExpression()), !dbg !14336
  %5 = or i32 %4, %0, !dbg !14339
  call void @llvm.dbg.value(metadata i32 %5, metadata !14335, metadata !DIExpression()), !dbg !14336
  store volatile i32 %5, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14340, !tbaa !3006
  %6 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !14341, !tbaa !921
  %7 = or i32 %6, 4, !dbg !14341
  store volatile i32 %7, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !14341, !tbaa !921
  %8 = icmp eq i8 %1, 1, !dbg !14342
  br i1 %8, label %9, label %10, !dbg !14344

9:                                                ; preds = %2
  tail call void asm sideeffect "wfi", ""() #6, !dbg !14345, !srcloc !14349
  br label %11, !dbg !14350

10:                                               ; preds = %2
  tail call void asm sideeffect "wfe", ""() #6, !dbg !14351, !srcloc !14355
  br label %11

11:                                               ; preds = %10, %9
  %12 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !14356, !tbaa !921
  %13 = and i32 %12, -5, !dbg !14356
  store volatile i32 %13, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !14356, !tbaa !921
  ret void, !dbg !14357
}

; Function Attrs: nounwind
define dso_local arm_aapcs_vfpcc void @PWR_EnterSTANDBYMode() local_unnamed_addr #3 !dbg !14358 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14359, !tbaa !3006
  %2 = or i32 %1, 4, !dbg !14359
  store volatile i32 %2, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14359, !tbaa !3006
  %3 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14360, !tbaa !3006
  %4 = or i32 %3, 2, !dbg !14360
  store volatile i32 %4, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14360, !tbaa !3006
  %5 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !14361, !tbaa !921
  %6 = or i32 %5, 4, !dbg !14361
  store volatile i32 %6, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !14361, !tbaa !921
  tail call void asm sideeffect "wfi", ""() #6, !dbg !14362, !srcloc !14349
  ret void, !dbg !14364
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc i32 @PWR_GetFlagStatus(i32 %0) local_unnamed_addr #0 !dbg !14365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14367, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i32 0, metadata !14368, metadata !DIExpression()), !dbg !14369
  %2 = load volatile i32, i32* inttoptr (i32 1073770500 to i32*), align 4, !dbg !14370, !tbaa !3026
  %3 = and i32 %2, %0, !dbg !14372
  %4 = icmp ne i32 %3, 0, !dbg !14373
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !14368, metadata !DIExpression()), !dbg !14369
  ret i32 %5, !dbg !14374
}

; Function Attrs: nofree norecurse nounwind
define dso_local arm_aapcs_vfpcc void @PWR_ClearFlag(i32 %0) local_unnamed_addr #0 !dbg !14375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14377, metadata !DIExpression()), !dbg !14378
  %2 = shl i32 %0, 2, !dbg !14379
  %3 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14380, !tbaa !3006
  %4 = or i32 %3, %2, !dbg !14380
  store volatile i32 %4, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14380, !tbaa !3006
  ret void, !dbg !14381
}

attributes #0 = { nofree norecurse nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nofree norecurse nounwind writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nobuiltin nounwind "no-builtins" }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!72, !154, !2, !176, !186, !210, !220, !280, !311, !359, !372, !417, !447, !452, !497, !556, !584, !606, !619, !622, !626, !669, !671, !673, !694, !715, !740, !750, !761, !773, !791}
!llvm.ident = !{!825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825, !825}
!llvm.module.flags = !{!826, !827, !828, !829}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "APBAHBPrescTable", scope: !2, file: !3, line: 128, type: !68, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !19, globals: !67, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "src/peripherals/stm32f4xx_rcc.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!4 = !{!5, !11, !15}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 290, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "inc/stm32f4xx.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "ERROR", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "SUCCESS", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 285, baseType: !7, size: 32, elements: !12)
!12 = !{!13, !14}
!13 = !DIEnumerator(name: "RESET", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "SET", value: 1, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 287, baseType: !7, size: 32, elements: !16)
!16 = !{!17, !18}
!17 = !DIEnumerator(name: "DISABLE", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "ENABLE", value: 1, isUnsigned: true)
!19 = !{!20, !22, !60, !62, !64, !66}
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !21, line: 172, baseType: !7)
!21 = !DIFile(filename: "DDS-FUZZ/llvm/lib/clang/11.0.0/include/stdint.h", directory: "/home/rvd5542")
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 32)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !6, line: 765, baseType: !24)
!24 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 733, size: 1088, elements: !25)
!25 = !{!26, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !24, file: !6, line: 735, baseType: !27, size: 32)
!27 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !20)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !24, file: !6, line: 736, baseType: !27, size: 32, offset: 32)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !24, file: !6, line: 737, baseType: !27, size: 32, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !24, file: !6, line: 738, baseType: !27, size: 32, offset: 96)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !24, file: !6, line: 739, baseType: !27, size: 32, offset: 128)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !24, file: !6, line: 740, baseType: !27, size: 32, offset: 160)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !24, file: !6, line: 741, baseType: !27, size: 32, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !24, file: !6, line: 742, baseType: !20, size: 32, offset: 224)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !24, file: !6, line: 743, baseType: !27, size: 32, offset: 256)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !24, file: !6, line: 744, baseType: !27, size: 32, offset: 288)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !24, file: !6, line: 745, baseType: !38, size: 64, offset: 320)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 64, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 2)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !24, file: !6, line: 746, baseType: !27, size: 32, offset: 384)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !24, file: !6, line: 747, baseType: !27, size: 32, offset: 416)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !24, file: !6, line: 748, baseType: !27, size: 32, offset: 448)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !24, file: !6, line: 749, baseType: !20, size: 32, offset: 480)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !24, file: !6, line: 750, baseType: !27, size: 32, offset: 512)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !24, file: !6, line: 751, baseType: !27, size: 32, offset: 544)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !24, file: !6, line: 752, baseType: !38, size: 64, offset: 576)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !24, file: !6, line: 753, baseType: !27, size: 32, offset: 640)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !24, file: !6, line: 754, baseType: !27, size: 32, offset: 672)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !24, file: !6, line: 755, baseType: !27, size: 32, offset: 704)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !24, file: !6, line: 756, baseType: !20, size: 32, offset: 736)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !24, file: !6, line: 757, baseType: !27, size: 32, offset: 768)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !24, file: !6, line: 758, baseType: !27, size: 32, offset: 800)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !24, file: !6, line: 759, baseType: !38, size: 64, offset: 832)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !24, file: !6, line: 760, baseType: !27, size: 32, offset: 896)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !24, file: !6, line: 761, baseType: !27, size: 32, offset: 928)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !24, file: !6, line: 762, baseType: !38, size: 64, offset: 960)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !24, file: !6, line: 763, baseType: !27, size: 32, offset: 1024)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !24, file: !6, line: 764, baseType: !27, size: 32, offset: 1056)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !21, line: 226, baseType: !61)
!61 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 32)
!63 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !60)
!64 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !21, line: 207, baseType: !65)
!65 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 32)
!67 = !{!0}
!68 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 128, elements: !70)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !63)
!70 = !{!71}
!71 = !DISubrange(count: 16)
!72 = distinct !DICompileUnit(language: DW_LANG_C99, file: !73, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !74, retainedTypes: !75, splitDebugInlining: false, nameTableKind: None)
!73 = !DIFile(filename: "src/peripherals/misc.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!74 = !{!15}
!75 = !{!20, !76, !60, !114, !146}
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 32)
!77 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !78, line: 358, baseType: !79)
!78 = !DIFile(filename: "inc/core/core_cm4.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!79 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 335, size: 1120, elements: !80)
!80 = !{!81, !83, !84, !85, !86, !87, !88, !92, !93, !94, !95, !96, !97, !98, !99, !101, !102, !103, !107, !111, !113}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !79, file: !78, line: 337, baseType: !82, size: 32)
!82 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !79, file: !78, line: 338, baseType: !27, size: 32, offset: 32)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !79, file: !78, line: 339, baseType: !27, size: 32, offset: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !79, file: !78, line: 340, baseType: !27, size: 32, offset: 96)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !79, file: !78, line: 341, baseType: !27, size: 32, offset: 128)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !79, file: !78, line: 342, baseType: !27, size: 32, offset: 160)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !79, file: !78, line: 343, baseType: !89, size: 96, offset: 192)
!89 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 96, elements: !90)
!90 = !{!91}
!91 = !DISubrange(count: 12)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !79, file: !78, line: 344, baseType: !27, size: 32, offset: 288)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !79, file: !78, line: 345, baseType: !27, size: 32, offset: 320)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !79, file: !78, line: 346, baseType: !27, size: 32, offset: 352)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !79, file: !78, line: 347, baseType: !27, size: 32, offset: 384)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !79, file: !78, line: 348, baseType: !27, size: 32, offset: 416)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !79, file: !78, line: 349, baseType: !27, size: 32, offset: 448)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !79, file: !78, line: 350, baseType: !27, size: 32, offset: 480)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !79, file: !78, line: 351, baseType: !100, size: 64, offset: 512)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 64, elements: !39)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !79, file: !78, line: 352, baseType: !82, size: 32, offset: 576)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !79, file: !78, line: 353, baseType: !82, size: 32, offset: 608)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !79, file: !78, line: 354, baseType: !104, size: 128, offset: 640)
!104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 128, elements: !105)
!105 = !{!106}
!106 = !DISubrange(count: 4)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !79, file: !78, line: 355, baseType: !108, size: 160, offset: 768)
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 160, elements: !109)
!109 = !{!110}
!110 = !DISubrange(count: 5)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !79, file: !78, line: 356, baseType: !112, size: 160, offset: 928)
!112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 160, elements: !109)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !79, file: !78, line: 357, baseType: !27, size: 32, offset: 1088)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !78, line: 318, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 303, size: 28704, elements: !117)
!117 = !{!118, !122, !126, !127, !128, !129, !130, !131, !132, !133, !137, !141, !145}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !116, file: !78, line: 305, baseType: !119, size: 256)
!119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 256, elements: !120)
!120 = !{!121}
!121 = !DISubrange(count: 8)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !116, file: !78, line: 306, baseType: !123, size: 768, offset: 256)
!123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 768, elements: !124)
!124 = !{!125}
!125 = !DISubrange(count: 24)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !116, file: !78, line: 307, baseType: !119, size: 256, offset: 1024)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !116, file: !78, line: 308, baseType: !123, size: 768, offset: 1280)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !116, file: !78, line: 309, baseType: !119, size: 256, offset: 2048)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !116, file: !78, line: 310, baseType: !123, size: 768, offset: 2304)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !116, file: !78, line: 311, baseType: !119, size: 256, offset: 3072)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !116, file: !78, line: 312, baseType: !123, size: 768, offset: 3328)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !116, file: !78, line: 313, baseType: !119, size: 256, offset: 4096)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !116, file: !78, line: 314, baseType: !134, size: 1792, offset: 4352)
!134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 1792, elements: !135)
!135 = !{!136}
!136 = !DISubrange(count: 56)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !116, file: !78, line: 315, baseType: !138, size: 1920, offset: 6144)
!138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 1920, elements: !139)
!139 = !{!140}
!140 = !DISubrange(count: 240)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !116, file: !78, line: 316, baseType: !142, size: 20608, offset: 8064)
!142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 20608, elements: !143)
!143 = !{!144}
!144 = !DISubrange(count: 644)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !116, file: !78, line: 317, baseType: !27, size: 32, offset: 28672)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !78, line: 596, baseType: !148)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 590, size: 128, elements: !149)
!149 = !{!150, !151, !152, !153}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !148, file: !78, line: 592, baseType: !27, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !148, file: !78, line: 593, baseType: !27, size: 32, offset: 32)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !148, file: !78, line: 594, baseType: !27, size: 32, offset: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !148, file: !78, line: 595, baseType: !82, size: 32, offset: 96)
!154 = distinct !DICompileUnit(language: DW_LANG_C99, file: !155, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !157, splitDebugInlining: false, nameTableKind: None)
!155 = !DIFile(filename: "src/peripherals/stm32f4xx_dma.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!156 = !{!15, !11}
!157 = !{!20, !158, !168, !64}
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_Stream_TypeDef", file: !6, line: 479, baseType: !160)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 471, size: 192, elements: !161)
!161 = !{!162, !163, !164, !165, !166, !167}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !160, file: !6, line: 473, baseType: !27, size: 32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "NDTR", scope: !160, file: !6, line: 474, baseType: !27, size: 32, offset: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "PAR", scope: !160, file: !6, line: 475, baseType: !27, size: 32, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "M0AR", scope: !160, file: !6, line: 476, baseType: !27, size: 32, offset: 96)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "M1AR", scope: !160, file: !6, line: 477, baseType: !27, size: 32, offset: 128)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !160, file: !6, line: 478, baseType: !27, size: 32, offset: 160)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_TypeDef", file: !6, line: 487, baseType: !170)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 481, size: 128, elements: !171)
!171 = !{!172, !173, !174, !175}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "LISR", scope: !170, file: !6, line: 483, baseType: !27, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "HISR", scope: !170, file: !6, line: 484, baseType: !27, size: 32, offset: 32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "LIFCR", scope: !170, file: !6, line: 485, baseType: !27, size: 32, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "HIFCR", scope: !170, file: !6, line: 486, baseType: !27, size: 32, offset: 96)
!176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !177, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !178, splitDebugInlining: false, nameTableKind: None)
!177 = !DIFile(filename: "src/peripherals/stm32f4xx_adc.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!178 = !{!20, !60, !179, !64, !66}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADC_Common_TypeDef", file: !6, line: 334, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 328, size: 96, elements: !182)
!182 = !{!183, !184, !185}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !181, file: !6, line: 330, baseType: !27, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !181, file: !6, line: 331, baseType: !27, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "CDR", scope: !181, file: !6, line: 332, baseType: !27, size: 32, offset: 64)
!186 = distinct !DICompileUnit(language: DW_LANG_C99, file: !187, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !188, retainedTypes: !199, splitDebugInlining: false, nameTableKind: None)
!187 = !DIFile(filename: "src/peripherals/stm32f4xx_exti.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!188 = !{!189, !194, !15, !11}
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !190, line: 48, baseType: !7, size: 32, elements: !191)
!190 = !DIFile(filename: "inc/peripherals/stm32f4xx_exti.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!191 = !{!192, !193}
!192 = !DIEnumerator(name: "EXTI_Mode_Interrupt", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "EXTI_Mode_Event", value: 4, isUnsigned: true)
!194 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !190, line: 60, baseType: !7, size: 32, elements: !195)
!195 = !{!196, !197, !198}
!196 = !DIEnumerator(name: "EXTI_Trigger_Rising", value: 8, isUnsigned: true)
!197 = !DIEnumerator(name: "EXTI_Trigger_Falling", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "EXTI_Trigger_Rising_Falling", value: 16, isUnsigned: true)
!199 = !{!200, !20, !66}
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !6, line: 575, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 567, size: 192, elements: !203)
!203 = !{!204, !205, !206, !207, !208, !209}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !202, file: !6, line: 569, baseType: !27, size: 32)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !202, file: !6, line: 570, baseType: !27, size: 32, offset: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !202, file: !6, line: 571, baseType: !27, size: 32, offset: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !202, file: !6, line: 572, baseType: !27, size: 32, offset: 96)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !202, file: !6, line: 573, baseType: !27, size: 32, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !202, file: !6, line: 574, baseType: !27, size: 32, offset: 160)
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !212, splitDebugInlining: false, nameTableKind: None)
!211 = !DIFile(filename: "src/peripherals/stm32f4xx_rng.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!212 = !{!20, !213, !60}
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "RNG_TypeDef", file: !6, line: 999, baseType: !215)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 994, size: 96, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !215, file: !6, line: 996, baseType: !27, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !215, file: !6, line: 997, baseType: !27, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !215, file: !6, line: 998, baseType: !27, size: 32, offset: 64)
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !222, splitDebugInlining: false, nameTableKind: None)
!221 = !DIFile(filename: "src/peripherals/stm32f4xx_can.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!222 = !{!223, !20, !60, !64}
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_TypeDef", file: !6, line: 399, baseType: !225)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 375, size: 6400, elements: !226)
!226 = !{!227, !228, !229, !230, !231, !232, !233, !234, !235, !239, !250, !259, !261, !262, !263, !264, !265, !266, !267, !268, !269, !271}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !225, file: !6, line: 377, baseType: !27, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "MSR", scope: !225, file: !6, line: 378, baseType: !27, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "TSR", scope: !225, file: !6, line: 379, baseType: !27, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "RF0R", scope: !225, file: !6, line: 380, baseType: !27, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "RF1R", scope: !225, file: !6, line: 381, baseType: !27, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !225, file: !6, line: 382, baseType: !27, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ESR", scope: !225, file: !6, line: 383, baseType: !27, size: 32, offset: 192)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "BTR", scope: !225, file: !6, line: 384, baseType: !27, size: 32, offset: 224)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !225, file: !6, line: 385, baseType: !236, size: 2816, offset: 256)
!236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 2816, elements: !237)
!237 = !{!238}
!238 = !DISubrange(count: 88)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "sTxMailBox", scope: !225, file: !6, line: 386, baseType: !240, size: 384, offset: 3072)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 384, elements: !248)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_TxMailBox_TypeDef", file: !6, line: 347, baseType: !242)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 341, size: 128, elements: !243)
!243 = !{!244, !245, !246, !247}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "TIR", scope: !242, file: !6, line: 343, baseType: !27, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "TDTR", scope: !242, file: !6, line: 344, baseType: !27, size: 32, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "TDLR", scope: !242, file: !6, line: 345, baseType: !27, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "TDHR", scope: !242, file: !6, line: 346, baseType: !27, size: 32, offset: 96)
!248 = !{!249}
!249 = !DISubrange(count: 3)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "sFIFOMailBox", scope: !225, file: !6, line: 387, baseType: !251, size: 256, offset: 3456)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 256, elements: !39)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_FIFOMailBox_TypeDef", file: !6, line: 359, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 353, size: 128, elements: !254)
!254 = !{!255, !256, !257, !258}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "RIR", scope: !253, file: !6, line: 355, baseType: !27, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "RDTR", scope: !253, file: !6, line: 356, baseType: !27, size: 32, offset: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "RDLR", scope: !253, file: !6, line: 357, baseType: !27, size: 32, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "RDHR", scope: !253, file: !6, line: 358, baseType: !27, size: 32, offset: 96)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !225, file: !6, line: 388, baseType: !260, size: 384, offset: 3712)
!260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 384, elements: !90)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "FMR", scope: !225, file: !6, line: 389, baseType: !27, size: 32, offset: 4096)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "FM1R", scope: !225, file: !6, line: 390, baseType: !27, size: 32, offset: 4128)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !225, file: !6, line: 391, baseType: !20, size: 32, offset: 4160)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "FS1R", scope: !225, file: !6, line: 392, baseType: !27, size: 32, offset: 4192)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !225, file: !6, line: 393, baseType: !20, size: 32, offset: 4224)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "FFA1R", scope: !225, file: !6, line: 394, baseType: !27, size: 32, offset: 4256)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !225, file: !6, line: 395, baseType: !20, size: 32, offset: 4288)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "FA1R", scope: !225, file: !6, line: 396, baseType: !27, size: 32, offset: 4320)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !225, file: !6, line: 397, baseType: !270, size: 256, offset: 4352)
!270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 256, elements: !120)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "sFilterRegister", scope: !225, file: !6, line: 398, baseType: !272, size: 1792, offset: 4608)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 1792, elements: !278)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_FilterRegister_TypeDef", file: !6, line: 369, baseType: !274)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 365, size: 64, elements: !275)
!275 = !{!276, !277}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "FR1", scope: !274, file: !6, line: 367, baseType: !27, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "FR2", scope: !274, file: !6, line: 368, baseType: !27, size: 32, offset: 32)
!278 = !{!279}
!279 = !DISubrange(count: 28)
!280 = distinct !DICompileUnit(language: DW_LANG_C99, file: !281, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !282, retainedTypes: !294, splitDebugInlining: false, nameTableKind: None)
!281 = !DIFile(filename: "src/peripherals/stm32f4xx_flash.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!282 = !{!15, !11, !283}
!283 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !284, line: 46, baseType: !7, size: 32, elements: !285)
!284 = !DIFile(filename: "inc/peripherals/stm32f4xx_flash.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293}
!286 = !DIEnumerator(name: "FLASH_BUSY", value: 1, isUnsigned: true)
!287 = !DIEnumerator(name: "FLASH_ERROR_PGS", value: 2, isUnsigned: true)
!288 = !DIEnumerator(name: "FLASH_ERROR_PGP", value: 3, isUnsigned: true)
!289 = !DIEnumerator(name: "FLASH_ERROR_PGA", value: 4, isUnsigned: true)
!290 = !DIEnumerator(name: "FLASH_ERROR_WRP", value: 5, isUnsigned: true)
!291 = !DIEnumerator(name: "FLASH_ERROR_PROGRAM", value: 6, isUnsigned: true)
!292 = !DIEnumerator(name: "FLASH_ERROR_OPERATION", value: 7, isUnsigned: true)
!293 = !DIEnumerator(name: "FLASH_COMPLETE", value: 8, isUnsigned: true)
!294 = !{!60, !62, !20, !295, !305, !66, !309, !64}
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !6, line: 589, baseType: !297)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 581, size: 192, elements: !298)
!298 = !{!299, !300, !301, !302, !303, !304}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !297, file: !6, line: 583, baseType: !27, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !297, file: !6, line: 584, baseType: !27, size: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !297, file: !6, line: 585, baseType: !27, size: 32, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !297, file: !6, line: 586, baseType: !27, size: 32, offset: 96)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !297, file: !6, line: 587, baseType: !27, size: 32, offset: 128)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !297, file: !6, line: 588, baseType: !27, size: 32, offset: 160)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !307)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !21, line: 98, baseType: !308)
!308 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !64)
!311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !312, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !313, splitDebugInlining: false, nameTableKind: None)
!312 = !DIFile(filename: "src/peripherals/stm32f4xx_rtc.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!313 = !{!314, !20, !60, !358, !66}
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "RTC_TypeDef", file: !6, line: 813, baseType: !316)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 771, size: 1280, elements: !317)
!317 = !{!318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "TR", scope: !316, file: !6, line: 773, baseType: !27, size: 32)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !316, file: !6, line: 774, baseType: !27, size: 32, offset: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !316, file: !6, line: 775, baseType: !27, size: 32, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !316, file: !6, line: 776, baseType: !27, size: 32, offset: 96)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "PRER", scope: !316, file: !6, line: 777, baseType: !27, size: 32, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "WUTR", scope: !316, file: !6, line: 778, baseType: !27, size: 32, offset: 160)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "CALIBR", scope: !316, file: !6, line: 779, baseType: !27, size: 32, offset: 192)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "ALRMAR", scope: !316, file: !6, line: 780, baseType: !27, size: 32, offset: 224)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ALRMBR", scope: !316, file: !6, line: 781, baseType: !27, size: 32, offset: 256)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "WPR", scope: !316, file: !6, line: 782, baseType: !27, size: 32, offset: 288)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "SSR", scope: !316, file: !6, line: 783, baseType: !27, size: 32, offset: 320)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "SHIFTR", scope: !316, file: !6, line: 784, baseType: !27, size: 32, offset: 352)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "TSTR", scope: !316, file: !6, line: 785, baseType: !27, size: 32, offset: 384)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "TSDR", scope: !316, file: !6, line: 786, baseType: !27, size: 32, offset: 416)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "TSSSR", scope: !316, file: !6, line: 787, baseType: !27, size: 32, offset: 448)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "CALR", scope: !316, file: !6, line: 788, baseType: !27, size: 32, offset: 480)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "TAFCR", scope: !316, file: !6, line: 789, baseType: !27, size: 32, offset: 512)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "ALRMASSR", scope: !316, file: !6, line: 790, baseType: !27, size: 32, offset: 544)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "ALRMBSSR", scope: !316, file: !6, line: 791, baseType: !27, size: 32, offset: 576)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !316, file: !6, line: 792, baseType: !20, size: 32, offset: 608)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "BKP0R", scope: !316, file: !6, line: 793, baseType: !27, size: 32, offset: 640)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "BKP1R", scope: !316, file: !6, line: 794, baseType: !27, size: 32, offset: 672)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "BKP2R", scope: !316, file: !6, line: 795, baseType: !27, size: 32, offset: 704)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "BKP3R", scope: !316, file: !6, line: 796, baseType: !27, size: 32, offset: 736)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "BKP4R", scope: !316, file: !6, line: 797, baseType: !27, size: 32, offset: 768)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "BKP5R", scope: !316, file: !6, line: 798, baseType: !27, size: 32, offset: 800)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "BKP6R", scope: !316, file: !6, line: 799, baseType: !27, size: 32, offset: 832)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "BKP7R", scope: !316, file: !6, line: 800, baseType: !27, size: 32, offset: 864)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "BKP8R", scope: !316, file: !6, line: 801, baseType: !27, size: 32, offset: 896)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "BKP9R", scope: !316, file: !6, line: 802, baseType: !27, size: 32, offset: 928)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "BKP10R", scope: !316, file: !6, line: 803, baseType: !27, size: 32, offset: 960)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "BKP11R", scope: !316, file: !6, line: 804, baseType: !27, size: 32, offset: 992)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "BKP12R", scope: !316, file: !6, line: 805, baseType: !27, size: 32, offset: 1024)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "BKP13R", scope: !316, file: !6, line: 806, baseType: !27, size: 32, offset: 1056)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "BKP14R", scope: !316, file: !6, line: 807, baseType: !27, size: 32, offset: 1088)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "BKP15R", scope: !316, file: !6, line: 808, baseType: !27, size: 32, offset: 1120)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "BKP16R", scope: !316, file: !6, line: 809, baseType: !27, size: 32, offset: 1152)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "BKP17R", scope: !316, file: !6, line: 810, baseType: !27, size: 32, offset: 1184)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "BKP18R", scope: !316, file: !6, line: 811, baseType: !27, size: 32, offset: 1216)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "BKP19R", scope: !316, file: !6, line: 812, baseType: !27, size: 32, offset: 1248)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !6, line: 290, baseType: !5)
!359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !360, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !361, retainedTypes: !362, splitDebugInlining: false, nameTableKind: None)
!360 = !DIFile(filename: "src/peripherals/stm32f4xx_crc.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!361 = !{}
!362 = !{!60, !363, !20}
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRC_TypeDef", file: !6, line: 412, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 405, size: 96, elements: !366)
!366 = !{!367, !368, !369, !370, !371}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !365, file: !6, line: 407, baseType: !27, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !365, file: !6, line: 408, baseType: !63, size: 8, offset: 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !365, file: !6, line: 409, baseType: !60, size: 8, offset: 40)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !365, file: !6, line: 410, baseType: !64, size: 16, offset: 48)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !365, file: !6, line: 411, baseType: !27, size: 32, offset: 64)
!372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !373, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !374, splitDebugInlining: false, nameTableKind: None)
!373 = !DIFile(filename: "src/peripherals/stm32f4xx_fsmc.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!374 = !{!20, !375, !380, !388, !398, !408, !64}
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_Bank1_TypeDef", file: !6, line: 598, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 595, size: 256, elements: !378)
!378 = !{!379}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "BTCR", scope: !377, file: !6, line: 597, baseType: !119, size: 256)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_Bank1E_TypeDef", file: !6, line: 607, baseType: !382)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 604, size: 224, elements: !383)
!383 = !{!384}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "BWTR", scope: !382, file: !6, line: 606, baseType: !385, size: 224)
!385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 224, elements: !386)
!386 = !{!387}
!387 = !DISubrange(count: 7)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_Bank2_TypeDef", file: !6, line: 621, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 613, size: 192, elements: !391)
!391 = !{!392, !393, !394, !395, !396, !397}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "PCR2", scope: !390, file: !6, line: 615, baseType: !27, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "SR2", scope: !390, file: !6, line: 616, baseType: !27, size: 32, offset: 32)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "PMEM2", scope: !390, file: !6, line: 617, baseType: !27, size: 32, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "PATT2", scope: !390, file: !6, line: 618, baseType: !27, size: 32, offset: 96)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !390, file: !6, line: 619, baseType: !20, size: 32, offset: 128)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "ECCR2", scope: !390, file: !6, line: 620, baseType: !27, size: 32, offset: 160)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_Bank3_TypeDef", file: !6, line: 635, baseType: !400)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 627, size: 192, elements: !401)
!401 = !{!402, !403, !404, !405, !406, !407}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "PCR3", scope: !400, file: !6, line: 629, baseType: !27, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "SR3", scope: !400, file: !6, line: 630, baseType: !27, size: 32, offset: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "PMEM3", scope: !400, file: !6, line: 631, baseType: !27, size: 32, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "PATT3", scope: !400, file: !6, line: 632, baseType: !27, size: 32, offset: 96)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !400, file: !6, line: 633, baseType: !20, size: 32, offset: 128)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ECCR3", scope: !400, file: !6, line: 634, baseType: !27, size: 32, offset: 160)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_Bank4_TypeDef", file: !6, line: 648, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 641, size: 160, elements: !411)
!411 = !{!412, !413, !414, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "PCR4", scope: !410, file: !6, line: 643, baseType: !27, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "SR4", scope: !410, file: !6, line: 644, baseType: !27, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "PMEM4", scope: !410, file: !6, line: 645, baseType: !27, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "PATT4", scope: !410, file: !6, line: 646, baseType: !27, size: 32, offset: 96)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "PIO4", scope: !410, file: !6, line: 647, baseType: !27, size: 32, offset: 128)
!417 = distinct !DICompileUnit(language: DW_LANG_C99, file: !418, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !419, splitDebugInlining: false, nameTableKind: None)
!418 = !DIFile(filename: "src/peripherals/stm32f4xx_sdio.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!419 = !{!20, !420, !66, !60}
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "SDIO_TypeDef", file: !6, line: 841, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 819, size: 1056, elements: !423)
!423 = !{!424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !446}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "POWER", scope: !422, file: !6, line: 821, baseType: !27, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCR", scope: !422, file: !6, line: 822, baseType: !27, size: 32, offset: 32)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "ARG", scope: !422, file: !6, line: 823, baseType: !27, size: 32, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !422, file: !6, line: 824, baseType: !27, size: 32, offset: 96)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "RESPCMD", scope: !422, file: !6, line: 825, baseType: !82, size: 32, offset: 128)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "RESP1", scope: !422, file: !6, line: 826, baseType: !82, size: 32, offset: 160)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "RESP2", scope: !422, file: !6, line: 827, baseType: !82, size: 32, offset: 192)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "RESP3", scope: !422, file: !6, line: 828, baseType: !82, size: 32, offset: 224)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "RESP4", scope: !422, file: !6, line: 829, baseType: !82, size: 32, offset: 256)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "DTIMER", scope: !422, file: !6, line: 830, baseType: !27, size: 32, offset: 288)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "DLEN", scope: !422, file: !6, line: 831, baseType: !27, size: 32, offset: 320)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "DCTRL", scope: !422, file: !6, line: 832, baseType: !27, size: 32, offset: 352)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "DCOUNT", scope: !422, file: !6, line: 833, baseType: !82, size: 32, offset: 384)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "STA", scope: !422, file: !6, line: 834, baseType: !82, size: 32, offset: 416)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "ICR", scope: !422, file: !6, line: 835, baseType: !27, size: 32, offset: 448)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "MASK", scope: !422, file: !6, line: 836, baseType: !27, size: 32, offset: 480)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !422, file: !6, line: 837, baseType: !38, size: 64, offset: 512)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "FIFOCNT", scope: !422, file: !6, line: 838, baseType: !82, size: 32, offset: 576)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !422, file: !6, line: 839, baseType: !443, size: 416, offset: 608)
!443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 416, elements: !444)
!444 = !{!445}
!445 = !DISubrange(count: 13)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO", scope: !422, file: !6, line: 840, baseType: !27, size: 32, offset: 1024)
!447 = distinct !DICompileUnit(language: DW_LANG_C99, file: !448, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !449, retainedTypes: !450, splitDebugInlining: false, nameTableKind: None)
!448 = !DIFile(filename: "src/peripherals/stm32f4xx_cryp_aes.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!449 = !{!5, !15, !11}
!450 = !{!20, !64, !451, !60}
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 32)
!452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !453, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !454, retainedTypes: !481, splitDebugInlining: false, nameTableKind: None)
!453 = !DIFile(filename: "src/peripherals/stm32f4xx_gpio.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!454 = !{!15, !455, !462, !468, !472, !477}
!455 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !456, line: 57, baseType: !7, size: 32, elements: !457)
!456 = !DIFile(filename: "inc/peripherals/stm32f4xx_gpio.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!457 = !{!458, !459, !460, !461}
!458 = !DIEnumerator(name: "GPIO_Mode_IN", value: 0, isUnsigned: true)
!459 = !DIEnumerator(name: "GPIO_Mode_OUT", value: 1, isUnsigned: true)
!460 = !DIEnumerator(name: "GPIO_Mode_AF", value: 2, isUnsigned: true)
!461 = !DIEnumerator(name: "GPIO_Mode_AN", value: 3, isUnsigned: true)
!462 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !456, line: 81, baseType: !7, size: 32, elements: !463)
!463 = !{!464, !465, !466, !467}
!464 = !DIEnumerator(name: "GPIO_Speed_2MHz", value: 0, isUnsigned: true)
!465 = !DIEnumerator(name: "GPIO_Speed_25MHz", value: 1, isUnsigned: true)
!466 = !DIEnumerator(name: "GPIO_Speed_50MHz", value: 2, isUnsigned: true)
!467 = !DIEnumerator(name: "GPIO_Speed_100MHz", value: 3, isUnsigned: true)
!468 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !456, line: 70, baseType: !7, size: 32, elements: !469)
!469 = !{!470, !471}
!470 = !DIEnumerator(name: "GPIO_OType_PP", value: 0, isUnsigned: true)
!471 = !DIEnumerator(name: "GPIO_OType_OD", value: 1, isUnsigned: true)
!472 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !456, line: 94, baseType: !7, size: 32, elements: !473)
!473 = !{!474, !475, !476}
!474 = !DIEnumerator(name: "GPIO_PuPd_NOPULL", value: 0, isUnsigned: true)
!475 = !DIEnumerator(name: "GPIO_PuPd_UP", value: 1, isUnsigned: true)
!476 = !DIEnumerator(name: "GPIO_PuPd_DOWN", value: 2, isUnsigned: true)
!477 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !456, line: 106, baseType: !7, size: 32, elements: !478)
!478 = !{!479, !480}
!479 = !DIEnumerator(name: "Bit_RESET", value: 0, isUnsigned: true)
!480 = !DIEnumerator(name: "Bit_SET", value: 1, isUnsigned: true)
!481 = !{!482, !20, !64, !60}
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 32)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !6, line: 666, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 654, size: 320, elements: !485)
!485 = !{!486, !487, !488, !489, !490, !491, !492, !493, !494, !495}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !484, file: !6, line: 656, baseType: !27, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !484, file: !6, line: 657, baseType: !27, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !484, file: !6, line: 658, baseType: !27, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !484, file: !6, line: 659, baseType: !27, size: 32, offset: 96)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !484, file: !6, line: 660, baseType: !27, size: 32, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !484, file: !6, line: 661, baseType: !27, size: 32, offset: 160)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "BSRRL", scope: !484, file: !6, line: 662, baseType: !310, size: 16, offset: 192)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "BSRRH", scope: !484, file: !6, line: 663, baseType: !310, size: 16, offset: 208)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !484, file: !6, line: 664, baseType: !27, size: 32, offset: 224)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !484, file: !6, line: 665, baseType: !496, size: 64, offset: 256)
!496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 64, elements: !39)
!497 = distinct !DICompileUnit(language: DW_LANG_C99, file: !498, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !499, splitDebugInlining: false, nameTableKind: None)
!498 = !DIFile(filename: "src/peripherals/stm32f4xx_spi.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!499 = !{!500, !20, !64, !522, !60}
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "SPI_TypeDef", file: !6, line: 867, baseType: !502)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 847, size: 288, elements: !503)
!503 = !{!504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !502, file: !6, line: 849, baseType: !310, size: 16)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !502, file: !6, line: 850, baseType: !64, size: 16, offset: 16)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !502, file: !6, line: 851, baseType: !310, size: 16, offset: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !502, file: !6, line: 852, baseType: !64, size: 16, offset: 48)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !502, file: !6, line: 853, baseType: !310, size: 16, offset: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !502, file: !6, line: 854, baseType: !64, size: 16, offset: 80)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !502, file: !6, line: 855, baseType: !310, size: 16, offset: 96)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !502, file: !6, line: 856, baseType: !64, size: 16, offset: 112)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "CRCPR", scope: !502, file: !6, line: 857, baseType: !310, size: 16, offset: 128)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !502, file: !6, line: 858, baseType: !64, size: 16, offset: 144)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RXCRCR", scope: !502, file: !6, line: 859, baseType: !310, size: 16, offset: 160)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !502, file: !6, line: 860, baseType: !64, size: 16, offset: 176)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "TXCRCR", scope: !502, file: !6, line: 861, baseType: !310, size: 16, offset: 192)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !502, file: !6, line: 862, baseType: !64, size: 16, offset: 208)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "I2SCFGR", scope: !502, file: !6, line: 863, baseType: !310, size: 16, offset: 224)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !502, file: !6, line: 864, baseType: !64, size: 16, offset: 240)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "I2SPR", scope: !502, file: !6, line: 865, baseType: !310, size: 16, offset: 256)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !502, file: !6, line: 866, baseType: !64, size: 16, offset: 272)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !6, line: 765, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 733, size: 1088, elements: !525)
!525 = !{!526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !524, file: !6, line: 735, baseType: !27, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !524, file: !6, line: 736, baseType: !27, size: 32, offset: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !524, file: !6, line: 737, baseType: !27, size: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !524, file: !6, line: 738, baseType: !27, size: 32, offset: 96)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !524, file: !6, line: 739, baseType: !27, size: 32, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !524, file: !6, line: 740, baseType: !27, size: 32, offset: 160)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !524, file: !6, line: 741, baseType: !27, size: 32, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !524, file: !6, line: 742, baseType: !20, size: 32, offset: 224)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !524, file: !6, line: 743, baseType: !27, size: 32, offset: 256)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !524, file: !6, line: 744, baseType: !27, size: 32, offset: 288)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !524, file: !6, line: 745, baseType: !38, size: 64, offset: 320)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !524, file: !6, line: 746, baseType: !27, size: 32, offset: 384)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !524, file: !6, line: 747, baseType: !27, size: 32, offset: 416)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !524, file: !6, line: 748, baseType: !27, size: 32, offset: 448)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !524, file: !6, line: 749, baseType: !20, size: 32, offset: 480)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !524, file: !6, line: 750, baseType: !27, size: 32, offset: 512)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !524, file: !6, line: 751, baseType: !27, size: 32, offset: 544)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !524, file: !6, line: 752, baseType: !38, size: 64, offset: 576)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !524, file: !6, line: 753, baseType: !27, size: 32, offset: 640)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !524, file: !6, line: 754, baseType: !27, size: 32, offset: 672)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !524, file: !6, line: 755, baseType: !27, size: 32, offset: 704)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !524, file: !6, line: 756, baseType: !20, size: 32, offset: 736)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !524, file: !6, line: 757, baseType: !27, size: 32, offset: 768)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !524, file: !6, line: 758, baseType: !27, size: 32, offset: 800)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !524, file: !6, line: 759, baseType: !38, size: 64, offset: 832)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !524, file: !6, line: 760, baseType: !27, size: 32, offset: 896)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !524, file: !6, line: 761, baseType: !27, size: 32, offset: 928)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !524, file: !6, line: 762, baseType: !38, size: 64, offset: 960)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !524, file: !6, line: 763, baseType: !27, size: 32, offset: 1024)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !524, file: !6, line: 764, baseType: !27, size: 32, offset: 1056)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !558, retainedTypes: !559, splitDebugInlining: false, nameTableKind: None)
!557 = !DIFile(filename: "src/peripherals/stm32f4xx_cryp.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!558 = !{!15, !5, !11}
!559 = !{!20, !560, !64, !60}
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_TypeDef", file: !6, line: 972, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 950, size: 640, elements: !563)
!563 = !{!564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !562, file: !6, line: 952, baseType: !27, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !562, file: !6, line: 953, baseType: !27, size: 32, offset: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !562, file: !6, line: 954, baseType: !27, size: 32, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "DOUT", scope: !562, file: !6, line: 955, baseType: !27, size: 32, offset: 96)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "DMACR", scope: !562, file: !6, line: 956, baseType: !27, size: 32, offset: 128)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "IMSCR", scope: !562, file: !6, line: 957, baseType: !27, size: 32, offset: 160)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "RISR", scope: !562, file: !6, line: 958, baseType: !27, size: 32, offset: 192)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "MISR", scope: !562, file: !6, line: 959, baseType: !27, size: 32, offset: 224)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "K0LR", scope: !562, file: !6, line: 960, baseType: !27, size: 32, offset: 256)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "K0RR", scope: !562, file: !6, line: 961, baseType: !27, size: 32, offset: 288)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "K1LR", scope: !562, file: !6, line: 962, baseType: !27, size: 32, offset: 320)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "K1RR", scope: !562, file: !6, line: 963, baseType: !27, size: 32, offset: 352)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "K2LR", scope: !562, file: !6, line: 964, baseType: !27, size: 32, offset: 384)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "K2RR", scope: !562, file: !6, line: 965, baseType: !27, size: 32, offset: 416)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "K3LR", scope: !562, file: !6, line: 966, baseType: !27, size: 32, offset: 448)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "K3RR", scope: !562, file: !6, line: 967, baseType: !27, size: 32, offset: 480)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "IV0LR", scope: !562, file: !6, line: 968, baseType: !27, size: 32, offset: 512)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "IV0RR", scope: !562, file: !6, line: 969, baseType: !27, size: 32, offset: 544)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "IV1LR", scope: !562, file: !6, line: 970, baseType: !27, size: 32, offset: 576)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "IV1RR", scope: !562, file: !6, line: 971, baseType: !27, size: 32, offset: 608)
!584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !585, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !586, splitDebugInlining: false, nameTableKind: None)
!585 = !DIFile(filename: "src/peripherals/stm32f4xx_hash.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!586 = !{!20, !587, !64, !60}
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_TypeDef", file: !6, line: 988, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 978, size: 3616, elements: !590)
!590 = !{!591, !592, !593, !594, !596, !597, !598, !602}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !589, file: !6, line: 980, baseType: !27, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "DIN", scope: !589, file: !6, line: 981, baseType: !27, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "STR", scope: !589, file: !6, line: 982, baseType: !27, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "HR", scope: !589, file: !6, line: 983, baseType: !595, size: 160, offset: 96)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 160, elements: !109)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !589, file: !6, line: 984, baseType: !27, size: 32, offset: 256)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !589, file: !6, line: 985, baseType: !27, size: 32, offset: 288)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !589, file: !6, line: 986, baseType: !599, size: 1664, offset: 320)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 1664, elements: !600)
!600 = !{!601}
!601 = !DISubrange(count: 52)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !589, file: !6, line: 987, baseType: !603, size: 1632, offset: 1984)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 1632, elements: !604)
!604 = !{!605}
!605 = !DISubrange(count: 51)
!606 = distinct !DICompileUnit(language: DW_LANG_C99, file: !607, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !608, splitDebugInlining: false, nameTableKind: None)
!607 = !DIFile(filename: "src/peripherals/stm32f4xx_syscfg.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!608 = !{!20, !609, !60, !66}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !6, line: 679, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 672, size: 288, elements: !612)
!612 = !{!613, !614, !615, !617, !618}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !611, file: !6, line: 674, baseType: !27, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !611, file: !6, line: 675, baseType: !27, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !611, file: !6, line: 676, baseType: !616, size: 128, offset: 64)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 128, elements: !105)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !611, file: !6, line: 677, baseType: !38, size: 64, offset: 192)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !611, file: !6, line: 678, baseType: !27, size: 32, offset: 256)
!619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !620, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !449, retainedTypes: !621, splitDebugInlining: false, nameTableKind: None)
!620 = !DIFile(filename: "src/peripherals/stm32f4xx_cryp_des.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!621 = !{!20, !60, !64, !451}
!622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !623, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !624, retainedTypes: !625, splitDebugInlining: false, nameTableKind: None)
!623 = !DIFile(filename: "src/peripherals/stm32f4xx_hash_md5.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!624 = !{!5, !11}
!625 = !{!20, !64, !451}
!626 = distinct !DICompileUnit(language: DW_LANG_C99, file: !627, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !628, splitDebugInlining: false, nameTableKind: None)
!627 = !DIFile(filename: "src/peripherals/stm32f4xx_tim.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!628 = !{!629, !20, !64, !66}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIM_TypeDef", file: !6, line: 911, baseType: !631)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 873, size: 672, elements: !632)
!632 = !{!633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !631, file: !6, line: 875, baseType: !310, size: 16)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !631, file: !6, line: 876, baseType: !64, size: 16, offset: 16)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !631, file: !6, line: 877, baseType: !310, size: 16, offset: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !631, file: !6, line: 878, baseType: !64, size: 16, offset: 48)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "SMCR", scope: !631, file: !6, line: 879, baseType: !310, size: 16, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !631, file: !6, line: 880, baseType: !64, size: 16, offset: 80)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "DIER", scope: !631, file: !6, line: 881, baseType: !310, size: 16, offset: 96)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !631, file: !6, line: 882, baseType: !64, size: 16, offset: 112)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !631, file: !6, line: 883, baseType: !310, size: 16, offset: 128)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !631, file: !6, line: 884, baseType: !64, size: 16, offset: 144)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "EGR", scope: !631, file: !6, line: 885, baseType: !310, size: 16, offset: 160)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !631, file: !6, line: 886, baseType: !64, size: 16, offset: 176)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "CCMR1", scope: !631, file: !6, line: 887, baseType: !310, size: 16, offset: 192)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !631, file: !6, line: 888, baseType: !64, size: 16, offset: 208)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "CCMR2", scope: !631, file: !6, line: 889, baseType: !310, size: 16, offset: 224)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !631, file: !6, line: 890, baseType: !64, size: 16, offset: 240)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "CCER", scope: !631, file: !6, line: 891, baseType: !310, size: 16, offset: 256)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !631, file: !6, line: 892, baseType: !64, size: 16, offset: 272)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !631, file: !6, line: 893, baseType: !27, size: 32, offset: 288)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "PSC", scope: !631, file: !6, line: 894, baseType: !310, size: 16, offset: 320)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !631, file: !6, line: 895, baseType: !64, size: 16, offset: 336)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "ARR", scope: !631, file: !6, line: 896, baseType: !27, size: 32, offset: 352)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "RCR", scope: !631, file: !6, line: 897, baseType: !310, size: 16, offset: 384)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !631, file: !6, line: 898, baseType: !64, size: 16, offset: 400)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "CCR1", scope: !631, file: !6, line: 899, baseType: !27, size: 32, offset: 416)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "CCR2", scope: !631, file: !6, line: 900, baseType: !27, size: 32, offset: 448)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "CCR3", scope: !631, file: !6, line: 901, baseType: !27, size: 32, offset: 480)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "CCR4", scope: !631, file: !6, line: 902, baseType: !27, size: 32, offset: 512)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "BDTR", scope: !631, file: !6, line: 903, baseType: !310, size: 16, offset: 544)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !631, file: !6, line: 904, baseType: !64, size: 16, offset: 560)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "DCR", scope: !631, file: !6, line: 905, baseType: !310, size: 16, offset: 576)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !631, file: !6, line: 906, baseType: !64, size: 16, offset: 592)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "DMAR", scope: !631, file: !6, line: 907, baseType: !310, size: 16, offset: 608)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !631, file: !6, line: 908, baseType: !64, size: 16, offset: 624)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "OR", scope: !631, file: !6, line: 909, baseType: !310, size: 16, offset: 640)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !631, file: !6, line: 910, baseType: !64, size: 16, offset: 656)
!669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !670, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !449, retainedTypes: !621, splitDebugInlining: false, nameTableKind: None)
!670 = !DIFile(filename: "src/peripherals/stm32f4xx_cryp_tdes.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !672, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !624, retainedTypes: !625, splitDebugInlining: false, nameTableKind: None)
!672 = !DIFile(filename: "src/peripherals/stm32f4xx_hash_sha1.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !674, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !675, splitDebugInlining: false, nameTableKind: None)
!674 = !DIFile(filename: "src/peripherals/stm32f4xx_usart.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!675 = !{!676, !20, !64, !60, !66}
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !6, line: 933, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 917, size: 224, elements: !679)
!679 = !{!680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !678, file: !6, line: 919, baseType: !310, size: 16)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !678, file: !6, line: 920, baseType: !64, size: 16, offset: 16)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !678, file: !6, line: 921, baseType: !310, size: 16, offset: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !678, file: !6, line: 922, baseType: !64, size: 16, offset: 48)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !678, file: !6, line: 923, baseType: !310, size: 16, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !678, file: !6, line: 924, baseType: !64, size: 16, offset: 80)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !678, file: !6, line: 925, baseType: !310, size: 16, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !678, file: !6, line: 926, baseType: !64, size: 16, offset: 112)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !678, file: !6, line: 927, baseType: !310, size: 16, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !678, file: !6, line: 928, baseType: !64, size: 16, offset: 144)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !678, file: !6, line: 929, baseType: !310, size: 16, offset: 160)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !678, file: !6, line: 930, baseType: !64, size: 16, offset: 176)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !678, file: !6, line: 931, baseType: !310, size: 16, offset: 192)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !678, file: !6, line: 932, baseType: !64, size: 16, offset: 208)
!694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !695, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !696, splitDebugInlining: false, nameTableKind: None)
!695 = !DIFile(filename: "src/peripherals/stm32f4xx_dac.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!696 = !{!20, !697, !60, !66, !64}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "DAC_TypeDef", file: !6, line: 434, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 418, size: 448, elements: !700)
!700 = !{!701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !699, file: !6, line: 420, baseType: !27, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "SWTRIGR", scope: !699, file: !6, line: 421, baseType: !27, size: 32, offset: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "DHR12R1", scope: !699, file: !6, line: 422, baseType: !27, size: 32, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "DHR12L1", scope: !699, file: !6, line: 423, baseType: !27, size: 32, offset: 96)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "DHR8R1", scope: !699, file: !6, line: 424, baseType: !27, size: 32, offset: 128)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "DHR12R2", scope: !699, file: !6, line: 425, baseType: !27, size: 32, offset: 160)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "DHR12L2", scope: !699, file: !6, line: 426, baseType: !27, size: 32, offset: 192)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "DHR8R2", scope: !699, file: !6, line: 427, baseType: !27, size: 32, offset: 224)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "DHR12RD", scope: !699, file: !6, line: 428, baseType: !27, size: 32, offset: 256)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "DHR12LD", scope: !699, file: !6, line: 429, baseType: !27, size: 32, offset: 288)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "DHR8RD", scope: !699, file: !6, line: 430, baseType: !27, size: 32, offset: 320)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "DOR1", scope: !699, file: !6, line: 431, baseType: !27, size: 32, offset: 352)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "DOR2", scope: !699, file: !6, line: 432, baseType: !27, size: 32, offset: 384)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !699, file: !6, line: 433, baseType: !27, size: 32, offset: 416)
!715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !716, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !558, retainedTypes: !717, splitDebugInlining: false, nameTableKind: None)
!716 = !DIFile(filename: "src/peripherals/stm32f4xx_i2c.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!717 = !{!718, !20, !64, !60, !309, !66}
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_TypeDef", file: !6, line: 705, baseType: !720)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 685, size: 288, elements: !721)
!721 = !{!722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !720, file: !6, line: 687, baseType: !310, size: 16)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !720, file: !6, line: 688, baseType: !64, size: 16, offset: 16)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !720, file: !6, line: 689, baseType: !310, size: 16, offset: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !720, file: !6, line: 690, baseType: !64, size: 16, offset: 48)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "OAR1", scope: !720, file: !6, line: 691, baseType: !310, size: 16, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !720, file: !6, line: 692, baseType: !64, size: 16, offset: 80)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "OAR2", scope: !720, file: !6, line: 693, baseType: !310, size: 16, offset: 96)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !720, file: !6, line: 694, baseType: !64, size: 16, offset: 112)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !720, file: !6, line: 695, baseType: !310, size: 16, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !720, file: !6, line: 696, baseType: !64, size: 16, offset: 144)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "SR1", scope: !720, file: !6, line: 697, baseType: !310, size: 16, offset: 160)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !720, file: !6, line: 698, baseType: !64, size: 16, offset: 176)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "SR2", scope: !720, file: !6, line: 699, baseType: !310, size: 16, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !720, file: !6, line: 700, baseType: !64, size: 16, offset: 208)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !720, file: !6, line: 701, baseType: !310, size: 16, offset: 224)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !720, file: !6, line: 702, baseType: !64, size: 16, offset: 240)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "TRISE", scope: !720, file: !6, line: 703, baseType: !310, size: 16, offset: 256)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !720, file: !6, line: 704, baseType: !64, size: 16, offset: 272)
!740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !741, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !742, splitDebugInlining: false, nameTableKind: None)
!741 = !DIFile(filename: "src/peripherals/stm32f4xx_wwdg.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!742 = !{!20, !743, !60, !66}
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "WWDG_TypeDef", file: !6, line: 944, baseType: !745)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 939, size: 96, elements: !746)
!746 = !{!747, !748, !749}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !745, file: !6, line: 941, baseType: !27, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "CFR", scope: !745, file: !6, line: 942, baseType: !27, size: 32, offset: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !745, file: !6, line: 943, baseType: !27, size: 32, offset: 64)
!750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !751, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !74, retainedTypes: !752, splitDebugInlining: false, nameTableKind: None)
!751 = !DIFile(filename: "src/peripherals/stm32f4xx_dbgmcu.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!752 = !{!753, !20}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "DBGMCU_TypeDef", file: !6, line: 446, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 440, size: 128, elements: !756)
!756 = !{!757, !758, !759, !760}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "IDCODE", scope: !755, file: !6, line: 442, baseType: !27, size: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !755, file: !6, line: 443, baseType: !27, size: 32, offset: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "APB1FZ", scope: !755, file: !6, line: 444, baseType: !27, size: 32, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "APB2FZ", scope: !755, file: !6, line: 445, baseType: !27, size: 32, offset: 96)
!761 = distinct !DICompileUnit(language: DW_LANG_C99, file: !762, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !763, retainedTypes: !764, splitDebugInlining: false, nameTableKind: None)
!762 = !DIFile(filename: "src/peripherals/stm32f4xx_iwdg.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!763 = !{!11}
!764 = !{!765, !20, !64}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "IWDG_TypeDef", file: !6, line: 717, baseType: !767)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 711, size: 128, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "KR", scope: !767, file: !6, line: 713, baseType: !27, size: 32)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !767, file: !6, line: 714, baseType: !27, size: 32, offset: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "RLR", scope: !767, file: !6, line: 715, baseType: !27, size: 32, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !767, file: !6, line: 716, baseType: !27, size: 32, offset: 96)
!773 = distinct !DICompileUnit(language: DW_LANG_C99, file: !774, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !775, splitDebugInlining: false, nameTableKind: None)
!774 = !DIFile(filename: "src/peripherals/stm32f4xx_dcmi.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!775 = !{!776, !20, !64}
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCMI_TypeDef", file: !6, line: 465, baseType: !778)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 452, size: 352, elements: !779)
!779 = !{!780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !778, file: !6, line: 454, baseType: !27, size: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !778, file: !6, line: 455, baseType: !27, size: 32, offset: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "RISR", scope: !778, file: !6, line: 456, baseType: !27, size: 32, offset: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !778, file: !6, line: 457, baseType: !27, size: 32, offset: 96)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "MISR", scope: !778, file: !6, line: 458, baseType: !27, size: 32, offset: 128)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "ICR", scope: !778, file: !6, line: 459, baseType: !27, size: 32, offset: 160)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "ESCR", scope: !778, file: !6, line: 460, baseType: !27, size: 32, offset: 192)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "ESUR", scope: !778, file: !6, line: 461, baseType: !27, size: 32, offset: 224)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "CWSTRTR", scope: !778, file: !6, line: 462, baseType: !27, size: 32, offset: 256)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "CWSIZER", scope: !778, file: !6, line: 463, baseType: !27, size: 32, offset: 288)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !778, file: !6, line: 464, baseType: !27, size: 32, offset: 320)
!791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !792, producer: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !156, retainedTypes: !793, splitDebugInlining: false, nameTableKind: None)
!792 = !DIFile(filename: "src/peripherals/stm32f4xx_pwr.c", directory: "/home/rvd5542/stm32f4-templates/lib")
!793 = !{!20, !66, !794, !800, !60, !64}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !6, line: 727, baseType: !796)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 723, size: 64, elements: !797)
!797 = !{!798, !799}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !796, file: !6, line: 725, baseType: !27, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !796, file: !6, line: 726, baseType: !27, size: 32, offset: 32)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !78, line: 358, baseType: !802)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 335, size: 1120, elements: !803)
!803 = !{!804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !802, file: !78, line: 337, baseType: !82, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !802, file: !78, line: 338, baseType: !27, size: 32, offset: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !802, file: !78, line: 339, baseType: !27, size: 32, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !802, file: !78, line: 340, baseType: !27, size: 32, offset: 96)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !802, file: !78, line: 341, baseType: !27, size: 32, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !802, file: !78, line: 342, baseType: !27, size: 32, offset: 160)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !802, file: !78, line: 343, baseType: !89, size: 96, offset: 192)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !802, file: !78, line: 344, baseType: !27, size: 32, offset: 288)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !802, file: !78, line: 345, baseType: !27, size: 32, offset: 320)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !802, file: !78, line: 346, baseType: !27, size: 32, offset: 352)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !802, file: !78, line: 347, baseType: !27, size: 32, offset: 384)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !802, file: !78, line: 348, baseType: !27, size: 32, offset: 416)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !802, file: !78, line: 349, baseType: !27, size: 32, offset: 448)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !802, file: !78, line: 350, baseType: !27, size: 32, offset: 480)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !802, file: !78, line: 351, baseType: !100, size: 64, offset: 512)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !802, file: !78, line: 352, baseType: !82, size: 32, offset: 576)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !802, file: !78, line: 353, baseType: !82, size: 32, offset: 608)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !802, file: !78, line: 354, baseType: !104, size: 128, offset: 640)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !802, file: !78, line: 355, baseType: !108, size: 160, offset: 768)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !802, file: !78, line: 356, baseType: !112, size: 160, offset: 928)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !802, file: !78, line: 357, baseType: !27, size: 32, offset: 1088)
!825 = !{!"clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)"}
!826 = !{i32 7, !"Dwarf Version", i32 4}
!827 = !{i32 2, !"Debug Info Version", i32 3}
!828 = !{i32 1, !"wchar_size", i32 4}
!829 = !{i32 1, !"min_enum_size", i32 4}
!830 = distinct !DISubprogram(name: "NVIC_PriorityGroupConfig", scope: !73, file: !73, line: 112, type: !831, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !72, retainedNodes: !833)
!831 = !DISubroutineType(types: !832)
!832 = !{null, !20}
!833 = !{!834}
!834 = !DILocalVariable(name: "NVIC_PriorityGroup", arg: 1, scope: !830, file: !73, line: 112, type: !20)
!835 = !DILocation(line: 0, scope: !830)
!836 = !DILocation(line: 118, column: 35, scope: !830)
!837 = !DILocation(line: 118, column: 14, scope: !830)
!838 = !{!839, !840, i64 12}
!839 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !841, i64 24, !840, i64 36, !840, i64 40, !840, i64 44, !840, i64 48, !840, i64 52, !840, i64 56, !840, i64 60, !841, i64 64, !840, i64 72, !840, i64 76, !841, i64 80, !841, i64 96, !841, i64 116, !840, i64 136}
!840 = !{!"int", !841, i64 0}
!841 = !{!"omnipotent char", !842, i64 0}
!842 = !{!"Simple C/C++ TBAA"}
!843 = !DILocation(line: 119, column: 1, scope: !830)
!844 = distinct !DISubprogram(name: "NVIC_Init", scope: !73, file: !73, line: 130, type: !845, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !72, retainedNodes: !857)
!845 = !DISubroutineType(types: !846)
!846 = !{null, !847}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_InitTypeDef", file: !849, line: 68, baseType: !850)
!849 = !DIFile(filename: "inc/peripherals/misc.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !849, line: 48, size: 64, elements: !851)
!851 = !{!852, !853, !854, !855}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "NVIC_IRQChannel", scope: !850, file: !849, line: 50, baseType: !60, size: 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "NVIC_IRQChannelPreemptionPriority", scope: !850, file: !849, line: 55, baseType: !60, size: 8, offset: 8)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "NVIC_IRQChannelSubPriority", scope: !850, file: !849, line: 60, baseType: !60, size: 8, offset: 16)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "NVIC_IRQChannelCmd", scope: !850, file: !849, line: 65, baseType: !856, size: 32, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "FunctionalState", file: !6, line: 287, baseType: !15)
!857 = !{!858, !859, !860, !861}
!858 = !DILocalVariable(name: "NVIC_InitStruct", arg: 1, scope: !844, file: !73, line: 130, type: !847)
!859 = !DILocalVariable(name: "tmppriority", scope: !844, file: !73, line: 132, type: !60)
!860 = !DILocalVariable(name: "tmppre", scope: !844, file: !73, line: 132, type: !60)
!861 = !DILocalVariable(name: "tmpsub", scope: !844, file: !73, line: 132, type: !60)
!862 = !DILocation(line: 0, scope: !844)
!863 = !DILocation(line: 139, column: 24, scope: !864)
!864 = distinct !DILexicalBlock(scope: !844, file: !73, line: 139, column: 7)
!865 = !{!866, !841, i64 4}
!866 = !{!"", !841, i64 0, !841, i64 1, !841, i64 2, !841, i64 4}
!867 = !DILocation(line: 139, column: 43, scope: !864)
!868 = !DILocation(line: 139, column: 7, scope: !844)
!869 = !DILocation(line: 142, column: 35, scope: !870)
!870 = distinct !DILexicalBlock(scope: !864, file: !73, line: 140, column: 3)
!871 = !DILocation(line: 142, column: 61, scope: !870)
!872 = !DILocation(line: 142, column: 19, scope: !870)
!873 = !DILocation(line: 143, column: 14, scope: !870)
!874 = !DILocation(line: 144, column: 21, scope: !870)
!875 = !DILocation(line: 146, column: 36, scope: !870)
!876 = !{!866, !841, i64 1}
!877 = !DILocation(line: 146, column: 19, scope: !870)
!878 = !DILocation(line: 146, column: 73, scope: !870)
!879 = !DILocation(line: 146, column: 70, scope: !870)
!880 = !DILocation(line: 147, column: 48, scope: !870)
!881 = !{!866, !841, i64 2}
!882 = !DILocation(line: 147, column: 21, scope: !870)
!883 = !DILocation(line: 147, column: 17, scope: !870)
!884 = !DILocation(line: 149, column: 31, scope: !870)
!885 = !DILocation(line: 151, column: 31, scope: !870)
!886 = !{!866, !841, i64 0}
!887 = !DILocation(line: 151, column: 5, scope: !870)
!888 = !DILocation(line: 151, column: 48, scope: !870)
!889 = !{!841, !841, i64 0}
!890 = !DILocation(line: 156, column: 3, scope: !870)
!891 = !DILocation(line: 161, column: 43, scope: !892)
!892 = distinct !DILexicalBlock(scope: !864, file: !73, line: 158, column: 3)
!893 = !DILocation(line: 0, scope: !864)
!894 = !{!840, !840, i64 0}
!895 = !DILocation(line: 163, column: 1, scope: !844)
!896 = distinct !DISubprogram(name: "NVIC_SetVectorTable", scope: !73, file: !73, line: 174, type: !897, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !72, retainedNodes: !899)
!897 = !DISubroutineType(types: !898)
!898 = !{null, !20, !20}
!899 = !{!900, !901}
!900 = !DILocalVariable(name: "NVIC_VectTab", arg: 1, scope: !896, file: !73, line: 174, type: !20)
!901 = !DILocalVariable(name: "Offset", arg: 2, scope: !896, file: !73, line: 174, type: !20)
!902 = !DILocation(line: 0, scope: !896)
!903 = !DILocation(line: 180, column: 38, scope: !896)
!904 = !DILocation(line: 180, column: 28, scope: !896)
!905 = !DILocation(line: 180, column: 13, scope: !896)
!906 = !{!839, !840, i64 8}
!907 = !DILocation(line: 181, column: 1, scope: !896)
!908 = distinct !DISubprogram(name: "NVIC_SystemLPConfig", scope: !73, file: !73, line: 193, type: !909, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !72, retainedNodes: !911)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !60, !856}
!911 = !{!912, !913}
!912 = !DILocalVariable(name: "LowPowerMode", arg: 1, scope: !908, file: !73, line: 193, type: !60)
!913 = !DILocalVariable(name: "NewState", arg: 2, scope: !908, file: !73, line: 193, type: !856)
!914 = !DILocation(line: 0, scope: !908)
!915 = !DILocation(line: 199, column: 16, scope: !916)
!916 = distinct !DILexicalBlock(scope: !908, file: !73, line: 199, column: 7)
!917 = !DILocation(line: 0, scope: !916)
!918 = !DILocation(line: 199, column: 7, scope: !908)
!919 = !DILocation(line: 201, column: 14, scope: !920)
!920 = distinct !DILexicalBlock(scope: !916, file: !73, line: 200, column: 3)
!921 = !{!839, !840, i64 16}
!922 = !DILocation(line: 202, column: 3, scope: !920)
!923 = !DILocation(line: 205, column: 28, scope: !924)
!924 = distinct !DILexicalBlock(scope: !916, file: !73, line: 204, column: 3)
!925 = !DILocation(line: 205, column: 14, scope: !924)
!926 = !DILocation(line: 207, column: 1, scope: !908)
!927 = distinct !DISubprogram(name: "SysTick_CLKSourceConfig", scope: !73, file: !73, line: 217, type: !831, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !72, retainedNodes: !928)
!928 = !{!929}
!929 = !DILocalVariable(name: "SysTick_CLKSource", arg: 1, scope: !927, file: !73, line: 217, type: !20)
!930 = !DILocation(line: 0, scope: !927)
!931 = !DILocation(line: 221, column: 25, scope: !932)
!932 = distinct !DILexicalBlock(scope: !927, file: !73, line: 221, column: 7)
!933 = !DILocation(line: 0, scope: !932)
!934 = !{!935, !840, i64 0}
!935 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12}
!936 = !DILocation(line: 221, column: 7, scope: !927)
!937 = !DILocation(line: 229, column: 1, scope: !927)
!938 = distinct !DISubprogram(name: "DMA_DeInit", scope: !155, file: !155, line: 188, type: !939, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !941)
!939 = !DISubroutineType(types: !940)
!940 = !{null, !158}
!941 = !{!942}
!942 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !938, file: !155, line: 188, type: !158)
!943 = !DILocation(line: 0, scope: !938)
!944 = !DILocation(line: 194, column: 17, scope: !938)
!945 = !DILocation(line: 194, column: 20, scope: !938)
!946 = !{!947, !840, i64 0}
!947 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20}
!948 = !DILocation(line: 197, column: 21, scope: !938)
!949 = !DILocation(line: 200, column: 17, scope: !938)
!950 = !DILocation(line: 200, column: 22, scope: !938)
!951 = !{!947, !840, i64 4}
!952 = !DILocation(line: 203, column: 17, scope: !938)
!953 = !DILocation(line: 203, column: 22, scope: !938)
!954 = !{!947, !840, i64 8}
!955 = !DILocation(line: 206, column: 17, scope: !938)
!956 = !DILocation(line: 206, column: 22, scope: !938)
!957 = !{!947, !840, i64 12}
!958 = !DILocation(line: 209, column: 17, scope: !938)
!959 = !DILocation(line: 209, column: 22, scope: !938)
!960 = !{!947, !840, i64 16}
!961 = !DILocation(line: 212, column: 17, scope: !938)
!962 = !DILocation(line: 212, column: 21, scope: !938)
!963 = !{!947, !840, i64 20}
!964 = !DILocation(line: 215, column: 7, scope: !938)
!965 = !DILocation(line: 218, column: 17, scope: !966)
!966 = distinct !DILexicalBlock(scope: !967, file: !155, line: 216, column: 3)
!967 = distinct !DILexicalBlock(scope: !938, file: !155, line: 215, column: 7)
!968 = !{!935, !840, i64 8}
!969 = !DILocation(line: 219, column: 3, scope: !966)
!970 = !DILocation(line: 223, column: 17, scope: !971)
!971 = distinct !DILexicalBlock(scope: !972, file: !155, line: 221, column: 3)
!972 = distinct !DILexicalBlock(scope: !967, file: !155, line: 220, column: 12)
!973 = !DILocation(line: 224, column: 3, scope: !971)
!974 = !DILocation(line: 228, column: 17, scope: !975)
!975 = distinct !DILexicalBlock(scope: !976, file: !155, line: 226, column: 3)
!976 = distinct !DILexicalBlock(scope: !972, file: !155, line: 225, column: 12)
!977 = !DILocation(line: 229, column: 3, scope: !975)
!978 = !DILocation(line: 233, column: 17, scope: !979)
!979 = distinct !DILexicalBlock(scope: !980, file: !155, line: 231, column: 3)
!980 = distinct !DILexicalBlock(scope: !976, file: !155, line: 230, column: 12)
!981 = !DILocation(line: 234, column: 3, scope: !979)
!982 = !DILocation(line: 238, column: 17, scope: !983)
!983 = distinct !DILexicalBlock(scope: !984, file: !155, line: 236, column: 3)
!984 = distinct !DILexicalBlock(scope: !980, file: !155, line: 235, column: 12)
!985 = !{!935, !840, i64 12}
!986 = !DILocation(line: 239, column: 3, scope: !983)
!987 = !DILocation(line: 243, column: 17, scope: !988)
!988 = distinct !DILexicalBlock(scope: !989, file: !155, line: 241, column: 3)
!989 = distinct !DILexicalBlock(scope: !984, file: !155, line: 240, column: 12)
!990 = !DILocation(line: 244, column: 3, scope: !988)
!991 = !DILocation(line: 248, column: 17, scope: !992)
!992 = distinct !DILexicalBlock(scope: !993, file: !155, line: 246, column: 3)
!993 = distinct !DILexicalBlock(scope: !989, file: !155, line: 245, column: 12)
!994 = !DILocation(line: 249, column: 3, scope: !992)
!995 = !DILocation(line: 253, column: 17, scope: !996)
!996 = distinct !DILexicalBlock(scope: !997, file: !155, line: 251, column: 3)
!997 = distinct !DILexicalBlock(scope: !993, file: !155, line: 250, column: 12)
!998 = !DILocation(line: 254, column: 3, scope: !996)
!999 = !DILocation(line: 258, column: 17, scope: !1000)
!1000 = distinct !DILexicalBlock(scope: !1001, file: !155, line: 256, column: 3)
!1001 = distinct !DILexicalBlock(scope: !997, file: !155, line: 255, column: 12)
!1002 = !DILocation(line: 259, column: 3, scope: !1000)
!1003 = !DILocation(line: 263, column: 17, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !1005, file: !155, line: 261, column: 3)
!1005 = distinct !DILexicalBlock(scope: !1001, file: !155, line: 260, column: 12)
!1006 = !DILocation(line: 264, column: 3, scope: !1004)
!1007 = !DILocation(line: 268, column: 17, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !155, line: 266, column: 3)
!1009 = distinct !DILexicalBlock(scope: !1005, file: !155, line: 265, column: 12)
!1010 = !DILocation(line: 269, column: 3, scope: !1008)
!1011 = !DILocation(line: 273, column: 17, scope: !1012)
!1012 = distinct !DILexicalBlock(scope: !1013, file: !155, line: 271, column: 3)
!1013 = distinct !DILexicalBlock(scope: !1009, file: !155, line: 270, column: 12)
!1014 = !DILocation(line: 274, column: 3, scope: !1012)
!1015 = !DILocation(line: 278, column: 17, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !1017, file: !155, line: 276, column: 3)
!1017 = distinct !DILexicalBlock(scope: !1013, file: !155, line: 275, column: 12)
!1018 = !DILocation(line: 279, column: 3, scope: !1016)
!1019 = !DILocation(line: 283, column: 17, scope: !1020)
!1020 = distinct !DILexicalBlock(scope: !1021, file: !155, line: 281, column: 3)
!1021 = distinct !DILexicalBlock(scope: !1017, file: !155, line: 280, column: 12)
!1022 = !DILocation(line: 284, column: 3, scope: !1020)
!1023 = !DILocation(line: 288, column: 17, scope: !1024)
!1024 = distinct !DILexicalBlock(scope: !1025, file: !155, line: 286, column: 3)
!1025 = distinct !DILexicalBlock(scope: !1021, file: !155, line: 285, column: 12)
!1026 = !DILocation(line: 289, column: 3, scope: !1024)
!1027 = !DILocation(line: 295, column: 19, scope: !1028)
!1028 = distinct !DILexicalBlock(scope: !1029, file: !155, line: 293, column: 5)
!1029 = distinct !DILexicalBlock(scope: !1030, file: !155, line: 292, column: 9)
!1030 = distinct !DILexicalBlock(scope: !1025, file: !155, line: 291, column: 3)
!1031 = !DILocation(line: 296, column: 5, scope: !1028)
!1032 = !DILocation(line: 298, column: 1, scope: !938)
!1033 = distinct !DISubprogram(name: "DMA_Init", scope: !155, file: !155, line: 311, type: !1034, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1056)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{null, !158, !1036}
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_InitTypeDef", file: !1038, line: 104, baseType: !1039)
!1038 = !DIFile(filename: "inc/peripherals/stm32f4xx_dma.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1038, line: 48, size: 480, elements: !1040)
!1040 = !{!1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_Channel", scope: !1039, file: !1038, line: 50, baseType: !20, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_PeripheralBaseAddr", scope: !1039, file: !1038, line: 53, baseType: !20, size: 32, offset: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_Memory0BaseAddr", scope: !1039, file: !1038, line: 55, baseType: !20, size: 32, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_DIR", scope: !1039, file: !1038, line: 59, baseType: !20, size: 32, offset: 96)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_BufferSize", scope: !1039, file: !1038, line: 63, baseType: !20, size: 32, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_PeripheralInc", scope: !1039, file: !1038, line: 67, baseType: !20, size: 32, offset: 160)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_MemoryInc", scope: !1039, file: !1038, line: 70, baseType: !20, size: 32, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_PeripheralDataSize", scope: !1039, file: !1038, line: 73, baseType: !20, size: 32, offset: 224)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_MemoryDataSize", scope: !1039, file: !1038, line: 76, baseType: !20, size: 32, offset: 256)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_Mode", scope: !1039, file: !1038, line: 79, baseType: !20, size: 32, offset: 288)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_Priority", scope: !1039, file: !1038, line: 84, baseType: !20, size: 32, offset: 320)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_FIFOMode", scope: !1039, file: !1038, line: 87, baseType: !20, size: 32, offset: 352)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_FIFOThreshold", scope: !1039, file: !1038, line: 92, baseType: !20, size: 32, offset: 384)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_MemoryBurst", scope: !1039, file: !1038, line: 95, baseType: !20, size: 32, offset: 416)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_PeripheralBurst", scope: !1039, file: !1038, line: 100, baseType: !20, size: 32, offset: 448)
!1056 = !{!1057, !1058, !1059}
!1057 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1033, file: !155, line: 311, type: !158)
!1058 = !DILocalVariable(name: "DMA_InitStruct", arg: 2, scope: !1033, file: !155, line: 311, type: !1036)
!1059 = !DILocalVariable(name: "tmpreg", scope: !1033, file: !155, line: 313, type: !20)
!1060 = !DILocation(line: 0, scope: !1033)
!1061 = !DILocation(line: 333, column: 26, scope: !1033)
!1062 = !DILocation(line: 336, column: 10, scope: !1033)
!1063 = !DILocation(line: 352, column: 29, scope: !1033)
!1064 = !{!1065, !840, i64 0}
!1065 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !840, i64 32, !840, i64 36, !840, i64 40, !840, i64 44, !840, i64 48, !840, i64 52, !840, i64 56}
!1066 = !DILocation(line: 352, column: 59, scope: !1033)
!1067 = !{!1065, !840, i64 12}
!1068 = !DILocation(line: 353, column: 29, scope: !1033)
!1069 = !{!1065, !840, i64 20}
!1070 = !DILocation(line: 353, column: 65, scope: !1033)
!1071 = !{!1065, !840, i64 24}
!1072 = !DILocation(line: 354, column: 29, scope: !1033)
!1073 = !{!1065, !840, i64 28}
!1074 = !DILocation(line: 354, column: 70, scope: !1033)
!1075 = !{!1065, !840, i64 32}
!1076 = !DILocation(line: 355, column: 29, scope: !1033)
!1077 = !{!1065, !840, i64 36}
!1078 = !DILocation(line: 355, column: 56, scope: !1033)
!1079 = !{!1065, !840, i64 40}
!1080 = !DILocation(line: 356, column: 29, scope: !1033)
!1081 = !{!1065, !840, i64 52}
!1082 = !DILocation(line: 356, column: 63, scope: !1033)
!1083 = !{!1065, !840, i64 56}
!1084 = !DILocation(line: 352, column: 41, scope: !1033)
!1085 = !DILocation(line: 352, column: 67, scope: !1033)
!1086 = !DILocation(line: 353, column: 47, scope: !1033)
!1087 = !DILocation(line: 353, column: 79, scope: !1033)
!1088 = !DILocation(line: 354, column: 52, scope: !1033)
!1089 = !DILocation(line: 354, column: 89, scope: !1033)
!1090 = !DILocation(line: 355, column: 38, scope: !1033)
!1091 = !DILocation(line: 355, column: 69, scope: !1033)
!1092 = !DILocation(line: 356, column: 45, scope: !1033)
!1093 = !DILocation(line: 352, column: 10, scope: !1033)
!1094 = !DILocation(line: 359, column: 20, scope: !1033)
!1095 = !DILocation(line: 363, column: 26, scope: !1033)
!1096 = !DILocation(line: 366, column: 10, scope: !1033)
!1097 = !DILocation(line: 371, column: 29, scope: !1033)
!1098 = !{!1065, !840, i64 44}
!1099 = !DILocation(line: 371, column: 60, scope: !1033)
!1100 = !{!1065, !840, i64 48}
!1101 = !DILocation(line: 371, column: 42, scope: !1033)
!1102 = !DILocation(line: 371, column: 10, scope: !1033)
!1103 = !DILocation(line: 374, column: 21, scope: !1033)
!1104 = !DILocation(line: 378, column: 40, scope: !1033)
!1105 = !{!1065, !840, i64 16}
!1106 = !DILocation(line: 378, column: 17, scope: !1033)
!1107 = !DILocation(line: 378, column: 22, scope: !1033)
!1108 = !DILocation(line: 382, column: 39, scope: !1033)
!1109 = !{!1065, !840, i64 4}
!1110 = !DILocation(line: 382, column: 17, scope: !1033)
!1111 = !DILocation(line: 382, column: 21, scope: !1033)
!1112 = !DILocation(line: 386, column: 40, scope: !1033)
!1113 = !{!1065, !840, i64 8}
!1114 = !DILocation(line: 386, column: 17, scope: !1033)
!1115 = !DILocation(line: 386, column: 22, scope: !1033)
!1116 = !DILocation(line: 387, column: 1, scope: !1033)
!1117 = distinct !DISubprogram(name: "DMA_StructInit", scope: !155, file: !155, line: 395, type: !1118, scopeLine: 396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1120)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{null, !1036}
!1120 = !{!1121}
!1121 = !DILocalVariable(name: "DMA_InitStruct", arg: 1, scope: !1117, file: !155, line: 395, type: !1036)
!1122 = !DILocation(line: 0, scope: !1117)
!1123 = !DILocation(line: 399, column: 19, scope: !1117)
!1124 = !DILocation(line: 399, column: 31, scope: !1117)
!1125 = !DILocation(line: 402, column: 19, scope: !1117)
!1126 = !DILocation(line: 402, column: 42, scope: !1117)
!1127 = !DILocation(line: 405, column: 19, scope: !1117)
!1128 = !DILocation(line: 405, column: 39, scope: !1117)
!1129 = !DILocation(line: 408, column: 19, scope: !1117)
!1130 = !DILocation(line: 408, column: 27, scope: !1117)
!1131 = !DILocation(line: 411, column: 19, scope: !1117)
!1132 = !DILocation(line: 411, column: 34, scope: !1117)
!1133 = !DILocation(line: 414, column: 19, scope: !1117)
!1134 = !DILocation(line: 414, column: 37, scope: !1117)
!1135 = !DILocation(line: 417, column: 19, scope: !1117)
!1136 = !DILocation(line: 417, column: 33, scope: !1117)
!1137 = !DILocation(line: 420, column: 19, scope: !1117)
!1138 = !DILocation(line: 420, column: 42, scope: !1117)
!1139 = !DILocation(line: 423, column: 19, scope: !1117)
!1140 = !DILocation(line: 423, column: 38, scope: !1117)
!1141 = !DILocation(line: 426, column: 19, scope: !1117)
!1142 = !DILocation(line: 426, column: 28, scope: !1117)
!1143 = !DILocation(line: 429, column: 19, scope: !1117)
!1144 = !DILocation(line: 429, column: 32, scope: !1117)
!1145 = !DILocation(line: 432, column: 19, scope: !1117)
!1146 = !DILocation(line: 432, column: 32, scope: !1117)
!1147 = !DILocation(line: 435, column: 19, scope: !1117)
!1148 = !DILocation(line: 435, column: 37, scope: !1117)
!1149 = !DILocation(line: 438, column: 19, scope: !1117)
!1150 = !DILocation(line: 438, column: 35, scope: !1117)
!1151 = !DILocation(line: 441, column: 19, scope: !1117)
!1152 = !DILocation(line: 441, column: 39, scope: !1117)
!1153 = !DILocation(line: 442, column: 1, scope: !1117)
!1154 = distinct !DISubprogram(name: "DMA_Cmd", scope: !155, file: !155, line: 470, type: !1155, scopeLine: 471, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1157)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{null, !158, !856}
!1157 = !{!1158, !1159}
!1158 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1154, file: !155, line: 470, type: !158)
!1159 = !DILocalVariable(name: "NewState", arg: 2, scope: !1154, file: !155, line: 470, type: !856)
!1160 = !DILocation(line: 0, scope: !1154)
!1161 = !DILocation(line: 476, column: 16, scope: !1162)
!1162 = distinct !DILexicalBlock(scope: !1154, file: !155, line: 476, column: 7)
!1163 = !DILocation(line: 0, scope: !1162)
!1164 = !DILocation(line: 476, column: 7, scope: !1154)
!1165 = !DILocation(line: 486, column: 1, scope: !1154)
!1166 = distinct !DISubprogram(name: "DMA_PeriphIncOffsetSizeConfig", scope: !155, file: !155, line: 506, type: !1167, scopeLine: 507, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1169)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{null, !158, !20}
!1169 = !{!1170, !1171}
!1170 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1166, file: !155, line: 506, type: !158)
!1171 = !DILocalVariable(name: "DMA_Pincos", arg: 2, scope: !1166, file: !155, line: 506, type: !20)
!1172 = !DILocation(line: 0, scope: !1166)
!1173 = !DILocation(line: 513, column: 17, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1166, file: !155, line: 513, column: 6)
!1175 = !DILocation(line: 0, scope: !1174)
!1176 = !DILocation(line: 513, column: 6, scope: !1166)
!1177 = !DILocation(line: 523, column: 1, scope: !1166)
!1178 = distinct !DISubprogram(name: "DMA_FlowControllerConfig", scope: !155, file: !155, line: 542, type: !1167, scopeLine: 543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1179)
!1179 = !{!1180, !1181}
!1180 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1178, file: !155, line: 542, type: !158)
!1181 = !DILocalVariable(name: "DMA_FlowCtrl", arg: 2, scope: !1178, file: !155, line: 542, type: !20)
!1182 = !DILocation(line: 0, scope: !1178)
!1183 = !DILocation(line: 549, column: 19, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1178, file: !155, line: 549, column: 6)
!1185 = !DILocation(line: 0, scope: !1184)
!1186 = !DILocation(line: 549, column: 6, scope: !1178)
!1187 = !DILocation(line: 559, column: 1, scope: !1178)
!1188 = distinct !DISubprogram(name: "DMA_SetCurrDataCounter", scope: !155, file: !155, line: 626, type: !1189, scopeLine: 627, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1191)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{null, !158, !64}
!1191 = !{!1192, !1193}
!1192 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1188, file: !155, line: 626, type: !158)
!1193 = !DILocalVariable(name: "Counter", arg: 2, scope: !1188, file: !155, line: 626, type: !64)
!1194 = !DILocation(line: 0, scope: !1188)
!1195 = !DILocation(line: 632, column: 24, scope: !1188)
!1196 = !DILocation(line: 632, column: 17, scope: !1188)
!1197 = !DILocation(line: 632, column: 22, scope: !1188)
!1198 = !DILocation(line: 633, column: 1, scope: !1188)
!1199 = distinct !DISubprogram(name: "DMA_GetCurrDataCounter", scope: !155, file: !155, line: 641, type: !1200, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1202)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!64, !158}
!1202 = !{!1203}
!1203 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1199, file: !155, line: 641, type: !158)
!1204 = !DILocation(line: 0, scope: !1199)
!1205 = !DILocation(line: 647, column: 36, scope: !1199)
!1206 = !DILocation(line: 647, column: 11, scope: !1199)
!1207 = !DILocation(line: 647, column: 3, scope: !1199)
!1208 = distinct !DISubprogram(name: "DMA_DoubleBufferModeConfig", scope: !155, file: !155, line: 718, type: !1209, scopeLine: 720, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1211)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{null, !158, !20, !20}
!1211 = !{!1212, !1213, !1214}
!1212 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1208, file: !155, line: 718, type: !158)
!1213 = !DILocalVariable(name: "Memory1BaseAddr", arg: 2, scope: !1208, file: !155, line: 718, type: !20)
!1214 = !DILocalVariable(name: "DMA_CurrentMemory", arg: 3, scope: !1208, file: !155, line: 719, type: !20)
!1215 = !DILocation(line: 0, scope: !1208)
!1216 = !DILocation(line: 725, column: 25, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1208, file: !155, line: 725, column: 7)
!1218 = !DILocation(line: 0, scope: !1217)
!1219 = !DILocation(line: 725, column: 7, scope: !1208)
!1220 = !DILocation(line: 737, column: 17, scope: !1208)
!1221 = !DILocation(line: 737, column: 22, scope: !1208)
!1222 = !DILocation(line: 738, column: 1, scope: !1208)
!1223 = distinct !DISubprogram(name: "DMA_DoubleBufferModeCmd", scope: !155, file: !155, line: 749, type: !1155, scopeLine: 750, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1224)
!1224 = !{!1225, !1226}
!1225 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1223, file: !155, line: 749, type: !158)
!1226 = !DILocalVariable(name: "NewState", arg: 2, scope: !1223, file: !155, line: 749, type: !856)
!1227 = !DILocation(line: 0, scope: !1223)
!1228 = !DILocation(line: 756, column: 16, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1223, file: !155, line: 756, column: 7)
!1230 = !DILocation(line: 0, scope: !1229)
!1231 = !DILocation(line: 756, column: 7, scope: !1223)
!1232 = !DILocation(line: 766, column: 1, scope: !1223)
!1233 = distinct !DISubprogram(name: "DMA_MemoryTargetConfig", scope: !155, file: !155, line: 790, type: !1209, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1234)
!1234 = !{!1235, !1236, !1237}
!1235 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1233, file: !155, line: 790, type: !158)
!1236 = !DILocalVariable(name: "MemoryBaseAddr", arg: 2, scope: !1233, file: !155, line: 790, type: !20)
!1237 = !DILocalVariable(name: "DMA_MemoryTarget", arg: 3, scope: !1233, file: !155, line: 791, type: !20)
!1238 = !DILocation(line: 0, scope: !1233)
!1239 = !DILocation(line: 798, column: 24, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1233, file: !155, line: 798, column: 7)
!1241 = !DILocation(line: 798, column: 7, scope: !1233)
!1242 = !DILocation(line: 0, scope: !1240)
!1243 = !DILocation(line: 808, column: 1, scope: !1233)
!1244 = distinct !DISubprogram(name: "DMA_GetCurrentMemoryTarget", scope: !155, file: !155, line: 816, type: !1245, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1247)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!20, !158}
!1247 = !{!1248, !1249}
!1248 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1244, file: !155, line: 816, type: !158)
!1249 = !DILocalVariable(name: "tmp", scope: !1244, file: !155, line: 818, type: !20)
!1250 = !DILocation(line: 0, scope: !1244)
!1251 = !DILocation(line: 824, column: 22, scope: !1252)
!1252 = distinct !DILexicalBlock(scope: !1244, file: !155, line: 824, column: 7)
!1253 = !DILocation(line: 834, column: 3, scope: !1244)
!1254 = distinct !DISubprogram(name: "DMA_GetCmdStatus", scope: !155, file: !155, line: 925, type: !1255, scopeLine: 926, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1257)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!856, !158}
!1257 = !{!1258, !1259}
!1258 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1254, file: !155, line: 925, type: !158)
!1259 = !DILocalVariable(name: "state", scope: !1254, file: !155, line: 927, type: !856)
!1260 = !DILocation(line: 0, scope: !1254)
!1261 = !DILocation(line: 932, column: 22, scope: !1262)
!1262 = distinct !DILexicalBlock(scope: !1254, file: !155, line: 932, column: 7)
!1263 = !DILocation(line: 932, column: 25, scope: !1262)
!1264 = !DILocation(line: 943, column: 3, scope: !1254)
!1265 = distinct !DISubprogram(name: "DMA_GetFIFOStatus", scope: !155, file: !155, line: 959, type: !1245, scopeLine: 960, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1266)
!1266 = !{!1267, !1268}
!1267 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1265, file: !155, line: 959, type: !158)
!1268 = !DILocalVariable(name: "tmpreg", scope: !1265, file: !155, line: 961, type: !20)
!1269 = !DILocation(line: 0, scope: !1265)
!1270 = !DILocation(line: 967, column: 38, scope: !1265)
!1271 = !DILocation(line: 967, column: 42, scope: !1265)
!1272 = !DILocation(line: 969, column: 3, scope: !1265)
!1273 = distinct !DISubprogram(name: "DMA_GetFlagStatus", scope: !155, file: !155, line: 986, type: !1274, scopeLine: 987, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1277)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!1276, !158, !20}
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !6, line: 285, baseType: !11)
!1277 = !{!1278, !1279, !1280, !1281, !1282}
!1278 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1273, file: !155, line: 986, type: !158)
!1279 = !DILocalVariable(name: "DMA_FLAG", arg: 2, scope: !1273, file: !155, line: 986, type: !20)
!1280 = !DILocalVariable(name: "bitstatus", scope: !1273, file: !155, line: 988, type: !1276)
!1281 = !DILocalVariable(name: "DMAy", scope: !1273, file: !155, line: 989, type: !168)
!1282 = !DILocalVariable(name: "tmpreg", scope: !1273, file: !155, line: 990, type: !20)
!1283 = !DILocation(line: 0, scope: !1273)
!1284 = !DILocation(line: 997, column: 20, scope: !1285)
!1285 = distinct !DILexicalBlock(scope: !1273, file: !155, line: 997, column: 7)
!1286 = !DILocation(line: 1009, column: 17, scope: !1287)
!1287 = distinct !DILexicalBlock(scope: !1273, file: !155, line: 1009, column: 7)
!1288 = !DILocation(line: 1009, column: 34, scope: !1287)
!1289 = !DILocation(line: 1009, column: 7, scope: !1273)
!1290 = !DILocation(line: 0, scope: !1287)
!1291 = !DILocation(line: 1021, column: 10, scope: !1273)
!1292 = !DILocation(line: 1024, column: 15, scope: !1293)
!1293 = distinct !DILexicalBlock(scope: !1273, file: !155, line: 1024, column: 7)
!1294 = !DILocation(line: 1024, column: 27, scope: !1293)
!1295 = !DILocation(line: 1036, column: 3, scope: !1273)
!1296 = distinct !DISubprogram(name: "DMA_ClearFlag", scope: !155, file: !155, line: 1053, type: !1167, scopeLine: 1054, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1297)
!1297 = !{!1298, !1299, !1300}
!1298 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1296, file: !155, line: 1053, type: !158)
!1299 = !DILocalVariable(name: "DMA_FLAG", arg: 2, scope: !1296, file: !155, line: 1053, type: !20)
!1300 = !DILocalVariable(name: "DMAy", scope: !1296, file: !155, line: 1055, type: !168)
!1301 = !DILocation(line: 0, scope: !1296)
!1302 = !DILocation(line: 1062, column: 20, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !1296, file: !155, line: 1062, column: 7)
!1304 = !DILocation(line: 1074, column: 17, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !1296, file: !155, line: 1074, column: 7)
!1306 = !DILocation(line: 1074, column: 34, scope: !1305)
!1307 = !DILocation(line: 0, scope: !1305)
!1308 = !DILocation(line: 1074, column: 7, scope: !1296)
!1309 = !DILocation(line: 1077, column: 11, scope: !1310)
!1310 = distinct !DILexicalBlock(scope: !1305, file: !155, line: 1075, column: 3)
!1311 = !DILocation(line: 1077, column: 17, scope: !1310)
!1312 = !DILocation(line: 1078, column: 3, scope: !1310)
!1313 = !DILocation(line: 1082, column: 11, scope: !1314)
!1314 = distinct !DILexicalBlock(scope: !1305, file: !155, line: 1080, column: 3)
!1315 = !DILocation(line: 1082, column: 17, scope: !1314)
!1316 = !DILocation(line: 1084, column: 1, scope: !1296)
!1317 = distinct !DISubprogram(name: "DMA_ITConfig", scope: !155, file: !155, line: 1100, type: !1318, scopeLine: 1101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1320)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{null, !158, !20, !856}
!1320 = !{!1321, !1322, !1323}
!1321 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1317, file: !155, line: 1100, type: !158)
!1322 = !DILocalVariable(name: "DMA_IT", arg: 2, scope: !1317, file: !155, line: 1100, type: !20)
!1323 = !DILocalVariable(name: "NewState", arg: 3, scope: !1317, file: !155, line: 1100, type: !856)
!1324 = !DILocation(line: 0, scope: !1317)
!1325 = !DILocation(line: 1108, column: 15, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1317, file: !155, line: 1108, column: 7)
!1327 = !DILocation(line: 1108, column: 28, scope: !1326)
!1328 = !DILocation(line: 1108, column: 7, scope: !1317)
!1329 = !DILocation(line: 1110, column: 18, scope: !1330)
!1330 = distinct !DILexicalBlock(scope: !1331, file: !155, line: 1110, column: 9)
!1331 = distinct !DILexicalBlock(scope: !1326, file: !155, line: 1109, column: 3)
!1332 = !DILocation(line: 0, scope: !1330)
!1333 = !DILocation(line: 1110, column: 9, scope: !1331)
!1334 = !DILocation(line: 1113, column: 25, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1330, file: !155, line: 1111, column: 5)
!1336 = !DILocation(line: 1114, column: 5, scope: !1335)
!1337 = !DILocation(line: 1123, column: 14, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !1317, file: !155, line: 1123, column: 7)
!1339 = !DILocation(line: 1123, column: 7, scope: !1317)
!1340 = !DILocation(line: 1118, column: 25, scope: !1341)
!1341 = distinct !DILexicalBlock(scope: !1330, file: !155, line: 1116, column: 5)
!1342 = !DILocation(line: 0, scope: !1343)
!1343 = distinct !DILexicalBlock(scope: !1344, file: !155, line: 1125, column: 9)
!1344 = distinct !DILexicalBlock(scope: !1338, file: !155, line: 1124, column: 3)
!1345 = !DILocation(line: 1125, column: 9, scope: !1344)
!1346 = !DILocation(line: 1125, column: 18, scope: !1343)
!1347 = !DILocation(line: 1128, column: 21, scope: !1348)
!1348 = distinct !DILexicalBlock(scope: !1343, file: !155, line: 1126, column: 5)
!1349 = !DILocation(line: 1128, column: 24, scope: !1348)
!1350 = !DILocation(line: 1129, column: 5, scope: !1348)
!1351 = !DILocation(line: 1133, column: 27, scope: !1352)
!1352 = distinct !DILexicalBlock(scope: !1343, file: !155, line: 1131, column: 5)
!1353 = !DILocation(line: 1133, column: 21, scope: !1352)
!1354 = !DILocation(line: 1133, column: 24, scope: !1352)
!1355 = !DILocation(line: 1136, column: 1, scope: !1317)
!1356 = distinct !DISubprogram(name: "DMA_GetITStatus", scope: !155, file: !155, line: 1152, type: !1357, scopeLine: 1153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1360)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!1359, !158, !20}
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "ITStatus", file: !6, line: 285, baseType: !11)
!1360 = !{!1361, !1362, !1363, !1364, !1365, !1366}
!1361 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1356, file: !155, line: 1152, type: !158)
!1362 = !DILocalVariable(name: "DMA_IT", arg: 2, scope: !1356, file: !155, line: 1152, type: !20)
!1363 = !DILocalVariable(name: "bitstatus", scope: !1356, file: !155, line: 1154, type: !1359)
!1364 = !DILocalVariable(name: "DMAy", scope: !1356, file: !155, line: 1155, type: !168)
!1365 = !DILocalVariable(name: "tmpreg", scope: !1356, file: !155, line: 1156, type: !20)
!1366 = !DILocalVariable(name: "enablestatus", scope: !1356, file: !155, line: 1156, type: !20)
!1367 = !DILocation(line: 0, scope: !1356)
!1368 = !DILocation(line: 1163, column: 20, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !1356, file: !155, line: 1163, column: 7)
!1370 = !DILocation(line: 1175, column: 15, scope: !1371)
!1371 = distinct !DILexicalBlock(scope: !1356, file: !155, line: 1175, column: 7)
!1372 = !DILocation(line: 1175, column: 35, scope: !1371)
!1373 = !DILocation(line: 1175, column: 7, scope: !1356)
!1374 = !DILocation(line: 1178, column: 33, scope: !1375)
!1375 = distinct !DILexicalBlock(scope: !1371, file: !155, line: 1176, column: 3)
!1376 = !DILocation(line: 1178, column: 40, scope: !1375)
!1377 = !DILocation(line: 1181, column: 45, scope: !1375)
!1378 = !DILocation(line: 1182, column: 3, scope: !1375)
!1379 = !DILocation(line: 1186, column: 45, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1371, file: !155, line: 1184, column: 3)
!1381 = !DILocation(line: 0, scope: !1371)
!1382 = !DILocation(line: 1190, column: 15, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1356, file: !155, line: 1190, column: 7)
!1384 = !DILocation(line: 1190, column: 32, scope: !1383)
!1385 = !DILocation(line: 1190, column: 7, scope: !1356)
!1386 = !DILocation(line: 0, scope: !1383)
!1387 = !DILocation(line: 1202, column: 10, scope: !1356)
!1388 = !DILocation(line: 1205, column: 16, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !1356, file: !155, line: 1205, column: 7)
!1390 = !DILocation(line: 1205, column: 26, scope: !1389)
!1391 = !DILocation(line: 1205, column: 46, scope: !1389)
!1392 = !DILocation(line: 1217, column: 3, scope: !1356)
!1393 = distinct !DISubprogram(name: "DMA_ClearITPendingBit", scope: !155, file: !155, line: 1234, type: !1167, scopeLine: 1235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !154, retainedNodes: !1394)
!1394 = !{!1395, !1396, !1397}
!1395 = !DILocalVariable(name: "DMAy_Streamx", arg: 1, scope: !1393, file: !155, line: 1234, type: !158)
!1396 = !DILocalVariable(name: "DMA_IT", arg: 2, scope: !1393, file: !155, line: 1234, type: !20)
!1397 = !DILocalVariable(name: "DMAy", scope: !1393, file: !155, line: 1236, type: !168)
!1398 = !DILocation(line: 0, scope: !1393)
!1399 = !DILocation(line: 1243, column: 20, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !1393, file: !155, line: 1243, column: 7)
!1401 = !DILocation(line: 1255, column: 15, scope: !1402)
!1402 = distinct !DILexicalBlock(scope: !1393, file: !155, line: 1255, column: 7)
!1403 = !DILocation(line: 1255, column: 32, scope: !1402)
!1404 = !DILocation(line: 0, scope: !1402)
!1405 = !DILocation(line: 1255, column: 7, scope: !1393)
!1406 = !DILocation(line: 1258, column: 11, scope: !1407)
!1407 = distinct !DILexicalBlock(scope: !1402, file: !155, line: 1256, column: 3)
!1408 = !DILocation(line: 1258, column: 17, scope: !1407)
!1409 = !DILocation(line: 1259, column: 3, scope: !1407)
!1410 = !DILocation(line: 1263, column: 11, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !1402, file: !155, line: 1261, column: 3)
!1412 = !DILocation(line: 1263, column: 17, scope: !1411)
!1413 = !DILocation(line: 1265, column: 1, scope: !1393)
!1414 = distinct !DISubprogram(name: "RCC_DeInit", scope: !3, file: !3, line: 197, type: !1415, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !361)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{null}
!1417 = !DILocation(line: 200, column: 11, scope: !1414)
!1418 = !{!1419, !840, i64 0}
!1419 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !840, i64 32, !840, i64 36, !841, i64 40, !840, i64 48, !840, i64 52, !840, i64 56, !840, i64 60, !840, i64 64, !840, i64 68, !841, i64 72, !840, i64 80, !840, i64 84, !840, i64 88, !840, i64 92, !840, i64 96, !840, i64 100, !841, i64 104, !840, i64 112, !840, i64 116, !841, i64 120, !840, i64 128, !840, i64 132}
!1420 = !DILocation(line: 203, column: 13, scope: !1414)
!1421 = !{!1419, !840, i64 8}
!1422 = !DILocation(line: 206, column: 11, scope: !1414)
!1423 = !DILocation(line: 209, column: 16, scope: !1414)
!1424 = !{!1419, !840, i64 4}
!1425 = !DILocation(line: 212, column: 11, scope: !1414)
!1426 = !DILocation(line: 215, column: 12, scope: !1414)
!1427 = !{!1419, !840, i64 12}
!1428 = !DILocation(line: 216, column: 1, scope: !1414)
!1429 = distinct !DISubprogram(name: "RCC_HSEConfig", scope: !3, file: !3, line: 239, type: !1430, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1432)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{null, !60}
!1432 = !{!1433}
!1433 = !DILocalVariable(name: "RCC_HSE", arg: 1, scope: !1429, file: !3, line: 239, type: !60)
!1434 = !DILocation(line: 0, scope: !1429)
!1435 = !DILocation(line: 245, column: 38, scope: !1429)
!1436 = !DILocation(line: 248, column: 38, scope: !1429)
!1437 = !DILocation(line: 249, column: 1, scope: !1429)
!1438 = distinct !DISubprogram(name: "RCC_WaitForHSEStartUp", scope: !3, file: !3, line: 263, type: !1439, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1441)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!358}
!1441 = !{!1442, !1443, !1444}
!1442 = !DILocalVariable(name: "startupcounter", scope: !1438, file: !3, line: 265, type: !27)
!1443 = !DILocalVariable(name: "status", scope: !1438, file: !3, line: 266, type: !358)
!1444 = !DILocalVariable(name: "hsestatus", scope: !1438, file: !3, line: 267, type: !1276)
!1445 = !DILocation(line: 265, column: 3, scope: !1438)
!1446 = !DILocation(line: 265, column: 17, scope: !1438)
!1447 = !DILocation(line: 0, scope: !1438)
!1448 = !DILocation(line: 269, column: 3, scope: !1438)
!1449 = !DILocalVariable(name: "RCC_FLAG", arg: 1, scope: !1450, file: !3, line: 1687, type: !60)
!1450 = distinct !DISubprogram(name: "RCC_GetFlagStatus", scope: !3, file: !3, line: 1687, type: !1451, scopeLine: 1688, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1453)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!1276, !60}
!1453 = !{!1449, !1454, !1455, !1456}
!1454 = !DILocalVariable(name: "tmp", scope: !1450, file: !3, line: 1689, type: !20)
!1455 = !DILocalVariable(name: "statusreg", scope: !1450, file: !3, line: 1690, type: !20)
!1456 = !DILocalVariable(name: "bitstatus", scope: !1450, file: !3, line: 1691, type: !1276)
!1457 = !DILocation(line: 0, scope: !1450, inlinedAt: !1458)
!1458 = distinct !DILocation(line: 271, column: 17, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1438, file: !3, line: 270, column: 3)
!1460 = !DILocation(line: 0, scope: !1461, inlinedAt: !1458)
!1461 = distinct !DILexicalBlock(scope: !1450, file: !3, line: 1698, column: 7)
!1462 = !DILocation(line: 272, column: 19, scope: !1459)
!1463 = !DILocation(line: 273, column: 12, scope: !1438)
!1464 = !DILocation(line: 273, column: 27, scope: !1438)
!1465 = !DILocation(line: 273, column: 51, scope: !1438)
!1466 = !DILocation(line: 273, column: 3, scope: !1459)
!1467 = distinct !{!1467, !1448, !1468}
!1468 = !DILocation(line: 273, column: 74, scope: !1438)
!1469 = !DILocation(line: 0, scope: !1450, inlinedAt: !1470)
!1470 = distinct !DILocation(line: 275, column: 7, scope: !1471)
!1471 = distinct !DILexicalBlock(scope: !1438, file: !3, line: 275, column: 7)
!1472 = !DILocation(line: 0, scope: !1461, inlinedAt: !1470)
!1473 = !DILocation(line: 284, column: 1, scope: !1438)
!1474 = !DILocation(line: 283, column: 3, scope: !1438)
!1475 = !DILocation(line: 0, scope: !1450)
!1476 = !DILocation(line: 1697, column: 9, scope: !1450)
!1477 = !DILocation(line: 1697, column: 18, scope: !1450)
!1478 = !DILocation(line: 1698, column: 7, scope: !1450)
!1479 = !DILocation(line: 1705, column: 3, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1481, file: !3, line: 1703, column: 3)
!1481 = distinct !DILexicalBlock(scope: !1461, file: !3, line: 1702, column: 12)
!1482 = !DILocation(line: 0, scope: !1461)
!1483 = !DILocation(line: 1712, column: 18, scope: !1450)
!1484 = !DILocation(line: 1713, column: 33, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1450, file: !3, line: 1713, column: 7)
!1486 = !DILocation(line: 1713, column: 18, scope: !1485)
!1487 = !DILocation(line: 1713, column: 42, scope: !1485)
!1488 = !DILocation(line: 1722, column: 3, scope: !1450)
!1489 = distinct !DISubprogram(name: "RCC_AdjustHSICalibrationValue", scope: !3, file: !3, line: 294, type: !1430, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1490)
!1490 = !{!1491, !1492}
!1491 = !DILocalVariable(name: "HSICalibrationValue", arg: 1, scope: !1489, file: !3, line: 294, type: !60)
!1492 = !DILocalVariable(name: "tmpreg", scope: !1489, file: !3, line: 296, type: !20)
!1493 = !DILocation(line: 0, scope: !1489)
!1494 = !DILocation(line: 300, column: 17, scope: !1489)
!1495 = !DILocation(line: 303, column: 10, scope: !1489)
!1496 = !DILocation(line: 306, column: 13, scope: !1489)
!1497 = !DILocation(line: 306, column: 43, scope: !1489)
!1498 = !DILocation(line: 306, column: 10, scope: !1489)
!1499 = !DILocation(line: 309, column: 11, scope: !1489)
!1500 = !DILocation(line: 310, column: 1, scope: !1489)
!1501 = distinct !DISubprogram(name: "RCC_HSICmd", scope: !3, file: !3, line: 330, type: !1502, scopeLine: 331, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1504)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{null, !856}
!1504 = !{!1505}
!1505 = !DILocalVariable(name: "NewState", arg: 1, scope: !1501, file: !3, line: 330, type: !856)
!1506 = !DILocation(line: 0, scope: !1501)
!1507 = !DILocation(line: 335, column: 34, scope: !1501)
!1508 = !DILocation(line: 336, column: 1, scope: !1501)
!1509 = distinct !DISubprogram(name: "RCC_LSEConfig", scope: !3, file: !3, line: 355, type: !1430, scopeLine: 356, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1510)
!1510 = !{!1511}
!1511 = !DILocalVariable(name: "RCC_LSE", arg: 1, scope: !1509, file: !3, line: 355, type: !60)
!1512 = !DILocation(line: 0, scope: !1509)
!1513 = !DILocation(line: 362, column: 34, scope: !1509)
!1514 = !DILocation(line: 365, column: 34, scope: !1509)
!1515 = !DILocation(line: 368, column: 3, scope: !1509)
!1516 = !DILocation(line: 377, column: 7, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1509, file: !3, line: 369, column: 3)
!1518 = !DILocation(line: 0, scope: !1517)
!1519 = !DILocation(line: 381, column: 1, scope: !1509)
!1520 = distinct !DISubprogram(name: "RCC_LSICmd", scope: !3, file: !3, line: 395, type: !1502, scopeLine: 396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1521)
!1521 = !{!1522}
!1522 = !DILocalVariable(name: "NewState", arg: 1, scope: !1520, file: !3, line: 395, type: !856)
!1523 = !DILocation(line: 0, scope: !1520)
!1524 = !DILocation(line: 400, column: 35, scope: !1520)
!1525 = !DILocation(line: 401, column: 1, scope: !1520)
!1526 = distinct !DISubprogram(name: "RCC_PLLConfig", scope: !3, file: !3, line: 438, type: !1527, scopeLine: 439, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1529)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{null, !20, !20, !20, !20, !20}
!1529 = !{!1530, !1531, !1532, !1533, !1534}
!1530 = !DILocalVariable(name: "RCC_PLLSource", arg: 1, scope: !1526, file: !3, line: 438, type: !20)
!1531 = !DILocalVariable(name: "PLLM", arg: 2, scope: !1526, file: !3, line: 438, type: !20)
!1532 = !DILocalVariable(name: "PLLN", arg: 3, scope: !1526, file: !3, line: 438, type: !20)
!1533 = !DILocalVariable(name: "PLLP", arg: 4, scope: !1526, file: !3, line: 438, type: !20)
!1534 = !DILocalVariable(name: "PLLQ", arg: 5, scope: !1526, file: !3, line: 438, type: !20)
!1535 = !DILocation(line: 0, scope: !1526)
!1536 = !DILocation(line: 447, column: 31, scope: !1526)
!1537 = !DILocation(line: 447, column: 47, scope: !1526)
!1538 = !DILocation(line: 447, column: 57, scope: !1526)
!1539 = !DILocation(line: 448, column: 24, scope: !1526)
!1540 = !DILocation(line: 447, column: 23, scope: !1526)
!1541 = !DILocation(line: 447, column: 37, scope: !1526)
!1542 = !DILocation(line: 447, column: 64, scope: !1526)
!1543 = !DILocation(line: 447, column: 82, scope: !1526)
!1544 = !DILocation(line: 447, column: 16, scope: !1526)
!1545 = !DILocation(line: 449, column: 1, scope: !1526)
!1546 = distinct !DISubprogram(name: "RCC_PLLCmd", scope: !3, file: !3, line: 461, type: !1502, scopeLine: 462, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1547)
!1547 = !{!1548}
!1548 = !DILocalVariable(name: "NewState", arg: 1, scope: !1546, file: !3, line: 461, type: !856)
!1549 = !DILocation(line: 0, scope: !1546)
!1550 = !DILocation(line: 465, column: 34, scope: !1546)
!1551 = !DILocation(line: 466, column: 1, scope: !1546)
!1552 = distinct !DISubprogram(name: "RCC_PLLI2SConfig", scope: !3, file: !3, line: 487, type: !897, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1553)
!1553 = !{!1554, !1555}
!1554 = !DILocalVariable(name: "PLLI2SN", arg: 1, scope: !1552, file: !3, line: 487, type: !20)
!1555 = !DILocalVariable(name: "PLLI2SR", arg: 2, scope: !1552, file: !3, line: 487, type: !20)
!1556 = !DILocation(line: 0, scope: !1552)
!1557 = !DILocation(line: 493, column: 30, scope: !1552)
!1558 = !DILocation(line: 493, column: 47, scope: !1552)
!1559 = !DILocation(line: 493, column: 36, scope: !1552)
!1560 = !DILocation(line: 493, column: 19, scope: !1552)
!1561 = !{!1419, !840, i64 132}
!1562 = !DILocation(line: 494, column: 1, scope: !1552)
!1563 = distinct !DISubprogram(name: "RCC_PLLI2SCmd", scope: !3, file: !3, line: 502, type: !1502, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1564)
!1564 = !{!1565}
!1565 = !DILocalVariable(name: "NewState", arg: 1, scope: !1563, file: !3, line: 502, type: !856)
!1566 = !DILocation(line: 0, scope: !1563)
!1567 = !DILocation(line: 506, column: 37, scope: !1563)
!1568 = !DILocation(line: 507, column: 1, scope: !1563)
!1569 = distinct !DISubprogram(name: "RCC_ClockSecuritySystemCmd", scope: !3, file: !3, line: 520, type: !1502, scopeLine: 521, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1570)
!1570 = !{!1571}
!1571 = !DILocalVariable(name: "NewState", arg: 1, scope: !1569, file: !3, line: 520, type: !856)
!1572 = !DILocation(line: 0, scope: !1569)
!1573 = !DILocation(line: 524, column: 34, scope: !1569)
!1574 = !DILocation(line: 525, column: 1, scope: !1569)
!1575 = distinct !DISubprogram(name: "RCC_MCO1Config", scope: !3, file: !3, line: 545, type: !897, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1576)
!1576 = !{!1577, !1578, !1579}
!1577 = !DILocalVariable(name: "RCC_MCO1Source", arg: 1, scope: !1575, file: !3, line: 545, type: !20)
!1578 = !DILocalVariable(name: "RCC_MCO1Div", arg: 2, scope: !1575, file: !3, line: 545, type: !20)
!1579 = !DILocalVariable(name: "tmpreg", scope: !1575, file: !3, line: 547, type: !20)
!1580 = !DILocation(line: 0, scope: !1575)
!1581 = !DILocation(line: 553, column: 17, scope: !1575)
!1582 = !DILocation(line: 556, column: 10, scope: !1575)
!1583 = !DILocation(line: 559, column: 28, scope: !1575)
!1584 = !DILocation(line: 559, column: 10, scope: !1575)
!1585 = !DILocation(line: 562, column: 13, scope: !1575)
!1586 = !DILocation(line: 563, column: 1, scope: !1575)
!1587 = distinct !DISubprogram(name: "RCC_MCO2Config", scope: !3, file: !3, line: 583, type: !897, scopeLine: 584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1588)
!1588 = !{!1589, !1590, !1591}
!1589 = !DILocalVariable(name: "RCC_MCO2Source", arg: 1, scope: !1587, file: !3, line: 583, type: !20)
!1590 = !DILocalVariable(name: "RCC_MCO2Div", arg: 2, scope: !1587, file: !3, line: 583, type: !20)
!1591 = !DILocalVariable(name: "tmpreg", scope: !1587, file: !3, line: 585, type: !20)
!1592 = !DILocation(line: 0, scope: !1587)
!1593 = !DILocation(line: 591, column: 17, scope: !1587)
!1594 = !DILocation(line: 594, column: 10, scope: !1587)
!1595 = !DILocation(line: 597, column: 28, scope: !1587)
!1596 = !DILocation(line: 597, column: 10, scope: !1587)
!1597 = !DILocation(line: 600, column: 13, scope: !1587)
!1598 = !DILocation(line: 601, column: 1, scope: !1587)
!1599 = distinct !DISubprogram(name: "RCC_SYSCLKConfig", scope: !3, file: !3, line: 689, type: !831, scopeLine: 690, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1600)
!1600 = !{!1601, !1602}
!1601 = !DILocalVariable(name: "RCC_SYSCLKSource", arg: 1, scope: !1599, file: !3, line: 689, type: !20)
!1602 = !DILocalVariable(name: "tmpreg", scope: !1599, file: !3, line: 691, type: !20)
!1603 = !DILocation(line: 0, scope: !1599)
!1604 = !DILocation(line: 696, column: 17, scope: !1599)
!1605 = !DILocation(line: 699, column: 10, scope: !1599)
!1606 = !DILocation(line: 702, column: 10, scope: !1599)
!1607 = !DILocation(line: 705, column: 13, scope: !1599)
!1608 = !DILocation(line: 706, column: 1, scope: !1599)
!1609 = distinct !DISubprogram(name: "RCC_GetSYSCLKSource", scope: !3, file: !3, line: 717, type: !1610, scopeLine: 718, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !361)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!60}
!1612 = !DILocation(line: 719, column: 26, scope: !1609)
!1613 = !DILocation(line: 719, column: 11, scope: !1609)
!1614 = !DILocation(line: 719, column: 3, scope: !1609)
!1615 = distinct !DISubprogram(name: "RCC_HCLKConfig", scope: !3, file: !3, line: 742, type: !831, scopeLine: 743, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1616)
!1616 = !{!1617, !1618}
!1617 = !DILocalVariable(name: "RCC_SYSCLK", arg: 1, scope: !1615, file: !3, line: 742, type: !20)
!1618 = !DILocalVariable(name: "tmpreg", scope: !1615, file: !3, line: 744, type: !20)
!1619 = !DILocation(line: 0, scope: !1615)
!1620 = !DILocation(line: 749, column: 17, scope: !1615)
!1621 = !DILocation(line: 752, column: 10, scope: !1615)
!1622 = !DILocation(line: 755, column: 10, scope: !1615)
!1623 = !DILocation(line: 758, column: 13, scope: !1615)
!1624 = !DILocation(line: 759, column: 1, scope: !1615)
!1625 = distinct !DISubprogram(name: "RCC_PCLK1Config", scope: !3, file: !3, line: 774, type: !831, scopeLine: 775, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1626)
!1626 = !{!1627, !1628}
!1627 = !DILocalVariable(name: "RCC_HCLK", arg: 1, scope: !1625, file: !3, line: 774, type: !20)
!1628 = !DILocalVariable(name: "tmpreg", scope: !1625, file: !3, line: 776, type: !20)
!1629 = !DILocation(line: 0, scope: !1625)
!1630 = !DILocation(line: 781, column: 17, scope: !1625)
!1631 = !DILocation(line: 784, column: 10, scope: !1625)
!1632 = !DILocation(line: 787, column: 10, scope: !1625)
!1633 = !DILocation(line: 790, column: 13, scope: !1625)
!1634 = !DILocation(line: 791, column: 1, scope: !1625)
!1635 = distinct !DISubprogram(name: "RCC_PCLK2Config", scope: !3, file: !3, line: 805, type: !831, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1636)
!1636 = !{!1637, !1638}
!1637 = !DILocalVariable(name: "RCC_HCLK", arg: 1, scope: !1635, file: !3, line: 805, type: !20)
!1638 = !DILocalVariable(name: "tmpreg", scope: !1635, file: !3, line: 807, type: !20)
!1639 = !DILocation(line: 0, scope: !1635)
!1640 = !DILocation(line: 812, column: 17, scope: !1635)
!1641 = !DILocation(line: 815, column: 10, scope: !1635)
!1642 = !DILocation(line: 818, column: 22, scope: !1635)
!1643 = !DILocation(line: 818, column: 10, scope: !1635)
!1644 = !DILocation(line: 821, column: 13, scope: !1635)
!1645 = !DILocation(line: 822, column: 1, scope: !1635)
!1646 = distinct !DISubprogram(name: "RCC_GetClocksFreq", scope: !3, file: !3, line: 857, type: !1647, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1658)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{null, !1649}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClocksTypeDef", file: !1651, line: 48, baseType: !1652)
!1651 = !DIFile(filename: "inc/peripherals/stm32f4xx_rcc.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1651, line: 42, size: 128, elements: !1653)
!1653 = !{!1654, !1655, !1656, !1657}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLK_Frequency", scope: !1652, file: !1651, line: 44, baseType: !20, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "HCLK_Frequency", scope: !1652, file: !1651, line: 45, baseType: !20, size: 32, offset: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "PCLK1_Frequency", scope: !1652, file: !1651, line: 46, baseType: !20, size: 32, offset: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "PCLK2_Frequency", scope: !1652, file: !1651, line: 47, baseType: !20, size: 32, offset: 96)
!1658 = !{!1659, !1660, !1661, !1662, !1663, !1664, !1665}
!1659 = !DILocalVariable(name: "RCC_Clocks", arg: 1, scope: !1646, file: !3, line: 857, type: !1649)
!1660 = !DILocalVariable(name: "tmp", scope: !1646, file: !3, line: 859, type: !20)
!1661 = !DILocalVariable(name: "presc", scope: !1646, file: !3, line: 859, type: !20)
!1662 = !DILocalVariable(name: "pllvco", scope: !1646, file: !3, line: 859, type: !20)
!1663 = !DILocalVariable(name: "pllp", scope: !1646, file: !3, line: 859, type: !20)
!1664 = !DILocalVariable(name: "pllsource", scope: !1646, file: !3, line: 859, type: !20)
!1665 = !DILocalVariable(name: "pllm", scope: !1646, file: !3, line: 859, type: !20)
!1666 = !DILocation(line: 0, scope: !1646)
!1667 = !DILocation(line: 862, column: 14, scope: !1646)
!1668 = !DILocation(line: 862, column: 19, scope: !1646)
!1669 = !DILocation(line: 864, column: 3, scope: !1646)
!1670 = !DILocation(line: 871, column: 7, scope: !1671)
!1671 = distinct !DILexicalBlock(scope: !1646, file: !3, line: 865, column: 3)
!1672 = !DILocation(line: 877, column: 25, scope: !1671)
!1673 = !DILocation(line: 878, column: 19, scope: !1671)
!1674 = !DILocation(line: 878, column: 27, scope: !1671)
!1675 = !DILocation(line: 880, column: 21, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1671, file: !3, line: 880, column: 11)
!1677 = !DILocation(line: 880, column: 11, scope: !1671)
!1678 = !DILocation(line: 0, scope: !1676)
!1679 = !DILocation(line: 891, column: 22, scope: !1671)
!1680 = !DILocation(line: 891, column: 62, scope: !1671)
!1681 = !DILocation(line: 892, column: 44, scope: !1671)
!1682 = !DILocation(line: 893, column: 7, scope: !1671)
!1683 = !DILocation(line: 0, scope: !1671)
!1684 = !DILocation(line: 901, column: 14, scope: !1646)
!1685 = !DILocation(line: 902, column: 13, scope: !1646)
!1686 = !DILocation(line: 903, column: 11, scope: !1646)
!1687 = !DILocation(line: 905, column: 61, scope: !1646)
!1688 = !DILocation(line: 905, column: 15, scope: !1646)
!1689 = !DILocation(line: 905, column: 30, scope: !1646)
!1690 = !{!935, !840, i64 4}
!1691 = !DILocation(line: 908, column: 14, scope: !1646)
!1692 = !DILocation(line: 909, column: 13, scope: !1646)
!1693 = !DILocation(line: 910, column: 11, scope: !1646)
!1694 = !DILocation(line: 912, column: 60, scope: !1646)
!1695 = !DILocation(line: 912, column: 15, scope: !1646)
!1696 = !DILocation(line: 912, column: 31, scope: !1646)
!1697 = !DILocation(line: 915, column: 14, scope: !1646)
!1698 = !DILocation(line: 916, column: 13, scope: !1646)
!1699 = !DILocation(line: 917, column: 11, scope: !1646)
!1700 = !DILocation(line: 919, column: 60, scope: !1646)
!1701 = !DILocation(line: 919, column: 15, scope: !1646)
!1702 = !DILocation(line: 919, column: 31, scope: !1646)
!1703 = !DILocation(line: 920, column: 1, scope: !1646)
!1704 = distinct !DISubprogram(name: "RCC_RTCCLKConfig", scope: !3, file: !3, line: 982, type: !831, scopeLine: 983, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1705)
!1705 = !{!1706, !1707}
!1706 = !DILocalVariable(name: "RCC_RTCCLKSource", arg: 1, scope: !1704, file: !3, line: 982, type: !20)
!1707 = !DILocalVariable(name: "tmpreg", scope: !1704, file: !3, line: 984, type: !20)
!1708 = !DILocation(line: 0, scope: !1704)
!1709 = !DILocation(line: 989, column: 25, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1704, file: !3, line: 989, column: 7)
!1711 = !DILocation(line: 989, column: 39, scope: !1710)
!1712 = !DILocation(line: 989, column: 7, scope: !1704)
!1713 = !DILocation(line: 991, column: 19, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1710, file: !3, line: 990, column: 3)
!1715 = !DILocation(line: 994, column: 12, scope: !1714)
!1716 = !DILocation(line: 997, column: 33, scope: !1714)
!1717 = !DILocation(line: 997, column: 12, scope: !1714)
!1718 = !DILocation(line: 1000, column: 15, scope: !1714)
!1719 = !DILocation(line: 1001, column: 3, scope: !1714)
!1720 = !DILocation(line: 1004, column: 34, scope: !1704)
!1721 = !DILocation(line: 1004, column: 13, scope: !1704)
!1722 = !{!1419, !840, i64 112}
!1723 = !DILocation(line: 1005, column: 1, scope: !1704)
!1724 = distinct !DISubprogram(name: "RCC_RTCCLKCmd", scope: !3, file: !3, line: 1014, type: !1502, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1725)
!1725 = !{!1726}
!1726 = !DILocalVariable(name: "NewState", arg: 1, scope: !1724, file: !3, line: 1014, type: !856)
!1727 = !DILocation(line: 0, scope: !1724)
!1728 = !DILocation(line: 1019, column: 36, scope: !1724)
!1729 = !DILocation(line: 1020, column: 1, scope: !1724)
!1730 = distinct !DISubprogram(name: "RCC_BackupResetCmd", scope: !3, file: !3, line: 1031, type: !1502, scopeLine: 1032, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1731)
!1731 = !{!1732}
!1732 = !DILocalVariable(name: "NewState", arg: 1, scope: !1730, file: !3, line: 1031, type: !856)
!1733 = !DILocation(line: 0, scope: !1730)
!1734 = !DILocation(line: 1035, column: 36, scope: !1730)
!1735 = !DILocation(line: 1036, column: 1, scope: !1730)
!1736 = distinct !DISubprogram(name: "RCC_I2SCLKConfig", scope: !3, file: !3, line: 1048, type: !831, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1737)
!1737 = !{!1738}
!1738 = !DILocalVariable(name: "RCC_I2SCLKSource", arg: 1, scope: !1736, file: !3, line: 1048, type: !20)
!1739 = !DILocation(line: 0, scope: !1736)
!1740 = !DILocation(line: 1053, column: 37, scope: !1736)
!1741 = !DILocation(line: 1054, column: 1, scope: !1736)
!1742 = distinct !DISubprogram(name: "RCC_AHB1PeriphClockCmd", scope: !3, file: !3, line: 1087, type: !1743, scopeLine: 1088, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1745)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{null, !20, !856}
!1745 = !{!1746, !1747}
!1746 = !DILocalVariable(name: "RCC_AHB1Periph", arg: 1, scope: !1742, file: !3, line: 1087, type: !20)
!1747 = !DILocalVariable(name: "NewState", arg: 2, scope: !1742, file: !3, line: 1087, type: !856)
!1748 = !DILocation(line: 0, scope: !1742)
!1749 = !DILocation(line: 1093, column: 16, scope: !1750)
!1750 = distinct !DILexicalBlock(scope: !1742, file: !3, line: 1093, column: 7)
!1751 = !DILocation(line: 1093, column: 7, scope: !1742)
!1752 = !DILocation(line: 1095, column: 18, scope: !1753)
!1753 = distinct !DILexicalBlock(scope: !1750, file: !3, line: 1094, column: 3)
!1754 = !{!1419, !840, i64 48}
!1755 = !DILocation(line: 1096, column: 3, scope: !1753)
!1756 = !DILocation(line: 1099, column: 21, scope: !1757)
!1757 = distinct !DILexicalBlock(scope: !1750, file: !3, line: 1098, column: 3)
!1758 = !DILocation(line: 1099, column: 18, scope: !1757)
!1759 = !DILocation(line: 0, scope: !1750)
!1760 = !DILocation(line: 1101, column: 1, scope: !1742)
!1761 = distinct !DISubprogram(name: "RCC_AHB2PeriphClockCmd", scope: !3, file: !3, line: 1119, type: !1743, scopeLine: 1120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1762)
!1762 = !{!1763, !1764}
!1763 = !DILocalVariable(name: "RCC_AHB2Periph", arg: 1, scope: !1761, file: !3, line: 1119, type: !20)
!1764 = !DILocalVariable(name: "NewState", arg: 2, scope: !1761, file: !3, line: 1119, type: !856)
!1765 = !DILocation(line: 0, scope: !1761)
!1766 = !DILocation(line: 1125, column: 16, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1761, file: !3, line: 1125, column: 7)
!1768 = !DILocation(line: 1125, column: 7, scope: !1761)
!1769 = !DILocation(line: 1127, column: 18, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 1126, column: 3)
!1771 = !{!1419, !840, i64 52}
!1772 = !DILocation(line: 1128, column: 3, scope: !1770)
!1773 = !DILocation(line: 1131, column: 21, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 1130, column: 3)
!1775 = !DILocation(line: 1131, column: 18, scope: !1774)
!1776 = !DILocation(line: 0, scope: !1767)
!1777 = !DILocation(line: 1133, column: 1, scope: !1761)
!1778 = distinct !DISubprogram(name: "RCC_AHB3PeriphClockCmd", scope: !3, file: !3, line: 1146, type: !1743, scopeLine: 1147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1779)
!1779 = !{!1780, !1781}
!1780 = !DILocalVariable(name: "RCC_AHB3Periph", arg: 1, scope: !1778, file: !3, line: 1146, type: !20)
!1781 = !DILocalVariable(name: "NewState", arg: 2, scope: !1778, file: !3, line: 1146, type: !856)
!1782 = !DILocation(line: 0, scope: !1778)
!1783 = !DILocation(line: 1152, column: 16, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !1778, file: !3, line: 1152, column: 7)
!1785 = !DILocation(line: 1152, column: 7, scope: !1778)
!1786 = !DILocation(line: 1154, column: 18, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1784, file: !3, line: 1153, column: 3)
!1788 = !{!1419, !840, i64 56}
!1789 = !DILocation(line: 1155, column: 3, scope: !1787)
!1790 = !DILocation(line: 1158, column: 21, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !1784, file: !3, line: 1157, column: 3)
!1792 = !DILocation(line: 1158, column: 18, scope: !1791)
!1793 = !DILocation(line: 0, scope: !1784)
!1794 = !DILocation(line: 1160, column: 1, scope: !1778)
!1795 = distinct !DISubprogram(name: "RCC_APB1PeriphClockCmd", scope: !3, file: !3, line: 1196, type: !1743, scopeLine: 1197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1796)
!1796 = !{!1797, !1798}
!1797 = !DILocalVariable(name: "RCC_APB1Periph", arg: 1, scope: !1795, file: !3, line: 1196, type: !20)
!1798 = !DILocalVariable(name: "NewState", arg: 2, scope: !1795, file: !3, line: 1196, type: !856)
!1799 = !DILocation(line: 0, scope: !1795)
!1800 = !DILocation(line: 1202, column: 16, scope: !1801)
!1801 = distinct !DILexicalBlock(scope: !1795, file: !3, line: 1202, column: 7)
!1802 = !DILocation(line: 1202, column: 7, scope: !1795)
!1803 = !DILocation(line: 1204, column: 18, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1801, file: !3, line: 1203, column: 3)
!1805 = !{!1419, !840, i64 64}
!1806 = !DILocation(line: 1205, column: 3, scope: !1804)
!1807 = !DILocation(line: 1208, column: 21, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1801, file: !3, line: 1207, column: 3)
!1809 = !DILocation(line: 1208, column: 18, scope: !1808)
!1810 = !DILocation(line: 0, scope: !1801)
!1811 = !DILocation(line: 1210, column: 1, scope: !1795)
!1812 = distinct !DISubprogram(name: "RCC_APB2PeriphClockCmd", scope: !3, file: !3, line: 1236, type: !1743, scopeLine: 1237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1813)
!1813 = !{!1814, !1815}
!1814 = !DILocalVariable(name: "RCC_APB2Periph", arg: 1, scope: !1812, file: !3, line: 1236, type: !20)
!1815 = !DILocalVariable(name: "NewState", arg: 2, scope: !1812, file: !3, line: 1236, type: !856)
!1816 = !DILocation(line: 0, scope: !1812)
!1817 = !DILocation(line: 1242, column: 16, scope: !1818)
!1818 = distinct !DILexicalBlock(scope: !1812, file: !3, line: 1242, column: 7)
!1819 = !DILocation(line: 1242, column: 7, scope: !1812)
!1820 = !DILocation(line: 1244, column: 18, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1818, file: !3, line: 1243, column: 3)
!1822 = !{!1419, !840, i64 68}
!1823 = !DILocation(line: 1245, column: 3, scope: !1821)
!1824 = !DILocation(line: 1248, column: 21, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1818, file: !3, line: 1247, column: 3)
!1826 = !DILocation(line: 1248, column: 18, scope: !1825)
!1827 = !DILocation(line: 0, scope: !1818)
!1828 = !DILocation(line: 1250, column: 1, scope: !1812)
!1829 = distinct !DISubprogram(name: "RCC_AHB1PeriphResetCmd", scope: !3, file: !3, line: 1275, type: !1743, scopeLine: 1276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1830)
!1830 = !{!1831, !1832}
!1831 = !DILocalVariable(name: "RCC_AHB1Periph", arg: 1, scope: !1829, file: !3, line: 1275, type: !20)
!1832 = !DILocalVariable(name: "NewState", arg: 2, scope: !1829, file: !3, line: 1275, type: !856)
!1833 = !DILocation(line: 0, scope: !1829)
!1834 = !DILocation(line: 1281, column: 16, scope: !1835)
!1835 = distinct !DILexicalBlock(scope: !1829, file: !3, line: 1281, column: 7)
!1836 = !DILocation(line: 1281, column: 7, scope: !1829)
!1837 = !DILocation(line: 1283, column: 19, scope: !1838)
!1838 = distinct !DILexicalBlock(scope: !1835, file: !3, line: 1282, column: 3)
!1839 = !{!1419, !840, i64 16}
!1840 = !DILocation(line: 1284, column: 3, scope: !1838)
!1841 = !DILocation(line: 1287, column: 22, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1835, file: !3, line: 1286, column: 3)
!1843 = !DILocation(line: 1287, column: 19, scope: !1842)
!1844 = !DILocation(line: 0, scope: !1835)
!1845 = !DILocation(line: 1289, column: 1, scope: !1829)
!1846 = distinct !DISubprogram(name: "RCC_AHB2PeriphResetCmd", scope: !3, file: !3, line: 1304, type: !1743, scopeLine: 1305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1847)
!1847 = !{!1848, !1849}
!1848 = !DILocalVariable(name: "RCC_AHB2Periph", arg: 1, scope: !1846, file: !3, line: 1304, type: !20)
!1849 = !DILocalVariable(name: "NewState", arg: 2, scope: !1846, file: !3, line: 1304, type: !856)
!1850 = !DILocation(line: 0, scope: !1846)
!1851 = !DILocation(line: 1310, column: 16, scope: !1852)
!1852 = distinct !DILexicalBlock(scope: !1846, file: !3, line: 1310, column: 7)
!1853 = !DILocation(line: 1310, column: 7, scope: !1846)
!1854 = !DILocation(line: 1312, column: 19, scope: !1855)
!1855 = distinct !DILexicalBlock(scope: !1852, file: !3, line: 1311, column: 3)
!1856 = !{!1419, !840, i64 20}
!1857 = !DILocation(line: 1313, column: 3, scope: !1855)
!1858 = !DILocation(line: 1316, column: 22, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1852, file: !3, line: 1315, column: 3)
!1860 = !DILocation(line: 1316, column: 19, scope: !1859)
!1861 = !DILocation(line: 0, scope: !1852)
!1862 = !DILocation(line: 1318, column: 1, scope: !1846)
!1863 = distinct !DISubprogram(name: "RCC_AHB3PeriphResetCmd", scope: !3, file: !3, line: 1328, type: !1743, scopeLine: 1329, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1864)
!1864 = !{!1865, !1866}
!1865 = !DILocalVariable(name: "RCC_AHB3Periph", arg: 1, scope: !1863, file: !3, line: 1328, type: !20)
!1866 = !DILocalVariable(name: "NewState", arg: 2, scope: !1863, file: !3, line: 1328, type: !856)
!1867 = !DILocation(line: 0, scope: !1863)
!1868 = !DILocation(line: 1334, column: 16, scope: !1869)
!1869 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1334, column: 7)
!1870 = !DILocation(line: 1334, column: 7, scope: !1863)
!1871 = !DILocation(line: 1336, column: 19, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1869, file: !3, line: 1335, column: 3)
!1873 = !{!1419, !840, i64 24}
!1874 = !DILocation(line: 1337, column: 3, scope: !1872)
!1875 = !DILocation(line: 1340, column: 22, scope: !1876)
!1876 = distinct !DILexicalBlock(scope: !1869, file: !3, line: 1339, column: 3)
!1877 = !DILocation(line: 1340, column: 19, scope: !1876)
!1878 = !DILocation(line: 0, scope: !1869)
!1879 = !DILocation(line: 1342, column: 1, scope: !1863)
!1880 = distinct !DISubprogram(name: "RCC_APB1PeriphResetCmd", scope: !3, file: !3, line: 1375, type: !1743, scopeLine: 1376, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1881)
!1881 = !{!1882, !1883}
!1882 = !DILocalVariable(name: "RCC_APB1Periph", arg: 1, scope: !1880, file: !3, line: 1375, type: !20)
!1883 = !DILocalVariable(name: "NewState", arg: 2, scope: !1880, file: !3, line: 1375, type: !856)
!1884 = !DILocation(line: 0, scope: !1880)
!1885 = !DILocation(line: 1380, column: 16, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1880, file: !3, line: 1380, column: 7)
!1887 = !DILocation(line: 1380, column: 7, scope: !1880)
!1888 = !DILocation(line: 1382, column: 19, scope: !1889)
!1889 = distinct !DILexicalBlock(scope: !1886, file: !3, line: 1381, column: 3)
!1890 = !{!1419, !840, i64 32}
!1891 = !DILocation(line: 1383, column: 3, scope: !1889)
!1892 = !DILocation(line: 1386, column: 22, scope: !1893)
!1893 = distinct !DILexicalBlock(scope: !1886, file: !3, line: 1385, column: 3)
!1894 = !DILocation(line: 1386, column: 19, scope: !1893)
!1895 = !DILocation(line: 0, scope: !1886)
!1896 = !DILocation(line: 1388, column: 1, scope: !1880)
!1897 = distinct !DISubprogram(name: "RCC_APB2PeriphResetCmd", scope: !3, file: !3, line: 1411, type: !1743, scopeLine: 1412, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1898)
!1898 = !{!1899, !1900}
!1899 = !DILocalVariable(name: "RCC_APB2Periph", arg: 1, scope: !1897, file: !3, line: 1411, type: !20)
!1900 = !DILocalVariable(name: "NewState", arg: 2, scope: !1897, file: !3, line: 1411, type: !856)
!1901 = !DILocation(line: 0, scope: !1897)
!1902 = !DILocation(line: 1416, column: 16, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 1416, column: 7)
!1904 = !DILocation(line: 1416, column: 7, scope: !1897)
!1905 = !DILocation(line: 1418, column: 19, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1903, file: !3, line: 1417, column: 3)
!1907 = !{!1419, !840, i64 36}
!1908 = !DILocation(line: 1419, column: 3, scope: !1906)
!1909 = !DILocation(line: 1422, column: 22, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1903, file: !3, line: 1421, column: 3)
!1911 = !DILocation(line: 1422, column: 19, scope: !1910)
!1912 = !DILocation(line: 0, scope: !1903)
!1913 = !DILocation(line: 1424, column: 1, scope: !1897)
!1914 = distinct !DISubprogram(name: "RCC_AHB1PeriphClockLPModeCmd", scope: !3, file: !3, line: 1457, type: !1743, scopeLine: 1458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1915)
!1915 = !{!1916, !1917}
!1916 = !DILocalVariable(name: "RCC_AHB1Periph", arg: 1, scope: !1914, file: !3, line: 1457, type: !20)
!1917 = !DILocalVariable(name: "NewState", arg: 2, scope: !1914, file: !3, line: 1457, type: !856)
!1918 = !DILocation(line: 0, scope: !1914)
!1919 = !DILocation(line: 1462, column: 16, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1914, file: !3, line: 1462, column: 7)
!1921 = !DILocation(line: 1462, column: 7, scope: !1914)
!1922 = !DILocation(line: 1464, column: 20, scope: !1923)
!1923 = distinct !DILexicalBlock(scope: !1920, file: !3, line: 1463, column: 3)
!1924 = !{!1419, !840, i64 80}
!1925 = !DILocation(line: 1465, column: 3, scope: !1923)
!1926 = !DILocation(line: 1468, column: 23, scope: !1927)
!1927 = distinct !DILexicalBlock(scope: !1920, file: !3, line: 1467, column: 3)
!1928 = !DILocation(line: 1468, column: 20, scope: !1927)
!1929 = !DILocation(line: 0, scope: !1920)
!1930 = !DILocation(line: 1470, column: 1, scope: !1914)
!1931 = distinct !DISubprogram(name: "RCC_AHB2PeriphClockLPModeCmd", scope: !3, file: !3, line: 1489, type: !1743, scopeLine: 1490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1932)
!1932 = !{!1933, !1934}
!1933 = !DILocalVariable(name: "RCC_AHB2Periph", arg: 1, scope: !1931, file: !3, line: 1489, type: !20)
!1934 = !DILocalVariable(name: "NewState", arg: 2, scope: !1931, file: !3, line: 1489, type: !856)
!1935 = !DILocation(line: 0, scope: !1931)
!1936 = !DILocation(line: 1494, column: 16, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1931, file: !3, line: 1494, column: 7)
!1938 = !DILocation(line: 1494, column: 7, scope: !1931)
!1939 = !DILocation(line: 1496, column: 20, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1937, file: !3, line: 1495, column: 3)
!1941 = !{!1419, !840, i64 84}
!1942 = !DILocation(line: 1497, column: 3, scope: !1940)
!1943 = !DILocation(line: 1500, column: 23, scope: !1944)
!1944 = distinct !DILexicalBlock(scope: !1937, file: !3, line: 1499, column: 3)
!1945 = !DILocation(line: 1500, column: 20, scope: !1944)
!1946 = !DILocation(line: 0, scope: !1937)
!1947 = !DILocation(line: 1502, column: 1, scope: !1931)
!1948 = distinct !DISubprogram(name: "RCC_AHB3PeriphClockLPModeCmd", scope: !3, file: !3, line: 1516, type: !1743, scopeLine: 1517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1949)
!1949 = !{!1950, !1951}
!1950 = !DILocalVariable(name: "RCC_AHB3Periph", arg: 1, scope: !1948, file: !3, line: 1516, type: !20)
!1951 = !DILocalVariable(name: "NewState", arg: 2, scope: !1948, file: !3, line: 1516, type: !856)
!1952 = !DILocation(line: 0, scope: !1948)
!1953 = !DILocation(line: 1521, column: 16, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1948, file: !3, line: 1521, column: 7)
!1955 = !DILocation(line: 1521, column: 7, scope: !1948)
!1956 = !DILocation(line: 1523, column: 20, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 1522, column: 3)
!1958 = !{!1419, !840, i64 88}
!1959 = !DILocation(line: 1524, column: 3, scope: !1957)
!1960 = !DILocation(line: 1527, column: 23, scope: !1961)
!1961 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 1526, column: 3)
!1962 = !DILocation(line: 1527, column: 20, scope: !1961)
!1963 = !DILocation(line: 0, scope: !1954)
!1964 = !DILocation(line: 1529, column: 1, scope: !1948)
!1965 = distinct !DISubprogram(name: "RCC_APB1PeriphClockLPModeCmd", scope: !3, file: !3, line: 1566, type: !1743, scopeLine: 1567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1966)
!1966 = !{!1967, !1968}
!1967 = !DILocalVariable(name: "RCC_APB1Periph", arg: 1, scope: !1965, file: !3, line: 1566, type: !20)
!1968 = !DILocalVariable(name: "NewState", arg: 2, scope: !1965, file: !3, line: 1566, type: !856)
!1969 = !DILocation(line: 0, scope: !1965)
!1970 = !DILocation(line: 1571, column: 16, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1965, file: !3, line: 1571, column: 7)
!1972 = !DILocation(line: 1571, column: 7, scope: !1965)
!1973 = !DILocation(line: 1573, column: 20, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1971, file: !3, line: 1572, column: 3)
!1975 = !{!1419, !840, i64 96}
!1976 = !DILocation(line: 1574, column: 3, scope: !1974)
!1977 = !DILocation(line: 1577, column: 23, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1971, file: !3, line: 1576, column: 3)
!1979 = !DILocation(line: 1577, column: 20, scope: !1978)
!1980 = !DILocation(line: 0, scope: !1971)
!1981 = !DILocation(line: 1579, column: 1, scope: !1965)
!1982 = distinct !DISubprogram(name: "RCC_APB2PeriphClockLPModeCmd", scope: !3, file: !3, line: 1606, type: !1743, scopeLine: 1607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1983)
!1983 = !{!1984, !1985}
!1984 = !DILocalVariable(name: "RCC_APB2Periph", arg: 1, scope: !1982, file: !3, line: 1606, type: !20)
!1985 = !DILocalVariable(name: "NewState", arg: 2, scope: !1982, file: !3, line: 1606, type: !856)
!1986 = !DILocation(line: 0, scope: !1982)
!1987 = !DILocation(line: 1611, column: 16, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1982, file: !3, line: 1611, column: 7)
!1989 = !DILocation(line: 1611, column: 7, scope: !1982)
!1990 = !DILocation(line: 1613, column: 20, scope: !1991)
!1991 = distinct !DILexicalBlock(scope: !1988, file: !3, line: 1612, column: 3)
!1992 = !{!1419, !840, i64 100}
!1993 = !DILocation(line: 1614, column: 3, scope: !1991)
!1994 = !DILocation(line: 1617, column: 23, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1988, file: !3, line: 1616, column: 3)
!1996 = !DILocation(line: 1617, column: 20, scope: !1995)
!1997 = !DILocation(line: 0, scope: !1988)
!1998 = !DILocation(line: 1619, column: 1, scope: !1982)
!1999 = distinct !DISubprogram(name: "RCC_ITConfig", scope: !3, file: !3, line: 1651, type: !909, scopeLine: 1652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!2000 = !{!2001, !2002}
!2001 = !DILocalVariable(name: "RCC_IT", arg: 1, scope: !1999, file: !3, line: 1651, type: !60)
!2002 = !DILocalVariable(name: "NewState", arg: 2, scope: !1999, file: !3, line: 1651, type: !856)
!2003 = !DILocation(line: 0, scope: !1999)
!2004 = !DILocation(line: 1656, column: 16, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !1999, file: !3, line: 1656, column: 7)
!2006 = !DILocation(line: 1656, column: 7, scope: !1999)
!2007 = !DILocation(line: 1659, column: 41, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !2005, file: !3, line: 1657, column: 3)
!2009 = !DILocation(line: 1660, column: 3, scope: !2008)
!2010 = !DILocation(line: 1664, column: 53, scope: !2011)
!2011 = distinct !DILexicalBlock(scope: !2005, file: !3, line: 1662, column: 3)
!2012 = !DILocation(line: 1664, column: 41, scope: !2011)
!2013 = !DILocation(line: 0, scope: !2005)
!2014 = !DILocation(line: 1666, column: 1, scope: !1999)
!2015 = distinct !DISubprogram(name: "RCC_ClearFlag", scope: !3, file: !3, line: 1732, type: !1415, scopeLine: 1733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !361)
!2016 = !DILocation(line: 1735, column: 12, scope: !2015)
!2017 = !{!1419, !840, i64 116}
!2018 = !DILocation(line: 1736, column: 1, scope: !2015)
!2019 = distinct !DISubprogram(name: "RCC_GetITStatus", scope: !3, file: !3, line: 1751, type: !2020, scopeLine: 1752, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2022)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!1359, !60}
!2022 = !{!2023, !2024}
!2023 = !DILocalVariable(name: "RCC_IT", arg: 1, scope: !2019, file: !3, line: 1751, type: !60)
!2024 = !DILocalVariable(name: "bitstatus", scope: !2019, file: !3, line: 1753, type: !1359)
!2025 = !DILocation(line: 0, scope: !2019)
!2026 = !DILocation(line: 1759, column: 13, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2019, file: !3, line: 1759, column: 7)
!2028 = !DILocation(line: 1759, column: 19, scope: !2027)
!2029 = !DILocation(line: 1759, column: 17, scope: !2027)
!2030 = !DILocation(line: 1759, column: 27, scope: !2027)
!2031 = !DILocation(line: 1768, column: 3, scope: !2019)
!2032 = distinct !DISubprogram(name: "RCC_ClearITPendingBit", scope: !3, file: !3, line: 1784, type: !1430, scopeLine: 1785, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2033)
!2033 = !{!2034}
!2034 = !DILocalVariable(name: "RCC_IT", arg: 1, scope: !2032, file: !3, line: 1784, type: !60)
!2035 = !DILocation(line: 0, scope: !2032)
!2036 = !DILocation(line: 1791, column: 39, scope: !2032)
!2037 = !DILocation(line: 1792, column: 1, scope: !2032)
!2038 = distinct !DISubprogram(name: "ADC_DeInit", scope: !177, file: !177, line: 206, type: !1415, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !361)
!2039 = !DILocation(line: 209, column: 3, scope: !2038)
!2040 = !DILocation(line: 212, column: 3, scope: !2038)
!2041 = !DILocation(line: 213, column: 1, scope: !2038)
!2042 = distinct !DISubprogram(name: "ADC_Init", scope: !177, file: !177, line: 228, type: !2043, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2081)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{null, !2045, !2069}
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADC_TypeDef", file: !6, line: 326, baseType: !2047)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 304, size: 640, elements: !2048)
!2048 = !{!2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2047, file: !6, line: 306, baseType: !27, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !2047, file: !6, line: 307, baseType: !27, size: 32, offset: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !2047, file: !6, line: 308, baseType: !27, size: 32, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "SMPR1", scope: !2047, file: !6, line: 309, baseType: !27, size: 32, offset: 96)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "SMPR2", scope: !2047, file: !6, line: 310, baseType: !27, size: 32, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "JOFR1", scope: !2047, file: !6, line: 311, baseType: !27, size: 32, offset: 160)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "JOFR2", scope: !2047, file: !6, line: 312, baseType: !27, size: 32, offset: 192)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "JOFR3", scope: !2047, file: !6, line: 313, baseType: !27, size: 32, offset: 224)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "JOFR4", scope: !2047, file: !6, line: 314, baseType: !27, size: 32, offset: 256)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "HTR", scope: !2047, file: !6, line: 315, baseType: !27, size: 32, offset: 288)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "LTR", scope: !2047, file: !6, line: 316, baseType: !27, size: 32, offset: 320)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "SQR1", scope: !2047, file: !6, line: 317, baseType: !27, size: 32, offset: 352)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "SQR2", scope: !2047, file: !6, line: 318, baseType: !27, size: 32, offset: 384)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "SQR3", scope: !2047, file: !6, line: 319, baseType: !27, size: 32, offset: 416)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "JSQR", scope: !2047, file: !6, line: 320, baseType: !27, size: 32, offset: 448)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "JDR1", scope: !2047, file: !6, line: 321, baseType: !27, size: 32, offset: 480)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "JDR2", scope: !2047, file: !6, line: 322, baseType: !27, size: 32, offset: 512)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "JDR3", scope: !2047, file: !6, line: 323, baseType: !27, size: 32, offset: 544)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "JDR4", scope: !2047, file: !6, line: 324, baseType: !27, size: 32, offset: 576)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !2047, file: !6, line: 325, baseType: !27, size: 32, offset: 608)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADC_InitTypeDef", file: !2071, line: 73, baseType: !2072)
!2071 = !DIFile(filename: "inc/peripherals/stm32f4xx_adc.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2071, line: 47, size: 224, elements: !2073)
!2073 = !{!2074, !2075, !2076, !2077, !2078, !2079, !2080}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_Resolution", scope: !2072, file: !2071, line: 49, baseType: !20, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_ScanConvMode", scope: !2072, file: !2071, line: 51, baseType: !856, size: 32, offset: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_ContinuousConvMode", scope: !2072, file: !2071, line: 55, baseType: !856, size: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_ExternalTrigConvEdge", scope: !2072, file: !2071, line: 58, baseType: !20, size: 32, offset: 96)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_ExternalTrigConv", scope: !2072, file: !2071, line: 62, baseType: !20, size: 32, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_DataAlign", scope: !2072, file: !2071, line: 66, baseType: !20, size: 32, offset: 160)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_NbrOfConversion", scope: !2072, file: !2071, line: 69, baseType: !60, size: 8, offset: 192)
!2081 = !{!2082, !2083, !2084, !2085}
!2082 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2042, file: !177, line: 228, type: !2045)
!2083 = !DILocalVariable(name: "ADC_InitStruct", arg: 2, scope: !2042, file: !177, line: 228, type: !2069)
!2084 = !DILocalVariable(name: "tmpreg1", scope: !2042, file: !177, line: 230, type: !20)
!2085 = !DILocalVariable(name: "tmpreg2", scope: !2042, file: !177, line: 231, type: !60)
!2086 = !DILocation(line: 0, scope: !2042)
!2087 = !DILocation(line: 244, column: 19, scope: !2042)
!2088 = !{!2089, !840, i64 4}
!2089 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !840, i64 32, !840, i64 36, !840, i64 40, !840, i64 44, !840, i64 48, !840, i64 52, !840, i64 56, !840, i64 60, !840, i64 64, !840, i64 68, !840, i64 72, !840, i64 76}
!2090 = !DILocation(line: 247, column: 11, scope: !2042)
!2091 = !DILocation(line: 252, column: 52, scope: !2042)
!2092 = !{!2093, !841, i64 4}
!2093 = !{!"", !840, i64 0, !841, i64 4, !841, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !841, i64 24}
!2094 = !DILocation(line: 252, column: 69, scope: !2042)
!2095 = !DILocation(line: 253, column: 52, scope: !2042)
!2096 = !{!2093, !840, i64 0}
!2097 = !DILocation(line: 252, column: 75, scope: !2042)
!2098 = !DILocation(line: 252, column: 11, scope: !2042)
!2099 = !DILocation(line: 255, column: 13, scope: !2042)
!2100 = !DILocation(line: 258, column: 19, scope: !2042)
!2101 = !{!2089, !840, i64 8}
!2102 = !DILocation(line: 261, column: 11, scope: !2042)
!2103 = !DILocation(line: 269, column: 41, scope: !2042)
!2104 = !{!2093, !840, i64 20}
!2105 = !DILocation(line: 270, column: 41, scope: !2042)
!2106 = !{!2093, !840, i64 16}
!2107 = !DILocation(line: 271, column: 41, scope: !2042)
!2108 = !{!2093, !840, i64 12}
!2109 = !DILocation(line: 272, column: 52, scope: !2042)
!2110 = !{!2093, !841, i64 8}
!2111 = !DILocation(line: 272, column: 75, scope: !2042)
!2112 = !DILocation(line: 269, column: 55, scope: !2042)
!2113 = !DILocation(line: 270, column: 62, scope: !2042)
!2114 = !DILocation(line: 271, column: 66, scope: !2042)
!2115 = !DILocation(line: 269, column: 11, scope: !2042)
!2116 = !DILocation(line: 275, column: 13, scope: !2042)
!2117 = !DILocation(line: 278, column: 19, scope: !2042)
!2118 = !{!2089, !840, i64 44}
!2119 = !DILocation(line: 281, column: 11, scope: !2042)
!2120 = !DILocation(line: 285, column: 40, scope: !2042)
!2121 = !{!2093, !841, i64 24}
!2122 = !DILocation(line: 285, column: 60, scope: !2042)
!2123 = !DILocation(line: 285, column: 14, scope: !2042)
!2124 = !DILocation(line: 286, column: 33, scope: !2042)
!2125 = !DILocation(line: 286, column: 11, scope: !2042)
!2126 = !DILocation(line: 289, column: 14, scope: !2042)
!2127 = !DILocation(line: 290, column: 1, scope: !2042)
!2128 = distinct !DISubprogram(name: "ADC_StructInit", scope: !177, file: !177, line: 303, type: !2129, scopeLine: 304, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2131)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{null, !2069}
!2131 = !{!2132}
!2132 = !DILocalVariable(name: "ADC_InitStruct", arg: 1, scope: !2128, file: !177, line: 303, type: !2069)
!2133 = !DILocation(line: 0, scope: !2128)
!2134 = !DILocation(line: 306, column: 19, scope: !2128)
!2135 = !DILocation(line: 306, column: 34, scope: !2128)
!2136 = !DILocation(line: 309, column: 19, scope: !2128)
!2137 = !DILocation(line: 309, column: 36, scope: !2128)
!2138 = !DILocation(line: 312, column: 19, scope: !2128)
!2139 = !DILocation(line: 312, column: 42, scope: !2128)
!2140 = !DILocation(line: 315, column: 19, scope: !2128)
!2141 = !DILocation(line: 315, column: 44, scope: !2128)
!2142 = !DILocation(line: 318, column: 19, scope: !2128)
!2143 = !DILocation(line: 318, column: 40, scope: !2128)
!2144 = !DILocation(line: 321, column: 19, scope: !2128)
!2145 = !DILocation(line: 321, column: 33, scope: !2128)
!2146 = !DILocation(line: 324, column: 19, scope: !2128)
!2147 = !DILocation(line: 324, column: 39, scope: !2128)
!2148 = !DILocation(line: 325, column: 1, scope: !2128)
!2149 = distinct !DISubprogram(name: "ADC_CommonInit", scope: !177, file: !177, line: 334, type: !2150, scopeLine: 335, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2160)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{null, !2152}
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "ADC_CommonInitTypeDef", file: !2071, line: 94, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2071, line: 78, size: 128, elements: !2155)
!2155 = !{!2156, !2157, !2158, !2159}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_Mode", scope: !2154, file: !2071, line: 80, baseType: !20, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_Prescaler", scope: !2154, file: !2071, line: 83, baseType: !20, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_DMAAccessMode", scope: !2154, file: !2071, line: 86, baseType: !20, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_TwoSamplingDelay", scope: !2154, file: !2071, line: 90, baseType: !20, size: 32, offset: 96)
!2160 = !{!2161, !2162}
!2161 = !DILocalVariable(name: "ADC_CommonInitStruct", arg: 1, scope: !2149, file: !177, line: 334, type: !2152)
!2162 = !DILocalVariable(name: "tmpreg1", scope: !2149, file: !177, line: 336, type: !20)
!2163 = !DILocation(line: 0, scope: !2149)
!2164 = !DILocation(line: 344, column: 18, scope: !2149)
!2165 = !{!2166, !840, i64 4}
!2166 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8}
!2167 = !DILocation(line: 347, column: 11, scope: !2149)
!2168 = !DILocation(line: 355, column: 47, scope: !2149)
!2169 = !DILocation(line: 356, column: 47, scope: !2149)
!2170 = !DILocation(line: 357, column: 47, scope: !2149)
!2171 = !DILocation(line: 358, column: 47, scope: !2149)
!2172 = !DILocation(line: 355, column: 56, scope: !2149)
!2173 = !DILocation(line: 356, column: 61, scope: !2149)
!2174 = !DILocation(line: 357, column: 65, scope: !2149)
!2175 = !DILocation(line: 355, column: 11, scope: !2149)
!2176 = !DILocation(line: 361, column: 12, scope: !2149)
!2177 = !DILocation(line: 362, column: 1, scope: !2149)
!2178 = distinct !DISubprogram(name: "ADC_CommonStructInit", scope: !177, file: !177, line: 370, type: !2150, scopeLine: 371, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2179)
!2179 = !{!2180}
!2180 = !DILocalVariable(name: "ADC_CommonInitStruct", arg: 1, scope: !2178, file: !177, line: 370, type: !2152)
!2181 = !DILocation(line: 0, scope: !2178)
!2182 = !DILocation(line: 373, column: 25, scope: !2178)
!2183 = !DILocation(line: 373, column: 34, scope: !2178)
!2184 = !DILocation(line: 376, column: 25, scope: !2178)
!2185 = !DILocation(line: 376, column: 39, scope: !2178)
!2186 = !DILocation(line: 379, column: 25, scope: !2178)
!2187 = !DILocation(line: 379, column: 43, scope: !2178)
!2188 = !DILocation(line: 382, column: 25, scope: !2178)
!2189 = !DILocation(line: 382, column: 46, scope: !2178)
!2190 = !DILocation(line: 383, column: 1, scope: !2178)
!2191 = distinct !DISubprogram(name: "ADC_Cmd", scope: !177, file: !177, line: 392, type: !2192, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2194)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{null, !2045, !856}
!2194 = !{!2195, !2196}
!2195 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2191, file: !177, line: 392, type: !2045)
!2196 = !DILocalVariable(name: "NewState", arg: 2, scope: !2191, file: !177, line: 392, type: !856)
!2197 = !DILocation(line: 0, scope: !2191)
!2198 = !DILocation(line: 397, column: 16, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2191, file: !177, line: 397, column: 7)
!2200 = !DILocation(line: 0, scope: !2199)
!2201 = !DILocation(line: 397, column: 7, scope: !2191)
!2202 = !DILocation(line: 407, column: 1, scope: !2191)
!2203 = distinct !DISubprogram(name: "ADC_AnalogWatchdogCmd", scope: !177, file: !177, line: 450, type: !2204, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2206)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{null, !2045, !20}
!2206 = !{!2207, !2208, !2209}
!2207 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2203, file: !177, line: 450, type: !2045)
!2208 = !DILocalVariable(name: "ADC_AnalogWatchdog", arg: 2, scope: !2203, file: !177, line: 450, type: !20)
!2209 = !DILocalVariable(name: "tmpreg", scope: !2203, file: !177, line: 452, type: !20)
!2210 = !DILocation(line: 0, scope: !2203)
!2211 = !DILocation(line: 458, column: 18, scope: !2203)
!2212 = !DILocation(line: 461, column: 10, scope: !2203)
!2213 = !DILocation(line: 464, column: 10, scope: !2203)
!2214 = !DILocation(line: 467, column: 13, scope: !2203)
!2215 = !DILocation(line: 468, column: 1, scope: !2203)
!2216 = distinct !DISubprogram(name: "ADC_AnalogWatchdogThresholdsConfig", scope: !177, file: !177, line: 479, type: !2217, scopeLine: 481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2219)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{null, !2045, !64, !64}
!2219 = !{!2220, !2221, !2222}
!2220 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2216, file: !177, line: 479, type: !2045)
!2221 = !DILocalVariable(name: "HighThreshold", arg: 2, scope: !2216, file: !177, line: 479, type: !64)
!2222 = !DILocalVariable(name: "LowThreshold", arg: 3, scope: !2216, file: !177, line: 480, type: !64)
!2223 = !DILocation(line: 0, scope: !2216)
!2224 = !DILocation(line: 488, column: 15, scope: !2216)
!2225 = !DILocation(line: 488, column: 9, scope: !2216)
!2226 = !DILocation(line: 488, column: 13, scope: !2216)
!2227 = !{!2089, !840, i64 36}
!2228 = !DILocation(line: 491, column: 15, scope: !2216)
!2229 = !DILocation(line: 491, column: 9, scope: !2216)
!2230 = !DILocation(line: 491, column: 13, scope: !2216)
!2231 = !{!2089, !840, i64 40}
!2232 = !DILocation(line: 492, column: 1, scope: !2216)
!2233 = distinct !DISubprogram(name: "ADC_AnalogWatchdogSingleChannelConfig", scope: !177, file: !177, line: 520, type: !2234, scopeLine: 521, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2236)
!2234 = !DISubroutineType(types: !2235)
!2235 = !{null, !2045, !60}
!2236 = !{!2237, !2238, !2239}
!2237 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2233, file: !177, line: 520, type: !2045)
!2238 = !DILocalVariable(name: "ADC_Channel", arg: 2, scope: !2233, file: !177, line: 520, type: !60)
!2239 = !DILocalVariable(name: "tmpreg", scope: !2233, file: !177, line: 522, type: !20)
!2240 = !DILocation(line: 0, scope: !2233)
!2241 = !DILocation(line: 528, column: 18, scope: !2233)
!2242 = !DILocation(line: 531, column: 10, scope: !2233)
!2243 = !DILocation(line: 534, column: 13, scope: !2233)
!2244 = !DILocation(line: 534, column: 10, scope: !2233)
!2245 = !DILocation(line: 537, column: 13, scope: !2233)
!2246 = !DILocation(line: 538, column: 1, scope: !2233)
!2247 = distinct !DISubprogram(name: "ADC_TempSensorVrefintCmd", scope: !177, file: !177, line: 585, type: !1502, scopeLine: 586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2248)
!2248 = !{!2249}
!2249 = !DILocalVariable(name: "NewState", arg: 1, scope: !2247, file: !177, line: 585, type: !856)
!2250 = !DILocation(line: 0, scope: !2247)
!2251 = !DILocation(line: 589, column: 16, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2247, file: !177, line: 589, column: 7)
!2253 = !DILocation(line: 0, scope: !2252)
!2254 = !DILocation(line: 589, column: 7, scope: !2247)
!2255 = !DILocation(line: 599, column: 1, scope: !2247)
!2256 = distinct !DISubprogram(name: "ADC_VBATCmd", scope: !177, file: !177, line: 607, type: !1502, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2257)
!2257 = !{!2258}
!2258 = !DILocalVariable(name: "NewState", arg: 1, scope: !2256, file: !177, line: 607, type: !856)
!2259 = !DILocation(line: 0, scope: !2256)
!2260 = !DILocation(line: 611, column: 16, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2256, file: !177, line: 611, column: 7)
!2262 = !DILocation(line: 0, scope: !2261)
!2263 = !DILocation(line: 611, column: 7, scope: !2256)
!2264 = !DILocation(line: 621, column: 1, scope: !2256)
!2265 = distinct !DISubprogram(name: "ADC_RegularChannelConfig", scope: !177, file: !177, line: 708, type: !2266, scopeLine: 709, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2268)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{null, !2045, !60, !60, !60}
!2268 = !{!2269, !2270, !2271, !2272, !2273, !2274}
!2269 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2265, file: !177, line: 708, type: !2045)
!2270 = !DILocalVariable(name: "ADC_Channel", arg: 2, scope: !2265, file: !177, line: 708, type: !60)
!2271 = !DILocalVariable(name: "Rank", arg: 3, scope: !2265, file: !177, line: 708, type: !60)
!2272 = !DILocalVariable(name: "ADC_SampleTime", arg: 4, scope: !2265, file: !177, line: 708, type: !60)
!2273 = !DILocalVariable(name: "tmpreg1", scope: !2265, file: !177, line: 710, type: !20)
!2274 = !DILocalVariable(name: "tmpreg2", scope: !2265, file: !177, line: 710, type: !20)
!2275 = !DILocation(line: 0, scope: !2265)
!2276 = !DILocation(line: 718, column: 7, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2265, file: !177, line: 718, column: 7)
!2278 = !DILocation(line: 718, column: 19, scope: !2277)
!2279 = !DILocation(line: 718, column: 7, scope: !2265)
!2280 = !DILocation(line: 0, scope: !2277)
!2281 = !DILocation(line: 759, column: 12, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2265, file: !177, line: 759, column: 7)
!2283 = !DILocation(line: 759, column: 7, scope: !2265)
!2284 = !DILocation(line: 762, column: 21, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2282, file: !177, line: 760, column: 3)
!2286 = !DILocation(line: 778, column: 3, scope: !2285)
!2287 = !DILocation(line: 780, column: 17, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2282, file: !177, line: 780, column: 12)
!2289 = !DILocation(line: 780, column: 12, scope: !2282)
!2290 = !DILocation(line: 783, column: 21, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2288, file: !177, line: 781, column: 3)
!2292 = !DILocation(line: 799, column: 3, scope: !2291)
!2293 = !DILocation(line: 804, column: 21, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2288, file: !177, line: 802, column: 3)
!2295 = !DILocation(line: 759, column: 7, scope: !2282)
!2296 = !DILocation(line: 0, scope: !2282)
!2297 = !DILocation(line: 821, column: 1, scope: !2265)
!2298 = distinct !DISubprogram(name: "ADC_SoftwareStartConv", scope: !177, file: !177, line: 828, type: !2299, scopeLine: 829, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2301)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{null, !2045}
!2301 = !{!2302}
!2302 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2298, file: !177, line: 828, type: !2045)
!2303 = !DILocation(line: 0, scope: !2298)
!2304 = !DILocation(line: 834, column: 9, scope: !2298)
!2305 = !DILocation(line: 834, column: 13, scope: !2298)
!2306 = !DILocation(line: 835, column: 1, scope: !2298)
!2307 = distinct !DISubprogram(name: "ADC_GetSoftwareStartConvStatus", scope: !177, file: !177, line: 842, type: !2308, scopeLine: 843, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2310)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{!1276, !2045}
!2310 = !{!2311, !2312}
!2311 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2307, file: !177, line: 842, type: !2045)
!2312 = !DILocalVariable(name: "bitstatus", scope: !2307, file: !177, line: 844, type: !1276)
!2313 = !DILocation(line: 0, scope: !2307)
!2314 = !DILocation(line: 849, column: 14, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2307, file: !177, line: 849, column: 7)
!2316 = !DILocation(line: 861, column: 3, scope: !2307)
!2317 = distinct !DISubprogram(name: "ADC_EOCOnEachRegularChannelCmd", scope: !177, file: !177, line: 872, type: !2192, scopeLine: 873, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2318)
!2318 = !{!2319, !2320}
!2319 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2317, file: !177, line: 872, type: !2045)
!2320 = !DILocalVariable(name: "NewState", arg: 2, scope: !2317, file: !177, line: 872, type: !856)
!2321 = !DILocation(line: 0, scope: !2317)
!2322 = !DILocation(line: 878, column: 16, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2317, file: !177, line: 878, column: 7)
!2324 = !DILocation(line: 0, scope: !2323)
!2325 = !DILocation(line: 878, column: 7, scope: !2317)
!2326 = !DILocation(line: 888, column: 1, scope: !2317)
!2327 = distinct !DISubprogram(name: "ADC_ContinuousModeCmd", scope: !177, file: !177, line: 897, type: !2192, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2328)
!2328 = !{!2329, !2330}
!2329 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2327, file: !177, line: 897, type: !2045)
!2330 = !DILocalVariable(name: "NewState", arg: 2, scope: !2327, file: !177, line: 897, type: !856)
!2331 = !DILocation(line: 0, scope: !2327)
!2332 = !DILocation(line: 903, column: 16, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2327, file: !177, line: 903, column: 7)
!2334 = !DILocation(line: 0, scope: !2333)
!2335 = !DILocation(line: 903, column: 7, scope: !2327)
!2336 = !DILocation(line: 913, column: 1, scope: !2327)
!2337 = distinct !DISubprogram(name: "ADC_DiscModeChannelCountConfig", scope: !177, file: !177, line: 923, type: !2234, scopeLine: 924, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2338)
!2338 = !{!2339, !2340, !2341, !2342}
!2339 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2337, file: !177, line: 923, type: !2045)
!2340 = !DILocalVariable(name: "Number", arg: 2, scope: !2337, file: !177, line: 923, type: !60)
!2341 = !DILocalVariable(name: "tmpreg1", scope: !2337, file: !177, line: 925, type: !20)
!2342 = !DILocalVariable(name: "tmpreg2", scope: !2337, file: !177, line: 926, type: !20)
!2343 = !DILocation(line: 0, scope: !2337)
!2344 = !DILocation(line: 933, column: 19, scope: !2337)
!2345 = !DILocation(line: 936, column: 11, scope: !2337)
!2346 = !DILocation(line: 939, column: 13, scope: !2337)
!2347 = !DILocation(line: 940, column: 22, scope: !2337)
!2348 = !DILocation(line: 940, column: 11, scope: !2337)
!2349 = !DILocation(line: 943, column: 13, scope: !2337)
!2350 = !DILocation(line: 944, column: 1, scope: !2337)
!2351 = distinct !DISubprogram(name: "ADC_DiscModeCmd", scope: !177, file: !177, line: 955, type: !2192, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2352)
!2352 = !{!2353, !2354}
!2353 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2351, file: !177, line: 955, type: !2045)
!2354 = !DILocalVariable(name: "NewState", arg: 2, scope: !2351, file: !177, line: 955, type: !856)
!2355 = !DILocation(line: 0, scope: !2351)
!2356 = !DILocation(line: 961, column: 16, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2351, file: !177, line: 961, column: 7)
!2358 = !DILocation(line: 0, scope: !2357)
!2359 = !DILocation(line: 961, column: 7, scope: !2351)
!2360 = !DILocation(line: 971, column: 1, scope: !2351)
!2361 = distinct !DISubprogram(name: "ADC_GetConversionValue", scope: !177, file: !177, line: 978, type: !2362, scopeLine: 979, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2364)
!2362 = !DISubroutineType(types: !2363)
!2363 = !{!64, !2045}
!2364 = !{!2365}
!2365 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2361, file: !177, line: 978, type: !2045)
!2366 = !DILocation(line: 0, scope: !2361)
!2367 = !DILocation(line: 984, column: 27, scope: !2361)
!2368 = !{!2089, !840, i64 76}
!2369 = !DILocation(line: 984, column: 10, scope: !2361)
!2370 = !DILocation(line: 984, column: 3, scope: !2361)
!2371 = distinct !DISubprogram(name: "ADC_GetMultiModeConversionValue", scope: !177, file: !177, line: 999, type: !2372, scopeLine: 1000, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !361)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!20}
!2374 = !DILocation(line: 1002, column: 11, scope: !2371)
!2375 = !DILocation(line: 1002, column: 3, scope: !2371)
!2376 = distinct !DISubprogram(name: "ADC_DMACmd", scope: !177, file: !177, line: 1048, type: !2192, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2377)
!2377 = !{!2378, !2379}
!2378 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2376, file: !177, line: 1048, type: !2045)
!2379 = !DILocalVariable(name: "NewState", arg: 2, scope: !2376, file: !177, line: 1048, type: !856)
!2380 = !DILocation(line: 0, scope: !2376)
!2381 = !DILocation(line: 1053, column: 16, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2376, file: !177, line: 1053, column: 7)
!2383 = !DILocation(line: 0, scope: !2382)
!2384 = !DILocation(line: 1053, column: 7, scope: !2376)
!2385 = !DILocation(line: 1063, column: 1, scope: !2376)
!2386 = distinct !DISubprogram(name: "ADC_DMARequestAfterLastTransferCmd", scope: !177, file: !177, line: 1072, type: !2192, scopeLine: 1073, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2387)
!2387 = !{!2388, !2389}
!2388 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2386, file: !177, line: 1072, type: !2045)
!2389 = !DILocalVariable(name: "NewState", arg: 2, scope: !2386, file: !177, line: 1072, type: !856)
!2390 = !DILocation(line: 0, scope: !2386)
!2391 = !DILocation(line: 1077, column: 16, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2386, file: !177, line: 1077, column: 7)
!2393 = !DILocation(line: 0, scope: !2392)
!2394 = !DILocation(line: 1077, column: 7, scope: !2386)
!2395 = !DILocation(line: 1087, column: 1, scope: !2386)
!2396 = distinct !DISubprogram(name: "ADC_MultiModeDMARequestAfterLastTransferCmd", scope: !177, file: !177, line: 1099, type: !1502, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2397)
!2397 = !{!2398}
!2398 = !DILocalVariable(name: "NewState", arg: 1, scope: !2396, file: !177, line: 1099, type: !856)
!2399 = !DILocation(line: 0, scope: !2396)
!2400 = !DILocation(line: 1103, column: 16, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2396, file: !177, line: 1103, column: 7)
!2402 = !DILocation(line: 0, scope: !2401)
!2403 = !DILocation(line: 1103, column: 7, scope: !2396)
!2404 = !DILocation(line: 1113, column: 1, scope: !2396)
!2405 = distinct !DISubprogram(name: "ADC_InjectedChannelConfig", scope: !177, file: !177, line: 1186, type: !2266, scopeLine: 1187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2406)
!2406 = !{!2407, !2408, !2409, !2410, !2411, !2412, !2413}
!2407 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2405, file: !177, line: 1186, type: !2045)
!2408 = !DILocalVariable(name: "ADC_Channel", arg: 2, scope: !2405, file: !177, line: 1186, type: !60)
!2409 = !DILocalVariable(name: "Rank", arg: 3, scope: !2405, file: !177, line: 1186, type: !60)
!2410 = !DILocalVariable(name: "ADC_SampleTime", arg: 4, scope: !2405, file: !177, line: 1186, type: !60)
!2411 = !DILocalVariable(name: "tmpreg1", scope: !2405, file: !177, line: 1188, type: !20)
!2412 = !DILocalVariable(name: "tmpreg2", scope: !2405, file: !177, line: 1188, type: !20)
!2413 = !DILocalVariable(name: "tmpreg3", scope: !2405, file: !177, line: 1188, type: !20)
!2414 = !DILocation(line: 0, scope: !2405)
!2415 = !DILocation(line: 1195, column: 7, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2405, file: !177, line: 1195, column: 7)
!2417 = !DILocation(line: 1195, column: 19, scope: !2416)
!2418 = !DILocation(line: 1195, column: 7, scope: !2405)
!2419 = !DILocation(line: 0, scope: !2416)
!2420 = !DILocation(line: 1227, column: 19, scope: !2405)
!2421 = !{!2089, !840, i64 56}
!2422 = !DILocation(line: 1229, column: 37, scope: !2405)
!2423 = !DILocation(line: 1231, column: 45, scope: !2405)
!2424 = !DILocation(line: 1231, column: 50, scope: !2405)
!2425 = !DILocation(line: 1231, column: 66, scope: !2405)
!2426 = !DILocation(line: 1231, column: 55, scope: !2405)
!2427 = !DILocation(line: 1231, column: 34, scope: !2405)
!2428 = !DILocation(line: 1231, column: 32, scope: !2405)
!2429 = !DILocation(line: 1231, column: 26, scope: !2405)
!2430 = !DILocation(line: 1233, column: 14, scope: !2405)
!2431 = !DILocation(line: 1233, column: 11, scope: !2405)
!2432 = !DILocation(line: 1235, column: 35, scope: !2405)
!2433 = !DILocation(line: 1237, column: 11, scope: !2405)
!2434 = !DILocation(line: 1239, column: 14, scope: !2405)
!2435 = !DILocation(line: 1240, column: 1, scope: !2405)
!2436 = distinct !DISubprogram(name: "ADC_InjectedSequencerLengthConfig", scope: !177, file: !177, line: 1249, type: !2234, scopeLine: 1250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2437)
!2437 = !{!2438, !2439, !2440, !2441}
!2438 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2436, file: !177, line: 1249, type: !2045)
!2439 = !DILocalVariable(name: "Length", arg: 2, scope: !2436, file: !177, line: 1249, type: !60)
!2440 = !DILocalVariable(name: "tmpreg1", scope: !2436, file: !177, line: 1251, type: !20)
!2441 = !DILocalVariable(name: "tmpreg2", scope: !2436, file: !177, line: 1252, type: !20)
!2442 = !DILocation(line: 0, scope: !2436)
!2443 = !DILocation(line: 1258, column: 19, scope: !2436)
!2444 = !DILocation(line: 1261, column: 11, scope: !2436)
!2445 = !DILocation(line: 1264, column: 13, scope: !2436)
!2446 = !DILocation(line: 1265, column: 22, scope: !2436)
!2447 = !DILocation(line: 1265, column: 11, scope: !2436)
!2448 = !DILocation(line: 1268, column: 14, scope: !2436)
!2449 = !DILocation(line: 1269, column: 1, scope: !2436)
!2450 = distinct !DISubprogram(name: "ADC_SetInjectedOffset", scope: !177, file: !177, line: 1284, type: !2451, scopeLine: 1285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2453)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{null, !2045, !60, !64}
!2453 = !{!2454, !2455, !2456, !2457}
!2454 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2450, file: !177, line: 1284, type: !2045)
!2455 = !DILocalVariable(name: "ADC_InjectedChannel", arg: 2, scope: !2450, file: !177, line: 1284, type: !60)
!2456 = !DILocalVariable(name: "Offset", arg: 3, scope: !2450, file: !177, line: 1284, type: !64)
!2457 = !DILocalVariable(name: "tmp", scope: !2450, file: !177, line: 1286, type: !27)
!2458 = !DILocation(line: 0, scope: !2450)
!2459 = !DILocation(line: 1286, column: 5, scope: !2450)
!2460 = !DILocation(line: 1286, column: 19, scope: !2450)
!2461 = !DILocation(line: 1292, column: 9, scope: !2450)
!2462 = !DILocation(line: 1292, column: 7, scope: !2450)
!2463 = !DILocation(line: 1293, column: 10, scope: !2450)
!2464 = !DILocation(line: 1293, column: 7, scope: !2450)
!2465 = !DILocation(line: 1296, column: 27, scope: !2450)
!2466 = !DILocation(line: 1296, column: 21, scope: !2450)
!2467 = !DILocation(line: 1296, column: 3, scope: !2450)
!2468 = !DILocation(line: 1296, column: 25, scope: !2450)
!2469 = !DILocation(line: 1297, column: 1, scope: !2450)
!2470 = distinct !DISubprogram(name: "ADC_ExternalTrigInjectedConvConfig", scope: !177, file: !177, line: 1322, type: !2204, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2471)
!2471 = !{!2472, !2473, !2474}
!2472 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2470, file: !177, line: 1322, type: !2045)
!2473 = !DILocalVariable(name: "ADC_ExternalTrigInjecConv", arg: 2, scope: !2470, file: !177, line: 1322, type: !20)
!2474 = !DILocalVariable(name: "tmpreg", scope: !2470, file: !177, line: 1324, type: !20)
!2475 = !DILocation(line: 0, scope: !2470)
!2476 = !DILocation(line: 1330, column: 18, scope: !2470)
!2477 = !DILocation(line: 1333, column: 10, scope: !2470)
!2478 = !DILocation(line: 1336, column: 10, scope: !2470)
!2479 = !DILocation(line: 1339, column: 13, scope: !2470)
!2480 = !DILocation(line: 1340, column: 1, scope: !2470)
!2481 = distinct !DISubprogram(name: "ADC_ExternalTrigInjectedConvEdgeConfig", scope: !177, file: !177, line: 1356, type: !2204, scopeLine: 1357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2482)
!2482 = !{!2483, !2484, !2485}
!2483 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2481, file: !177, line: 1356, type: !2045)
!2484 = !DILocalVariable(name: "ADC_ExternalTrigInjecConvEdge", arg: 2, scope: !2481, file: !177, line: 1356, type: !20)
!2485 = !DILocalVariable(name: "tmpreg", scope: !2481, file: !177, line: 1358, type: !20)
!2486 = !DILocation(line: 0, scope: !2481)
!2487 = !DILocation(line: 1363, column: 18, scope: !2481)
!2488 = !DILocation(line: 1365, column: 10, scope: !2481)
!2489 = !DILocation(line: 1367, column: 10, scope: !2481)
!2490 = !DILocation(line: 1369, column: 13, scope: !2481)
!2491 = !DILocation(line: 1370, column: 1, scope: !2481)
!2492 = distinct !DISubprogram(name: "ADC_SoftwareStartInjectedConv", scope: !177, file: !177, line: 1377, type: !2299, scopeLine: 1378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2493)
!2493 = !{!2494}
!2494 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2492, file: !177, line: 1377, type: !2045)
!2495 = !DILocation(line: 0, scope: !2492)
!2496 = !DILocation(line: 1382, column: 9, scope: !2492)
!2497 = !DILocation(line: 1382, column: 13, scope: !2492)
!2498 = !DILocation(line: 1383, column: 1, scope: !2492)
!2499 = distinct !DISubprogram(name: "ADC_GetSoftwareStartInjectedConvCmdStatus", scope: !177, file: !177, line: 1390, type: !2308, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2500)
!2500 = !{!2501, !2502}
!2501 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2499, file: !177, line: 1390, type: !2045)
!2502 = !DILocalVariable(name: "bitstatus", scope: !2499, file: !177, line: 1392, type: !1276)
!2503 = !DILocation(line: 0, scope: !2499)
!2504 = !DILocation(line: 1397, column: 14, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2499, file: !177, line: 1397, column: 7)
!2506 = !DILocation(line: 1408, column: 3, scope: !2499)
!2507 = distinct !DISubprogram(name: "ADC_AutoInjectedConvCmd", scope: !177, file: !177, line: 1419, type: !2192, scopeLine: 1420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2508)
!2508 = !{!2509, !2510}
!2509 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2507, file: !177, line: 1419, type: !2045)
!2510 = !DILocalVariable(name: "NewState", arg: 2, scope: !2507, file: !177, line: 1419, type: !856)
!2511 = !DILocation(line: 0, scope: !2507)
!2512 = !DILocation(line: 1424, column: 16, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2507, file: !177, line: 1424, column: 7)
!2514 = !DILocation(line: 0, scope: !2513)
!2515 = !DILocation(line: 1424, column: 7, scope: !2507)
!2516 = !DILocation(line: 1434, column: 1, scope: !2507)
!2517 = distinct !DISubprogram(name: "ADC_InjectedDiscModeCmd", scope: !177, file: !177, line: 1445, type: !2192, scopeLine: 1446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2518)
!2518 = !{!2519, !2520}
!2519 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2517, file: !177, line: 1445, type: !2045)
!2520 = !DILocalVariable(name: "NewState", arg: 2, scope: !2517, file: !177, line: 1445, type: !856)
!2521 = !DILocation(line: 0, scope: !2517)
!2522 = !DILocation(line: 1450, column: 16, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2517, file: !177, line: 1450, column: 7)
!2524 = !DILocation(line: 0, scope: !2523)
!2525 = !DILocation(line: 1450, column: 7, scope: !2517)
!2526 = !DILocation(line: 1460, column: 1, scope: !2517)
!2527 = distinct !DISubprogram(name: "ADC_GetInjectedConversionValue", scope: !177, file: !177, line: 1473, type: !2528, scopeLine: 1474, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2530)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!64, !2045, !60}
!2530 = !{!2531, !2532, !2533}
!2531 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2527, file: !177, line: 1473, type: !2045)
!2532 = !DILocalVariable(name: "ADC_InjectedChannel", arg: 2, scope: !2527, file: !177, line: 1473, type: !60)
!2533 = !DILocalVariable(name: "tmp", scope: !2527, file: !177, line: 1475, type: !27)
!2534 = !DILocation(line: 0, scope: !2527)
!2535 = !DILocation(line: 1475, column: 3, scope: !2527)
!2536 = !DILocation(line: 1475, column: 17, scope: !2527)
!2537 = !DILocation(line: 1481, column: 9, scope: !2527)
!2538 = !DILocation(line: 1481, column: 7, scope: !2527)
!2539 = !DILocation(line: 1482, column: 10, scope: !2527)
!2540 = !DILocation(line: 1482, column: 30, scope: !2527)
!2541 = !DILocation(line: 1482, column: 7, scope: !2527)
!2542 = !DILocation(line: 1485, column: 41, scope: !2527)
!2543 = !DILocation(line: 1485, column: 23, scope: !2527)
!2544 = !DILocation(line: 1485, column: 22, scope: !2527)
!2545 = !DILocation(line: 1485, column: 10, scope: !2527)
!2546 = !DILocation(line: 1486, column: 1, scope: !2527)
!2547 = !DILocation(line: 1485, column: 3, scope: !2527)
!2548 = distinct !DISubprogram(name: "ADC_ITConfig", scope: !177, file: !177, line: 1581, type: !2549, scopeLine: 1582, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2551)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{null, !2045, !64, !856}
!2551 = !{!2552, !2553, !2554, !2555}
!2552 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2548, file: !177, line: 1581, type: !2045)
!2553 = !DILocalVariable(name: "ADC_IT", arg: 2, scope: !2548, file: !177, line: 1581, type: !64)
!2554 = !DILocalVariable(name: "NewState", arg: 3, scope: !2548, file: !177, line: 1581, type: !856)
!2555 = !DILocalVariable(name: "itmask", scope: !2548, file: !177, line: 1583, type: !20)
!2556 = !DILocation(line: 0, scope: !2548)
!2557 = !DILocation(line: 1590, column: 12, scope: !2548)
!2558 = !DILocation(line: 1591, column: 27, scope: !2548)
!2559 = !DILocation(line: 1593, column: 16, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2548, file: !177, line: 1593, column: 7)
!2561 = !DILocation(line: 1593, column: 7, scope: !2548)
!2562 = !DILocation(line: 1596, column: 11, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2560, file: !177, line: 1594, column: 3)
!2564 = !DILocation(line: 1596, column: 15, scope: !2563)
!2565 = !DILocation(line: 1597, column: 3, scope: !2563)
!2566 = !DILocation(line: 1601, column: 19, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2560, file: !177, line: 1599, column: 3)
!2568 = !DILocation(line: 1601, column: 11, scope: !2567)
!2569 = !DILocation(line: 1601, column: 15, scope: !2567)
!2570 = !DILocation(line: 1603, column: 1, scope: !2548)
!2571 = distinct !DISubprogram(name: "ADC_GetFlagStatus", scope: !177, file: !177, line: 1618, type: !2572, scopeLine: 1619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2574)
!2572 = !DISubroutineType(types: !2573)
!2573 = !{!1276, !2045, !60}
!2574 = !{!2575, !2576, !2577}
!2575 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2571, file: !177, line: 1618, type: !2045)
!2576 = !DILocalVariable(name: "ADC_FLAG", arg: 2, scope: !2571, file: !177, line: 1618, type: !60)
!2577 = !DILocalVariable(name: "bitstatus", scope: !2571, file: !177, line: 1620, type: !1276)
!2578 = !DILocation(line: 0, scope: !2571)
!2579 = !DILocation(line: 1626, column: 14, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2571, file: !177, line: 1626, column: 7)
!2581 = !{!2089, !840, i64 0}
!2582 = !DILocation(line: 1626, column: 19, scope: !2580)
!2583 = !DILocation(line: 1626, column: 17, scope: !2580)
!2584 = !DILocation(line: 1626, column: 29, scope: !2580)
!2585 = !DILocation(line: 1637, column: 3, scope: !2571)
!2586 = distinct !DISubprogram(name: "ADC_ClearFlag", scope: !177, file: !177, line: 1653, type: !2234, scopeLine: 1654, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2587)
!2587 = !{!2588, !2589}
!2588 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2586, file: !177, line: 1653, type: !2045)
!2589 = !DILocalVariable(name: "ADC_FLAG", arg: 2, scope: !2586, file: !177, line: 1653, type: !60)
!2590 = !DILocation(line: 0, scope: !2586)
!2591 = !DILocation(line: 1660, column: 15, scope: !2586)
!2592 = !DILocation(line: 1660, column: 14, scope: !2586)
!2593 = !DILocation(line: 1660, column: 9, scope: !2586)
!2594 = !DILocation(line: 1660, column: 12, scope: !2586)
!2595 = !DILocation(line: 1661, column: 1, scope: !2586)
!2596 = distinct !DISubprogram(name: "ADC_GetITStatus", scope: !177, file: !177, line: 1674, type: !2597, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2599)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!1359, !2045, !64}
!2599 = !{!2600, !2601, !2602, !2603, !2604}
!2600 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2596, file: !177, line: 1674, type: !2045)
!2601 = !DILocalVariable(name: "ADC_IT", arg: 2, scope: !2596, file: !177, line: 1674, type: !64)
!2602 = !DILocalVariable(name: "bitstatus", scope: !2596, file: !177, line: 1676, type: !1359)
!2603 = !DILocalVariable(name: "itmask", scope: !2596, file: !177, line: 1677, type: !20)
!2604 = !DILocalVariable(name: "enablestatus", scope: !2596, file: !177, line: 1677, type: !20)
!2605 = !DILocation(line: 0, scope: !2596)
!2606 = !DILocation(line: 1684, column: 19, scope: !2596)
!2607 = !DILocation(line: 1687, column: 25, scope: !2596)
!2608 = !DILocation(line: 1687, column: 50, scope: !2596)
!2609 = !DILocation(line: 1687, column: 47, scope: !2596)
!2610 = !DILocation(line: 1687, column: 29, scope: !2596)
!2611 = !DILocation(line: 1690, column: 15, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2596, file: !177, line: 1690, column: 7)
!2613 = !DILocation(line: 1690, column: 18, scope: !2612)
!2614 = !DILocation(line: 1690, column: 28, scope: !2612)
!2615 = !DILocation(line: 1690, column: 48, scope: !2612)
!2616 = !DILocation(line: 1701, column: 3, scope: !2596)
!2617 = distinct !DISubprogram(name: "ADC_ClearITPendingBit", scope: !177, file: !177, line: 1715, type: !2618, scopeLine: 1716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !176, retainedNodes: !2620)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{null, !2045, !64}
!2620 = !{!2621, !2622, !2623}
!2621 = !DILocalVariable(name: "ADCx", arg: 1, scope: !2617, file: !177, line: 1715, type: !2045)
!2622 = !DILocalVariable(name: "ADC_IT", arg: 2, scope: !2617, file: !177, line: 1715, type: !64)
!2623 = !DILocalVariable(name: "itmask", scope: !2617, file: !177, line: 1717, type: !60)
!2624 = !DILocation(line: 0, scope: !2617)
!2625 = !DILocation(line: 1722, column: 29, scope: !2617)
!2626 = !DILocation(line: 1722, column: 12, scope: !2617)
!2627 = !DILocation(line: 1724, column: 14, scope: !2617)
!2628 = !DILocation(line: 1724, column: 9, scope: !2617)
!2629 = !DILocation(line: 1724, column: 12, scope: !2617)
!2630 = !DILocation(line: 1725, column: 1, scope: !2617)
!2631 = distinct !DISubprogram(name: "EXTI_DeInit", scope: !187, file: !187, line: 103, type: !1415, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !186, retainedNodes: !361)
!2632 = !DILocation(line: 105, column: 13, scope: !2631)
!2633 = !DILocation(line: 106, column: 13, scope: !2631)
!2634 = !DILocation(line: 107, column: 14, scope: !2631)
!2635 = !DILocation(line: 108, column: 14, scope: !2631)
!2636 = !DILocation(line: 109, column: 12, scope: !2631)
!2637 = !DILocation(line: 110, column: 1, scope: !2631)
!2638 = distinct !DISubprogram(name: "EXTI_Init", scope: !187, file: !187, line: 119, type: !2639, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !186, retainedNodes: !2651)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{null, !2641}
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_InitTypeDef", file: !190, line: 87, baseType: !2643)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !190, line: 74, size: 128, elements: !2644)
!2644 = !{!2645, !2646, !2648, !2650}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "EXTI_Line", scope: !2643, file: !190, line: 76, baseType: !20, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "EXTI_Mode", scope: !2643, file: !190, line: 79, baseType: !2647, size: 32, offset: 32)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTIMode_TypeDef", file: !190, line: 52, baseType: !189)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "EXTI_Trigger", scope: !2643, file: !190, line: 82, baseType: !2649, size: 32, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTITrigger_TypeDef", file: !190, line: 65, baseType: !194)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "EXTI_LineCmd", scope: !2643, file: !190, line: 85, baseType: !856, size: 32, offset: 96)
!2651 = !{!2652, !2653}
!2652 = !DILocalVariable(name: "EXTI_InitStruct", arg: 1, scope: !2638, file: !187, line: 119, type: !2641)
!2653 = !DILocalVariable(name: "tmp", scope: !2638, file: !187, line: 121, type: !20)
!2654 = !DILocation(line: 0, scope: !2638)
!2655 = !DILocation(line: 131, column: 24, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2638, file: !187, line: 131, column: 7)
!2657 = !{!2658, !841, i64 12}
!2658 = !{!"", !840, i64 0, !841, i64 4, !841, i64 8, !841, i64 12}
!2659 = !DILocation(line: 131, column: 37, scope: !2656)
!2660 = !DILocation(line: 131, column: 7, scope: !2638)
!2661 = !DILocation(line: 134, column: 36, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2656, file: !187, line: 132, column: 3)
!2663 = !{!2658, !840, i64 0}
!2664 = !DILocation(line: 134, column: 18, scope: !2662)
!2665 = !DILocation(line: 134, column: 15, scope: !2662)
!2666 = !DILocation(line: 135, column: 15, scope: !2662)
!2667 = !DILocation(line: 137, column: 29, scope: !2662)
!2668 = !{!2658, !841, i64 4}
!2669 = !DILocation(line: 137, column: 9, scope: !2662)
!2670 = !DILocation(line: 139, column: 6, scope: !2662)
!2671 = !DILocation(line: 139, column: 28, scope: !2662)
!2672 = !DILocation(line: 142, column: 37, scope: !2662)
!2673 = !DILocation(line: 142, column: 19, scope: !2662)
!2674 = !DILocation(line: 142, column: 16, scope: !2662)
!2675 = !DILocation(line: 143, column: 16, scope: !2662)
!2676 = !DILocation(line: 146, column: 26, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2662, file: !187, line: 146, column: 9)
!2678 = !{!2658, !841, i64 8}
!2679 = !DILocation(line: 146, column: 39, scope: !2677)
!2680 = !DILocation(line: 146, column: 9, scope: !2662)
!2681 = !DILocation(line: 149, column: 18, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2677, file: !187, line: 147, column: 5)
!2683 = !DILocation(line: 150, column: 18, scope: !2682)
!2684 = !DILocation(line: 151, column: 5, scope: !2682)
!2685 = !DILocation(line: 155, column: 11, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2677, file: !187, line: 153, column: 5)
!2687 = !DILocation(line: 157, column: 8, scope: !2686)
!2688 = !DILocation(line: 157, column: 30, scope: !2686)
!2689 = !DILocation(line: 162, column: 29, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2656, file: !187, line: 161, column: 3)
!2691 = !DILocation(line: 162, column: 9, scope: !2690)
!2692 = !DILocation(line: 165, column: 49, scope: !2690)
!2693 = !DILocation(line: 165, column: 31, scope: !2690)
!2694 = !DILocation(line: 165, column: 6, scope: !2690)
!2695 = !DILocation(line: 165, column: 28, scope: !2690)
!2696 = !DILocation(line: 167, column: 1, scope: !2638)
!2697 = distinct !DISubprogram(name: "EXTI_StructInit", scope: !187, file: !187, line: 175, type: !2639, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !186, retainedNodes: !2698)
!2698 = !{!2699}
!2699 = !DILocalVariable(name: "EXTI_InitStruct", arg: 1, scope: !2697, file: !187, line: 175, type: !2641)
!2700 = !DILocation(line: 0, scope: !2697)
!2701 = !DILocation(line: 177, column: 20, scope: !2697)
!2702 = !DILocation(line: 177, column: 30, scope: !2697)
!2703 = !DILocation(line: 178, column: 20, scope: !2697)
!2704 = !DILocation(line: 178, column: 30, scope: !2697)
!2705 = !DILocation(line: 179, column: 20, scope: !2697)
!2706 = !DILocation(line: 179, column: 33, scope: !2697)
!2707 = !DILocation(line: 180, column: 20, scope: !2697)
!2708 = !DILocation(line: 180, column: 33, scope: !2697)
!2709 = !DILocation(line: 181, column: 1, scope: !2697)
!2710 = distinct !DISubprogram(name: "EXTI_GenerateSWInterrupt", scope: !187, file: !187, line: 190, type: !831, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !186, retainedNodes: !2711)
!2711 = !{!2712}
!2712 = !DILocalVariable(name: "EXTI_Line", arg: 1, scope: !2710, file: !187, line: 190, type: !20)
!2713 = !DILocation(line: 0, scope: !2710)
!2714 = !DILocation(line: 195, column: 15, scope: !2710)
!2715 = !DILocation(line: 196, column: 1, scope: !2710)
!2716 = distinct !DISubprogram(name: "EXTI_GetFlagStatus", scope: !187, file: !187, line: 220, type: !2717, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !186, retainedNodes: !2719)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{!1276, !20}
!2719 = !{!2720, !2721}
!2720 = !DILocalVariable(name: "EXTI_Line", arg: 1, scope: !2716, file: !187, line: 220, type: !20)
!2721 = !DILocalVariable(name: "bitstatus", scope: !2716, file: !187, line: 222, type: !1276)
!2722 = !DILocation(line: 0, scope: !2716)
!2723 = !DILocation(line: 226, column: 14, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2716, file: !187, line: 226, column: 7)
!2725 = !DILocation(line: 226, column: 17, scope: !2724)
!2726 = !DILocation(line: 226, column: 30, scope: !2724)
!2727 = !DILocation(line: 234, column: 3, scope: !2716)
!2728 = distinct !DISubprogram(name: "EXTI_ClearFlag", scope: !187, file: !187, line: 243, type: !831, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !186, retainedNodes: !2729)
!2729 = !{!2730}
!2730 = !DILocalVariable(name: "EXTI_Line", arg: 1, scope: !2728, file: !187, line: 243, type: !20)
!2731 = !DILocation(line: 0, scope: !2728)
!2732 = !DILocation(line: 248, column: 12, scope: !2728)
!2733 = !DILocation(line: 249, column: 1, scope: !2728)
!2734 = distinct !DISubprogram(name: "EXTI_GetITStatus", scope: !187, file: !187, line: 257, type: !2735, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !186, retainedNodes: !2737)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!1359, !20}
!2737 = !{!2738, !2739, !2740}
!2738 = !DILocalVariable(name: "EXTI_Line", arg: 1, scope: !2734, file: !187, line: 257, type: !20)
!2739 = !DILocalVariable(name: "bitstatus", scope: !2734, file: !187, line: 259, type: !1359)
!2740 = !DILocalVariable(name: "enablestatus", scope: !2734, file: !187, line: 260, type: !20)
!2741 = !DILocation(line: 0, scope: !2734)
!2742 = !DILocation(line: 264, column: 25, scope: !2734)
!2743 = !DILocation(line: 264, column: 29, scope: !2734)
!2744 = !DILocation(line: 265, column: 15, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2734, file: !187, line: 265, column: 7)
!2746 = !DILocation(line: 265, column: 18, scope: !2745)
!2747 = !DILocation(line: 265, column: 31, scope: !2745)
!2748 = !DILocation(line: 265, column: 51, scope: !2745)
!2749 = !DILocation(line: 273, column: 3, scope: !2734)
!2750 = distinct !DISubprogram(name: "EXTI_ClearITPendingBit", scope: !187, file: !187, line: 282, type: !831, scopeLine: 283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !186, retainedNodes: !2751)
!2751 = !{!2752}
!2752 = !DILocalVariable(name: "EXTI_Line", arg: 1, scope: !2750, file: !187, line: 282, type: !20)
!2753 = !DILocation(line: 0, scope: !2750)
!2754 = !DILocation(line: 287, column: 12, scope: !2750)
!2755 = !DILocation(line: 288, column: 1, scope: !2750)
!2756 = distinct !DISubprogram(name: "RNG_DeInit", scope: !211, file: !211, line: 94, type: !1415, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !361)
!2757 = !DILocation(line: 97, column: 3, scope: !2756)
!2758 = !DILocation(line: 100, column: 3, scope: !2756)
!2759 = !DILocation(line: 101, column: 1, scope: !2756)
!2760 = distinct !DISubprogram(name: "RNG_Cmd", scope: !211, file: !211, line: 109, type: !1502, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !2761)
!2761 = !{!2762}
!2762 = !DILocalVariable(name: "NewState", arg: 1, scope: !2760, file: !211, line: 109, type: !856)
!2763 = !DILocation(line: 0, scope: !2760)
!2764 = !DILocation(line: 114, column: 16, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2760, file: !211, line: 114, column: 7)
!2766 = !DILocation(line: 0, scope: !2765)
!2767 = !{!2166, !840, i64 0}
!2768 = !DILocation(line: 114, column: 7, scope: !2760)
!2769 = !DILocation(line: 124, column: 1, scope: !2760)
!2770 = distinct !DISubprogram(name: "RNG_GetRandomNumber", scope: !211, file: !211, line: 171, type: !2372, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !361)
!2771 = !DILocation(line: 174, column: 15, scope: !2770)
!2772 = !{!2166, !840, i64 8}
!2773 = !DILocation(line: 174, column: 3, scope: !2770)
!2774 = distinct !DISubprogram(name: "RNG_ITConfig", scope: !211, file: !211, line: 268, type: !1502, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !2775)
!2775 = !{!2776}
!2776 = !DILocalVariable(name: "NewState", arg: 1, scope: !2774, file: !211, line: 268, type: !856)
!2777 = !DILocation(line: 0, scope: !2774)
!2778 = !DILocation(line: 273, column: 16, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2774, file: !211, line: 273, column: 7)
!2780 = !DILocation(line: 0, scope: !2779)
!2781 = !DILocation(line: 273, column: 7, scope: !2774)
!2782 = !DILocation(line: 283, column: 1, scope: !2774)
!2783 = distinct !DISubprogram(name: "RNG_GetFlagStatus", scope: !211, file: !211, line: 294, type: !1451, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !2784)
!2784 = !{!2785, !2786}
!2785 = !DILocalVariable(name: "RNG_FLAG", arg: 1, scope: !2783, file: !211, line: 294, type: !60)
!2786 = !DILocalVariable(name: "bitstatus", scope: !2783, file: !211, line: 296, type: !1276)
!2787 = !DILocation(line: 0, scope: !2783)
!2788 = !DILocation(line: 301, column: 13, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2783, file: !211, line: 301, column: 7)
!2790 = !DILocation(line: 301, column: 18, scope: !2789)
!2791 = !DILocation(line: 301, column: 16, scope: !2789)
!2792 = !DILocation(line: 301, column: 28, scope: !2789)
!2793 = !DILocation(line: 312, column: 3, scope: !2783)
!2794 = distinct !DISubprogram(name: "RNG_ClearFlag", scope: !211, file: !211, line: 327, type: !1430, scopeLine: 328, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !2795)
!2795 = !{!2796}
!2796 = !DILocalVariable(name: "RNG_FLAG", arg: 1, scope: !2794, file: !211, line: 327, type: !60)
!2797 = !DILocation(line: 0, scope: !2794)
!2798 = !DILocation(line: 332, column: 26, scope: !2794)
!2799 = !DILocation(line: 332, column: 46, scope: !2794)
!2800 = !DILocation(line: 332, column: 13, scope: !2794)
!2801 = !DILocation(line: 332, column: 11, scope: !2794)
!2802 = !DILocation(line: 333, column: 1, scope: !2794)
!2803 = distinct !DISubprogram(name: "RNG_GetITStatus", scope: !211, file: !211, line: 343, type: !2020, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !2804)
!2804 = !{!2805, !2806}
!2805 = !DILocalVariable(name: "RNG_IT", arg: 1, scope: !2803, file: !211, line: 343, type: !60)
!2806 = !DILocalVariable(name: "bitstatus", scope: !2803, file: !211, line: 345, type: !1359)
!2807 = !DILocation(line: 0, scope: !2803)
!2808 = !DILocation(line: 350, column: 13, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2803, file: !211, line: 350, column: 7)
!2810 = !DILocation(line: 350, column: 18, scope: !2809)
!2811 = !DILocation(line: 350, column: 16, scope: !2809)
!2812 = !DILocation(line: 350, column: 26, scope: !2809)
!2813 = !DILocation(line: 361, column: 3, scope: !2803)
!2814 = distinct !DISubprogram(name: "RNG_ClearITPendingBit", scope: !211, file: !211, line: 373, type: !1430, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !2815)
!2815 = !{!2816}
!2816 = !DILocalVariable(name: "RNG_IT", arg: 1, scope: !2814, file: !211, line: 373, type: !60)
!2817 = !DILocation(line: 0, scope: !2814)
!2818 = !DILocation(line: 379, column: 22, scope: !2814)
!2819 = !DILocation(line: 379, column: 13, scope: !2814)
!2820 = !DILocation(line: 379, column: 11, scope: !2814)
!2821 = !DILocation(line: 380, column: 1, scope: !2814)
!2822 = distinct !DISubprogram(name: "CAN_DeInit", scope: !221, file: !221, line: 162, type: !2823, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !2825)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{null, !223}
!2825 = !{!2826}
!2826 = !DILocalVariable(name: "CANx", arg: 1, scope: !2822, file: !221, line: 162, type: !223)
!2827 = !DILocation(line: 0, scope: !2822)
!2828 = !DILocation(line: 167, column: 12, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2822, file: !221, line: 167, column: 7)
!2830 = !DILocation(line: 167, column: 7, scope: !2822)
!2831 = !DILocation(line: 0, scope: !2829)
!2832 = !DILocation(line: 181, column: 1, scope: !2822)
!2833 = distinct !DISubprogram(name: "CAN_Init", scope: !221, file: !221, line: 192, type: !2834, scopeLine: 193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !2852)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{!60, !223, !2836}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_InitTypeDef", file: !2838, line: 87, baseType: !2839)
!2838 = !DIFile(filename: "inc/peripherals/stm32f4xx_can.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2838, line: 50, size: 256, elements: !2840)
!2840 = !{!2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_Prescaler", scope: !2839, file: !2838, line: 52, baseType: !64, size: 16)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_Mode", scope: !2839, file: !2838, line: 55, baseType: !60, size: 8, offset: 16)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_SJW", scope: !2839, file: !2838, line: 58, baseType: !60, size: 8, offset: 24)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_BS1", scope: !2839, file: !2838, line: 63, baseType: !60, size: 8, offset: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_BS2", scope: !2839, file: !2838, line: 67, baseType: !60, size: 8, offset: 40)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_TTCM", scope: !2839, file: !2838, line: 70, baseType: !856, size: 32, offset: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_ABOM", scope: !2839, file: !2838, line: 73, baseType: !856, size: 32, offset: 96)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_AWUM", scope: !2839, file: !2838, line: 76, baseType: !856, size: 32, offset: 128)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_NART", scope: !2839, file: !2838, line: 79, baseType: !856, size: 32, offset: 160)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_RFLM", scope: !2839, file: !2838, line: 82, baseType: !856, size: 32, offset: 192)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_TXFP", scope: !2839, file: !2838, line: 85, baseType: !856, size: 32, offset: 224)
!2852 = !{!2853, !2854, !2855, !2856}
!2853 = !DILocalVariable(name: "CANx", arg: 1, scope: !2833, file: !221, line: 192, type: !223)
!2854 = !DILocalVariable(name: "CAN_InitStruct", arg: 2, scope: !2833, file: !221, line: 192, type: !2836)
!2855 = !DILocalVariable(name: "InitStatus", scope: !2833, file: !221, line: 194, type: !60)
!2856 = !DILocalVariable(name: "wait_ack", scope: !2833, file: !221, line: 195, type: !20)
!2857 = !DILocation(line: 0, scope: !2833)
!2858 = !DILocation(line: 211, column: 9, scope: !2833)
!2859 = !DILocation(line: 211, column: 13, scope: !2833)
!2860 = !{!2861, !840, i64 0}
!2861 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !841, i64 32, !841, i64 384, !841, i64 432, !841, i64 464, !840, i64 512, !840, i64 516, !840, i64 520, !840, i64 524, !840, i64 528, !840, i64 532, !840, i64 536, !840, i64 540, !841, i64 544, !841, i64 576}
!2862 = !DILocation(line: 214, column: 13, scope: !2833)
!2863 = !DILocation(line: 217, column: 3, scope: !2833)
!2864 = !DILocation(line: 217, column: 18, scope: !2833)
!2865 = !{!2861, !840, i64 4}
!2866 = !DILocation(line: 217, column: 22, scope: !2833)
!2867 = !DILocation(line: 217, column: 38, scope: !2833)
!2868 = distinct !{!2868, !2863, !2869}
!2869 = !DILocation(line: 220, column: 3, scope: !2833)
!2870 = !DILocation(line: 223, column: 14, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2833, file: !221, line: 223, column: 7)
!2872 = !DILocation(line: 223, column: 18, scope: !2871)
!2873 = !DILocation(line: 223, column: 34, scope: !2871)
!2874 = !DILocation(line: 223, column: 7, scope: !2833)
!2875 = !DILocation(line: 230, column: 25, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !221, line: 230, column: 9)
!2877 = distinct !DILexicalBlock(scope: !2871, file: !221, line: 228, column: 3)
!2878 = !{!2879, !841, i64 8}
!2879 = !{!"", !2880, i64 0, !841, i64 2, !841, i64 3, !841, i64 4, !841, i64 5, !841, i64 8, !841, i64 12, !841, i64 16, !841, i64 20, !841, i64 24, !841, i64 28}
!2880 = !{!"short", !841, i64 0}
!2881 = !DILocation(line: 230, column: 34, scope: !2876)
!2882 = !DILocation(line: 0, scope: !2876)
!2883 = !DILocation(line: 230, column: 9, scope: !2877)
!2884 = !DILocation(line: 240, column: 25, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2877, file: !221, line: 240, column: 9)
!2886 = !{!2879, !841, i64 12}
!2887 = !DILocation(line: 240, column: 34, scope: !2885)
!2888 = !DILocation(line: 0, scope: !2885)
!2889 = !DILocation(line: 240, column: 9, scope: !2877)
!2890 = !DILocation(line: 250, column: 25, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2877, file: !221, line: 250, column: 9)
!2892 = !{!2879, !841, i64 16}
!2893 = !DILocation(line: 250, column: 34, scope: !2891)
!2894 = !DILocation(line: 0, scope: !2891)
!2895 = !DILocation(line: 250, column: 9, scope: !2877)
!2896 = !DILocation(line: 260, column: 25, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2877, file: !221, line: 260, column: 9)
!2898 = !{!2879, !841, i64 20}
!2899 = !DILocation(line: 260, column: 34, scope: !2897)
!2900 = !DILocation(line: 0, scope: !2897)
!2901 = !DILocation(line: 260, column: 9, scope: !2877)
!2902 = !DILocation(line: 270, column: 25, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2877, file: !221, line: 270, column: 9)
!2904 = !{!2879, !841, i64 24}
!2905 = !DILocation(line: 270, column: 34, scope: !2903)
!2906 = !DILocation(line: 0, scope: !2903)
!2907 = !DILocation(line: 270, column: 9, scope: !2877)
!2908 = !DILocation(line: 280, column: 25, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2877, file: !221, line: 280, column: 9)
!2910 = !{!2879, !841, i64 28}
!2911 = !DILocation(line: 280, column: 34, scope: !2909)
!2912 = !DILocation(line: 0, scope: !2909)
!2913 = !DILocation(line: 280, column: 9, scope: !2877)
!2914 = !DILocation(line: 290, column: 54, scope: !2877)
!2915 = !{!2879, !841, i64 2}
!2916 = !DILocation(line: 290, column: 28, scope: !2877)
!2917 = !DILocation(line: 290, column: 63, scope: !2877)
!2918 = !DILocation(line: 291, column: 44, scope: !2877)
!2919 = !{!2879, !841, i64 3}
!2920 = !DILocation(line: 291, column: 18, scope: !2877)
!2921 = !DILocation(line: 291, column: 52, scope: !2877)
!2922 = !DILocation(line: 290, column: 70, scope: !2877)
!2923 = !DILocation(line: 292, column: 44, scope: !2877)
!2924 = !{!2879, !841, i64 4}
!2925 = !DILocation(line: 292, column: 18, scope: !2877)
!2926 = !DILocation(line: 292, column: 52, scope: !2877)
!2927 = !DILocation(line: 291, column: 59, scope: !2877)
!2928 = !DILocation(line: 293, column: 44, scope: !2877)
!2929 = !{!2879, !841, i64 5}
!2930 = !DILocation(line: 293, column: 18, scope: !2877)
!2931 = !DILocation(line: 293, column: 52, scope: !2877)
!2932 = !DILocation(line: 292, column: 59, scope: !2877)
!2933 = !DILocation(line: 294, column: 43, scope: !2877)
!2934 = !{!2879, !2880, i64 0}
!2935 = !DILocation(line: 294, column: 17, scope: !2877)
!2936 = !DILocation(line: 294, column: 57, scope: !2877)
!2937 = !DILocation(line: 293, column: 59, scope: !2877)
!2938 = !DILocation(line: 290, column: 11, scope: !2877)
!2939 = !DILocation(line: 290, column: 15, scope: !2877)
!2940 = !{!2861, !840, i64 28}
!2941 = !DILocation(line: 297, column: 15, scope: !2877)
!2942 = !DILocation(line: 302, column: 4, scope: !2877)
!2943 = !DILocation(line: 0, scope: !2877)
!2944 = !DILocation(line: 302, column: 19, scope: !2877)
!2945 = !DILocation(line: 302, column: 23, scope: !2877)
!2946 = !DILocation(line: 302, column: 39, scope: !2877)
!2947 = distinct !{!2947, !2942, !2948}
!2948 = !DILocation(line: 305, column: 4, scope: !2877)
!2949 = !DILocation(line: 308, column: 16, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2877, file: !221, line: 308, column: 9)
!2951 = !DILocation(line: 0, scope: !2871)
!2952 = !DILocation(line: 319, column: 3, scope: !2833)
!2953 = !DILocation(line: 302, column: 56, scope: !2877)
!2954 = !DILocation(line: 304, column: 14, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2877, file: !221, line: 303, column: 4)
!2956 = !DILocation(line: 217, column: 55, scope: !2833)
!2957 = !DILocation(line: 219, column: 13, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2833, file: !221, line: 218, column: 3)
!2959 = distinct !DISubprogram(name: "CAN_FilterInit", scope: !221, file: !221, line: 329, type: !2960, scopeLine: 330, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !2975)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{null, !2962}
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_FilterInitTypeDef", file: !2838, line: 125, baseType: !2964)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2838, line: 92, size: 160, elements: !2965)
!2965 = !{!2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_FilterIdHigh", scope: !2964, file: !2838, line: 94, baseType: !64, size: 16)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_FilterIdLow", scope: !2964, file: !2838, line: 98, baseType: !64, size: 16, offset: 16)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_FilterMaskIdHigh", scope: !2964, file: !2838, line: 102, baseType: !64, size: 16, offset: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_FilterMaskIdLow", scope: !2964, file: !2838, line: 107, baseType: !64, size: 16, offset: 48)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_FilterFIFOAssignment", scope: !2964, file: !2838, line: 112, baseType: !64, size: 16, offset: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_FilterNumber", scope: !2964, file: !2838, line: 115, baseType: !60, size: 8, offset: 80)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_FilterMode", scope: !2964, file: !2838, line: 117, baseType: !60, size: 8, offset: 88)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_FilterScale", scope: !2964, file: !2838, line: 120, baseType: !60, size: 8, offset: 96)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CAN_FilterActivation", scope: !2964, file: !2838, line: 123, baseType: !856, size: 32, offset: 128)
!2975 = !{!2976, !2977}
!2976 = !DILocalVariable(name: "CAN_FilterInitStruct", arg: 1, scope: !2959, file: !221, line: 329, type: !2962)
!2977 = !DILocalVariable(name: "filter_number_bit_pos", scope: !2959, file: !221, line: 331, type: !20)
!2978 = !DILocation(line: 0, scope: !2959)
!2979 = !DILocation(line: 339, column: 66, scope: !2959)
!2980 = !{!2981, !841, i64 10}
!2981 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !2880, i64 6, !2880, i64 8, !841, i64 10, !841, i64 11, !841, i64 12, !841, i64 16}
!2982 = !DILocation(line: 339, column: 44, scope: !2959)
!2983 = !DILocation(line: 339, column: 41, scope: !2959)
!2984 = !DILocation(line: 342, column: 13, scope: !2959)
!2985 = !{!2861, !840, i64 512}
!2986 = !DILocation(line: 345, column: 17, scope: !2959)
!2987 = !DILocation(line: 345, column: 14, scope: !2959)
!2988 = !{!2861, !840, i64 540}
!2989 = !DILocation(line: 348, column: 29, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2959, file: !221, line: 348, column: 7)
!2991 = !{!2981, !841, i64 12}
!2992 = !DILocation(line: 348, column: 7, scope: !2959)
!2993 = !DILocation(line: 351, column: 16, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2990, file: !221, line: 349, column: 3)
!2995 = !{!2861, !840, i64 524}
!2996 = !DILocation(line: 356, column: 55, scope: !2994)
!2997 = !{!2981, !2880, i64 6}
!2998 = !DILocation(line: 356, column: 23, scope: !2994)
!2999 = !DILocation(line: 356, column: 76, scope: !2994)
!3000 = !DILocation(line: 357, column: 55, scope: !2994)
!3001 = !{!2981, !2880, i64 2}
!3002 = !DILocation(line: 357, column: 23, scope: !2994)
!3003 = !DILocation(line: 356, column: 83, scope: !2994)
!3004 = !DILocation(line: 355, column: 67, scope: !2994)
!3005 = !DILocation(line: 355, column: 71, scope: !2994)
!3006 = !{!3007, !840, i64 0}
!3007 = !{!"", !840, i64 0, !840, i64 4}
!3008 = !DILocation(line: 363, column: 55, scope: !2994)
!3009 = !DILocation(line: 366, column: 7, scope: !2959)
!3010 = !DILocation(line: 369, column: 16, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3012, file: !221, line: 367, column: 3)
!3012 = distinct !DILexicalBlock(scope: !2959, file: !221, line: 366, column: 7)
!3013 = !DILocation(line: 372, column: 55, scope: !3011)
!3014 = !{!2981, !2880, i64 0}
!3015 = !DILocation(line: 372, column: 23, scope: !3011)
!3016 = !DILocation(line: 372, column: 73, scope: !3011)
!3017 = !DILocation(line: 373, column: 55, scope: !3011)
!3018 = !DILocation(line: 373, column: 23, scope: !3011)
!3019 = !DILocation(line: 372, column: 80, scope: !3011)
!3020 = !DILocation(line: 371, column: 67, scope: !3011)
!3021 = !DILocation(line: 371, column: 71, scope: !3011)
!3022 = !DILocation(line: 377, column: 55, scope: !3011)
!3023 = !DILocation(line: 378, column: 3, scope: !3011)
!3024 = !{!2981, !2880, i64 4}
!3025 = !{!2880, !2880, i64 0}
!3026 = !{!3007, !840, i64 4}
!3027 = !DILocation(line: 381, column: 29, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !2959, file: !221, line: 381, column: 7)
!3029 = !{!2981, !841, i64 11}
!3030 = !DILocation(line: 381, column: 44, scope: !3028)
!3031 = !DILocation(line: 0, scope: !3028)
!3032 = !{!2861, !840, i64 516}
!3033 = !DILocation(line: 381, column: 7, scope: !2959)
!3034 = !DILocation(line: 393, column: 29, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !2959, file: !221, line: 393, column: 7)
!3036 = !{!2981, !2880, i64 8}
!3037 = !DILocation(line: 393, column: 7, scope: !2959)
!3038 = !DILocation(line: 396, column: 17, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3035, file: !221, line: 394, column: 3)
!3040 = !{!2861, !840, i64 532}
!3041 = !DILocation(line: 399, column: 7, scope: !2959)
!3042 = !DILocation(line: 402, column: 17, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !221, line: 400, column: 3)
!3044 = distinct !DILexicalBlock(scope: !2959, file: !221, line: 399, column: 7)
!3045 = !DILocation(line: 403, column: 3, scope: !3043)
!3046 = !DILocation(line: 406, column: 29, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !2959, file: !221, line: 406, column: 7)
!3048 = !{!2981, !841, i64 16}
!3049 = !DILocation(line: 406, column: 50, scope: !3047)
!3050 = !DILocation(line: 406, column: 7, scope: !2959)
!3051 = !DILocation(line: 408, column: 16, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3047, file: !221, line: 407, column: 3)
!3053 = !DILocation(line: 409, column: 3, scope: !3052)
!3054 = !DILocation(line: 412, column: 13, scope: !2959)
!3055 = !DILocation(line: 413, column: 1, scope: !2959)
!3056 = distinct !DISubprogram(name: "CAN_StructInit", scope: !221, file: !221, line: 420, type: !3057, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3059)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{null, !2836}
!3059 = !{!3060}
!3060 = !DILocalVariable(name: "CAN_InitStruct", arg: 1, scope: !3056, file: !221, line: 420, type: !2836)
!3061 = !DILocation(line: 0, scope: !3056)
!3062 = !DILocation(line: 425, column: 19, scope: !3056)
!3063 = !DILocation(line: 425, column: 28, scope: !3056)
!3064 = !DILocation(line: 428, column: 19, scope: !3056)
!3065 = !DILocation(line: 428, column: 28, scope: !3056)
!3066 = !DILocation(line: 431, column: 19, scope: !3056)
!3067 = !DILocation(line: 431, column: 28, scope: !3056)
!3068 = !DILocation(line: 434, column: 19, scope: !3056)
!3069 = !DILocation(line: 434, column: 28, scope: !3056)
!3070 = !DILocation(line: 437, column: 19, scope: !3056)
!3071 = !DILocation(line: 437, column: 28, scope: !3056)
!3072 = !DILocation(line: 440, column: 19, scope: !3056)
!3073 = !DILocation(line: 440, column: 28, scope: !3056)
!3074 = !DILocation(line: 443, column: 19, scope: !3056)
!3075 = !DILocation(line: 443, column: 28, scope: !3056)
!3076 = !DILocation(line: 446, column: 19, scope: !3056)
!3077 = !DILocation(line: 446, column: 27, scope: !3056)
!3078 = !DILocation(line: 449, column: 19, scope: !3056)
!3079 = !DILocation(line: 449, column: 27, scope: !3056)
!3080 = !DILocation(line: 452, column: 19, scope: !3056)
!3081 = !DILocation(line: 452, column: 27, scope: !3056)
!3082 = !DILocation(line: 455, column: 19, scope: !3056)
!3083 = !DILocation(line: 455, column: 33, scope: !3056)
!3084 = !DILocation(line: 456, column: 1, scope: !3056)
!3085 = distinct !DISubprogram(name: "CAN_SlaveStartBank", scope: !221, file: !221, line: 463, type: !1430, scopeLine: 464, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3086)
!3086 = !{!3087}
!3087 = !DILocalVariable(name: "CAN_BankNumber", arg: 1, scope: !3085, file: !221, line: 463, type: !60)
!3088 = !DILocation(line: 0, scope: !3085)
!3089 = !DILocation(line: 469, column: 13, scope: !3085)
!3090 = !DILocation(line: 472, column: 13, scope: !3085)
!3091 = !DILocation(line: 473, column: 16, scope: !3085)
!3092 = !DILocation(line: 473, column: 42, scope: !3085)
!3093 = !DILocation(line: 473, column: 13, scope: !3085)
!3094 = !DILocation(line: 476, column: 13, scope: !3085)
!3095 = !DILocation(line: 477, column: 1, scope: !3085)
!3096 = distinct !DISubprogram(name: "CAN_DBGFreeze", scope: !221, file: !221, line: 488, type: !3097, scopeLine: 489, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3099)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{null, !223, !856}
!3099 = !{!3100, !3101}
!3100 = !DILocalVariable(name: "CANx", arg: 1, scope: !3096, file: !221, line: 488, type: !223)
!3101 = !DILocalVariable(name: "NewState", arg: 2, scope: !3096, file: !221, line: 488, type: !856)
!3102 = !DILocation(line: 0, scope: !3096)
!3103 = !DILocation(line: 494, column: 16, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3096, file: !221, line: 494, column: 7)
!3105 = !DILocation(line: 0, scope: !3104)
!3106 = !DILocation(line: 494, column: 7, scope: !3096)
!3107 = !DILocation(line: 504, column: 1, scope: !3096)
!3108 = distinct !DISubprogram(name: "CAN_TTComModeCmd", scope: !221, file: !221, line: 518, type: !3097, scopeLine: 519, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3109)
!3109 = !{!3110, !3111}
!3110 = !DILocalVariable(name: "CANx", arg: 1, scope: !3108, file: !221, line: 518, type: !223)
!3111 = !DILocalVariable(name: "NewState", arg: 2, scope: !3108, file: !221, line: 518, type: !856)
!3112 = !DILocation(line: 0, scope: !3108)
!3113 = !DILocation(line: 523, column: 16, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3108, file: !221, line: 523, column: 7)
!3115 = !DILocation(line: 0, scope: !3114)
!3116 = !DILocation(line: 523, column: 7, scope: !3108)
!3117 = !DILocation(line: 526, column: 15, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3114, file: !221, line: 524, column: 3)
!3119 = !DILocation(line: 529, column: 25, scope: !3118)
!3120 = !DILocation(line: 529, column: 30, scope: !3118)
!3121 = !DILocation(line: 530, column: 25, scope: !3118)
!3122 = !DILocation(line: 530, column: 30, scope: !3118)
!3123 = !DILocation(line: 531, column: 25, scope: !3118)
!3124 = !DILocation(line: 531, column: 30, scope: !3118)
!3125 = !DILocation(line: 532, column: 3, scope: !3118)
!3126 = !DILocation(line: 536, column: 15, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3114, file: !221, line: 534, column: 3)
!3128 = !DILocation(line: 539, column: 25, scope: !3127)
!3129 = !DILocation(line: 539, column: 30, scope: !3127)
!3130 = !DILocation(line: 540, column: 25, scope: !3127)
!3131 = !DILocation(line: 540, column: 30, scope: !3127)
!3132 = !DILocation(line: 541, column: 25, scope: !3127)
!3133 = !DILocation(line: 541, column: 30, scope: !3127)
!3134 = !DILocation(line: 543, column: 1, scope: !3108)
!3135 = distinct !DISubprogram(name: "CAN_Transmit", scope: !221, file: !221, line: 572, type: !3136, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3149)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!60, !223, !3138}
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_typedef, name: "CanTxMsg", file: !2838, line: 152, baseType: !3140)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2838, line: 130, size: 160, elements: !3141)
!3141 = !{!3142, !3143, !3144, !3145, !3146, !3147}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "StdId", scope: !3140, file: !2838, line: 132, baseType: !20, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "ExtId", scope: !3140, file: !2838, line: 135, baseType: !20, size: 32, offset: 32)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "IDE", scope: !3140, file: !2838, line: 138, baseType: !60, size: 8, offset: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "RTR", scope: !3140, file: !2838, line: 142, baseType: !60, size: 8, offset: 72)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "DLC", scope: !3140, file: !2838, line: 146, baseType: !60, size: 8, offset: 80)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "Data", scope: !3140, file: !2838, line: 150, baseType: !3148, size: 64, offset: 88)
!3148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 64, elements: !120)
!3149 = !{!3150, !3151, !3152}
!3150 = !DILocalVariable(name: "CANx", arg: 1, scope: !3135, file: !221, line: 572, type: !223)
!3151 = !DILocalVariable(name: "TxMessage", arg: 2, scope: !3135, file: !221, line: 572, type: !3138)
!3152 = !DILocalVariable(name: "transmit_mailbox", scope: !3135, file: !221, line: 574, type: !60)
!3153 = !DILocation(line: 0, scope: !3135)
!3154 = !DILocation(line: 582, column: 14, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3135, file: !221, line: 582, column: 7)
!3156 = !{!2861, !840, i64 8}
!3157 = !DILocation(line: 582, column: 17, scope: !3155)
!3158 = !DILocation(line: 582, column: 32, scope: !3155)
!3159 = !DILocation(line: 582, column: 7, scope: !3135)
!3160 = !DILocation(line: 586, column: 19, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3155, file: !221, line: 586, column: 12)
!3162 = !DILocation(line: 586, column: 22, scope: !3161)
!3163 = !DILocation(line: 586, column: 37, scope: !3161)
!3164 = !DILocation(line: 586, column: 12, scope: !3155)
!3165 = !DILocation(line: 590, column: 19, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3161, file: !221, line: 590, column: 12)
!3167 = !DILocation(line: 590, column: 22, scope: !3166)
!3168 = !DILocation(line: 590, column: 37, scope: !3166)
!3169 = !DILocation(line: 599, column: 7, scope: !3135)
!3170 = !DILocation(line: 599, column: 7, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3135, file: !221, line: 599, column: 7)
!3172 = !DILocation(line: 602, column: 40, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3171, file: !221, line: 600, column: 3)
!3174 = !DILocation(line: 602, column: 44, scope: !3173)
!3175 = !DILocation(line: 603, column: 20, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3173, file: !221, line: 603, column: 9)
!3177 = !{!3178, !841, i64 8}
!3178 = !{!"", !840, i64 0, !840, i64 4, !841, i64 8, !841, i64 9, !841, i64 10, !841, i64 11}
!3179 = !DILocation(line: 603, column: 24, scope: !3176)
!3180 = !DILocation(line: 603, column: 9, scope: !3173)
!3181 = !DILocation(line: 606, column: 62, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3176, file: !221, line: 604, column: 5)
!3183 = !{!3178, !840, i64 0}
!3184 = !DILocation(line: 606, column: 68, scope: !3182)
!3185 = !DILocation(line: 608, column: 5, scope: !3182)
!3186 = !DILocation(line: 603, column: 9, scope: !3176)
!3187 = !DILocation(line: 612, column: 62, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3176, file: !221, line: 610, column: 5)
!3189 = !{!3178, !840, i64 4}
!3190 = !DILocation(line: 612, column: 68, scope: !3188)
!3191 = !DILocation(line: 612, column: 74, scope: !3188)
!3192 = !DILocation(line: 0, scope: !3176)
!3193 = !{!3178, !841, i64 9}
!3194 = !DILocation(line: 618, column: 16, scope: !3173)
!3195 = !DILocation(line: 618, column: 20, scope: !3173)
!3196 = !{!3178, !841, i64 10}
!3197 = !DILocation(line: 619, column: 40, scope: !3173)
!3198 = !DILocation(line: 619, column: 45, scope: !3173)
!3199 = !DILocation(line: 620, column: 48, scope: !3173)
!3200 = !DILocation(line: 620, column: 45, scope: !3173)
!3201 = !DILocation(line: 623, column: 59, scope: !3173)
!3202 = !DILocation(line: 623, column: 49, scope: !3173)
!3203 = !DILocation(line: 623, column: 78, scope: !3173)
!3204 = !DILocation(line: 624, column: 57, scope: !3173)
!3205 = !DILocation(line: 624, column: 47, scope: !3173)
!3206 = !DILocation(line: 624, column: 76, scope: !3173)
!3207 = !DILocation(line: 623, column: 85, scope: !3173)
!3208 = !DILocation(line: 625, column: 57, scope: !3173)
!3209 = !DILocation(line: 625, column: 47, scope: !3173)
!3210 = !DILocation(line: 625, column: 76, scope: !3173)
!3211 = !DILocation(line: 624, column: 83, scope: !3173)
!3212 = !DILocation(line: 626, column: 57, scope: !3173)
!3213 = !DILocation(line: 626, column: 47, scope: !3173)
!3214 = !DILocation(line: 625, column: 82, scope: !3173)
!3215 = !DILocation(line: 623, column: 40, scope: !3173)
!3216 = !DILocation(line: 623, column: 45, scope: !3173)
!3217 = !DILocation(line: 627, column: 59, scope: !3173)
!3218 = !DILocation(line: 627, column: 49, scope: !3173)
!3219 = !DILocation(line: 627, column: 78, scope: !3173)
!3220 = !DILocation(line: 628, column: 57, scope: !3173)
!3221 = !DILocation(line: 628, column: 47, scope: !3173)
!3222 = !DILocation(line: 628, column: 76, scope: !3173)
!3223 = !DILocation(line: 627, column: 85, scope: !3173)
!3224 = !DILocation(line: 629, column: 57, scope: !3173)
!3225 = !DILocation(line: 629, column: 47, scope: !3173)
!3226 = !DILocation(line: 629, column: 76, scope: !3173)
!3227 = !DILocation(line: 628, column: 83, scope: !3173)
!3228 = !DILocation(line: 630, column: 57, scope: !3173)
!3229 = !DILocation(line: 630, column: 47, scope: !3173)
!3230 = !DILocation(line: 629, column: 82, scope: !3173)
!3231 = !DILocation(line: 627, column: 40, scope: !3173)
!3232 = !DILocation(line: 627, column: 45, scope: !3173)
!3233 = !DILocation(line: 632, column: 44, scope: !3173)
!3234 = !DILocation(line: 633, column: 3, scope: !3173)
!3235 = !DILocation(line: 634, column: 3, scope: !3135)
!3236 = distinct !DISubprogram(name: "CAN_TransmitStatus", scope: !221, file: !221, line: 644, type: !3237, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3239)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{!60, !223, !60}
!3239 = !{!3240, !3241, !3242}
!3240 = !DILocalVariable(name: "CANx", arg: 1, scope: !3236, file: !221, line: 644, type: !223)
!3241 = !DILocalVariable(name: "TransmitMailbox", arg: 2, scope: !3236, file: !221, line: 644, type: !60)
!3242 = !DILocalVariable(name: "state", scope: !3236, file: !221, line: 646, type: !20)
!3243 = !DILocation(line: 0, scope: !3236)
!3244 = !DILocation(line: 652, column: 3, scope: !3236)
!3245 = !DILocation(line: 0, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3236, file: !221, line: 653, column: 3)
!3247 = !DILocation(line: 667, column: 3, scope: !3236)
!3248 = !DILocation(line: 674, column: 7, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3236, file: !221, line: 668, column: 3)
!3250 = !DILocation(line: 676, column: 7, scope: !3249)
!3251 = !DILocation(line: 678, column: 7, scope: !3249)
!3252 = !DILocation(line: 681, column: 7, scope: !3249)
!3253 = !DILocation(line: 683, column: 7, scope: !3249)
!3254 = !DILocation(line: 685, column: 7, scope: !3249)
!3255 = !DILocation(line: 687, column: 7, scope: !3249)
!3256 = !DILocation(line: 689, column: 3, scope: !3236)
!3257 = distinct !DISubprogram(name: "CAN_CancelTransmit", scope: !221, file: !221, line: 698, type: !3258, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3260)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{null, !223, !60}
!3260 = !{!3261, !3262}
!3261 = !DILocalVariable(name: "CANx", arg: 1, scope: !3257, file: !221, line: 698, type: !223)
!3262 = !DILocalVariable(name: "Mailbox", arg: 2, scope: !3257, file: !221, line: 698, type: !60)
!3263 = !DILocation(line: 0, scope: !3257)
!3264 = !DILocation(line: 704, column: 3, scope: !3257)
!3265 = !DILocation(line: 0, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3257, file: !221, line: 705, column: 3)
!3267 = !DILocation(line: 715, column: 1, scope: !3257)
!3268 = distinct !DISubprogram(name: "CAN_Receive", scope: !221, file: !221, line: 745, type: !3269, scopeLine: 746, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3282)
!3269 = !DISubroutineType(types: !3270)
!3270 = !{null, !223, !60, !3271}
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_typedef, name: "CanRxMsg", file: !2838, line: 182, baseType: !3273)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2838, line: 157, size: 160, elements: !3274)
!3274 = !{!3275, !3276, !3277, !3278, !3279, !3280, !3281}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "StdId", scope: !3273, file: !2838, line: 159, baseType: !20, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "ExtId", scope: !3273, file: !2838, line: 162, baseType: !20, size: 32, offset: 32)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "IDE", scope: !3273, file: !2838, line: 165, baseType: !60, size: 8, offset: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "RTR", scope: !3273, file: !2838, line: 169, baseType: !60, size: 8, offset: 72)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "DLC", scope: !3273, file: !2838, line: 173, baseType: !60, size: 8, offset: 80)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "Data", scope: !3273, file: !2838, line: 176, baseType: !3148, size: 64, offset: 88)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "FMI", scope: !3273, file: !2838, line: 179, baseType: !60, size: 8, offset: 152)
!3282 = !{!3283, !3284, !3285}
!3283 = !DILocalVariable(name: "CANx", arg: 1, scope: !3268, file: !221, line: 745, type: !223)
!3284 = !DILocalVariable(name: "FIFONumber", arg: 2, scope: !3268, file: !221, line: 745, type: !60)
!3285 = !DILocalVariable(name: "RxMessage", arg: 3, scope: !3268, file: !221, line: 745, type: !3271)
!3286 = !DILocation(line: 0, scope: !3268)
!3287 = !DILocation(line: 751, column: 36, scope: !3268)
!3288 = !DILocation(line: 751, column: 67, scope: !3268)
!3289 = !DILocation(line: 751, column: 20, scope: !3268)
!3290 = !DILocation(line: 751, column: 14, scope: !3268)
!3291 = !DILocation(line: 751, column: 18, scope: !3268)
!3292 = !{!3293, !841, i64 8}
!3293 = !{!"", !840, i64 0, !840, i64 4, !841, i64 8, !841, i64 9, !841, i64 10, !841, i64 11, !841, i64 19}
!3294 = !DILocation(line: 752, column: 22, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3268, file: !221, line: 752, column: 7)
!3296 = !DILocation(line: 0, scope: !3295)
!3297 = !DILocation(line: 752, column: 7, scope: !3268)
!3298 = !DILocation(line: 754, column: 83, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3295, file: !221, line: 753, column: 3)
!3300 = !DILocation(line: 754, column: 16, scope: !3299)
!3301 = !DILocation(line: 754, column: 22, scope: !3299)
!3302 = !{!3293, !840, i64 0}
!3303 = !DILocation(line: 755, column: 3, scope: !3299)
!3304 = !DILocation(line: 758, column: 83, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3295, file: !221, line: 757, column: 3)
!3306 = !DILocation(line: 758, column: 16, scope: !3305)
!3307 = !DILocation(line: 758, column: 22, scope: !3305)
!3308 = !{!3293, !840, i64 4}
!3309 = !DILocation(line: 761, column: 67, scope: !3268)
!3310 = !DILocation(line: 761, column: 20, scope: !3268)
!3311 = !DILocation(line: 761, column: 14, scope: !3268)
!3312 = !DILocation(line: 761, column: 18, scope: !3268)
!3313 = !{!3293, !841, i64 9}
!3314 = !DILocation(line: 763, column: 67, scope: !3268)
!3315 = !DILocation(line: 763, column: 20, scope: !3268)
!3316 = !DILocation(line: 763, column: 14, scope: !3268)
!3317 = !DILocation(line: 763, column: 18, scope: !3268)
!3318 = !{!3293, !841, i64 10}
!3319 = !DILocation(line: 765, column: 68, scope: !3268)
!3320 = !DILocation(line: 765, column: 73, scope: !3268)
!3321 = !DILocation(line: 765, column: 20, scope: !3268)
!3322 = !DILocation(line: 765, column: 14, scope: !3268)
!3323 = !DILocation(line: 765, column: 18, scope: !3268)
!3324 = !{!3293, !841, i64 19}
!3325 = !DILocation(line: 767, column: 71, scope: !3268)
!3326 = !DILocation(line: 767, column: 24, scope: !3268)
!3327 = !DILocation(line: 767, column: 3, scope: !3268)
!3328 = !DILocation(line: 767, column: 22, scope: !3268)
!3329 = !DILocation(line: 768, column: 72, scope: !3268)
!3330 = !DILocation(line: 768, column: 77, scope: !3268)
!3331 = !DILocation(line: 768, column: 24, scope: !3268)
!3332 = !DILocation(line: 768, column: 3, scope: !3268)
!3333 = !DILocation(line: 768, column: 22, scope: !3268)
!3334 = !DILocation(line: 769, column: 72, scope: !3268)
!3335 = !DILocation(line: 769, column: 77, scope: !3268)
!3336 = !DILocation(line: 769, column: 24, scope: !3268)
!3337 = !DILocation(line: 769, column: 3, scope: !3268)
!3338 = !DILocation(line: 769, column: 22, scope: !3268)
!3339 = !DILocation(line: 770, column: 72, scope: !3268)
!3340 = !DILocation(line: 770, column: 77, scope: !3268)
!3341 = !DILocation(line: 770, column: 24, scope: !3268)
!3342 = !DILocation(line: 770, column: 3, scope: !3268)
!3343 = !DILocation(line: 770, column: 22, scope: !3268)
!3344 = !DILocation(line: 771, column: 71, scope: !3268)
!3345 = !DILocation(line: 771, column: 24, scope: !3268)
!3346 = !DILocation(line: 771, column: 3, scope: !3268)
!3347 = !DILocation(line: 771, column: 22, scope: !3268)
!3348 = !DILocation(line: 772, column: 72, scope: !3268)
!3349 = !DILocation(line: 772, column: 77, scope: !3268)
!3350 = !DILocation(line: 772, column: 24, scope: !3268)
!3351 = !DILocation(line: 772, column: 3, scope: !3268)
!3352 = !DILocation(line: 772, column: 22, scope: !3268)
!3353 = !DILocation(line: 773, column: 72, scope: !3268)
!3354 = !DILocation(line: 773, column: 77, scope: !3268)
!3355 = !DILocation(line: 773, column: 24, scope: !3268)
!3356 = !DILocation(line: 773, column: 3, scope: !3268)
!3357 = !DILocation(line: 773, column: 22, scope: !3268)
!3358 = !DILocation(line: 774, column: 72, scope: !3268)
!3359 = !DILocation(line: 774, column: 77, scope: !3268)
!3360 = !DILocation(line: 774, column: 24, scope: !3268)
!3361 = !DILocation(line: 774, column: 3, scope: !3268)
!3362 = !DILocation(line: 774, column: 22, scope: !3268)
!3363 = !DILocation(line: 777, column: 18, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3268, file: !221, line: 777, column: 7)
!3365 = !DILocation(line: 777, column: 7, scope: !3268)
!3366 = !DILocation(line: 0, scope: !3364)
!3367 = !DILocation(line: 786, column: 1, scope: !3268)
!3368 = distinct !DISubprogram(name: "CAN_FIFORelease", scope: !221, file: !221, line: 794, type: !3258, scopeLine: 795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3369)
!3369 = !{!3370, !3371}
!3370 = !DILocalVariable(name: "CANx", arg: 1, scope: !3368, file: !221, line: 794, type: !223)
!3371 = !DILocalVariable(name: "FIFONumber", arg: 2, scope: !3368, file: !221, line: 794, type: !60)
!3372 = !DILocation(line: 0, scope: !3368)
!3373 = !DILocation(line: 800, column: 18, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3368, file: !221, line: 800, column: 7)
!3375 = !DILocation(line: 800, column: 7, scope: !3368)
!3376 = !DILocation(line: 0, scope: !3374)
!3377 = !DILocation(line: 809, column: 1, scope: !3368)
!3378 = distinct !DISubprogram(name: "CAN_MessagePending", scope: !221, file: !221, line: 817, type: !3237, scopeLine: 818, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3379)
!3379 = !{!3380, !3381, !3382}
!3380 = !DILocalVariable(name: "CANx", arg: 1, scope: !3378, file: !221, line: 817, type: !223)
!3381 = !DILocalVariable(name: "FIFONumber", arg: 2, scope: !3378, file: !221, line: 817, type: !60)
!3382 = !DILocalVariable(name: "message_pending", scope: !3378, file: !221, line: 819, type: !60)
!3383 = !DILocation(line: 0, scope: !3378)
!3384 = !DILocation(line: 823, column: 7, scope: !3378)
!3385 = !DILocation(line: 825, column: 39, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !221, line: 824, column: 3)
!3387 = distinct !DILexicalBlock(scope: !3378, file: !221, line: 823, column: 7)
!3388 = !DILocation(line: 826, column: 3, scope: !3386)
!3389 = !DILocation(line: 829, column: 39, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3391, file: !221, line: 828, column: 3)
!3391 = distinct !DILexicalBlock(scope: !3387, file: !221, line: 827, column: 12)
!3392 = !DILocation(line: 830, column: 3, scope: !3390)
!3393 = !DILocation(line: 0, scope: !3387)
!3394 = !DILocation(line: 835, column: 3, scope: !3378)
!3395 = distinct !DISubprogram(name: "CAN_OperatingModeRequest", scope: !221, file: !221, line: 867, type: !3237, scopeLine: 868, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3396)
!3396 = !{!3397, !3398, !3399, !3400}
!3397 = !DILocalVariable(name: "CANx", arg: 1, scope: !3395, file: !221, line: 867, type: !223)
!3398 = !DILocalVariable(name: "CAN_OperatingMode", arg: 2, scope: !3395, file: !221, line: 867, type: !60)
!3399 = !DILocalVariable(name: "status", scope: !3395, file: !221, line: 869, type: !60)
!3400 = !DILocalVariable(name: "timeout", scope: !3395, file: !221, line: 872, type: !20)
!3401 = !DILocation(line: 0, scope: !3395)
!3402 = !DILocation(line: 878, column: 7, scope: !3395)
!3403 = !DILocation(line: 881, column: 35, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !221, line: 879, column: 3)
!3405 = distinct !DILexicalBlock(scope: !3395, file: !221, line: 878, column: 7)
!3406 = !DILocation(line: 881, column: 39, scope: !3404)
!3407 = !DILocation(line: 881, column: 79, scope: !3404)
!3408 = !DILocation(line: 881, column: 15, scope: !3404)
!3409 = !DILocation(line: 0, scope: !3404)
!3410 = !DILocation(line: 884, column: 5, scope: !3404)
!3411 = !DILocation(line: 884, column: 20, scope: !3404)
!3412 = !DILocation(line: 884, column: 24, scope: !3404)
!3413 = !DILocation(line: 884, column: 41, scope: !3404)
!3414 = distinct !{!3414, !3410, !3415}
!3415 = !DILocation(line: 887, column: 5, scope: !3404)
!3416 = !DILocation(line: 900, column: 11, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !221, line: 898, column: 3)
!3418 = distinct !DILexicalBlock(scope: !3405, file: !221, line: 897, column: 13)
!3419 = !DILocation(line: 900, column: 15, scope: !3417)
!3420 = !DILocation(line: 0, scope: !3417)
!3421 = !DILocation(line: 903, column: 5, scope: !3417)
!3422 = !DILocation(line: 903, column: 20, scope: !3417)
!3423 = !DILocation(line: 903, column: 24, scope: !3417)
!3424 = !DILocation(line: 903, column: 41, scope: !3417)
!3425 = distinct !{!3425, !3421, !3426}
!3426 = !DILocation(line: 906, column: 5, scope: !3417)
!3427 = !DILocation(line: 919, column: 35, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !221, line: 917, column: 3)
!3429 = distinct !DILexicalBlock(scope: !3418, file: !221, line: 916, column: 13)
!3430 = !DILocation(line: 919, column: 39, scope: !3428)
!3431 = !DILocation(line: 919, column: 78, scope: !3428)
!3432 = !DILocation(line: 919, column: 15, scope: !3428)
!3433 = !DILocation(line: 0, scope: !3428)
!3434 = !DILocation(line: 922, column: 5, scope: !3428)
!3435 = !DILocation(line: 922, column: 20, scope: !3428)
!3436 = !DILocation(line: 922, column: 24, scope: !3428)
!3437 = !DILocation(line: 922, column: 41, scope: !3428)
!3438 = distinct !{!3438, !3434, !3439}
!3439 = !DILocation(line: 925, column: 5, scope: !3428)
!3440 = !DILocation(line: 0, scope: !3405)
!3441 = !DILocation(line: 940, column: 3, scope: !3395)
!3442 = !DILocation(line: 884, column: 58, scope: !3404)
!3443 = !DILocation(line: 886, column: 14, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3404, file: !221, line: 885, column: 5)
!3445 = !DILocation(line: 903, column: 47, scope: !3417)
!3446 = !DILocation(line: 905, column: 14, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3417, file: !221, line: 904, column: 5)
!3448 = !DILocation(line: 922, column: 58, scope: !3428)
!3449 = !DILocation(line: 924, column: 14, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3428, file: !221, line: 923, column: 5)
!3451 = distinct !DISubprogram(name: "CAN_Sleep", scope: !221, file: !221, line: 948, type: !3452, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3454)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!60, !223}
!3454 = !{!3455, !3456}
!3455 = !DILocalVariable(name: "CANx", arg: 1, scope: !3451, file: !221, line: 948, type: !223)
!3456 = !DILocalVariable(name: "sleepstatus", scope: !3451, file: !221, line: 950, type: !60)
!3457 = !DILocation(line: 0, scope: !3451)
!3458 = !DILocation(line: 956, column: 25, scope: !3451)
!3459 = !DILocation(line: 956, column: 30, scope: !3451)
!3460 = !DILocation(line: 956, column: 69, scope: !3451)
!3461 = !DILocation(line: 956, column: 14, scope: !3451)
!3462 = !DILocation(line: 959, column: 14, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3451, file: !221, line: 959, column: 7)
!3464 = !DILocation(line: 959, column: 18, scope: !3463)
!3465 = !DILocation(line: 959, column: 49, scope: !3463)
!3466 = !DILocation(line: 959, column: 7, scope: !3451)
!3467 = !DILocation(line: 965, column: 4, scope: !3451)
!3468 = distinct !DISubprogram(name: "CAN_WakeUp", scope: !221, file: !221, line: 973, type: !3452, scopeLine: 974, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3469)
!3469 = !{!3470, !3471, !3472}
!3470 = !DILocalVariable(name: "CANx", arg: 1, scope: !3468, file: !221, line: 973, type: !223)
!3471 = !DILocalVariable(name: "wait_slak", scope: !3468, file: !221, line: 975, type: !20)
!3472 = !DILocalVariable(name: "wakeupstatus", scope: !3468, file: !221, line: 976, type: !60)
!3473 = !DILocation(line: 0, scope: !3468)
!3474 = !DILocation(line: 982, column: 9, scope: !3468)
!3475 = !DILocation(line: 982, column: 13, scope: !3468)
!3476 = !DILocation(line: 985, column: 3, scope: !3468)
!3477 = !DILocation(line: 985, column: 17, scope: !3468)
!3478 = !DILocation(line: 985, column: 21, scope: !3468)
!3479 = !DILocation(line: 985, column: 37, scope: !3468)
!3480 = distinct !{!3480, !3476, !3481}
!3481 = !DILocation(line: 988, column: 3, scope: !3468)
!3482 = !DILocation(line: 989, column: 13, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3468, file: !221, line: 989, column: 6)
!3484 = !DILocation(line: 989, column: 6, scope: !3468)
!3485 = !DILocation(line: 995, column: 3, scope: !3468)
!3486 = !DILocation(line: 985, column: 53, scope: !3468)
!3487 = !DILocation(line: 987, column: 13, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3468, file: !221, line: 986, column: 3)
!3489 = distinct !DISubprogram(name: "CAN_GetLastErrorCode", scope: !221, file: !221, line: 1035, type: !3452, scopeLine: 1036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3490)
!3490 = !{!3491, !3492}
!3491 = !DILocalVariable(name: "CANx", arg: 1, scope: !3489, file: !221, line: 1035, type: !223)
!3492 = !DILocalVariable(name: "errorcode", scope: !3489, file: !221, line: 1037, type: !60)
!3493 = !DILocation(line: 0, scope: !3489)
!3494 = !DILocation(line: 1043, column: 32, scope: !3489)
!3495 = !{!2861, !840, i64 24}
!3496 = !DILocation(line: 1043, column: 15, scope: !3489)
!3497 = !DILocation(line: 1046, column: 3, scope: !3489)
!3498 = distinct !DISubprogram(name: "CAN_GetReceiveErrorCounter", scope: !221, file: !221, line: 1060, type: !3452, scopeLine: 1061, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3499)
!3499 = !{!3500, !3501}
!3500 = !DILocalVariable(name: "CANx", arg: 1, scope: !3498, file: !221, line: 1060, type: !223)
!3501 = !DILocalVariable(name: "counter", scope: !3498, file: !221, line: 1062, type: !60)
!3502 = !DILocation(line: 0, scope: !3498)
!3503 = !DILocation(line: 1068, column: 30, scope: !3498)
!3504 = !DILocation(line: 1068, column: 48, scope: !3498)
!3505 = !DILocation(line: 1068, column: 13, scope: !3498)
!3506 = !DILocation(line: 1071, column: 3, scope: !3498)
!3507 = distinct !DISubprogram(name: "CAN_GetLSBTransmitErrorCounter", scope: !221, file: !221, line: 1080, type: !3452, scopeLine: 1081, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3508)
!3508 = !{!3509, !3510}
!3509 = !DILocalVariable(name: "CANx", arg: 1, scope: !3507, file: !221, line: 1080, type: !223)
!3510 = !DILocalVariable(name: "counter", scope: !3507, file: !221, line: 1082, type: !60)
!3511 = !DILocation(line: 0, scope: !3507)
!3512 = !DILocation(line: 1088, column: 30, scope: !3507)
!3513 = !DILocation(line: 1088, column: 48, scope: !3507)
!3514 = !DILocation(line: 1088, column: 13, scope: !3507)
!3515 = !DILocation(line: 1091, column: 3, scope: !3507)
!3516 = distinct !DISubprogram(name: "CAN_ITConfig", scope: !221, file: !221, line: 1287, type: !3517, scopeLine: 1288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3519)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{null, !223, !20, !856}
!3519 = !{!3520, !3521, !3522}
!3520 = !DILocalVariable(name: "CANx", arg: 1, scope: !3516, file: !221, line: 1287, type: !223)
!3521 = !DILocalVariable(name: "CAN_IT", arg: 2, scope: !3516, file: !221, line: 1287, type: !20)
!3522 = !DILocalVariable(name: "NewState", arg: 3, scope: !3516, file: !221, line: 1287, type: !856)
!3523 = !DILocation(line: 0, scope: !3516)
!3524 = !DILocation(line: 1294, column: 16, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3516, file: !221, line: 1294, column: 7)
!3526 = !DILocation(line: 1294, column: 7, scope: !3516)
!3527 = !DILocation(line: 1297, column: 11, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3525, file: !221, line: 1295, column: 3)
!3529 = !DILocation(line: 1297, column: 15, scope: !3528)
!3530 = !{!2861, !840, i64 20}
!3531 = !DILocation(line: 1298, column: 3, scope: !3528)
!3532 = !DILocation(line: 1302, column: 18, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3525, file: !221, line: 1300, column: 3)
!3534 = !DILocation(line: 1302, column: 11, scope: !3533)
!3535 = !DILocation(line: 1302, column: 15, scope: !3533)
!3536 = !DILocation(line: 1304, column: 1, scope: !3516)
!3537 = distinct !DISubprogram(name: "CAN_GetFlagStatus", scope: !221, file: !221, line: 1327, type: !3538, scopeLine: 1328, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3540)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!1276, !223, !20}
!3540 = !{!3541, !3542, !3543}
!3541 = !DILocalVariable(name: "CANx", arg: 1, scope: !3537, file: !221, line: 1327, type: !223)
!3542 = !DILocalVariable(name: "CAN_FLAG", arg: 2, scope: !3537, file: !221, line: 1327, type: !20)
!3543 = !DILocalVariable(name: "bitstatus", scope: !3537, file: !221, line: 1329, type: !1276)
!3544 = !DILocation(line: 0, scope: !3537)
!3545 = !DILocation(line: 1336, column: 16, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3537, file: !221, line: 1336, column: 6)
!3547 = !DILocation(line: 1336, column: 33, scope: !3546)
!3548 = !DILocation(line: 1336, column: 6, scope: !3537)
!3549 = !DILocation(line: 1339, column: 16, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !221, line: 1339, column: 9)
!3551 = distinct !DILexicalBlock(scope: !3546, file: !221, line: 1337, column: 3)
!3552 = !DILocation(line: 1350, column: 21, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3546, file: !221, line: 1350, column: 11)
!3554 = !DILocation(line: 1350, column: 38, scope: !3553)
!3555 = !DILocation(line: 1350, column: 11, scope: !3546)
!3556 = !DILocation(line: 1353, column: 16, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !221, line: 1353, column: 9)
!3558 = distinct !DILexicalBlock(scope: !3553, file: !221, line: 1351, column: 3)
!3559 = !DILocation(line: 1364, column: 21, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3553, file: !221, line: 1364, column: 11)
!3561 = !DILocation(line: 1364, column: 38, scope: !3560)
!3562 = !DILocation(line: 1364, column: 11, scope: !3553)
!3563 = !DILocation(line: 1367, column: 16, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !221, line: 1367, column: 9)
!3565 = distinct !DILexicalBlock(scope: !3560, file: !221, line: 1365, column: 3)
!3566 = !DILocation(line: 1378, column: 21, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3560, file: !221, line: 1378, column: 11)
!3568 = !DILocation(line: 1378, column: 39, scope: !3567)
!3569 = !DILocation(line: 1378, column: 11, scope: !3560)
!3570 = !DILocation(line: 1381, column: 16, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !221, line: 1381, column: 9)
!3572 = distinct !DILexicalBlock(scope: !3567, file: !221, line: 1379, column: 3)
!3573 = !DILocation(line: 1395, column: 26, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !221, line: 1395, column: 9)
!3575 = distinct !DILexicalBlock(scope: !3567, file: !221, line: 1393, column: 3)
!3576 = !DILocation(line: 0, scope: !3546)
!3577 = !DILocation(line: 1407, column: 3, scope: !3537)
!3578 = distinct !DISubprogram(name: "CAN_ClearFlag", scope: !221, file: !221, line: 1427, type: !3579, scopeLine: 1428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3581)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{null, !223, !20}
!3581 = !{!3582, !3583, !3584}
!3582 = !DILocalVariable(name: "CANx", arg: 1, scope: !3578, file: !221, line: 1427, type: !223)
!3583 = !DILocalVariable(name: "CAN_FLAG", arg: 2, scope: !3578, file: !221, line: 1427, type: !20)
!3584 = !DILocalVariable(name: "flagtmp", scope: !3578, file: !221, line: 1429, type: !20)
!3585 = !DILocation(line: 0, scope: !3578)
!3586 = !DILocation(line: 1434, column: 16, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3578, file: !221, line: 1434, column: 7)
!3588 = !DILocation(line: 1434, column: 7, scope: !3578)
!3589 = !DILocation(line: 1437, column: 11, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3587, file: !221, line: 1435, column: 3)
!3591 = !DILocation(line: 1437, column: 15, scope: !3590)
!3592 = !DILocation(line: 1438, column: 3, scope: !3590)
!3593 = !DILocation(line: 1441, column: 24, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3587, file: !221, line: 1440, column: 3)
!3595 = !DILocation(line: 1443, column: 19, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3594, file: !221, line: 1443, column: 9)
!3597 = !DILocation(line: 1443, column: 36, scope: !3596)
!3598 = !DILocation(line: 1443, column: 9, scope: !3594)
!3599 = !DILocation(line: 1446, column: 13, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3596, file: !221, line: 1444, column: 5)
!3601 = !DILocation(line: 1446, column: 18, scope: !3600)
!3602 = !{!2861, !840, i64 12}
!3603 = !DILocation(line: 1447, column: 5, scope: !3600)
!3604 = !DILocation(line: 1448, column: 24, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3596, file: !221, line: 1448, column: 14)
!3606 = !DILocation(line: 1448, column: 41, scope: !3605)
!3607 = !DILocation(line: 1448, column: 14, scope: !3596)
!3608 = !DILocation(line: 1451, column: 13, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3605, file: !221, line: 1449, column: 5)
!3610 = !DILocation(line: 1451, column: 18, scope: !3609)
!3611 = !{!2861, !840, i64 16}
!3612 = !DILocation(line: 1452, column: 5, scope: !3609)
!3613 = !DILocation(line: 1453, column: 24, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3605, file: !221, line: 1453, column: 14)
!3615 = !DILocation(line: 1453, column: 40, scope: !3614)
!3616 = !DILocation(line: 1453, column: 14, scope: !3605)
!3617 = !DILocation(line: 1456, column: 13, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3614, file: !221, line: 1454, column: 5)
!3619 = !DILocation(line: 1456, column: 17, scope: !3618)
!3620 = !DILocation(line: 1457, column: 5, scope: !3618)
!3621 = !DILocation(line: 1461, column: 13, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3614, file: !221, line: 1459, column: 5)
!3623 = !DILocation(line: 1461, column: 17, scope: !3622)
!3624 = !DILocation(line: 1464, column: 1, scope: !3578)
!3625 = distinct !DISubprogram(name: "CAN_GetITStatus", scope: !221, file: !221, line: 1487, type: !3626, scopeLine: 1488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3628)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!1359, !223, !20}
!3628 = !{!3629, !3630, !3631}
!3629 = !DILocalVariable(name: "CANx", arg: 1, scope: !3625, file: !221, line: 1487, type: !223)
!3630 = !DILocalVariable(name: "CAN_IT", arg: 2, scope: !3625, file: !221, line: 1487, type: !20)
!3631 = !DILocalVariable(name: "itstatus", scope: !3625, file: !221, line: 1489, type: !1359)
!3632 = !DILocation(line: 0, scope: !3625)
!3633 = !DILocation(line: 1495, column: 12, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3625, file: !221, line: 1495, column: 5)
!3635 = !DILocation(line: 1495, column: 16, scope: !3634)
!3636 = !DILocation(line: 1495, column: 26, scope: !3634)
!3637 = !DILocation(line: 1495, column: 5, scope: !3625)
!3638 = !DILocation(line: 1498, column: 5, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3634, file: !221, line: 1496, column: 2)
!3640 = !DILocation(line: 1502, column: 40, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3639, file: !221, line: 1499, column: 5)
!3642 = !DILocalVariable(name: "CAN_Reg", arg: 1, scope: !3643, file: !221, line: 1669, type: !20)
!3643 = distinct !DISubprogram(name: "CheckITStatus", scope: !221, file: !221, line: 1669, type: !3644, scopeLine: 1670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3646)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{!1359, !20, !20}
!3646 = !{!3642, !3647, !3648}
!3647 = !DILocalVariable(name: "It_Bit", arg: 2, scope: !3643, file: !221, line: 1669, type: !20)
!3648 = !DILocalVariable(name: "pendingbitstatus", scope: !3643, file: !221, line: 1671, type: !1359)
!3649 = !DILocation(line: 0, scope: !3643, inlinedAt: !3650)
!3650 = distinct !DILocation(line: 1502, column: 20, scope: !3641)
!3651 = !DILocation(line: 1673, column: 16, scope: !3652, inlinedAt: !3650)
!3652 = distinct !DILexicalBlock(scope: !3643, file: !221, line: 1673, column: 7)
!3653 = !DILocation(line: 1673, column: 26, scope: !3652, inlinedAt: !3650)
!3654 = !DILocation(line: 1503, column: 9, scope: !3641)
!3655 = !DILocation(line: 1506, column: 40, scope: !3641)
!3656 = !DILocation(line: 0, scope: !3643, inlinedAt: !3657)
!3657 = distinct !DILocation(line: 1506, column: 20, scope: !3641)
!3658 = !DILocation(line: 1673, column: 16, scope: !3652, inlinedAt: !3657)
!3659 = !DILocation(line: 1673, column: 26, scope: !3652, inlinedAt: !3657)
!3660 = !DILocation(line: 1507, column: 9, scope: !3641)
!3661 = !DILocation(line: 1510, column: 40, scope: !3641)
!3662 = !DILocation(line: 0, scope: !3643, inlinedAt: !3663)
!3663 = distinct !DILocation(line: 1510, column: 20, scope: !3641)
!3664 = !DILocation(line: 1511, column: 9, scope: !3641)
!3665 = !DILocation(line: 1514, column: 40, scope: !3641)
!3666 = !DILocation(line: 0, scope: !3643, inlinedAt: !3667)
!3667 = distinct !DILocation(line: 1514, column: 20, scope: !3641)
!3668 = !DILocation(line: 1515, column: 9, scope: !3641)
!3669 = !DILocation(line: 1518, column: 40, scope: !3641)
!3670 = !DILocation(line: 0, scope: !3643, inlinedAt: !3671)
!3671 = distinct !DILocation(line: 1518, column: 20, scope: !3641)
!3672 = !DILocation(line: 1673, column: 16, scope: !3652, inlinedAt: !3671)
!3673 = !DILocation(line: 1673, column: 26, scope: !3652, inlinedAt: !3671)
!3674 = !DILocation(line: 1519, column: 9, scope: !3641)
!3675 = !DILocation(line: 1522, column: 40, scope: !3641)
!3676 = !DILocation(line: 0, scope: !3643, inlinedAt: !3677)
!3677 = distinct !DILocation(line: 1522, column: 20, scope: !3641)
!3678 = !DILocation(line: 1523, column: 9, scope: !3641)
!3679 = !DILocation(line: 1526, column: 40, scope: !3641)
!3680 = !DILocation(line: 0, scope: !3643, inlinedAt: !3681)
!3681 = distinct !DILocation(line: 1526, column: 20, scope: !3641)
!3682 = !DILocation(line: 1527, column: 9, scope: !3641)
!3683 = !DILocation(line: 1530, column: 40, scope: !3641)
!3684 = !DILocation(line: 0, scope: !3643, inlinedAt: !3685)
!3685 = distinct !DILocation(line: 1530, column: 20, scope: !3641)
!3686 = !DILocation(line: 1531, column: 9, scope: !3641)
!3687 = !DILocation(line: 1534, column: 40, scope: !3641)
!3688 = !DILocation(line: 0, scope: !3643, inlinedAt: !3689)
!3689 = distinct !DILocation(line: 1534, column: 20, scope: !3641)
!3690 = !DILocation(line: 1535, column: 9, scope: !3641)
!3691 = !DILocation(line: 1538, column: 40, scope: !3641)
!3692 = !DILocation(line: 0, scope: !3643, inlinedAt: !3693)
!3693 = distinct !DILocation(line: 1538, column: 20, scope: !3641)
!3694 = !DILocation(line: 1673, column: 16, scope: !3652, inlinedAt: !3693)
!3695 = !DILocation(line: 1539, column: 9, scope: !3641)
!3696 = !DILocation(line: 1542, column: 40, scope: !3641)
!3697 = !DILocation(line: 0, scope: !3643, inlinedAt: !3698)
!3698 = distinct !DILocation(line: 1542, column: 20, scope: !3641)
!3699 = !DILocation(line: 1543, column: 9, scope: !3641)
!3700 = !DILocation(line: 1546, column: 40, scope: !3641)
!3701 = !DILocation(line: 0, scope: !3643, inlinedAt: !3702)
!3702 = distinct !DILocation(line: 1546, column: 20, scope: !3641)
!3703 = !DILocation(line: 1547, column: 9, scope: !3641)
!3704 = !DILocation(line: 1550, column: 40, scope: !3641)
!3705 = !DILocation(line: 0, scope: !3643, inlinedAt: !3706)
!3706 = distinct !DILocation(line: 1550, column: 20, scope: !3641)
!3707 = !DILocation(line: 1673, column: 16, scope: !3652, inlinedAt: !3706)
!3708 = !DILocation(line: 1673, column: 26, scope: !3652, inlinedAt: !3706)
!3709 = !DILocation(line: 1551, column: 9, scope: !3641)
!3710 = !DILocation(line: 1554, column: 40, scope: !3641)
!3711 = !DILocation(line: 0, scope: !3643, inlinedAt: !3712)
!3712 = distinct !DILocation(line: 1554, column: 20, scope: !3641)
!3713 = !DILocation(line: 1555, column: 9, scope: !3641)
!3714 = !DILocation(line: 0, scope: !3634)
!3715 = !DILocation(line: 1569, column: 3, scope: !3625)
!3716 = distinct !DISubprogram(name: "CAN_ClearITPendingBit", scope: !221, file: !221, line: 1591, type: !3579, scopeLine: 1592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !220, retainedNodes: !3717)
!3717 = !{!3718, !3719}
!3718 = !DILocalVariable(name: "CANx", arg: 1, scope: !3716, file: !221, line: 1591, type: !223)
!3719 = !DILocalVariable(name: "CAN_IT", arg: 2, scope: !3716, file: !221, line: 1591, type: !20)
!3720 = !DILocation(line: 0, scope: !3716)
!3721 = !DILocation(line: 1597, column: 3, scope: !3716)
!3722 = !DILocation(line: 1601, column: 13, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3716, file: !221, line: 1598, column: 3)
!3724 = !DILocation(line: 1601, column: 17, scope: !3723)
!3725 = !DILocation(line: 1602, column: 7, scope: !3723)
!3726 = !DILocation(line: 1605, column: 13, scope: !3723)
!3727 = !DILocation(line: 1605, column: 18, scope: !3723)
!3728 = !DILocation(line: 1606, column: 7, scope: !3723)
!3729 = !DILocation(line: 1609, column: 13, scope: !3723)
!3730 = !DILocation(line: 1609, column: 18, scope: !3723)
!3731 = !DILocation(line: 1610, column: 7, scope: !3723)
!3732 = !DILocation(line: 1613, column: 13, scope: !3723)
!3733 = !DILocation(line: 1613, column: 18, scope: !3723)
!3734 = !DILocation(line: 1614, column: 7, scope: !3723)
!3735 = !DILocation(line: 1617, column: 13, scope: !3723)
!3736 = !DILocation(line: 1617, column: 18, scope: !3723)
!3737 = !DILocation(line: 1618, column: 7, scope: !3723)
!3738 = !DILocation(line: 1621, column: 13, scope: !3723)
!3739 = !DILocation(line: 1621, column: 17, scope: !3723)
!3740 = !DILocation(line: 1622, column: 7, scope: !3723)
!3741 = !DILocation(line: 1625, column: 13, scope: !3723)
!3742 = !DILocation(line: 1625, column: 17, scope: !3723)
!3743 = !DILocation(line: 1626, column: 7, scope: !3723)
!3744 = !DILocation(line: 1629, column: 13, scope: !3723)
!3745 = !DILocation(line: 1629, column: 17, scope: !3723)
!3746 = !DILocation(line: 1631, column: 7, scope: !3723)
!3747 = !DILocation(line: 1634, column: 13, scope: !3723)
!3748 = !DILocation(line: 1634, column: 17, scope: !3723)
!3749 = !DILocation(line: 1636, column: 7, scope: !3723)
!3750 = !DILocation(line: 1639, column: 13, scope: !3723)
!3751 = !DILocation(line: 1639, column: 17, scope: !3723)
!3752 = !DILocation(line: 1641, column: 8, scope: !3723)
!3753 = !DILocation(line: 1644, column: 13, scope: !3723)
!3754 = !DILocation(line: 1644, column: 17, scope: !3723)
!3755 = !DILocation(line: 1646, column: 13, scope: !3723)
!3756 = !DILocation(line: 1646, column: 17, scope: !3723)
!3757 = !DILocation(line: 1647, column: 7, scope: !3723)
!3758 = !DILocation(line: 1650, column: 13, scope: !3723)
!3759 = !DILocation(line: 1650, column: 17, scope: !3723)
!3760 = !DILocation(line: 1652, column: 13, scope: !3723)
!3761 = !DILocation(line: 1652, column: 17, scope: !3723)
!3762 = !DILocation(line: 1654, column: 8, scope: !3723)
!3763 = !DILocation(line: 1658, column: 1, scope: !3716)
!3764 = distinct !DISubprogram(name: "FLASH_SetLatency", scope: !281, file: !281, line: 166, type: !831, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !3765)
!3765 = !{!3766}
!3766 = !DILocalVariable(name: "FLASH_Latency", arg: 1, scope: !3764, file: !281, line: 166, type: !20)
!3767 = !DILocation(line: 0, scope: !3764)
!3768 = !DILocation(line: 172, column: 40, scope: !3764)
!3769 = !DILocation(line: 172, column: 38, scope: !3764)
!3770 = !DILocation(line: 173, column: 1, scope: !3764)
!3771 = distinct !DISubprogram(name: "FLASH_PrefetchBufferCmd", scope: !281, file: !281, line: 181, type: !1502, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !3772)
!3772 = !{!3773}
!3773 = !DILocalVariable(name: "NewState", arg: 1, scope: !3771, file: !281, line: 181, type: !856)
!3774 = !DILocation(line: 0, scope: !3771)
!3775 = !DILocation(line: 187, column: 15, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3771, file: !281, line: 187, column: 6)
!3777 = !DILocation(line: 0, scope: !3776)
!3778 = !DILocation(line: 187, column: 6, scope: !3771)
!3779 = !DILocation(line: 195, column: 1, scope: !3771)
!3780 = distinct !DISubprogram(name: "FLASH_InstructionCacheCmd", scope: !281, file: !281, line: 203, type: !1502, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !3781)
!3781 = !{!3782}
!3782 = !DILocalVariable(name: "NewState", arg: 1, scope: !3780, file: !281, line: 203, type: !856)
!3783 = !DILocation(line: 0, scope: !3780)
!3784 = !DILocation(line: 208, column: 15, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3780, file: !281, line: 208, column: 6)
!3786 = !DILocation(line: 0, scope: !3785)
!3787 = !DILocation(line: 208, column: 6, scope: !3780)
!3788 = !DILocation(line: 216, column: 1, scope: !3780)
!3789 = distinct !DISubprogram(name: "FLASH_DataCacheCmd", scope: !281, file: !281, line: 224, type: !1502, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !3790)
!3790 = !{!3791}
!3791 = !DILocalVariable(name: "NewState", arg: 1, scope: !3789, file: !281, line: 224, type: !856)
!3792 = !DILocation(line: 0, scope: !3789)
!3793 = !DILocation(line: 229, column: 15, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3789, file: !281, line: 229, column: 6)
!3795 = !DILocation(line: 0, scope: !3794)
!3796 = !DILocation(line: 229, column: 6, scope: !3789)
!3797 = !DILocation(line: 237, column: 1, scope: !3789)
!3798 = distinct !DISubprogram(name: "FLASH_InstructionCacheReset", scope: !281, file: !281, line: 245, type: !1415, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !361)
!3799 = !DILocation(line: 247, column: 14, scope: !3798)
!3800 = !DILocation(line: 248, column: 1, scope: !3798)
!3801 = distinct !DISubprogram(name: "FLASH_DataCacheReset", scope: !281, file: !281, line: 256, type: !1415, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !361)
!3802 = !DILocation(line: 258, column: 14, scope: !3801)
!3803 = !DILocation(line: 259, column: 1, scope: !3801)
!3804 = distinct !DISubprogram(name: "FLASH_Unlock", scope: !281, file: !281, line: 300, type: !1415, scopeLine: 301, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !361)
!3805 = !DILocation(line: 302, column: 14, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3804, file: !281, line: 302, column: 6)
!3807 = !DILocation(line: 302, column: 34, scope: !3806)
!3808 = !DILocation(line: 302, column: 6, scope: !3804)
!3809 = !DILocation(line: 305, column: 17, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3806, file: !281, line: 303, column: 3)
!3811 = !DILocation(line: 306, column: 17, scope: !3810)
!3812 = !DILocation(line: 307, column: 3, scope: !3810)
!3813 = !DILocation(line: 308, column: 1, scope: !3804)
!3814 = distinct !DISubprogram(name: "FLASH_Lock", scope: !281, file: !281, line: 315, type: !1415, scopeLine: 316, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !361)
!3815 = !DILocation(line: 318, column: 13, scope: !3814)
!3816 = !DILocation(line: 319, column: 1, scope: !3814)
!3817 = distinct !DISubprogram(name: "FLASH_EraseSector", scope: !281, file: !281, line: 341, type: !3818, scopeLine: 342, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !3821)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!3820, !20, !60}
!3820 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_Status", file: !284, line: 56, baseType: !283)
!3821 = !{!3822, !3823, !3824, !3825}
!3822 = !DILocalVariable(name: "FLASH_Sector", arg: 1, scope: !3817, file: !281, line: 341, type: !20)
!3823 = !DILocalVariable(name: "VoltageRange", arg: 2, scope: !3817, file: !281, line: 341, type: !60)
!3824 = !DILocalVariable(name: "tmp_psize", scope: !3817, file: !281, line: 343, type: !20)
!3825 = !DILocalVariable(name: "status", scope: !3817, file: !281, line: 344, type: !3820)
!3826 = !DILocation(line: 0, scope: !3817)
!3827 = !DILocation(line: 350, column: 6, scope: !3817)
!3828 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !3835)
!3829 = distinct !DISubprogram(name: "FLASH_WaitForLastOperation", scope: !281, file: !281, line: 1022, type: !3830, scopeLine: 1023, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !3832)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!3820}
!3832 = !{!3833}
!3833 = !DILocalVariable(name: "status", scope: !3829, file: !281, line: 1024, type: !3834)
!3834 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3820)
!3835 = distinct !DILocation(line: 367, column: 12, scope: !3817)
!3836 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !3835)
!3837 = !DILocalVariable(name: "flashstatus", scope: !3838, file: !281, line: 981, type: !3820)
!3838 = distinct !DISubprogram(name: "FLASH_GetStatus", scope: !281, file: !281, line: 979, type: !3830, scopeLine: 980, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !3839)
!3839 = !{!3837}
!3840 = !DILocation(line: 0, scope: !3838, inlinedAt: !3841)
!3841 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !3835)
!3842 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !3841)
!3843 = distinct !DILexicalBlock(scope: !3838, file: !281, line: 983, column: 6)
!3844 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !3841)
!3845 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !3841)
!3846 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !3841)
!3847 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !3841)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !281, line: 989, column: 8)
!3849 = distinct !DILexicalBlock(scope: !3843, file: !281, line: 988, column: 3)
!3850 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !3841)
!3851 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !3841)
!3852 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !3841)
!3853 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !3841)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !281, line: 995, column: 10)
!3855 = distinct !DILexicalBlock(scope: !3848, file: !281, line: 994, column: 5)
!3856 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !3841)
!3857 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !3841)
!3858 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !3841)
!3859 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !3841)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !281, line: 1001, column: 12)
!3861 = distinct !DILexicalBlock(scope: !3854, file: !281, line: 1000, column: 7)
!3862 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !3841)
!3863 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !3841)
!3864 = !DILocation(line: 0, scope: !3843, inlinedAt: !3841)
!3865 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !3835)
!3866 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !3835)
!3867 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !3835)
!3868 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !3835)
!3869 = !DILocation(line: 0, scope: !3838, inlinedAt: !3870)
!3870 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !3835)
!3871 = distinct !DILexicalBlock(scope: !3829, file: !281, line: 1033, column: 3)
!3872 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !3870)
!3873 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !3870)
!3874 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !3870)
!3875 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !3870)
!3876 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !3870)
!3877 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !3870)
!3878 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !3870)
!3879 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !3870)
!3880 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !3870)
!3881 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !3870)
!3882 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !3870)
!3883 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !3870)
!3884 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !3870)
!3885 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !3870)
!3886 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !3870)
!3887 = !DILocation(line: 0, scope: !3843, inlinedAt: !3870)
!3888 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !3835)
!3889 = distinct !{!3889, !3868, !3890}
!3890 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !3835)
!3891 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !3835)
!3892 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !3835)
!3893 = !DILocation(line: 369, column: 13, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3817, file: !281, line: 369, column: 6)
!3895 = !DILocation(line: 369, column: 6, scope: !3817)
!3896 = !DILocation(line: 372, column: 15, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3894, file: !281, line: 370, column: 3)
!3898 = !DILocation(line: 373, column: 15, scope: !3897)
!3899 = !DILocation(line: 374, column: 15, scope: !3897)
!3900 = !DILocation(line: 375, column: 15, scope: !3897)
!3901 = !DILocation(line: 376, column: 15, scope: !3897)
!3902 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !3903)
!3903 = distinct !DILocation(line: 379, column: 14, scope: !3897)
!3904 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !3903)
!3905 = !DILocation(line: 0, scope: !3838, inlinedAt: !3906)
!3906 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !3903)
!3907 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !3906)
!3908 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !3906)
!3909 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !3906)
!3910 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !3906)
!3911 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !3906)
!3912 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !3906)
!3913 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !3906)
!3914 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !3906)
!3915 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !3906)
!3916 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !3906)
!3917 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !3906)
!3918 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !3906)
!3919 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !3906)
!3920 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !3906)
!3921 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !3906)
!3922 = !DILocation(line: 0, scope: !3843, inlinedAt: !3906)
!3923 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !3903)
!3924 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !3903)
!3925 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !3903)
!3926 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !3903)
!3927 = !DILocation(line: 0, scope: !3838, inlinedAt: !3928)
!3928 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !3903)
!3929 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !3928)
!3930 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !3928)
!3931 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !3928)
!3932 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !3928)
!3933 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !3928)
!3934 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !3928)
!3935 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !3928)
!3936 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !3928)
!3937 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !3928)
!3938 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !3928)
!3939 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !3928)
!3940 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !3928)
!3941 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !3928)
!3942 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !3928)
!3943 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !3928)
!3944 = !DILocation(line: 0, scope: !3843, inlinedAt: !3928)
!3945 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !3903)
!3946 = distinct !{!3946, !3926, !3947}
!3947 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !3903)
!3948 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !3903)
!3949 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !3903)
!3950 = !DILocation(line: 382, column: 15, scope: !3897)
!3951 = !DILocation(line: 383, column: 15, scope: !3897)
!3952 = !DILocation(line: 384, column: 3, scope: !3897)
!3953 = !DILocation(line: 386, column: 3, scope: !3817)
!3954 = !DILocation(line: 1024, column: 3, scope: !3829)
!3955 = !DILocation(line: 1024, column: 21, scope: !3829)
!3956 = !DILocation(line: 0, scope: !3838, inlinedAt: !3957)
!3957 = distinct !DILocation(line: 1027, column: 12, scope: !3829)
!3958 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !3957)
!3959 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !3957)
!3960 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !3957)
!3961 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !3957)
!3962 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !3957)
!3963 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !3957)
!3964 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !3957)
!3965 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !3957)
!3966 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !3957)
!3967 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !3957)
!3968 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !3957)
!3969 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !3957)
!3970 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !3957)
!3971 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !3957)
!3972 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !3957)
!3973 = !DILocation(line: 0, scope: !3843, inlinedAt: !3957)
!3974 = !DILocation(line: 1027, column: 10, scope: !3829)
!3975 = !DILocation(line: 1032, column: 9, scope: !3829)
!3976 = !DILocation(line: 1032, column: 16, scope: !3829)
!3977 = !DILocation(line: 1032, column: 3, scope: !3829)
!3978 = !DILocation(line: 0, scope: !3838, inlinedAt: !3979)
!3979 = distinct !DILocation(line: 1034, column: 14, scope: !3871)
!3980 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !3979)
!3981 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !3979)
!3982 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !3979)
!3983 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !3979)
!3984 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !3979)
!3985 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !3979)
!3986 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !3979)
!3987 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !3979)
!3988 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !3979)
!3989 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !3979)
!3990 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !3979)
!3991 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !3979)
!3992 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !3979)
!3993 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !3979)
!3994 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !3979)
!3995 = !DILocation(line: 0, scope: !3843, inlinedAt: !3979)
!3996 = !DILocation(line: 1034, column: 12, scope: !3871)
!3997 = distinct !{!3997, !3977, !3998}
!3998 = !DILocation(line: 1035, column: 3, scope: !3829)
!3999 = !DILocation(line: 1037, column: 10, scope: !3829)
!4000 = !DILocation(line: 1038, column: 1, scope: !3829)
!4001 = !DILocation(line: 1037, column: 3, scope: !3829)
!4002 = distinct !DISubprogram(name: "FLASH_EraseAllSectors", scope: !281, file: !281, line: 406, type: !4003, scopeLine: 407, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4005)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!3820, !60}
!4005 = !{!4006, !4007, !4008}
!4006 = !DILocalVariable(name: "VoltageRange", arg: 1, scope: !4002, file: !281, line: 406, type: !60)
!4007 = !DILocalVariable(name: "tmp_psize", scope: !4002, file: !281, line: 408, type: !20)
!4008 = !DILocalVariable(name: "status", scope: !4002, file: !281, line: 409, type: !3820)
!4009 = !DILocation(line: 0, scope: !4002)
!4010 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4011)
!4011 = distinct !DILocation(line: 412, column: 12, scope: !4002)
!4012 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4011)
!4013 = !DILocation(line: 0, scope: !3838, inlinedAt: !4014)
!4014 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4011)
!4015 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4014)
!4016 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4014)
!4017 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4014)
!4018 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4014)
!4019 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4014)
!4020 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4014)
!4021 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4014)
!4022 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4014)
!4023 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4014)
!4024 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4014)
!4025 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4014)
!4026 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4014)
!4027 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4014)
!4028 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4014)
!4029 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4014)
!4030 = !DILocation(line: 0, scope: !3843, inlinedAt: !4014)
!4031 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4011)
!4032 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4011)
!4033 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4011)
!4034 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4011)
!4035 = !DILocation(line: 0, scope: !3838, inlinedAt: !4036)
!4036 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4011)
!4037 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4036)
!4038 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4036)
!4039 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4036)
!4040 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4036)
!4041 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4036)
!4042 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4036)
!4043 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4036)
!4044 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4036)
!4045 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4036)
!4046 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4036)
!4047 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4036)
!4048 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4036)
!4049 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4036)
!4050 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4036)
!4051 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4036)
!4052 = !DILocation(line: 0, scope: !3843, inlinedAt: !4036)
!4053 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4011)
!4054 = distinct !{!4054, !4034, !4055}
!4055 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4011)
!4056 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4011)
!4057 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4011)
!4058 = !DILocation(line: 431, column: 13, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4002, file: !281, line: 431, column: 6)
!4060 = !DILocation(line: 431, column: 6, scope: !4002)
!4061 = !DILocation(line: 415, column: 6, scope: !4002)
!4062 = !DILocation(line: 434, column: 16, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4059, file: !281, line: 432, column: 3)
!4064 = !DILocation(line: 435, column: 16, scope: !4063)
!4065 = !DILocation(line: 436, column: 16, scope: !4063)
!4066 = !DILocation(line: 437, column: 16, scope: !4063)
!4067 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4068)
!4068 = distinct !DILocation(line: 440, column: 14, scope: !4063)
!4069 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4068)
!4070 = !DILocation(line: 0, scope: !3838, inlinedAt: !4071)
!4071 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4068)
!4072 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4071)
!4073 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4071)
!4074 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4071)
!4075 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4071)
!4076 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4071)
!4077 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4071)
!4078 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4071)
!4079 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4071)
!4080 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4071)
!4081 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4071)
!4082 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4071)
!4083 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4071)
!4084 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4071)
!4085 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4071)
!4086 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4071)
!4087 = !DILocation(line: 0, scope: !3843, inlinedAt: !4071)
!4088 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4068)
!4089 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4068)
!4090 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4068)
!4091 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4068)
!4092 = !DILocation(line: 0, scope: !3838, inlinedAt: !4093)
!4093 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4068)
!4094 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4093)
!4095 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4093)
!4096 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4093)
!4097 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4093)
!4098 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4093)
!4099 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4093)
!4100 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4093)
!4101 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4093)
!4102 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4093)
!4103 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4093)
!4104 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4093)
!4105 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4093)
!4106 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4093)
!4107 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4093)
!4108 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4093)
!4109 = !DILocation(line: 0, scope: !3843, inlinedAt: !4093)
!4110 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4068)
!4111 = distinct !{!4111, !4091, !4112}
!4112 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4068)
!4113 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4068)
!4114 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4068)
!4115 = !DILocation(line: 443, column: 15, scope: !4063)
!4116 = !DILocation(line: 445, column: 3, scope: !4063)
!4117 = !DILocation(line: 447, column: 3, scope: !4002)
!4118 = distinct !DISubprogram(name: "FLASH_ProgramDoubleWord", scope: !281, file: !281, line: 459, type: !4119, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4121)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!3820, !20, !307}
!4121 = !{!4122, !4123, !4124}
!4122 = !DILocalVariable(name: "Address", arg: 1, scope: !4118, file: !281, line: 459, type: !20)
!4123 = !DILocalVariable(name: "Data", arg: 2, scope: !4118, file: !281, line: 459, type: !307)
!4124 = !DILocalVariable(name: "status", scope: !4118, file: !281, line: 461, type: !3820)
!4125 = !DILocation(line: 0, scope: !4118)
!4126 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4127)
!4127 = distinct !DILocation(line: 467, column: 12, scope: !4118)
!4128 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4127)
!4129 = !DILocation(line: 0, scope: !3838, inlinedAt: !4130)
!4130 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4127)
!4131 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4130)
!4132 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4130)
!4133 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4130)
!4134 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4130)
!4135 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4130)
!4136 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4130)
!4137 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4130)
!4138 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4130)
!4139 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4130)
!4140 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4130)
!4141 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4130)
!4142 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4130)
!4143 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4130)
!4144 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4130)
!4145 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4130)
!4146 = !DILocation(line: 0, scope: !3843, inlinedAt: !4130)
!4147 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4127)
!4148 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4127)
!4149 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4127)
!4150 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4127)
!4151 = !DILocation(line: 0, scope: !3838, inlinedAt: !4152)
!4152 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4127)
!4153 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4152)
!4154 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4152)
!4155 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4152)
!4156 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4152)
!4157 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4152)
!4158 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4152)
!4159 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4152)
!4160 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4152)
!4161 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4152)
!4162 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4152)
!4163 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4152)
!4164 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4152)
!4165 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4152)
!4166 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4152)
!4167 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4152)
!4168 = !DILocation(line: 0, scope: !3843, inlinedAt: !4152)
!4169 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4127)
!4170 = distinct !{!4170, !4150, !4171}
!4171 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4127)
!4172 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4127)
!4173 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4127)
!4174 = !DILocation(line: 469, column: 13, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4118, file: !281, line: 469, column: 6)
!4176 = !DILocation(line: 469, column: 6, scope: !4118)
!4177 = !DILocation(line: 472, column: 15, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4175, file: !281, line: 470, column: 3)
!4179 = !DILocation(line: 473, column: 15, scope: !4178)
!4180 = !DILocation(line: 474, column: 15, scope: !4178)
!4181 = !DILocation(line: 476, column: 6, scope: !4178)
!4182 = !DILocation(line: 476, column: 30, scope: !4178)
!4183 = !{!4184, !4184, i64 0}
!4184 = !{!"long long", !841, i64 0}
!4185 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4186)
!4186 = distinct !DILocation(line: 479, column: 14, scope: !4178)
!4187 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4186)
!4188 = !DILocation(line: 0, scope: !3838, inlinedAt: !4189)
!4189 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4186)
!4190 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4189)
!4191 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4189)
!4192 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4189)
!4193 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4189)
!4194 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4189)
!4195 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4189)
!4196 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4189)
!4197 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4189)
!4198 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4189)
!4199 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4189)
!4200 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4189)
!4201 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4189)
!4202 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4189)
!4203 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4189)
!4204 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4189)
!4205 = !DILocation(line: 0, scope: !3843, inlinedAt: !4189)
!4206 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4186)
!4207 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4186)
!4208 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4186)
!4209 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4186)
!4210 = !DILocation(line: 0, scope: !3838, inlinedAt: !4211)
!4211 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4186)
!4212 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4211)
!4213 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4211)
!4214 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4211)
!4215 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4211)
!4216 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4211)
!4217 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4211)
!4218 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4211)
!4219 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4211)
!4220 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4211)
!4221 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4211)
!4222 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4211)
!4223 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4211)
!4224 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4211)
!4225 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4211)
!4226 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4211)
!4227 = !DILocation(line: 0, scope: !3843, inlinedAt: !4211)
!4228 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4186)
!4229 = distinct !{!4229, !4209, !4230}
!4230 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4186)
!4231 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4186)
!4232 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4186)
!4233 = !DILocation(line: 482, column: 15, scope: !4178)
!4234 = !DILocation(line: 483, column: 3, scope: !4178)
!4235 = !DILocation(line: 485, column: 3, scope: !4118)
!4236 = distinct !DISubprogram(name: "FLASH_ProgramWord", scope: !281, file: !281, line: 497, type: !4237, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4239)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!3820, !20, !20}
!4239 = !{!4240, !4241, !4242}
!4240 = !DILocalVariable(name: "Address", arg: 1, scope: !4236, file: !281, line: 497, type: !20)
!4241 = !DILocalVariable(name: "Data", arg: 2, scope: !4236, file: !281, line: 497, type: !20)
!4242 = !DILocalVariable(name: "status", scope: !4236, file: !281, line: 499, type: !3820)
!4243 = !DILocation(line: 0, scope: !4236)
!4244 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4245)
!4245 = distinct !DILocation(line: 505, column: 12, scope: !4236)
!4246 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4245)
!4247 = !DILocation(line: 0, scope: !3838, inlinedAt: !4248)
!4248 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4245)
!4249 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4248)
!4250 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4248)
!4251 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4248)
!4252 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4248)
!4253 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4248)
!4254 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4248)
!4255 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4248)
!4256 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4248)
!4257 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4248)
!4258 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4248)
!4259 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4248)
!4260 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4248)
!4261 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4248)
!4262 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4248)
!4263 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4248)
!4264 = !DILocation(line: 0, scope: !3843, inlinedAt: !4248)
!4265 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4245)
!4266 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4245)
!4267 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4245)
!4268 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4245)
!4269 = !DILocation(line: 0, scope: !3838, inlinedAt: !4270)
!4270 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4245)
!4271 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4270)
!4272 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4270)
!4273 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4270)
!4274 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4270)
!4275 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4270)
!4276 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4270)
!4277 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4270)
!4278 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4270)
!4279 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4270)
!4280 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4270)
!4281 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4270)
!4282 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4270)
!4283 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4270)
!4284 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4270)
!4285 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4270)
!4286 = !DILocation(line: 0, scope: !3843, inlinedAt: !4270)
!4287 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4245)
!4288 = distinct !{!4288, !4268, !4289}
!4289 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4245)
!4290 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4245)
!4291 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4245)
!4292 = !DILocation(line: 507, column: 13, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4236, file: !281, line: 507, column: 6)
!4294 = !DILocation(line: 507, column: 6, scope: !4236)
!4295 = !DILocation(line: 510, column: 15, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4293, file: !281, line: 508, column: 3)
!4297 = !DILocation(line: 511, column: 15, scope: !4296)
!4298 = !DILocation(line: 512, column: 15, scope: !4296)
!4299 = !DILocation(line: 514, column: 6, scope: !4296)
!4300 = !DILocation(line: 514, column: 30, scope: !4296)
!4301 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4302)
!4302 = distinct !DILocation(line: 517, column: 14, scope: !4296)
!4303 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4302)
!4304 = !DILocation(line: 0, scope: !3838, inlinedAt: !4305)
!4305 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4302)
!4306 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4305)
!4307 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4305)
!4308 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4305)
!4309 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4305)
!4310 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4305)
!4311 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4305)
!4312 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4305)
!4313 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4305)
!4314 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4305)
!4315 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4305)
!4316 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4305)
!4317 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4305)
!4318 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4305)
!4319 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4305)
!4320 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4305)
!4321 = !DILocation(line: 0, scope: !3843, inlinedAt: !4305)
!4322 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4302)
!4323 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4302)
!4324 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4302)
!4325 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4302)
!4326 = !DILocation(line: 0, scope: !3838, inlinedAt: !4327)
!4327 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4302)
!4328 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4327)
!4329 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4327)
!4330 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4327)
!4331 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4327)
!4332 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4327)
!4333 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4327)
!4334 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4327)
!4335 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4327)
!4336 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4327)
!4337 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4327)
!4338 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4327)
!4339 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4327)
!4340 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4327)
!4341 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4327)
!4342 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4327)
!4343 = !DILocation(line: 0, scope: !3843, inlinedAt: !4327)
!4344 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4302)
!4345 = distinct !{!4345, !4325, !4346}
!4346 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4302)
!4347 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4302)
!4348 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4302)
!4349 = !DILocation(line: 520, column: 15, scope: !4296)
!4350 = !DILocation(line: 521, column: 3, scope: !4296)
!4351 = !DILocation(line: 523, column: 3, scope: !4236)
!4352 = distinct !DISubprogram(name: "FLASH_ProgramHalfWord", scope: !281, file: !281, line: 535, type: !4353, scopeLine: 536, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4355)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!3820, !20, !64}
!4355 = !{!4356, !4357, !4358}
!4356 = !DILocalVariable(name: "Address", arg: 1, scope: !4352, file: !281, line: 535, type: !20)
!4357 = !DILocalVariable(name: "Data", arg: 2, scope: !4352, file: !281, line: 535, type: !64)
!4358 = !DILocalVariable(name: "status", scope: !4352, file: !281, line: 537, type: !3820)
!4359 = !DILocation(line: 0, scope: !4352)
!4360 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4361)
!4361 = distinct !DILocation(line: 543, column: 12, scope: !4352)
!4362 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4361)
!4363 = !DILocation(line: 0, scope: !3838, inlinedAt: !4364)
!4364 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4361)
!4365 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4364)
!4366 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4364)
!4367 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4364)
!4368 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4364)
!4369 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4364)
!4370 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4364)
!4371 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4364)
!4372 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4364)
!4373 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4364)
!4374 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4364)
!4375 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4364)
!4376 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4364)
!4377 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4364)
!4378 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4364)
!4379 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4364)
!4380 = !DILocation(line: 0, scope: !3843, inlinedAt: !4364)
!4381 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4361)
!4382 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4361)
!4383 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4361)
!4384 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4361)
!4385 = !DILocation(line: 0, scope: !3838, inlinedAt: !4386)
!4386 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4361)
!4387 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4386)
!4388 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4386)
!4389 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4386)
!4390 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4386)
!4391 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4386)
!4392 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4386)
!4393 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4386)
!4394 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4386)
!4395 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4386)
!4396 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4386)
!4397 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4386)
!4398 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4386)
!4399 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4386)
!4400 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4386)
!4401 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4386)
!4402 = !DILocation(line: 0, scope: !3843, inlinedAt: !4386)
!4403 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4361)
!4404 = distinct !{!4404, !4384, !4405}
!4405 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4361)
!4406 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4361)
!4407 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4361)
!4408 = !DILocation(line: 545, column: 13, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4352, file: !281, line: 545, column: 6)
!4410 = !DILocation(line: 545, column: 6, scope: !4352)
!4411 = !DILocation(line: 548, column: 15, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4409, file: !281, line: 546, column: 3)
!4413 = !DILocation(line: 549, column: 15, scope: !4412)
!4414 = !DILocation(line: 550, column: 15, scope: !4412)
!4415 = !DILocation(line: 552, column: 6, scope: !4412)
!4416 = !DILocation(line: 552, column: 30, scope: !4412)
!4417 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4418)
!4418 = distinct !DILocation(line: 555, column: 14, scope: !4412)
!4419 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4418)
!4420 = !DILocation(line: 0, scope: !3838, inlinedAt: !4421)
!4421 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4418)
!4422 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4421)
!4423 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4421)
!4424 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4421)
!4425 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4421)
!4426 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4421)
!4427 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4421)
!4428 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4421)
!4429 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4421)
!4430 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4421)
!4431 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4421)
!4432 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4421)
!4433 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4421)
!4434 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4421)
!4435 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4421)
!4436 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4421)
!4437 = !DILocation(line: 0, scope: !3843, inlinedAt: !4421)
!4438 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4418)
!4439 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4418)
!4440 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4418)
!4441 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4418)
!4442 = !DILocation(line: 0, scope: !3838, inlinedAt: !4443)
!4443 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4418)
!4444 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4443)
!4445 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4443)
!4446 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4443)
!4447 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4443)
!4448 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4443)
!4449 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4443)
!4450 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4443)
!4451 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4443)
!4452 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4443)
!4453 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4443)
!4454 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4443)
!4455 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4443)
!4456 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4443)
!4457 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4443)
!4458 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4443)
!4459 = !DILocation(line: 0, scope: !3843, inlinedAt: !4443)
!4460 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4418)
!4461 = distinct !{!4461, !4441, !4462}
!4462 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4418)
!4463 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4418)
!4464 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4418)
!4465 = !DILocation(line: 558, column: 15, scope: !4412)
!4466 = !DILocation(line: 559, column: 3, scope: !4412)
!4467 = !DILocation(line: 561, column: 3, scope: !4352)
!4468 = distinct !DISubprogram(name: "FLASH_ProgramByte", scope: !281, file: !281, line: 573, type: !3818, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4469)
!4469 = !{!4470, !4471, !4472}
!4470 = !DILocalVariable(name: "Address", arg: 1, scope: !4468, file: !281, line: 573, type: !20)
!4471 = !DILocalVariable(name: "Data", arg: 2, scope: !4468, file: !281, line: 573, type: !60)
!4472 = !DILocalVariable(name: "status", scope: !4468, file: !281, line: 575, type: !3820)
!4473 = !DILocation(line: 0, scope: !4468)
!4474 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4475)
!4475 = distinct !DILocation(line: 581, column: 12, scope: !4468)
!4476 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4475)
!4477 = !DILocation(line: 0, scope: !3838, inlinedAt: !4478)
!4478 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4475)
!4479 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4478)
!4480 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4478)
!4481 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4478)
!4482 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4478)
!4483 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4478)
!4484 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4478)
!4485 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4478)
!4486 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4478)
!4487 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4478)
!4488 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4478)
!4489 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4478)
!4490 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4478)
!4491 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4478)
!4492 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4478)
!4493 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4478)
!4494 = !DILocation(line: 0, scope: !3843, inlinedAt: !4478)
!4495 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4475)
!4496 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4475)
!4497 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4475)
!4498 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4475)
!4499 = !DILocation(line: 0, scope: !3838, inlinedAt: !4500)
!4500 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4475)
!4501 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4500)
!4502 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4500)
!4503 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4500)
!4504 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4500)
!4505 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4500)
!4506 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4500)
!4507 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4500)
!4508 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4500)
!4509 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4500)
!4510 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4500)
!4511 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4500)
!4512 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4500)
!4513 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4500)
!4514 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4500)
!4515 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4500)
!4516 = !DILocation(line: 0, scope: !3843, inlinedAt: !4500)
!4517 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4475)
!4518 = distinct !{!4518, !4498, !4519}
!4519 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4475)
!4520 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4475)
!4521 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4475)
!4522 = !DILocation(line: 583, column: 13, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4468, file: !281, line: 583, column: 6)
!4524 = !DILocation(line: 583, column: 6, scope: !4468)
!4525 = !DILocation(line: 586, column: 15, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4523, file: !281, line: 584, column: 3)
!4527 = !DILocation(line: 587, column: 15, scope: !4526)
!4528 = !DILocation(line: 588, column: 15, scope: !4526)
!4529 = !DILocation(line: 590, column: 6, scope: !4526)
!4530 = !DILocation(line: 590, column: 29, scope: !4526)
!4531 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4532)
!4532 = distinct !DILocation(line: 593, column: 14, scope: !4526)
!4533 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4532)
!4534 = !DILocation(line: 0, scope: !3838, inlinedAt: !4535)
!4535 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4532)
!4536 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4535)
!4537 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4535)
!4538 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4535)
!4539 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4535)
!4540 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4535)
!4541 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4535)
!4542 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4535)
!4543 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4535)
!4544 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4535)
!4545 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4535)
!4546 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4535)
!4547 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4535)
!4548 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4535)
!4549 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4535)
!4550 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4535)
!4551 = !DILocation(line: 0, scope: !3843, inlinedAt: !4535)
!4552 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4532)
!4553 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4532)
!4554 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4532)
!4555 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4532)
!4556 = !DILocation(line: 0, scope: !3838, inlinedAt: !4557)
!4557 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4532)
!4558 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4557)
!4559 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4557)
!4560 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4557)
!4561 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4557)
!4562 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4557)
!4563 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4557)
!4564 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4557)
!4565 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4557)
!4566 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4557)
!4567 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4557)
!4568 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4557)
!4569 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4557)
!4570 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4557)
!4571 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4557)
!4572 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4557)
!4573 = !DILocation(line: 0, scope: !3843, inlinedAt: !4557)
!4574 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4532)
!4575 = distinct !{!4575, !4555, !4576}
!4576 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4532)
!4577 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4532)
!4578 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4532)
!4579 = !DILocation(line: 596, column: 15, scope: !4526)
!4580 = !DILocation(line: 597, column: 3, scope: !4526)
!4581 = !DILocation(line: 600, column: 3, scope: !4468)
!4582 = distinct !DISubprogram(name: "FLASH_OB_Unlock", scope: !281, file: !281, line: 658, type: !1415, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !361)
!4583 = !DILocation(line: 660, column: 14, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4582, file: !281, line: 660, column: 6)
!4585 = !DILocation(line: 660, column: 20, scope: !4584)
!4586 = !DILocation(line: 660, column: 43, scope: !4584)
!4587 = !DILocation(line: 660, column: 6, scope: !4582)
!4588 = !DILocation(line: 663, column: 20, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4584, file: !281, line: 661, column: 3)
!4590 = !DILocation(line: 664, column: 20, scope: !4589)
!4591 = !DILocation(line: 665, column: 3, scope: !4589)
!4592 = !DILocation(line: 666, column: 1, scope: !4582)
!4593 = distinct !DISubprogram(name: "FLASH_OB_Lock", scope: !281, file: !281, line: 673, type: !1415, scopeLine: 674, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !361)
!4594 = !DILocation(line: 676, column: 16, scope: !4593)
!4595 = !DILocation(line: 677, column: 1, scope: !4593)
!4596 = distinct !DISubprogram(name: "FLASH_OB_WRPConfig", scope: !281, file: !281, line: 689, type: !1743, scopeLine: 690, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4597)
!4597 = !{!4598, !4599, !4600}
!4598 = !DILocalVariable(name: "OB_WRP", arg: 1, scope: !4596, file: !281, line: 689, type: !20)
!4599 = !DILocalVariable(name: "NewState", arg: 2, scope: !4596, file: !281, line: 689, type: !856)
!4600 = !DILocalVariable(name: "status", scope: !4596, file: !281, line: 691, type: !3820)
!4601 = !DILocation(line: 0, scope: !4596)
!4602 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4603)
!4603 = distinct !DILocation(line: 697, column: 12, scope: !4596)
!4604 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4603)
!4605 = !DILocation(line: 0, scope: !3838, inlinedAt: !4606)
!4606 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4603)
!4607 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4606)
!4608 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4606)
!4609 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4606)
!4610 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4606)
!4611 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4606)
!4612 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4606)
!4613 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4606)
!4614 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4606)
!4615 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4606)
!4616 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4606)
!4617 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4606)
!4618 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4606)
!4619 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4606)
!4620 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4606)
!4621 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4606)
!4622 = !DILocation(line: 0, scope: !3843, inlinedAt: !4606)
!4623 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4603)
!4624 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4603)
!4625 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4603)
!4626 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4603)
!4627 = !DILocation(line: 0, scope: !3838, inlinedAt: !4628)
!4628 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4603)
!4629 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4628)
!4630 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4628)
!4631 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4628)
!4632 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4628)
!4633 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4628)
!4634 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4628)
!4635 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4628)
!4636 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4628)
!4637 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4628)
!4638 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4628)
!4639 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4628)
!4640 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4628)
!4641 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4628)
!4642 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4628)
!4643 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4628)
!4644 = !DILocation(line: 0, scope: !3843, inlinedAt: !4628)
!4645 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4603)
!4646 = distinct !{!4646, !4626, !4647}
!4647 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4603)
!4648 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4603)
!4649 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4603)
!4650 = !DILocation(line: 699, column: 13, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4596, file: !281, line: 699, column: 6)
!4652 = !DILocation(line: 699, column: 6, scope: !4596)
!4653 = !DILocation(line: 701, column: 17, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !281, line: 701, column: 8)
!4655 = distinct !DILexicalBlock(scope: !4651, file: !281, line: 700, column: 3)
!4656 = !DILocation(line: 0, scope: !4654)
!4657 = !DILocation(line: 701, column: 8, scope: !4655)
!4658 = !DILocation(line: 710, column: 1, scope: !4596)
!4659 = distinct !DISubprogram(name: "FLASH_OB_RDPConfig", scope: !281, file: !281, line: 724, type: !1430, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4660)
!4660 = !{!4661, !4662}
!4661 = !DILocalVariable(name: "OB_RDP", arg: 1, scope: !4659, file: !281, line: 724, type: !60)
!4662 = !DILocalVariable(name: "status", scope: !4659, file: !281, line: 726, type: !3820)
!4663 = !DILocation(line: 0, scope: !4659)
!4664 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4665)
!4665 = distinct !DILocation(line: 731, column: 12, scope: !4659)
!4666 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4665)
!4667 = !DILocation(line: 0, scope: !3838, inlinedAt: !4668)
!4668 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4665)
!4669 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4668)
!4670 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4668)
!4671 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4668)
!4672 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4668)
!4673 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4668)
!4674 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4668)
!4675 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4668)
!4676 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4668)
!4677 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4668)
!4678 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4668)
!4679 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4668)
!4680 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4668)
!4681 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4668)
!4682 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4668)
!4683 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4668)
!4684 = !DILocation(line: 0, scope: !3843, inlinedAt: !4668)
!4685 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4665)
!4686 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4665)
!4687 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4665)
!4688 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4665)
!4689 = !DILocation(line: 0, scope: !3838, inlinedAt: !4690)
!4690 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4665)
!4691 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4690)
!4692 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4690)
!4693 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4690)
!4694 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4690)
!4695 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4690)
!4696 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4690)
!4697 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4690)
!4698 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4690)
!4699 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4690)
!4700 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4690)
!4701 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4690)
!4702 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4690)
!4703 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4690)
!4704 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4690)
!4705 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4690)
!4706 = !DILocation(line: 0, scope: !3843, inlinedAt: !4690)
!4707 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4665)
!4708 = distinct !{!4708, !4688, !4709}
!4709 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4665)
!4710 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4665)
!4711 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4665)
!4712 = !DILocation(line: 733, column: 13, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4659, file: !281, line: 733, column: 6)
!4714 = !DILocation(line: 733, column: 6, scope: !4659)
!4715 = !DILocation(line: 735, column: 41, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4713, file: !281, line: 734, column: 3)
!4717 = !DILocation(line: 737, column: 3, scope: !4716)
!4718 = !DILocation(line: 738, column: 1, scope: !4659)
!4719 = distinct !DISubprogram(name: "FLASH_OB_UserConfig", scope: !281, file: !281, line: 756, type: !4720, scopeLine: 757, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4722)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{null, !60, !60, !60}
!4722 = !{!4723, !4724, !4725, !4726, !4727}
!4723 = !DILocalVariable(name: "OB_IWDG", arg: 1, scope: !4719, file: !281, line: 756, type: !60)
!4724 = !DILocalVariable(name: "OB_STOP", arg: 2, scope: !4719, file: !281, line: 756, type: !60)
!4725 = !DILocalVariable(name: "OB_STDBY", arg: 3, scope: !4719, file: !281, line: 756, type: !60)
!4726 = !DILocalVariable(name: "optiontmp", scope: !4719, file: !281, line: 758, type: !60)
!4727 = !DILocalVariable(name: "status", scope: !4719, file: !281, line: 759, type: !3820)
!4728 = !DILocation(line: 0, scope: !4719)
!4729 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4730)
!4730 = distinct !DILocation(line: 767, column: 12, scope: !4719)
!4731 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4730)
!4732 = !DILocation(line: 0, scope: !3838, inlinedAt: !4733)
!4733 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4730)
!4734 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4733)
!4735 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4733)
!4736 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4733)
!4737 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4733)
!4738 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4733)
!4739 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4733)
!4740 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4733)
!4741 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4733)
!4742 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4733)
!4743 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4733)
!4744 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4733)
!4745 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4733)
!4746 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4733)
!4747 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4733)
!4748 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4733)
!4749 = !DILocation(line: 0, scope: !3843, inlinedAt: !4733)
!4750 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4730)
!4751 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4730)
!4752 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4730)
!4753 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4730)
!4754 = !DILocation(line: 0, scope: !3838, inlinedAt: !4755)
!4755 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4730)
!4756 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4755)
!4757 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4755)
!4758 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4755)
!4759 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4755)
!4760 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4755)
!4761 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4755)
!4762 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4755)
!4763 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4755)
!4764 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4755)
!4765 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4755)
!4766 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4755)
!4767 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4755)
!4768 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4755)
!4769 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4755)
!4770 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4755)
!4771 = !DILocation(line: 0, scope: !3843, inlinedAt: !4755)
!4772 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4730)
!4773 = distinct !{!4773, !4753, !4774}
!4774 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4730)
!4775 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4730)
!4776 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4730)
!4777 = !DILocation(line: 769, column: 13, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4719, file: !281, line: 769, column: 6)
!4779 = !DILocation(line: 769, column: 6, scope: !4719)
!4780 = !DILocation(line: 772, column: 29, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4778, file: !281, line: 770, column: 3)
!4782 = !DILocation(line: 772, column: 67, scope: !4781)
!4783 = !DILocation(line: 775, column: 93, scope: !4781)
!4784 = !DILocation(line: 775, column: 73, scope: !4781)
!4785 = !DILocation(line: 775, column: 52, scope: !4781)
!4786 = !DILocation(line: 775, column: 42, scope: !4781)
!4787 = !DILocation(line: 776, column: 3, scope: !4781)
!4788 = !DILocation(line: 777, column: 1, scope: !4719)
!4789 = distinct !DISubprogram(name: "FLASH_OB_BORConfig", scope: !281, file: !281, line: 789, type: !1430, scopeLine: 790, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4790)
!4790 = !{!4791}
!4791 = !DILocalVariable(name: "OB_BOR", arg: 1, scope: !4789, file: !281, line: 789, type: !60)
!4792 = !DILocation(line: 0, scope: !4789)
!4793 = !DILocation(line: 795, column: 40, scope: !4789)
!4794 = !DILocation(line: 796, column: 40, scope: !4789)
!4795 = !DILocation(line: 798, column: 1, scope: !4789)
!4796 = distinct !DISubprogram(name: "FLASH_OB_Launch", scope: !281, file: !281, line: 806, type: !3830, scopeLine: 807, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4797)
!4797 = !{!4798}
!4798 = !DILocalVariable(name: "status", scope: !4796, file: !281, line: 808, type: !3820)
!4799 = !DILocation(line: 0, scope: !4796)
!4800 = !DILocation(line: 811, column: 40, scope: !4796)
!4801 = !DILocation(line: 1024, column: 3, scope: !3829, inlinedAt: !4802)
!4802 = distinct !DILocation(line: 814, column: 12, scope: !4796)
!4803 = !DILocation(line: 1024, column: 21, scope: !3829, inlinedAt: !4802)
!4804 = !DILocation(line: 0, scope: !3838, inlinedAt: !4805)
!4805 = distinct !DILocation(line: 1027, column: 12, scope: !3829, inlinedAt: !4802)
!4806 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4805)
!4807 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4805)
!4808 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4805)
!4809 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4805)
!4810 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4805)
!4811 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4805)
!4812 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4805)
!4813 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4805)
!4814 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4805)
!4815 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4805)
!4816 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4805)
!4817 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4805)
!4818 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4805)
!4819 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4805)
!4820 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4805)
!4821 = !DILocation(line: 0, scope: !3843, inlinedAt: !4805)
!4822 = !DILocation(line: 1027, column: 10, scope: !3829, inlinedAt: !4802)
!4823 = !DILocation(line: 1032, column: 9, scope: !3829, inlinedAt: !4802)
!4824 = !DILocation(line: 1032, column: 16, scope: !3829, inlinedAt: !4802)
!4825 = !DILocation(line: 1032, column: 3, scope: !3829, inlinedAt: !4802)
!4826 = !DILocation(line: 0, scope: !3838, inlinedAt: !4827)
!4827 = distinct !DILocation(line: 1034, column: 14, scope: !3871, inlinedAt: !4802)
!4828 = !DILocation(line: 983, column: 14, scope: !3843, inlinedAt: !4827)
!4829 = !DILocation(line: 983, column: 17, scope: !3843, inlinedAt: !4827)
!4830 = !DILocation(line: 983, column: 35, scope: !3843, inlinedAt: !4827)
!4831 = !DILocation(line: 983, column: 6, scope: !3838, inlinedAt: !4827)
!4832 = !DILocation(line: 989, column: 16, scope: !3848, inlinedAt: !4827)
!4833 = !DILocation(line: 989, column: 19, scope: !3848, inlinedAt: !4827)
!4834 = !DILocation(line: 989, column: 40, scope: !3848, inlinedAt: !4827)
!4835 = !DILocation(line: 989, column: 8, scope: !3849, inlinedAt: !4827)
!4836 = !DILocation(line: 995, column: 18, scope: !3854, inlinedAt: !4827)
!4837 = !DILocation(line: 995, column: 21, scope: !3854, inlinedAt: !4827)
!4838 = !DILocation(line: 995, column: 39, scope: !3854, inlinedAt: !4827)
!4839 = !DILocation(line: 995, column: 10, scope: !3855, inlinedAt: !4827)
!4840 = !DILocation(line: 1001, column: 20, scope: !3860, inlinedAt: !4827)
!4841 = !DILocation(line: 1001, column: 23, scope: !3860, inlinedAt: !4827)
!4842 = !DILocation(line: 1001, column: 43, scope: !3860, inlinedAt: !4827)
!4843 = !DILocation(line: 0, scope: !3843, inlinedAt: !4827)
!4844 = !DILocation(line: 1034, column: 12, scope: !3871, inlinedAt: !4802)
!4845 = distinct !{!4845, !4825, !4846}
!4846 = !DILocation(line: 1035, column: 3, scope: !3829, inlinedAt: !4802)
!4847 = !DILocation(line: 1037, column: 10, scope: !3829, inlinedAt: !4802)
!4848 = !DILocation(line: 1038, column: 1, scope: !3829, inlinedAt: !4802)
!4849 = !DILocation(line: 816, column: 3, scope: !4796)
!4850 = distinct !DISubprogram(name: "FLASH_OB_GetUser", scope: !281, file: !281, line: 825, type: !1610, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !361)
!4851 = !DILocation(line: 828, column: 27, scope: !4850)
!4852 = !DILocation(line: 828, column: 33, scope: !4850)
!4853 = !DILocation(line: 828, column: 10, scope: !4850)
!4854 = !DILocation(line: 828, column: 3, scope: !4850)
!4855 = distinct !DISubprogram(name: "FLASH_OB_GetWRP", scope: !281, file: !281, line: 836, type: !4856, scopeLine: 837, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !361)
!4856 = !DISubroutineType(types: !4857)
!4857 = !{!64}
!4858 = !DILocation(line: 839, column: 11, scope: !4855)
!4859 = !DILocation(line: 839, column: 3, scope: !4855)
!4860 = distinct !DISubprogram(name: "FLASH_OB_GetRDP", scope: !281, file: !281, line: 849, type: !4861, scopeLine: 850, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4863)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!1276}
!4863 = !{!4864}
!4864 = !DILocalVariable(name: "readstatus", scope: !4860, file: !281, line: 851, type: !1276)
!4865 = !DILocation(line: 0, scope: !4860)
!4866 = !DILocation(line: 853, column: 8, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4860, file: !281, line: 853, column: 7)
!4868 = !DILocation(line: 853, column: 46, scope: !4867)
!4869 = !DILocation(line: 861, column: 3, scope: !4860)
!4870 = distinct !DISubprogram(name: "FLASH_OB_GetBOR", scope: !281, file: !281, line: 873, type: !1610, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !361)
!4871 = !DILocation(line: 876, column: 20, scope: !4870)
!4872 = !DILocation(line: 876, column: 59, scope: !4870)
!4873 = !DILocation(line: 876, column: 3, scope: !4870)
!4874 = distinct !DISubprogram(name: "FLASH_ITConfig", scope: !281, file: !281, line: 903, type: !1743, scopeLine: 904, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4875)
!4875 = !{!4876, !4877}
!4876 = !DILocalVariable(name: "FLASH_IT", arg: 1, scope: !4874, file: !281, line: 903, type: !20)
!4877 = !DILocalVariable(name: "NewState", arg: 2, scope: !4874, file: !281, line: 903, type: !856)
!4878 = !DILocation(line: 0, scope: !4874)
!4879 = !DILocation(line: 909, column: 15, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4874, file: !281, line: 909, column: 6)
!4881 = !DILocation(line: 909, column: 6, scope: !4874)
!4882 = !DILocation(line: 912, column: 15, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4880, file: !281, line: 910, column: 3)
!4884 = !DILocation(line: 913, column: 3, scope: !4883)
!4885 = !DILocation(line: 917, column: 18, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4880, file: !281, line: 915, column: 3)
!4887 = !DILocation(line: 917, column: 15, scope: !4886)
!4888 = !DILocation(line: 0, scope: !4880)
!4889 = !DILocation(line: 919, column: 1, scope: !4874)
!4890 = distinct !DISubprogram(name: "FLASH_GetFlagStatus", scope: !281, file: !281, line: 934, type: !2717, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4891)
!4891 = !{!4892, !4893}
!4892 = !DILocalVariable(name: "FLASH_FLAG", arg: 1, scope: !4890, file: !281, line: 934, type: !20)
!4893 = !DILocalVariable(name: "bitstatus", scope: !4890, file: !281, line: 936, type: !1276)
!4894 = !DILocation(line: 0, scope: !4890)
!4895 = !DILocation(line: 940, column: 14, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4890, file: !281, line: 940, column: 6)
!4897 = !DILocation(line: 940, column: 17, scope: !4896)
!4898 = !DILocation(line: 940, column: 31, scope: !4896)
!4899 = !DILocation(line: 949, column: 3, scope: !4890)
!4900 = distinct !DISubprogram(name: "FLASH_ClearFlag", scope: !281, file: !281, line: 964, type: !831, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4901)
!4901 = !{!4902}
!4902 = !DILocalVariable(name: "FLASH_FLAG", arg: 1, scope: !4900, file: !281, line: 964, type: !20)
!4903 = !DILocation(line: 0, scope: !4900)
!4904 = !DILocation(line: 970, column: 13, scope: !4900)
!4905 = !DILocation(line: 971, column: 1, scope: !4900)
!4906 = !DILocation(line: 0, scope: !3838)
!4907 = !DILocation(line: 983, column: 14, scope: !3843)
!4908 = !DILocation(line: 983, column: 17, scope: !3843)
!4909 = !DILocation(line: 983, column: 35, scope: !3843)
!4910 = !DILocation(line: 983, column: 6, scope: !3838)
!4911 = !DILocation(line: 989, column: 16, scope: !3848)
!4912 = !DILocation(line: 989, column: 19, scope: !3848)
!4913 = !DILocation(line: 989, column: 40, scope: !3848)
!4914 = !DILocation(line: 989, column: 8, scope: !3849)
!4915 = !DILocation(line: 995, column: 18, scope: !3854)
!4916 = !DILocation(line: 995, column: 21, scope: !3854)
!4917 = !DILocation(line: 995, column: 39, scope: !3854)
!4918 = !DILocation(line: 995, column: 10, scope: !3855)
!4919 = !DILocation(line: 1001, column: 20, scope: !3860)
!4920 = !DILocation(line: 1001, column: 23, scope: !3860)
!4921 = !DILocation(line: 1001, column: 43, scope: !3860)
!4922 = !DILocation(line: 0, scope: !3843)
!4923 = !DILocation(line: 1013, column: 3, scope: !3838)
!4924 = distinct !DISubprogram(name: "RTC_DeInit", scope: !312, file: !312, line: 367, type: !1439, scopeLine: 368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !4925)
!4925 = !{!4926, !4927, !4928}
!4926 = !DILocalVariable(name: "wutcounter", scope: !4924, file: !312, line: 369, type: !27)
!4927 = !DILocalVariable(name: "wutwfstatus", scope: !4924, file: !312, line: 370, type: !20)
!4928 = !DILocalVariable(name: "status", scope: !4924, file: !312, line: 371, type: !358)
!4929 = !DILocation(line: 369, column: 3, scope: !4924)
!4930 = !DILocation(line: 369, column: 17, scope: !4924)
!4931 = !DILocation(line: 0, scope: !4924)
!4932 = !DILocation(line: 374, column: 12, scope: !4924)
!4933 = !{!4934, !840, i64 36}
!4934 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !840, i64 32, !840, i64 36, !840, i64 40, !840, i64 44, !840, i64 48, !840, i64 52, !840, i64 56, !840, i64 60, !840, i64 64, !840, i64 68, !840, i64 72, !840, i64 76, !840, i64 80, !840, i64 84, !840, i64 88, !840, i64 92, !840, i64 96, !840, i64 100, !840, i64 104, !840, i64 108, !840, i64 112, !840, i64 116, !840, i64 120, !840, i64 124, !840, i64 128, !840, i64 132, !840, i64 136, !840, i64 140, !840, i64 144, !840, i64 148, !840, i64 152, !840, i64 156}
!4935 = !DILocation(line: 375, column: 12, scope: !4924)
!4936 = !DILocation(line: 542, column: 3, scope: !4937, inlinedAt: !4942)
!4937 = distinct !DISubprogram(name: "RTC_EnterInitMode", scope: !312, file: !312, line: 540, type: !1439, scopeLine: 541, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !4938)
!4938 = !{!4939, !4940, !4941}
!4939 = !DILocalVariable(name: "initcounter", scope: !4937, file: !312, line: 542, type: !27)
!4940 = !DILocalVariable(name: "status", scope: !4937, file: !312, line: 543, type: !358)
!4941 = !DILocalVariable(name: "initstatus", scope: !4937, file: !312, line: 544, type: !20)
!4942 = distinct !DILocation(line: 378, column: 7, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4924, file: !312, line: 378, column: 7)
!4944 = !DILocation(line: 542, column: 17, scope: !4937, inlinedAt: !4942)
!4945 = !DILocation(line: 0, scope: !4937, inlinedAt: !4942)
!4946 = !DILocation(line: 547, column: 13, scope: !4947, inlinedAt: !4942)
!4947 = distinct !DILexicalBlock(scope: !4937, file: !312, line: 547, column: 7)
!4948 = !{!4934, !840, i64 12}
!4949 = !DILocation(line: 547, column: 17, scope: !4947, inlinedAt: !4942)
!4950 = !DILocation(line: 547, column: 34, scope: !4947, inlinedAt: !4942)
!4951 = !DILocation(line: 547, column: 7, scope: !4937, inlinedAt: !4942)
!4952 = !DILocation(line: 574, column: 1, scope: !4937, inlinedAt: !4942)
!4953 = !DILocation(line: 378, column: 7, scope: !4924)
!4954 = !DILocation(line: 550, column: 14, scope: !4955, inlinedAt: !4942)
!4955 = distinct !DILexicalBlock(scope: !4947, file: !312, line: 548, column: 3)
!4956 = !DILocation(line: 553, column: 5, scope: !4955, inlinedAt: !4942)
!4957 = !DILocation(line: 555, column: 25, scope: !4958, inlinedAt: !4942)
!4958 = distinct !DILexicalBlock(scope: !4955, file: !312, line: 554, column: 5)
!4959 = !DILocation(line: 555, column: 29, scope: !4958, inlinedAt: !4942)
!4960 = !DILocation(line: 556, column: 18, scope: !4958, inlinedAt: !4942)
!4961 = !DILocation(line: 557, column: 14, scope: !4955, inlinedAt: !4942)
!4962 = !DILocation(line: 557, column: 26, scope: !4955, inlinedAt: !4942)
!4963 = !DILocation(line: 557, column: 47, scope: !4955, inlinedAt: !4942)
!4964 = !DILocation(line: 557, column: 5, scope: !4958, inlinedAt: !4942)
!4965 = distinct !{!4965, !4956, !4966}
!4966 = !DILocation(line: 557, column: 70, scope: !4955, inlinedAt: !4942)
!4967 = !DILocation(line: 559, column: 15, scope: !4968, inlinedAt: !4942)
!4968 = distinct !DILexicalBlock(scope: !4955, file: !312, line: 559, column: 9)
!4969 = !DILocation(line: 378, column: 27, scope: !4943)
!4970 = !DILocation(line: 385, column: 13, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4943, file: !312, line: 383, column: 3)
!4972 = !{!4934, !840, i64 0}
!4973 = !DILocation(line: 386, column: 13, scope: !4971)
!4974 = !{!4934, !840, i64 4}
!4975 = !DILocation(line: 388, column: 13, scope: !4971)
!4976 = !{!4934, !840, i64 8}
!4977 = !DILocation(line: 391, column: 5, scope: !4971)
!4978 = !DILocation(line: 393, column: 26, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4971, file: !312, line: 392, column: 5)
!4980 = !DILocation(line: 393, column: 30, scope: !4979)
!4981 = !DILocation(line: 394, column: 17, scope: !4979)
!4982 = !DILocation(line: 395, column: 14, scope: !4971)
!4983 = !DILocation(line: 395, column: 25, scope: !4971)
!4984 = !DILocation(line: 395, column: 46, scope: !4971)
!4985 = !DILocation(line: 395, column: 5, scope: !4979)
!4986 = distinct !{!4986, !4977, !4987}
!4987 = !DILocation(line: 395, column: 70, scope: !4971)
!4988 = !DILocation(line: 397, column: 15, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4971, file: !312, line: 397, column: 9)
!4990 = !DILocation(line: 397, column: 19, scope: !4989)
!4991 = !DILocation(line: 397, column: 36, scope: !4989)
!4992 = !DILocation(line: 397, column: 9, scope: !4971)
!4993 = !DILocation(line: 404, column: 15, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4989, file: !312, line: 402, column: 5)
!4995 = !DILocation(line: 405, column: 17, scope: !4994)
!4996 = !{!4934, !840, i64 20}
!4997 = !DILocation(line: 406, column: 17, scope: !4994)
!4998 = !{!4934, !840, i64 16}
!4999 = !DILocation(line: 407, column: 19, scope: !4994)
!5000 = !{!4934, !840, i64 24}
!5001 = !DILocation(line: 408, column: 19, scope: !4994)
!5002 = !{!4934, !840, i64 28}
!5003 = !DILocation(line: 409, column: 19, scope: !4994)
!5004 = !{!4934, !840, i64 32}
!5005 = !DILocation(line: 412, column: 16, scope: !4994)
!5006 = !DILocation(line: 415, column: 18, scope: !4994)
!5007 = !{!4934, !840, i64 64}
!5008 = !DILocation(line: 609, column: 3, scope: !5009, inlinedAt: !5014)
!5009 = distinct !DISubprogram(name: "RTC_WaitForSynchro", scope: !312, file: !312, line: 607, type: !1439, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5010)
!5010 = !{!5011, !5012, !5013}
!5011 = !DILocalVariable(name: "synchrocounter", scope: !5009, file: !312, line: 609, type: !27)
!5012 = !DILocalVariable(name: "status", scope: !5009, file: !312, line: 610, type: !358)
!5013 = !DILocalVariable(name: "synchrostatus", scope: !5009, file: !312, line: 611, type: !20)
!5014 = distinct !DILocation(line: 417, column: 10, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4994, file: !312, line: 417, column: 10)
!5016 = !DILocation(line: 609, column: 17, scope: !5009, inlinedAt: !5014)
!5017 = !DILocation(line: 0, scope: !5009, inlinedAt: !5014)
!5018 = !DILocation(line: 614, column: 12, scope: !5009, inlinedAt: !5014)
!5019 = !DILocation(line: 615, column: 12, scope: !5009, inlinedAt: !5014)
!5020 = !DILocation(line: 618, column: 12, scope: !5009, inlinedAt: !5014)
!5021 = !DILocation(line: 621, column: 3, scope: !5009, inlinedAt: !5014)
!5022 = !DILocation(line: 623, column: 26, scope: !5023, inlinedAt: !5014)
!5023 = distinct !DILexicalBlock(scope: !5009, file: !312, line: 622, column: 3)
!5024 = !DILocation(line: 623, column: 30, scope: !5023, inlinedAt: !5014)
!5025 = !DILocation(line: 624, column: 19, scope: !5023, inlinedAt: !5014)
!5026 = !DILocation(line: 625, column: 12, scope: !5009, inlinedAt: !5014)
!5027 = !DILocation(line: 625, column: 27, scope: !5009, inlinedAt: !5014)
!5028 = !DILocation(line: 625, column: 47, scope: !5009, inlinedAt: !5014)
!5029 = !DILocation(line: 625, column: 3, scope: !5023, inlinedAt: !5014)
!5030 = distinct !{!5030, !5021, !5031}
!5031 = !DILocation(line: 625, column: 73, scope: !5009, inlinedAt: !5014)
!5032 = !DILocation(line: 627, column: 13, scope: !5033, inlinedAt: !5014)
!5033 = distinct !DILexicalBlock(scope: !5009, file: !312, line: 627, column: 7)
!5034 = !DILocation(line: 637, column: 12, scope: !5009, inlinedAt: !5014)
!5035 = !DILocation(line: 640, column: 1, scope: !5009, inlinedAt: !5014)
!5036 = !DILocation(line: 0, scope: !4943)
!5037 = !DILocation(line: 429, column: 12, scope: !4924)
!5038 = !DILocation(line: 432, column: 1, scope: !4924)
!5039 = !DILocation(line: 431, column: 3, scope: !4924)
!5040 = !DILocation(line: 542, column: 3, scope: !4937)
!5041 = !DILocation(line: 542, column: 17, scope: !4937)
!5042 = !DILocation(line: 0, scope: !4937)
!5043 = !DILocation(line: 547, column: 13, scope: !4947)
!5044 = !DILocation(line: 547, column: 17, scope: !4947)
!5045 = !DILocation(line: 547, column: 34, scope: !4947)
!5046 = !DILocation(line: 547, column: 7, scope: !4937)
!5047 = !DILocation(line: 550, column: 14, scope: !4955)
!5048 = !DILocation(line: 553, column: 5, scope: !4955)
!5049 = !DILocation(line: 555, column: 25, scope: !4958)
!5050 = !DILocation(line: 555, column: 29, scope: !4958)
!5051 = !DILocation(line: 556, column: 18, scope: !4958)
!5052 = !DILocation(line: 557, column: 14, scope: !4955)
!5053 = !DILocation(line: 557, column: 26, scope: !4955)
!5054 = !DILocation(line: 557, column: 47, scope: !4955)
!5055 = !DILocation(line: 557, column: 5, scope: !4958)
!5056 = distinct !{!5056, !5048, !5057}
!5057 = !DILocation(line: 557, column: 70, scope: !4955)
!5058 = !DILocation(line: 559, column: 15, scope: !4968)
!5059 = !DILocation(line: 0, scope: !4947)
!5060 = !DILocation(line: 574, column: 1, scope: !4937)
!5061 = !DILocation(line: 573, column: 3, scope: !4937)
!5062 = !DILocation(line: 609, column: 3, scope: !5009)
!5063 = !DILocation(line: 609, column: 17, scope: !5009)
!5064 = !DILocation(line: 0, scope: !5009)
!5065 = !DILocation(line: 614, column: 12, scope: !5009)
!5066 = !DILocation(line: 615, column: 12, scope: !5009)
!5067 = !DILocation(line: 618, column: 12, scope: !5009)
!5068 = !DILocation(line: 621, column: 3, scope: !5009)
!5069 = !DILocation(line: 623, column: 26, scope: !5023)
!5070 = !DILocation(line: 623, column: 30, scope: !5023)
!5071 = !DILocation(line: 624, column: 19, scope: !5023)
!5072 = !DILocation(line: 625, column: 12, scope: !5009)
!5073 = !DILocation(line: 625, column: 27, scope: !5009)
!5074 = !DILocation(line: 625, column: 47, scope: !5009)
!5075 = !DILocation(line: 625, column: 3, scope: !5023)
!5076 = distinct !{!5076, !5068, !5077}
!5077 = !DILocation(line: 625, column: 73, scope: !5009)
!5078 = !DILocation(line: 627, column: 13, scope: !5033)
!5079 = !DILocation(line: 637, column: 12, scope: !5009)
!5080 = !DILocation(line: 640, column: 1, scope: !5009)
!5081 = !DILocation(line: 639, column: 3, scope: !5009)
!5082 = distinct !DISubprogram(name: "RTC_Init", scope: !312, file: !312, line: 445, type: !5083, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5093)
!5083 = !DISubroutineType(types: !5084)
!5084 = !{!358, !5085}
!5085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5086, size: 32)
!5086 = !DIDerivedType(tag: DW_TAG_typedef, name: "RTC_InitTypeDef", file: !5087, line: 57, baseType: !5088)
!5087 = !DIFile(filename: "inc/peripherals/stm32f4xx_rtc.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!5088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5087, line: 47, size: 96, elements: !5089)
!5089 = !{!5090, !5091, !5092}
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_HourFormat", scope: !5088, file: !5087, line: 49, baseType: !20, size: 32)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AsynchPrediv", scope: !5088, file: !5087, line: 52, baseType: !20, size: 32, offset: 32)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_SynchPrediv", scope: !5088, file: !5087, line: 55, baseType: !20, size: 32, offset: 64)
!5093 = !{!5094, !5095}
!5094 = !DILocalVariable(name: "RTC_InitStruct", arg: 1, scope: !5082, file: !312, line: 445, type: !5085)
!5095 = !DILocalVariable(name: "status", scope: !5082, file: !312, line: 447, type: !358)
!5096 = !DILocation(line: 0, scope: !5082)
!5097 = !DILocation(line: 455, column: 12, scope: !5082)
!5098 = !DILocation(line: 456, column: 12, scope: !5082)
!5099 = !DILocation(line: 542, column: 3, scope: !4937, inlinedAt: !5100)
!5100 = distinct !DILocation(line: 459, column: 7, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5082, file: !312, line: 459, column: 7)
!5102 = !DILocation(line: 542, column: 17, scope: !4937, inlinedAt: !5100)
!5103 = !DILocation(line: 0, scope: !4937, inlinedAt: !5100)
!5104 = !DILocation(line: 547, column: 13, scope: !4947, inlinedAt: !5100)
!5105 = !DILocation(line: 547, column: 17, scope: !4947, inlinedAt: !5100)
!5106 = !DILocation(line: 547, column: 34, scope: !4947, inlinedAt: !5100)
!5107 = !DILocation(line: 547, column: 7, scope: !4937, inlinedAt: !5100)
!5108 = !DILocation(line: 574, column: 1, scope: !4937, inlinedAt: !5100)
!5109 = !DILocation(line: 459, column: 7, scope: !5082)
!5110 = !DILocation(line: 550, column: 14, scope: !4955, inlinedAt: !5100)
!5111 = !DILocation(line: 553, column: 5, scope: !4955, inlinedAt: !5100)
!5112 = !DILocation(line: 555, column: 25, scope: !4958, inlinedAt: !5100)
!5113 = !DILocation(line: 555, column: 29, scope: !4958, inlinedAt: !5100)
!5114 = !DILocation(line: 556, column: 18, scope: !4958, inlinedAt: !5100)
!5115 = !DILocation(line: 557, column: 14, scope: !4955, inlinedAt: !5100)
!5116 = !DILocation(line: 557, column: 26, scope: !4955, inlinedAt: !5100)
!5117 = !DILocation(line: 557, column: 47, scope: !4955, inlinedAt: !5100)
!5118 = !DILocation(line: 557, column: 5, scope: !4958, inlinedAt: !5100)
!5119 = distinct !{!5119, !5111, !5120}
!5120 = !DILocation(line: 557, column: 70, scope: !4955, inlinedAt: !5100)
!5121 = !DILocation(line: 559, column: 15, scope: !4968, inlinedAt: !5100)
!5122 = !DILocation(line: 459, column: 27, scope: !5101)
!5123 = !DILocation(line: 466, column: 13, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5101, file: !312, line: 464, column: 3)
!5125 = !DILocation(line: 468, column: 45, scope: !5124)
!5126 = !DILocation(line: 468, column: 13, scope: !5124)
!5127 = !DILocation(line: 471, column: 44, scope: !5124)
!5128 = !DILocation(line: 471, column: 15, scope: !5124)
!5129 = !DILocation(line: 472, column: 45, scope: !5124)
!5130 = !DILocation(line: 472, column: 62, scope: !5124)
!5131 = !DILocation(line: 472, column: 15, scope: !5124)
!5132 = !DILocation(line: 588, column: 12, scope: !5133, inlinedAt: !5134)
!5133 = distinct !DISubprogram(name: "RTC_ExitInitMode", scope: !312, file: !312, line: 585, type: !1415, scopeLine: 586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !361)
!5134 = distinct !DILocation(line: 475, column: 5, scope: !5124)
!5135 = !DILocation(line: 0, scope: !5101)
!5136 = !DILocation(line: 480, column: 12, scope: !5082)
!5137 = !DILocation(line: 482, column: 3, scope: !5082)
!5138 = !DILocation(line: 588, column: 12, scope: !5133)
!5139 = !DILocation(line: 589, column: 1, scope: !5133)
!5140 = distinct !DISubprogram(name: "RTC_StructInit", scope: !312, file: !312, line: 491, type: !5141, scopeLine: 492, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5143)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{null, !5085}
!5143 = !{!5144}
!5144 = !DILocalVariable(name: "RTC_InitStruct", arg: 1, scope: !5140, file: !312, line: 491, type: !5085)
!5145 = !DILocation(line: 0, scope: !5140)
!5146 = !DILocation(line: 494, column: 19, scope: !5140)
!5147 = !DILocation(line: 494, column: 34, scope: !5140)
!5148 = !DILocation(line: 497, column: 19, scope: !5140)
!5149 = !DILocation(line: 497, column: 36, scope: !5140)
!5150 = !DILocation(line: 500, column: 19, scope: !5140)
!5151 = !DILocation(line: 500, column: 35, scope: !5140)
!5152 = !DILocation(line: 501, column: 1, scope: !5140)
!5153 = distinct !DISubprogram(name: "RTC_WriteProtectionCmd", scope: !312, file: !312, line: 513, type: !1502, scopeLine: 514, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5154)
!5154 = !{!5155}
!5155 = !DILocalVariable(name: "NewState", arg: 1, scope: !5153, file: !312, line: 513, type: !856)
!5156 = !DILocation(line: 0, scope: !5153)
!5157 = !DILocation(line: 518, column: 16, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5153, file: !312, line: 518, column: 7)
!5159 = !DILocation(line: 518, column: 7, scope: !5153)
!5160 = !DILocation(line: 526, column: 14, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5158, file: !312, line: 524, column: 3)
!5162 = !DILocation(line: 0, scope: !5158)
!5163 = !DILocation(line: 529, column: 1, scope: !5153)
!5164 = distinct !DISubprogram(name: "RTC_RefClockCmd", scope: !312, file: !312, line: 650, type: !5165, scopeLine: 651, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5167)
!5165 = !DISubroutineType(types: !5166)
!5166 = !{!358, !856}
!5167 = !{!5168, !5169}
!5168 = !DILocalVariable(name: "NewState", arg: 1, scope: !5164, file: !312, line: 650, type: !856)
!5169 = !DILocalVariable(name: "status", scope: !5164, file: !312, line: 652, type: !358)
!5170 = !DILocation(line: 0, scope: !5164)
!5171 = !DILocation(line: 658, column: 12, scope: !5164)
!5172 = !DILocation(line: 659, column: 12, scope: !5164)
!5173 = !DILocation(line: 542, column: 3, scope: !4937, inlinedAt: !5174)
!5174 = distinct !DILocation(line: 662, column: 7, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5164, file: !312, line: 662, column: 7)
!5176 = !DILocation(line: 542, column: 17, scope: !4937, inlinedAt: !5174)
!5177 = !DILocation(line: 0, scope: !4937, inlinedAt: !5174)
!5178 = !DILocation(line: 547, column: 13, scope: !4947, inlinedAt: !5174)
!5179 = !DILocation(line: 547, column: 17, scope: !4947, inlinedAt: !5174)
!5180 = !DILocation(line: 547, column: 34, scope: !4947, inlinedAt: !5174)
!5181 = !DILocation(line: 547, column: 7, scope: !4937, inlinedAt: !5174)
!5182 = !DILocation(line: 574, column: 1, scope: !4937, inlinedAt: !5174)
!5183 = !DILocation(line: 662, column: 7, scope: !5164)
!5184 = !DILocation(line: 550, column: 14, scope: !4955, inlinedAt: !5174)
!5185 = !DILocation(line: 553, column: 5, scope: !4955, inlinedAt: !5174)
!5186 = !DILocation(line: 555, column: 25, scope: !4958, inlinedAt: !5174)
!5187 = !DILocation(line: 555, column: 29, scope: !4958, inlinedAt: !5174)
!5188 = !DILocation(line: 556, column: 18, scope: !4958, inlinedAt: !5174)
!5189 = !DILocation(line: 557, column: 14, scope: !4955, inlinedAt: !5174)
!5190 = !DILocation(line: 557, column: 26, scope: !4955, inlinedAt: !5174)
!5191 = !DILocation(line: 557, column: 47, scope: !4955, inlinedAt: !5174)
!5192 = !DILocation(line: 557, column: 5, scope: !4958, inlinedAt: !5174)
!5193 = distinct !{!5193, !5185, !5194}
!5194 = !DILocation(line: 557, column: 70, scope: !4955, inlinedAt: !5174)
!5195 = !DILocation(line: 559, column: 15, scope: !4968, inlinedAt: !5174)
!5196 = !DILocation(line: 662, column: 27, scope: !5175)
!5197 = !DILocation(line: 668, column: 18, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5199, file: !312, line: 668, column: 9)
!5199 = distinct !DILexicalBlock(scope: !5175, file: !312, line: 667, column: 3)
!5200 = !DILocation(line: 0, scope: !5198)
!5201 = !DILocation(line: 668, column: 9, scope: !5199)
!5202 = !DILocation(line: 588, column: 12, scope: !5133, inlinedAt: !5203)
!5203 = distinct !DILocation(line: 679, column: 5, scope: !5199)
!5204 = !DILocation(line: 0, scope: !5175)
!5205 = !DILocation(line: 685, column: 12, scope: !5164)
!5206 = !DILocation(line: 687, column: 3, scope: !5164)
!5207 = distinct !DISubprogram(name: "RTC_BypassShadowCmd", scope: !312, file: !312, line: 698, type: !1502, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5208)
!5208 = !{!5209}
!5209 = !DILocalVariable(name: "NewState", arg: 1, scope: !5207, file: !312, line: 698, type: !856)
!5210 = !DILocation(line: 0, scope: !5207)
!5211 = !DILocation(line: 704, column: 12, scope: !5207)
!5212 = !DILocation(line: 705, column: 12, scope: !5207)
!5213 = !DILocation(line: 707, column: 16, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5207, file: !312, line: 707, column: 7)
!5215 = !DILocation(line: 0, scope: !5214)
!5216 = !DILocation(line: 707, column: 7, scope: !5207)
!5217 = !DILocation(line: 719, column: 12, scope: !5207)
!5218 = !DILocation(line: 720, column: 1, scope: !5207)
!5219 = distinct !DISubprogram(name: "RTC_SetTime", scope: !312, file: !312, line: 753, type: !5220, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5230)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{!358, !20, !5222}
!5222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5223, size: 32)
!5223 = !DIDerivedType(tag: DW_TAG_typedef, name: "RTC_TimeTypeDef", file: !5087, line: 77, baseType: !5224)
!5224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5087, line: 62, size: 32, elements: !5225)
!5225 = !{!5226, !5227, !5228, !5229}
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_Hours", scope: !5224, file: !5087, line: 64, baseType: !60, size: 8)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_Minutes", scope: !5224, file: !5087, line: 69, baseType: !60, size: 8, offset: 8)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_Seconds", scope: !5224, file: !5087, line: 72, baseType: !60, size: 8, offset: 16)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_H12", scope: !5224, file: !5087, line: 75, baseType: !60, size: 8, offset: 24)
!5230 = !{!5231, !5232, !5233, !5234}
!5231 = !DILocalVariable(name: "RTC_Format", arg: 1, scope: !5219, file: !312, line: 753, type: !20)
!5232 = !DILocalVariable(name: "RTC_TimeStruct", arg: 2, scope: !5219, file: !312, line: 753, type: !5222)
!5233 = !DILocalVariable(name: "tmpreg", scope: !5219, file: !312, line: 755, type: !20)
!5234 = !DILocalVariable(name: "status", scope: !5219, file: !312, line: 756, type: !358)
!5235 = !DILocation(line: 0, scope: !5219)
!5236 = !DILocation(line: 761, column: 18, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5219, file: !312, line: 761, column: 7)
!5238 = !DILocation(line: 0, scope: !5237)
!5239 = !DILocation(line: 761, column: 7, scope: !5219)
!5240 = !DILocation(line: 763, column: 9, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5237, file: !312, line: 762, column: 3)
!5242 = !DILocation(line: 770, column: 23, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5244, file: !312, line: 769, column: 5)
!5244 = distinct !DILexicalBlock(scope: !5241, file: !312, line: 763, column: 9)
!5245 = !DILocation(line: 770, column: 31, scope: !5243)
!5246 = !{!5247, !841, i64 3}
!5247 = !{!"", !841, i64 0, !841, i64 1, !841, i64 2, !841, i64 3}
!5248 = !DILocation(line: 778, column: 9, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5237, file: !312, line: 777, column: 3)
!5250 = !DILocation(line: 799, column: 42, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5252, file: !312, line: 795, column: 3)
!5252 = distinct !DILexicalBlock(scope: !5219, file: !312, line: 794, column: 7)
!5253 = !DILocation(line: 786, column: 31, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5255, file: !312, line: 785, column: 5)
!5255 = distinct !DILexicalBlock(scope: !5249, file: !312, line: 778, column: 9)
!5256 = !DILocation(line: 0, scope: !5252)
!5257 = !{!5247, !841, i64 0}
!5258 = !DILocation(line: 796, column: 16, scope: !5251)
!5259 = !DILocation(line: 796, column: 54, scope: !5251)
!5260 = !DILocation(line: 797, column: 42, scope: !5251)
!5261 = !{!5247, !841, i64 1}
!5262 = !DILocation(line: 797, column: 15, scope: !5251)
!5263 = !DILocation(line: 797, column: 55, scope: !5251)
!5264 = !DILocation(line: 796, column: 61, scope: !5251)
!5265 = !DILocation(line: 798, column: 41, scope: !5251)
!5266 = !{!5247, !841, i64 2}
!5267 = !DILocation(line: 798, column: 15, scope: !5251)
!5268 = !DILocation(line: 797, column: 61, scope: !5251)
!5269 = !DILocation(line: 798, column: 54, scope: !5251)
!5270 = !DILocation(line: 800, column: 3, scope: !5251)
!5271 = !DILocalVariable(name: "Value", arg: 1, scope: !5272, file: !312, line: 2695, type: !60)
!5272 = distinct !DISubprogram(name: "RTC_ByteToBcd2", scope: !312, file: !312, line: 2695, type: !5273, scopeLine: 2696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5275)
!5273 = !DISubroutineType(types: !5274)
!5274 = !{!60, !60}
!5275 = !{!5271, !5276}
!5276 = !DILocalVariable(name: "bcdhigh", scope: !5272, file: !312, line: 2697, type: !60)
!5277 = !DILocation(line: 0, scope: !5272, inlinedAt: !5278)
!5278 = distinct !DILocation(line: 803, column: 36, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5252, file: !312, line: 802, column: 3)
!5280 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5278)
!5281 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5278)
!5282 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5278)
!5283 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5278)
!5284 = !DILocation(line: 803, column: 26, scope: !5279)
!5285 = !DILocation(line: 803, column: 78, scope: !5279)
!5286 = !DILocation(line: 804, column: 62, scope: !5279)
!5287 = !DILocation(line: 0, scope: !5272, inlinedAt: !5288)
!5288 = distinct !DILocation(line: 804, column: 31, scope: !5279)
!5289 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5288)
!5290 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5288)
!5291 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5288)
!5292 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5288)
!5293 = !DILocation(line: 804, column: 21, scope: !5279)
!5294 = !DILocation(line: 804, column: 75, scope: !5279)
!5295 = !DILocation(line: 803, column: 85, scope: !5279)
!5296 = !DILocation(line: 805, column: 62, scope: !5279)
!5297 = !DILocation(line: 0, scope: !5272, inlinedAt: !5298)
!5298 = distinct !DILocation(line: 805, column: 31, scope: !5279)
!5299 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5298)
!5300 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5298)
!5301 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5298)
!5302 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5298)
!5303 = !DILocation(line: 805, column: 21, scope: !5279)
!5304 = !DILocation(line: 804, column: 81, scope: !5279)
!5305 = !DILocation(line: 806, column: 48, scope: !5279)
!5306 = !DILocation(line: 806, column: 22, scope: !5279)
!5307 = !DILocation(line: 806, column: 57, scope: !5279)
!5308 = !DILocation(line: 805, column: 76, scope: !5279)
!5309 = !DILocation(line: 810, column: 12, scope: !5219)
!5310 = !DILocation(line: 811, column: 12, scope: !5219)
!5311 = !DILocation(line: 542, column: 3, scope: !4937, inlinedAt: !5312)
!5312 = distinct !DILocation(line: 814, column: 7, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5219, file: !312, line: 814, column: 7)
!5314 = !DILocation(line: 542, column: 17, scope: !4937, inlinedAt: !5312)
!5315 = !DILocation(line: 0, scope: !4937, inlinedAt: !5312)
!5316 = !DILocation(line: 547, column: 13, scope: !4947, inlinedAt: !5312)
!5317 = !DILocation(line: 547, column: 17, scope: !4947, inlinedAt: !5312)
!5318 = !DILocation(line: 547, column: 34, scope: !4947, inlinedAt: !5312)
!5319 = !DILocation(line: 547, column: 7, scope: !4937, inlinedAt: !5312)
!5320 = !DILocation(line: 574, column: 1, scope: !4937, inlinedAt: !5312)
!5321 = !DILocation(line: 814, column: 7, scope: !5219)
!5322 = !DILocation(line: 550, column: 14, scope: !4955, inlinedAt: !5312)
!5323 = !DILocation(line: 553, column: 5, scope: !4955, inlinedAt: !5312)
!5324 = !DILocation(line: 555, column: 25, scope: !4958, inlinedAt: !5312)
!5325 = !DILocation(line: 555, column: 29, scope: !4958, inlinedAt: !5312)
!5326 = !DILocation(line: 556, column: 18, scope: !4958, inlinedAt: !5312)
!5327 = !DILocation(line: 557, column: 14, scope: !4955, inlinedAt: !5312)
!5328 = !DILocation(line: 557, column: 26, scope: !4955, inlinedAt: !5312)
!5329 = !DILocation(line: 557, column: 47, scope: !4955, inlinedAt: !5312)
!5330 = !DILocation(line: 557, column: 5, scope: !4958, inlinedAt: !5312)
!5331 = distinct !{!5331, !5323, !5332}
!5332 = !DILocation(line: 557, column: 70, scope: !4955, inlinedAt: !5312)
!5333 = !DILocation(line: 559, column: 15, scope: !4968, inlinedAt: !5312)
!5334 = !DILocation(line: 814, column: 27, scope: !5313)
!5335 = !DILocation(line: 821, column: 33, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5313, file: !312, line: 819, column: 3)
!5337 = !DILocation(line: 821, column: 13, scope: !5336)
!5338 = !DILocation(line: 588, column: 12, scope: !5133, inlinedAt: !5339)
!5339 = distinct !DILocation(line: 824, column: 5, scope: !5336)
!5340 = !DILocation(line: 609, column: 3, scope: !5009, inlinedAt: !5341)
!5341 = distinct !DILocation(line: 826, column: 8, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5336, file: !312, line: 826, column: 8)
!5343 = !DILocation(line: 609, column: 17, scope: !5009, inlinedAt: !5341)
!5344 = !DILocation(line: 0, scope: !5009, inlinedAt: !5341)
!5345 = !DILocation(line: 614, column: 12, scope: !5009, inlinedAt: !5341)
!5346 = !DILocation(line: 615, column: 12, scope: !5009, inlinedAt: !5341)
!5347 = !DILocation(line: 618, column: 12, scope: !5009, inlinedAt: !5341)
!5348 = !DILocation(line: 621, column: 3, scope: !5009, inlinedAt: !5341)
!5349 = !DILocation(line: 623, column: 26, scope: !5023, inlinedAt: !5341)
!5350 = !DILocation(line: 623, column: 30, scope: !5023, inlinedAt: !5341)
!5351 = !DILocation(line: 624, column: 19, scope: !5023, inlinedAt: !5341)
!5352 = !DILocation(line: 625, column: 12, scope: !5009, inlinedAt: !5341)
!5353 = !DILocation(line: 625, column: 27, scope: !5009, inlinedAt: !5341)
!5354 = !DILocation(line: 625, column: 47, scope: !5009, inlinedAt: !5341)
!5355 = !DILocation(line: 625, column: 3, scope: !5023, inlinedAt: !5341)
!5356 = distinct !{!5356, !5348, !5357}
!5357 = !DILocation(line: 625, column: 73, scope: !5009, inlinedAt: !5341)
!5358 = !DILocation(line: 627, column: 13, scope: !5033, inlinedAt: !5341)
!5359 = !DILocation(line: 637, column: 12, scope: !5009, inlinedAt: !5341)
!5360 = !DILocation(line: 640, column: 1, scope: !5009, inlinedAt: !5341)
!5361 = !DILocation(line: 0, scope: !5313)
!5362 = !DILocation(line: 837, column: 12, scope: !5219)
!5363 = !DILocation(line: 839, column: 3, scope: !5219)
!5364 = distinct !DISubprogram(name: "RTC_TimeStructInit", scope: !312, file: !312, line: 849, type: !5365, scopeLine: 850, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5367)
!5365 = !DISubroutineType(types: !5366)
!5366 = !{null, !5222}
!5367 = !{!5368}
!5368 = !DILocalVariable(name: "RTC_TimeStruct", arg: 1, scope: !5364, file: !312, line: 849, type: !5222)
!5369 = !DILocation(line: 0, scope: !5364)
!5370 = !DILocation(line: 852, column: 19, scope: !5364)
!5371 = !DILocation(line: 852, column: 27, scope: !5364)
!5372 = !DILocation(line: 853, column: 19, scope: !5364)
!5373 = !DILocation(line: 853, column: 29, scope: !5364)
!5374 = !DILocation(line: 854, column: 19, scope: !5364)
!5375 = !DILocation(line: 854, column: 31, scope: !5364)
!5376 = !DILocation(line: 855, column: 19, scope: !5364)
!5377 = !DILocation(line: 855, column: 31, scope: !5364)
!5378 = !DILocation(line: 856, column: 1, scope: !5364)
!5379 = distinct !DISubprogram(name: "RTC_GetTime", scope: !312, file: !312, line: 868, type: !5380, scopeLine: 869, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5382)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{null, !20, !5222}
!5382 = !{!5383, !5384, !5385}
!5383 = !DILocalVariable(name: "RTC_Format", arg: 1, scope: !5379, file: !312, line: 868, type: !20)
!5384 = !DILocalVariable(name: "RTC_TimeStruct", arg: 2, scope: !5379, file: !312, line: 868, type: !5222)
!5385 = !DILocalVariable(name: "tmpreg", scope: !5379, file: !312, line: 870, type: !20)
!5386 = !DILocation(line: 0, scope: !5379)
!5387 = !DILocation(line: 876, column: 28, scope: !5379)
!5388 = !DILocation(line: 879, column: 76, scope: !5379)
!5389 = !DILocation(line: 879, column: 31, scope: !5379)
!5390 = !DILocation(line: 879, column: 19, scope: !5379)
!5391 = !DILocation(line: 879, column: 29, scope: !5379)
!5392 = !DILocation(line: 880, column: 80, scope: !5379)
!5393 = !DILocation(line: 880, column: 33, scope: !5379)
!5394 = !DILocation(line: 880, column: 19, scope: !5379)
!5395 = !DILocation(line: 880, column: 31, scope: !5379)
!5396 = !DILocation(line: 881, column: 33, scope: !5379)
!5397 = !DILocation(line: 881, column: 19, scope: !5379)
!5398 = !DILocation(line: 881, column: 31, scope: !5379)
!5399 = !DILocation(line: 882, column: 29, scope: !5379)
!5400 = !DILocation(line: 882, column: 19, scope: !5379)
!5401 = !DILocation(line: 882, column: 27, scope: !5379)
!5402 = !DILocation(line: 885, column: 18, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5379, file: !312, line: 885, column: 7)
!5404 = !DILocation(line: 885, column: 7, scope: !5379)
!5405 = !DILocalVariable(name: "Value", arg: 1, scope: !5406, file: !312, line: 2713, type: !60)
!5406 = distinct !DISubprogram(name: "RTC_Bcd2ToByte", scope: !312, file: !312, line: 2713, type: !5273, scopeLine: 2714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5407)
!5407 = !{!5405, !5408}
!5408 = !DILocalVariable(name: "tmp", scope: !5406, file: !312, line: 2715, type: !60)
!5409 = !DILocation(line: 0, scope: !5406, inlinedAt: !5410)
!5410 = distinct !DILocation(line: 888, column: 42, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5403, file: !312, line: 886, column: 3)
!5412 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5410)
!5413 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5410)
!5414 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5410)
!5415 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5410)
!5416 = !DILocation(line: 888, column: 31, scope: !5411)
!5417 = !DILocation(line: 0, scope: !5406, inlinedAt: !5418)
!5418 = distinct !DILocation(line: 889, column: 44, scope: !5411)
!5419 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5418)
!5420 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5418)
!5421 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5418)
!5422 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5418)
!5423 = !DILocation(line: 889, column: 33, scope: !5411)
!5424 = !DILocation(line: 0, scope: !5406, inlinedAt: !5425)
!5425 = distinct !DILocation(line: 890, column: 44, scope: !5411)
!5426 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5425)
!5427 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5425)
!5428 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5425)
!5429 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5425)
!5430 = !DILocation(line: 890, column: 33, scope: !5411)
!5431 = !DILocation(line: 891, column: 3, scope: !5411)
!5432 = !DILocation(line: 892, column: 1, scope: !5379)
!5433 = distinct !DISubprogram(name: "RTC_GetSubSecond", scope: !312, file: !312, line: 901, type: !2372, scopeLine: 902, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5434)
!5434 = !{!5435}
!5435 = !DILocalVariable(name: "tmpreg", scope: !5433, file: !312, line: 903, type: !20)
!5436 = !DILocation(line: 0, scope: !5433)
!5437 = !DILocation(line: 906, column: 28, scope: !5433)
!5438 = !{!4934, !840, i64 40}
!5439 = !DILocation(line: 909, column: 16, scope: !5433)
!5440 = !DILocation(line: 911, column: 3, scope: !5433)
!5441 = distinct !DISubprogram(name: "RTC_SetDate", scope: !312, file: !312, line: 926, type: !5442, scopeLine: 927, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5452)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{!358, !20, !5444}
!5444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5445, size: 32)
!5445 = !DIDerivedType(tag: DW_TAG_typedef, name: "RTC_DateTypeDef", file: !5087, line: 95, baseType: !5446)
!5446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5087, line: 82, size: 32, elements: !5447)
!5447 = !{!5448, !5449, !5450, !5451}
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_WeekDay", scope: !5446, file: !5087, line: 84, baseType: !60, size: 8)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_Month", scope: !5446, file: !5087, line: 87, baseType: !60, size: 8, offset: 8)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_Date", scope: !5446, file: !5087, line: 90, baseType: !60, size: 8, offset: 16)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_Year", scope: !5446, file: !5087, line: 93, baseType: !60, size: 8, offset: 24)
!5452 = !{!5453, !5454, !5455, !5456}
!5453 = !DILocalVariable(name: "RTC_Format", arg: 1, scope: !5441, file: !312, line: 926, type: !20)
!5454 = !DILocalVariable(name: "RTC_DateStruct", arg: 2, scope: !5441, file: !312, line: 926, type: !5444)
!5455 = !DILocalVariable(name: "tmpreg", scope: !5441, file: !312, line: 928, type: !20)
!5456 = !DILocalVariable(name: "status", scope: !5441, file: !312, line: 929, type: !358)
!5457 = !DILocation(line: 0, scope: !5441)
!5458 = !DILocation(line: 934, column: 19, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5441, file: !312, line: 934, column: 7)
!5460 = !DILocation(line: 934, column: 38, scope: !5459)
!5461 = !DILocation(line: 934, column: 59, scope: !5459)
!5462 = !DILocation(line: 934, column: 69, scope: !5459)
!5463 = !DILocation(line: 934, column: 77, scope: !5459)
!5464 = !DILocation(line: 934, column: 7, scope: !5441)
!5465 = !DILocation(line: 936, column: 60, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5459, file: !312, line: 935, column: 3)
!5467 = !DILocation(line: 936, column: 81, scope: !5466)
!5468 = !DILocation(line: 936, column: 31, scope: !5466)
!5469 = !DILocation(line: 937, column: 3, scope: !5466)
!5470 = !DILocation(line: 0, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5441, file: !312, line: 955, column: 7)
!5472 = !DILocation(line: 957, column: 17, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5471, file: !312, line: 956, column: 3)
!5474 = !DILocation(line: 957, column: 53, scope: !5473)
!5475 = !DILocation(line: 958, column: 43, scope: !5473)
!5476 = !DILocation(line: 958, column: 17, scope: !5473)
!5477 = !DILocation(line: 958, column: 54, scope: !5473)
!5478 = !DILocation(line: 957, column: 60, scope: !5473)
!5479 = !DILocation(line: 959, column: 42, scope: !5473)
!5480 = !DILocation(line: 961, column: 3, scope: !5473)
!5481 = !DILocation(line: 0, scope: !5272, inlinedAt: !5482)
!5482 = distinct !DILocation(line: 964, column: 26, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5471, file: !312, line: 963, column: 3)
!5484 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5482)
!5485 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5482)
!5486 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5482)
!5487 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5482)
!5488 = !DILocation(line: 964, column: 16, scope: !5483)
!5489 = !DILocation(line: 964, column: 67, scope: !5483)
!5490 = !DILocation(line: 0, scope: !5272, inlinedAt: !5491)
!5491 = distinct !DILocation(line: 965, column: 26, scope: !5483)
!5492 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5491)
!5493 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5491)
!5494 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5491)
!5495 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5491)
!5496 = !DILocation(line: 965, column: 16, scope: !5483)
!5497 = !DILocation(line: 965, column: 68, scope: !5483)
!5498 = !DILocation(line: 964, column: 74, scope: !5483)
!5499 = !DILocation(line: 966, column: 57, scope: !5483)
!5500 = !DILocation(line: 0, scope: !5272, inlinedAt: !5501)
!5501 = distinct !DILocation(line: 966, column: 26, scope: !5483)
!5502 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5501)
!5503 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5501)
!5504 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5501)
!5505 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5501)
!5506 = !DILocation(line: 971, column: 12, scope: !5441)
!5507 = !DILocation(line: 972, column: 12, scope: !5441)
!5508 = !DILocation(line: 542, column: 3, scope: !4937, inlinedAt: !5509)
!5509 = distinct !DILocation(line: 975, column: 7, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5441, file: !312, line: 975, column: 7)
!5511 = !DILocation(line: 542, column: 17, scope: !4937, inlinedAt: !5509)
!5512 = !DILocation(line: 0, scope: !4937, inlinedAt: !5509)
!5513 = !DILocation(line: 547, column: 13, scope: !4947, inlinedAt: !5509)
!5514 = !DILocation(line: 547, column: 17, scope: !4947, inlinedAt: !5509)
!5515 = !DILocation(line: 547, column: 34, scope: !4947, inlinedAt: !5509)
!5516 = !DILocation(line: 547, column: 7, scope: !4937, inlinedAt: !5509)
!5517 = !DILocation(line: 574, column: 1, scope: !4937, inlinedAt: !5509)
!5518 = !DILocation(line: 975, column: 7, scope: !5441)
!5519 = !DILocation(line: 550, column: 14, scope: !4955, inlinedAt: !5509)
!5520 = !DILocation(line: 553, column: 5, scope: !4955, inlinedAt: !5509)
!5521 = !DILocation(line: 555, column: 25, scope: !4958, inlinedAt: !5509)
!5522 = !DILocation(line: 555, column: 29, scope: !4958, inlinedAt: !5509)
!5523 = !DILocation(line: 556, column: 18, scope: !4958, inlinedAt: !5509)
!5524 = !DILocation(line: 557, column: 14, scope: !4955, inlinedAt: !5509)
!5525 = !DILocation(line: 557, column: 26, scope: !4955, inlinedAt: !5509)
!5526 = !DILocation(line: 557, column: 47, scope: !4955, inlinedAt: !5509)
!5527 = !DILocation(line: 557, column: 5, scope: !4958, inlinedAt: !5509)
!5528 = distinct !{!5528, !5520, !5529}
!5529 = !DILocation(line: 557, column: 70, scope: !4955, inlinedAt: !5509)
!5530 = !DILocation(line: 559, column: 15, scope: !4968, inlinedAt: !5509)
!5531 = !DILocation(line: 975, column: 27, scope: !5510)
!5532 = !DILocation(line: 982, column: 33, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5510, file: !312, line: 980, column: 3)
!5534 = !DILocation(line: 982, column: 13, scope: !5533)
!5535 = !DILocation(line: 588, column: 12, scope: !5133, inlinedAt: !5536)
!5536 = distinct !DILocation(line: 985, column: 5, scope: !5533)
!5537 = !DILocation(line: 609, column: 3, scope: !5009, inlinedAt: !5538)
!5538 = distinct !DILocation(line: 987, column: 8, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5533, file: !312, line: 987, column: 8)
!5540 = !DILocation(line: 609, column: 17, scope: !5009, inlinedAt: !5538)
!5541 = !DILocation(line: 0, scope: !5009, inlinedAt: !5538)
!5542 = !DILocation(line: 614, column: 12, scope: !5009, inlinedAt: !5538)
!5543 = !DILocation(line: 615, column: 12, scope: !5009, inlinedAt: !5538)
!5544 = !DILocation(line: 618, column: 12, scope: !5009, inlinedAt: !5538)
!5545 = !DILocation(line: 621, column: 3, scope: !5009, inlinedAt: !5538)
!5546 = !DILocation(line: 623, column: 26, scope: !5023, inlinedAt: !5538)
!5547 = !DILocation(line: 623, column: 30, scope: !5023, inlinedAt: !5538)
!5548 = !DILocation(line: 624, column: 19, scope: !5023, inlinedAt: !5538)
!5549 = !DILocation(line: 625, column: 12, scope: !5009, inlinedAt: !5538)
!5550 = !DILocation(line: 625, column: 27, scope: !5009, inlinedAt: !5538)
!5551 = !DILocation(line: 625, column: 47, scope: !5009, inlinedAt: !5538)
!5552 = !DILocation(line: 625, column: 3, scope: !5023, inlinedAt: !5538)
!5553 = distinct !{!5553, !5545, !5554}
!5554 = !DILocation(line: 625, column: 73, scope: !5009, inlinedAt: !5538)
!5555 = !DILocation(line: 627, column: 13, scope: !5033, inlinedAt: !5538)
!5556 = !DILocation(line: 637, column: 12, scope: !5009, inlinedAt: !5538)
!5557 = !DILocation(line: 640, column: 1, scope: !5009, inlinedAt: !5538)
!5558 = !DILocation(line: 0, scope: !5510)
!5559 = !DILocation(line: 997, column: 12, scope: !5441)
!5560 = !DILocation(line: 999, column: 3, scope: !5441)
!5561 = distinct !DISubprogram(name: "RTC_DateStructInit", scope: !312, file: !312, line: 1009, type: !5562, scopeLine: 1010, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5564)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{null, !5444}
!5564 = !{!5565}
!5565 = !DILocalVariable(name: "RTC_DateStruct", arg: 1, scope: !5561, file: !312, line: 1009, type: !5444)
!5566 = !DILocation(line: 0, scope: !5561)
!5567 = !DILocation(line: 1012, column: 19, scope: !5561)
!5568 = !DILocation(line: 1012, column: 31, scope: !5561)
!5569 = !DILocation(line: 1013, column: 19, scope: !5561)
!5570 = !DILocation(line: 1013, column: 28, scope: !5561)
!5571 = !DILocation(line: 1014, column: 19, scope: !5561)
!5572 = !DILocation(line: 1014, column: 29, scope: !5561)
!5573 = !DILocation(line: 1015, column: 19, scope: !5561)
!5574 = !DILocation(line: 1015, column: 28, scope: !5561)
!5575 = !DILocation(line: 1016, column: 1, scope: !5561)
!5576 = distinct !DISubprogram(name: "RTC_GetDate", scope: !312, file: !312, line: 1028, type: !5577, scopeLine: 1029, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5579)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{null, !20, !5444}
!5579 = !{!5580, !5581, !5582}
!5580 = !DILocalVariable(name: "RTC_Format", arg: 1, scope: !5576, file: !312, line: 1028, type: !20)
!5581 = !DILocalVariable(name: "RTC_DateStruct", arg: 2, scope: !5576, file: !312, line: 1028, type: !5444)
!5582 = !DILocalVariable(name: "tmpreg", scope: !5576, file: !312, line: 1030, type: !20)
!5583 = !DILocation(line: 0, scope: !5576)
!5584 = !DILocation(line: 1036, column: 28, scope: !5576)
!5585 = !DILocation(line: 1039, column: 75, scope: !5576)
!5586 = !DILocation(line: 1039, column: 30, scope: !5576)
!5587 = !DILocation(line: 1039, column: 19, scope: !5576)
!5588 = !DILocation(line: 1039, column: 28, scope: !5576)
!5589 = !DILocation(line: 1040, column: 76, scope: !5576)
!5590 = !DILocation(line: 1040, column: 31, scope: !5576)
!5591 = !DILocation(line: 1040, column: 19, scope: !5576)
!5592 = !DILocation(line: 1040, column: 29, scope: !5576)
!5593 = !DILocation(line: 1041, column: 30, scope: !5576)
!5594 = !DILocation(line: 1041, column: 19, scope: !5576)
!5595 = !DILocation(line: 1041, column: 28, scope: !5576)
!5596 = !DILocation(line: 1042, column: 67, scope: !5576)
!5597 = !DILocation(line: 1042, column: 33, scope: !5576)
!5598 = !DILocation(line: 1042, column: 19, scope: !5576)
!5599 = !DILocation(line: 1042, column: 31, scope: !5576)
!5600 = !DILocation(line: 1045, column: 18, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5576, file: !312, line: 1045, column: 7)
!5602 = !DILocation(line: 1045, column: 7, scope: !5576)
!5603 = !DILocation(line: 0, scope: !5406, inlinedAt: !5604)
!5604 = distinct !DILocation(line: 1048, column: 41, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5601, file: !312, line: 1046, column: 3)
!5606 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5604)
!5607 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5604)
!5608 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5604)
!5609 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5604)
!5610 = !DILocation(line: 1048, column: 30, scope: !5605)
!5611 = !DILocation(line: 0, scope: !5406, inlinedAt: !5612)
!5612 = distinct !DILocation(line: 1049, column: 42, scope: !5605)
!5613 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5612)
!5614 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5612)
!5615 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5612)
!5616 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5612)
!5617 = !DILocation(line: 1049, column: 31, scope: !5605)
!5618 = !DILocation(line: 0, scope: !5406, inlinedAt: !5619)
!5619 = distinct !DILocation(line: 1050, column: 41, scope: !5605)
!5620 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5619)
!5621 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5619)
!5622 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5619)
!5623 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5619)
!5624 = !DILocation(line: 1050, column: 30, scope: !5605)
!5625 = !DILocation(line: 1051, column: 3, scope: !5605)
!5626 = !DILocation(line: 1052, column: 1, scope: !5576)
!5627 = distinct !DISubprogram(name: "RTC_SetAlarm", scope: !312, file: !312, line: 1088, type: !5628, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5638)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{null, !20, !20, !5630}
!5630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5631, size: 32)
!5631 = !DIDerivedType(tag: DW_TAG_typedef, name: "RTC_AlarmTypeDef", file: !5087, line: 115, baseType: !5632)
!5632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5087, line: 100, size: 128, elements: !5633)
!5633 = !{!5634, !5635, !5636, !5637}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AlarmTime", scope: !5632, file: !5087, line: 102, baseType: !5223, size: 32)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AlarmMask", scope: !5632, file: !5087, line: 104, baseType: !20, size: 32, offset: 32)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AlarmDateWeekDaySel", scope: !5632, file: !5087, line: 107, baseType: !20, size: 32, offset: 64)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_AlarmDateWeekDay", scope: !5632, file: !5087, line: 110, baseType: !60, size: 8, offset: 96)
!5638 = !{!5639, !5640, !5641, !5642}
!5639 = !DILocalVariable(name: "RTC_Format", arg: 1, scope: !5627, file: !312, line: 1088, type: !20)
!5640 = !DILocalVariable(name: "RTC_Alarm", arg: 2, scope: !5627, file: !312, line: 1088, type: !20)
!5641 = !DILocalVariable(name: "RTC_AlarmStruct", arg: 3, scope: !5627, file: !312, line: 1088, type: !5630)
!5642 = !DILocalVariable(name: "tmpreg", scope: !5627, file: !312, line: 1090, type: !20)
!5643 = !DILocation(line: 0, scope: !5627)
!5644 = !DILocation(line: 1098, column: 18, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5627, file: !312, line: 1098, column: 7)
!5646 = !DILocation(line: 0, scope: !5645)
!5647 = !DILocation(line: 1098, column: 7, scope: !5627)
!5648 = !DILocation(line: 1100, column: 9, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5645, file: !312, line: 1099, column: 3)
!5650 = !DILocation(line: 1107, column: 38, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !312, line: 1106, column: 5)
!5652 = distinct !DILexicalBlock(scope: !5649, file: !312, line: 1100, column: 9)
!5653 = !DILocation(line: 1107, column: 46, scope: !5651)
!5654 = !{!5655, !841, i64 3}
!5655 = !{!"", !5247, i64 0, !840, i64 4, !840, i64 8, !841, i64 12}
!5656 = !DILocation(line: 1124, column: 9, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5645, file: !312, line: 1123, column: 3)
!5658 = !DILocation(line: 1157, column: 58, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !312, line: 1153, column: 3)
!5660 = distinct !DILexicalBlock(scope: !5627, file: !312, line: 1152, column: 7)
!5661 = !DILocation(line: 1132, column: 46, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5663, file: !312, line: 1131, column: 5)
!5663 = distinct !DILexicalBlock(scope: !5657, file: !312, line: 1124, column: 9)
!5664 = !DILocation(line: 0, scope: !5660)
!5665 = !{!5655, !841, i64 0}
!5666 = !DILocation(line: 1154, column: 16, scope: !5659)
!5667 = !DILocation(line: 1154, column: 69, scope: !5659)
!5668 = !DILocation(line: 1155, column: 58, scope: !5659)
!5669 = !{!5655, !841, i64 1}
!5670 = !DILocation(line: 1155, column: 16, scope: !5659)
!5671 = !DILocation(line: 1155, column: 71, scope: !5659)
!5672 = !DILocation(line: 1154, column: 76, scope: !5659)
!5673 = !DILocation(line: 1156, column: 57, scope: !5659)
!5674 = !{!5655, !841, i64 2}
!5675 = !DILocation(line: 1156, column: 16, scope: !5659)
!5676 = !DILocation(line: 1155, column: 77, scope: !5659)
!5677 = !DILocation(line: 1156, column: 70, scope: !5659)
!5678 = !DILocation(line: 1158, column: 44, scope: !5659)
!5679 = !{!5655, !841, i64 12}
!5680 = !DILocation(line: 1158, column: 16, scope: !5659)
!5681 = !DILocation(line: 1158, column: 66, scope: !5659)
!5682 = !DILocation(line: 1160, column: 43, scope: !5659)
!5683 = !{!5655, !840, i64 4}
!5684 = !DILocation(line: 1161, column: 3, scope: !5659)
!5685 = !DILocation(line: 0, scope: !5272, inlinedAt: !5686)
!5686 = distinct !DILocation(line: 1164, column: 26, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5660, file: !312, line: 1163, column: 3)
!5688 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5686)
!5689 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5686)
!5690 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5686)
!5691 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5686)
!5692 = !DILocation(line: 1164, column: 16, scope: !5687)
!5693 = !DILocation(line: 1164, column: 83, scope: !5687)
!5694 = !DILocation(line: 1165, column: 72, scope: !5687)
!5695 = !DILocation(line: 0, scope: !5272, inlinedAt: !5696)
!5696 = distinct !DILocation(line: 1165, column: 26, scope: !5687)
!5697 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5696)
!5698 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5696)
!5699 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5696)
!5700 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5696)
!5701 = !DILocation(line: 1165, column: 16, scope: !5687)
!5702 = !DILocation(line: 1165, column: 85, scope: !5687)
!5703 = !DILocation(line: 1164, column: 90, scope: !5687)
!5704 = !DILocation(line: 1166, column: 72, scope: !5687)
!5705 = !DILocation(line: 0, scope: !5272, inlinedAt: !5706)
!5706 = distinct !DILocation(line: 1166, column: 26, scope: !5687)
!5707 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5706)
!5708 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5706)
!5709 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5706)
!5710 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5706)
!5711 = !DILocation(line: 1166, column: 16, scope: !5687)
!5712 = !DILocation(line: 1165, column: 91, scope: !5687)
!5713 = !DILocation(line: 1167, column: 58, scope: !5687)
!5714 = !DILocation(line: 1167, column: 16, scope: !5687)
!5715 = !DILocation(line: 1167, column: 67, scope: !5687)
!5716 = !DILocation(line: 1166, column: 86, scope: !5687)
!5717 = !DILocation(line: 1168, column: 58, scope: !5687)
!5718 = !DILocation(line: 0, scope: !5272, inlinedAt: !5719)
!5719 = distinct !DILocation(line: 1168, column: 26, scope: !5687)
!5720 = !DILocation(line: 2699, column: 16, scope: !5272, inlinedAt: !5719)
!5721 = !DILocation(line: 2699, column: 3, scope: !5272, inlinedAt: !5719)
!5722 = !DILocation(line: 2705, column: 30, scope: !5272, inlinedAt: !5719)
!5723 = !DILocation(line: 2705, column: 36, scope: !5272, inlinedAt: !5719)
!5724 = !DILocation(line: 1168, column: 16, scope: !5687)
!5725 = !DILocation(line: 1168, column: 80, scope: !5687)
!5726 = !DILocation(line: 1170, column: 43, scope: !5687)
!5727 = !{!5655, !840, i64 8}
!5728 = !DILocation(line: 1174, column: 12, scope: !5627)
!5729 = !DILocation(line: 1175, column: 12, scope: !5627)
!5730 = !DILocation(line: 1178, column: 17, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5627, file: !312, line: 1178, column: 7)
!5732 = !DILocation(line: 1178, column: 7, scope: !5627)
!5733 = !DILocation(line: 1180, column: 17, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5731, file: !312, line: 1179, column: 3)
!5735 = !DILocation(line: 1181, column: 3, scope: !5734)
!5736 = !DILocation(line: 1184, column: 17, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5731, file: !312, line: 1183, column: 3)
!5738 = !DILocation(line: 1188, column: 12, scope: !5627)
!5739 = !DILocation(line: 1189, column: 1, scope: !5627)
!5740 = distinct !DISubprogram(name: "RTC_AlarmStructInit", scope: !312, file: !312, line: 1199, type: !5741, scopeLine: 1200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5743)
!5741 = !DISubroutineType(types: !5742)
!5742 = !{null, !5630}
!5743 = !{!5744}
!5744 = !DILocalVariable(name: "RTC_AlarmStruct", arg: 1, scope: !5740, file: !312, line: 1199, type: !5630)
!5745 = !DILocation(line: 0, scope: !5740)
!5746 = !DILocation(line: 1202, column: 34, scope: !5740)
!5747 = !DILocation(line: 1202, column: 42, scope: !5740)
!5748 = !DILocation(line: 1203, column: 34, scope: !5740)
!5749 = !DILocation(line: 1203, column: 44, scope: !5740)
!5750 = !DILocation(line: 1204, column: 34, scope: !5740)
!5751 = !DILocation(line: 1204, column: 46, scope: !5740)
!5752 = !DILocation(line: 1205, column: 34, scope: !5740)
!5753 = !DILocation(line: 1205, column: 46, scope: !5740)
!5754 = !DILocation(line: 1208, column: 20, scope: !5740)
!5755 = !DILocation(line: 1208, column: 44, scope: !5740)
!5756 = !DILocation(line: 1209, column: 20, scope: !5740)
!5757 = !DILocation(line: 1209, column: 41, scope: !5740)
!5758 = !DILocation(line: 1212, column: 20, scope: !5740)
!5759 = !DILocation(line: 1212, column: 34, scope: !5740)
!5760 = !DILocation(line: 1213, column: 1, scope: !5740)
!5761 = distinct !DISubprogram(name: "RTC_GetAlarm", scope: !312, file: !312, line: 1229, type: !5628, scopeLine: 1230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5762)
!5762 = !{!5763, !5764, !5765, !5766}
!5763 = !DILocalVariable(name: "RTC_Format", arg: 1, scope: !5761, file: !312, line: 1229, type: !20)
!5764 = !DILocalVariable(name: "RTC_Alarm", arg: 2, scope: !5761, file: !312, line: 1229, type: !20)
!5765 = !DILocalVariable(name: "RTC_AlarmStruct", arg: 3, scope: !5761, file: !312, line: 1229, type: !5630)
!5766 = !DILocalVariable(name: "tmpreg", scope: !5761, file: !312, line: 1231, type: !20)
!5767 = !DILocation(line: 0, scope: !5761)
!5768 = !DILocation(line: 1238, column: 17, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5761, file: !312, line: 1238, column: 7)
!5770 = !DILocation(line: 0, scope: !5769)
!5771 = !DILocation(line: 1249, column: 70, scope: !5761)
!5772 = !DILocation(line: 1248, column: 46, scope: !5761)
!5773 = !DILocation(line: 1248, column: 34, scope: !5761)
!5774 = !DILocation(line: 1248, column: 44, scope: !5761)
!5775 = !DILocation(line: 1251, column: 71, scope: !5761)
!5776 = !DILocation(line: 1250, column: 48, scope: !5761)
!5777 = !DILocation(line: 1250, column: 34, scope: !5761)
!5778 = !DILocation(line: 1250, column: 46, scope: !5761)
!5779 = !DILocation(line: 1252, column: 48, scope: !5761)
!5780 = !DILocation(line: 1252, column: 34, scope: !5761)
!5781 = !DILocation(line: 1252, column: 46, scope: !5761)
!5782 = !DILocation(line: 1254, column: 44, scope: !5761)
!5783 = !DILocation(line: 1254, column: 34, scope: !5761)
!5784 = !DILocation(line: 1254, column: 42, scope: !5761)
!5785 = !DILocation(line: 1255, column: 97, scope: !5761)
!5786 = !DILocation(line: 1255, column: 43, scope: !5761)
!5787 = !DILocation(line: 1255, column: 20, scope: !5761)
!5788 = !DILocation(line: 1255, column: 41, scope: !5761)
!5789 = !DILocation(line: 1256, column: 64, scope: !5761)
!5790 = !DILocation(line: 1256, column: 20, scope: !5761)
!5791 = !DILocation(line: 1256, column: 44, scope: !5761)
!5792 = !DILocation(line: 1257, column: 54, scope: !5761)
!5793 = !DILocation(line: 1257, column: 20, scope: !5761)
!5794 = !DILocation(line: 1257, column: 34, scope: !5761)
!5795 = !DILocation(line: 1259, column: 18, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5761, file: !312, line: 1259, column: 7)
!5797 = !DILocation(line: 1259, column: 7, scope: !5761)
!5798 = !DILocation(line: 0, scope: !5406, inlinedAt: !5799)
!5799 = distinct !DILocation(line: 1261, column: 48, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5796, file: !312, line: 1260, column: 3)
!5801 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5799)
!5802 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5799)
!5803 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5799)
!5804 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5799)
!5805 = !DILocation(line: 1261, column: 46, scope: !5800)
!5806 = !DILocation(line: 0, scope: !5406, inlinedAt: !5807)
!5807 = distinct !DILocation(line: 1263, column: 50, scope: !5800)
!5808 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5807)
!5809 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5807)
!5810 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5807)
!5811 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5807)
!5812 = !DILocation(line: 1263, column: 48, scope: !5800)
!5813 = !DILocation(line: 0, scope: !5406, inlinedAt: !5814)
!5814 = distinct !DILocation(line: 1265, column: 50, scope: !5800)
!5815 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5814)
!5816 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5814)
!5817 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5814)
!5818 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5814)
!5819 = !DILocation(line: 1265, column: 48, scope: !5800)
!5820 = !DILocation(line: 0, scope: !5406, inlinedAt: !5821)
!5821 = distinct !DILocation(line: 1267, column: 45, scope: !5800)
!5822 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !5821)
!5823 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !5821)
!5824 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !5821)
!5825 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !5821)
!5826 = !DILocation(line: 1267, column: 43, scope: !5800)
!5827 = !DILocation(line: 1268, column: 3, scope: !5800)
!5828 = !DILocation(line: 1269, column: 1, scope: !5761)
!5829 = distinct !DISubprogram(name: "RTC_AlarmCmd", scope: !312, file: !312, line: 1283, type: !5830, scopeLine: 1284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5832)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{!358, !20, !856}
!5832 = !{!5833, !5834, !5835, !5836, !5837}
!5833 = !DILocalVariable(name: "RTC_Alarm", arg: 1, scope: !5829, file: !312, line: 1283, type: !20)
!5834 = !DILocalVariable(name: "NewState", arg: 2, scope: !5829, file: !312, line: 1283, type: !856)
!5835 = !DILocalVariable(name: "alarmcounter", scope: !5829, file: !312, line: 1285, type: !27)
!5836 = !DILocalVariable(name: "alarmstatus", scope: !5829, file: !312, line: 1286, type: !20)
!5837 = !DILocalVariable(name: "status", scope: !5829, file: !312, line: 1287, type: !358)
!5838 = !DILocation(line: 0, scope: !5829)
!5839 = !DILocation(line: 1285, column: 3, scope: !5829)
!5840 = !DILocation(line: 1285, column: 17, scope: !5829)
!5841 = !DILocation(line: 1294, column: 12, scope: !5829)
!5842 = !DILocation(line: 1295, column: 12, scope: !5829)
!5843 = !DILocation(line: 1298, column: 16, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5829, file: !312, line: 1298, column: 7)
!5845 = !DILocation(line: 1298, column: 7, scope: !5829)
!5846 = !DILocation(line: 1300, column: 13, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5844, file: !312, line: 1299, column: 3)
!5848 = !DILocation(line: 1303, column: 3, scope: !5847)
!5849 = !DILocation(line: 1307, column: 26, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5844, file: !312, line: 1305, column: 3)
!5851 = !DILocation(line: 1307, column: 13, scope: !5850)
!5852 = !DILocation(line: 0, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5850, file: !312, line: 1311, column: 5)
!5854 = !DILocation(line: 1310, column: 5, scope: !5850)
!5855 = !DILocation(line: 1312, column: 26, scope: !5853)
!5856 = !DILocation(line: 1312, column: 30, scope: !5853)
!5857 = !DILocation(line: 1313, column: 19, scope: !5853)
!5858 = !DILocation(line: 1314, column: 14, scope: !5850)
!5859 = !DILocation(line: 1314, column: 27, scope: !5850)
!5860 = !DILocation(line: 1314, column: 48, scope: !5850)
!5861 = !DILocation(line: 1314, column: 5, scope: !5853)
!5862 = distinct !{!5862, !5854, !5863}
!5863 = !DILocation(line: 1314, column: 72, scope: !5850)
!5864 = !DILocation(line: 1316, column: 15, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5850, file: !312, line: 1316, column: 9)
!5866 = !DILocation(line: 1316, column: 19, scope: !5865)
!5867 = !DILocation(line: 1316, column: 39, scope: !5865)
!5868 = !DILocation(line: 0, scope: !5844)
!5869 = !DILocation(line: 1327, column: 12, scope: !5829)
!5870 = !DILocation(line: 1330, column: 1, scope: !5829)
!5871 = !DILocation(line: 1329, column: 3, scope: !5829)
!5872 = distinct !DISubprogram(name: "RTC_AlarmSubSecondConfig", scope: !312, file: !312, line: 1377, type: !5873, scopeLine: 1378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5875)
!5873 = !DISubroutineType(types: !5874)
!5874 = !{null, !20, !20, !20}
!5875 = !{!5876, !5877, !5878, !5879}
!5876 = !DILocalVariable(name: "RTC_Alarm", arg: 1, scope: !5872, file: !312, line: 1377, type: !20)
!5877 = !DILocalVariable(name: "RTC_AlarmSubSecondValue", arg: 2, scope: !5872, file: !312, line: 1377, type: !20)
!5878 = !DILocalVariable(name: "RTC_AlarmSubSecondMask", arg: 3, scope: !5872, file: !312, line: 1377, type: !20)
!5879 = !DILocalVariable(name: "tmpreg", scope: !5872, file: !312, line: 1379, type: !20)
!5880 = !DILocation(line: 0, scope: !5872)
!5881 = !DILocation(line: 1387, column: 12, scope: !5872)
!5882 = !DILocation(line: 1388, column: 12, scope: !5872)
!5883 = !DILocation(line: 1391, column: 59, scope: !5872)
!5884 = !DILocation(line: 1393, column: 17, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5872, file: !312, line: 1393, column: 7)
!5886 = !DILocation(line: 1393, column: 7, scope: !5872)
!5887 = !DILocation(line: 1396, column: 19, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5885, file: !312, line: 1394, column: 3)
!5889 = !{!4934, !840, i64 68}
!5890 = !DILocation(line: 1397, column: 3, scope: !5888)
!5891 = !DILocation(line: 1401, column: 19, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5885, file: !312, line: 1399, column: 3)
!5893 = !{!4934, !840, i64 72}
!5894 = !DILocation(line: 1405, column: 12, scope: !5872)
!5895 = !DILocation(line: 1407, column: 1, scope: !5872)
!5896 = distinct !DISubprogram(name: "RTC_GetAlarmSubSecond", scope: !312, file: !312, line: 1418, type: !5897, scopeLine: 1419, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5899)
!5897 = !DISubroutineType(types: !5898)
!5898 = !{!20, !20}
!5899 = !{!5900, !5901}
!5900 = !DILocalVariable(name: "RTC_Alarm", arg: 1, scope: !5896, file: !312, line: 1418, type: !20)
!5901 = !DILocalVariable(name: "tmpreg", scope: !5896, file: !312, line: 1420, type: !20)
!5902 = !DILocation(line: 0, scope: !5896)
!5903 = !DILocation(line: 1423, column: 17, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5896, file: !312, line: 1423, column: 7)
!5905 = !DILocation(line: 0, scope: !5904)
!5906 = !DILocation(line: 1432, column: 3, scope: !5896)
!5907 = distinct !DISubprogram(name: "RTC_WakeUpClockConfig", scope: !312, file: !312, line: 1467, type: !831, scopeLine: 1468, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5908)
!5908 = !{!5909}
!5909 = !DILocalVariable(name: "RTC_WakeUpClock", arg: 1, scope: !5907, file: !312, line: 1467, type: !20)
!5910 = !DILocation(line: 0, scope: !5907)
!5911 = !DILocation(line: 1473, column: 12, scope: !5907)
!5912 = !DILocation(line: 1474, column: 12, scope: !5907)
!5913 = !DILocation(line: 1477, column: 11, scope: !5907)
!5914 = !DILocation(line: 1480, column: 11, scope: !5907)
!5915 = !DILocation(line: 1483, column: 12, scope: !5907)
!5916 = !DILocation(line: 1484, column: 1, scope: !5907)
!5917 = distinct !DISubprogram(name: "RTC_SetWakeUpCounter", scope: !312, file: !312, line: 1494, type: !831, scopeLine: 1495, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5918)
!5918 = !{!5919}
!5919 = !DILocalVariable(name: "RTC_WakeUpCounter", arg: 1, scope: !5917, file: !312, line: 1494, type: !20)
!5920 = !DILocation(line: 0, scope: !5917)
!5921 = !DILocation(line: 1500, column: 12, scope: !5917)
!5922 = !DILocation(line: 1501, column: 12, scope: !5917)
!5923 = !DILocation(line: 1504, column: 13, scope: !5917)
!5924 = !DILocation(line: 1507, column: 12, scope: !5917)
!5925 = !DILocation(line: 1508, column: 1, scope: !5917)
!5926 = distinct !DISubprogram(name: "RTC_GetWakeUpCounter", scope: !312, file: !312, line: 1515, type: !2372, scopeLine: 1516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !361)
!5927 = !DILocation(line: 1518, column: 27, scope: !5926)
!5928 = !DILocation(line: 1518, column: 32, scope: !5926)
!5929 = !DILocation(line: 1518, column: 3, scope: !5926)
!5930 = distinct !DISubprogram(name: "RTC_WakeUpCmd", scope: !312, file: !312, line: 1527, type: !5165, scopeLine: 1528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5931)
!5931 = !{!5932, !5933, !5934, !5935}
!5932 = !DILocalVariable(name: "NewState", arg: 1, scope: !5930, file: !312, line: 1527, type: !856)
!5933 = !DILocalVariable(name: "wutcounter", scope: !5930, file: !312, line: 1529, type: !27)
!5934 = !DILocalVariable(name: "wutwfstatus", scope: !5930, file: !312, line: 1530, type: !20)
!5935 = !DILocalVariable(name: "status", scope: !5930, file: !312, line: 1531, type: !358)
!5936 = !DILocation(line: 0, scope: !5930)
!5937 = !DILocation(line: 1529, column: 3, scope: !5930)
!5938 = !DILocation(line: 1529, column: 17, scope: !5930)
!5939 = !DILocation(line: 1537, column: 12, scope: !5930)
!5940 = !DILocation(line: 1538, column: 12, scope: !5930)
!5941 = !DILocation(line: 1540, column: 16, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5930, file: !312, line: 1540, column: 7)
!5943 = !DILocation(line: 0, scope: !5942)
!5944 = !DILocation(line: 1540, column: 7, scope: !5930)
!5945 = !DILocation(line: 1543, column: 13, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5942, file: !312, line: 1541, column: 3)
!5947 = !DILocation(line: 1545, column: 3, scope: !5946)
!5948 = !DILocation(line: 1549, column: 13, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5942, file: !312, line: 1547, column: 3)
!5950 = !DILocation(line: 1551, column: 5, scope: !5949)
!5951 = !DILocation(line: 1553, column: 26, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5949, file: !312, line: 1552, column: 5)
!5953 = !DILocation(line: 1553, column: 30, scope: !5952)
!5954 = !DILocation(line: 1554, column: 17, scope: !5952)
!5955 = !DILocation(line: 1555, column: 14, scope: !5949)
!5956 = !DILocation(line: 1555, column: 25, scope: !5949)
!5957 = !DILocation(line: 1555, column: 46, scope: !5949)
!5958 = !DILocation(line: 1555, column: 5, scope: !5952)
!5959 = distinct !{!5959, !5950, !5960}
!5960 = !DILocation(line: 1555, column: 70, scope: !5949)
!5961 = !DILocation(line: 1557, column: 15, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5949, file: !312, line: 1557, column: 9)
!5963 = !DILocation(line: 1568, column: 12, scope: !5930)
!5964 = !DILocation(line: 1571, column: 1, scope: !5930)
!5965 = !DILocation(line: 1570, column: 3, scope: !5930)
!5966 = distinct !DISubprogram(name: "RTC_DayLightSavingConfig", scope: !312, file: !312, line: 1604, type: !897, scopeLine: 1605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5967)
!5967 = !{!5968, !5969}
!5968 = !DILocalVariable(name: "RTC_DayLightSaving", arg: 1, scope: !5966, file: !312, line: 1604, type: !20)
!5969 = !DILocalVariable(name: "RTC_StoreOperation", arg: 2, scope: !5966, file: !312, line: 1604, type: !20)
!5970 = !DILocation(line: 0, scope: !5966)
!5971 = !DILocation(line: 1611, column: 12, scope: !5966)
!5972 = !DILocation(line: 1612, column: 12, scope: !5966)
!5973 = !DILocation(line: 1615, column: 11, scope: !5966)
!5974 = !DILocation(line: 1618, column: 44, scope: !5966)
!5975 = !DILocation(line: 1618, column: 11, scope: !5966)
!5976 = !DILocation(line: 1621, column: 12, scope: !5966)
!5977 = !DILocation(line: 1622, column: 1, scope: !5966)
!5978 = distinct !DISubprogram(name: "RTC_GetStoreOperation", scope: !312, file: !312, line: 1631, type: !2372, scopeLine: 1632, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !361)
!5979 = !DILocation(line: 1633, column: 16, scope: !5978)
!5980 = !DILocation(line: 1633, column: 19, scope: !5978)
!5981 = !DILocation(line: 1633, column: 3, scope: !5978)
!5982 = distinct !DISubprogram(name: "RTC_OutputConfig", scope: !312, file: !312, line: 1670, type: !897, scopeLine: 1671, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5983)
!5983 = !{!5984, !5985}
!5984 = !DILocalVariable(name: "RTC_Output", arg: 1, scope: !5982, file: !312, line: 1670, type: !20)
!5985 = !DILocalVariable(name: "RTC_OutputPolarity", arg: 2, scope: !5982, file: !312, line: 1670, type: !20)
!5986 = !DILocation(line: 0, scope: !5982)
!5987 = !DILocation(line: 1677, column: 12, scope: !5982)
!5988 = !DILocation(line: 1678, column: 12, scope: !5982)
!5989 = !DILocation(line: 1681, column: 11, scope: !5982)
!5990 = !DILocation(line: 1684, column: 36, scope: !5982)
!5991 = !DILocation(line: 1684, column: 11, scope: !5982)
!5992 = !DILocation(line: 1687, column: 12, scope: !5982)
!5993 = !DILocation(line: 1688, column: 1, scope: !5982)
!5994 = distinct !DISubprogram(name: "RTC_CoarseCalibConfig", scope: !312, file: !312, line: 1724, type: !5995, scopeLine: 1725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !5997)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{!358, !20, !20}
!5997 = !{!5998, !5999, !6000}
!5998 = !DILocalVariable(name: "RTC_CalibSign", arg: 1, scope: !5994, file: !312, line: 1724, type: !20)
!5999 = !DILocalVariable(name: "Value", arg: 2, scope: !5994, file: !312, line: 1724, type: !20)
!6000 = !DILocalVariable(name: "status", scope: !5994, file: !312, line: 1726, type: !358)
!6001 = !DILocation(line: 0, scope: !5994)
!6002 = !DILocation(line: 1733, column: 12, scope: !5994)
!6003 = !DILocation(line: 1734, column: 12, scope: !5994)
!6004 = !DILocation(line: 542, column: 3, scope: !4937, inlinedAt: !6005)
!6005 = distinct !DILocation(line: 1737, column: 7, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5994, file: !312, line: 1737, column: 7)
!6007 = !DILocation(line: 542, column: 17, scope: !4937, inlinedAt: !6005)
!6008 = !DILocation(line: 0, scope: !4937, inlinedAt: !6005)
!6009 = !DILocation(line: 547, column: 13, scope: !4947, inlinedAt: !6005)
!6010 = !DILocation(line: 547, column: 17, scope: !4947, inlinedAt: !6005)
!6011 = !DILocation(line: 547, column: 34, scope: !4947, inlinedAt: !6005)
!6012 = !DILocation(line: 547, column: 7, scope: !4937, inlinedAt: !6005)
!6013 = !DILocation(line: 574, column: 1, scope: !4937, inlinedAt: !6005)
!6014 = !DILocation(line: 1737, column: 7, scope: !5994)
!6015 = !DILocation(line: 550, column: 14, scope: !4955, inlinedAt: !6005)
!6016 = !DILocation(line: 553, column: 5, scope: !4955, inlinedAt: !6005)
!6017 = !DILocation(line: 555, column: 25, scope: !4958, inlinedAt: !6005)
!6018 = !DILocation(line: 555, column: 29, scope: !4958, inlinedAt: !6005)
!6019 = !DILocation(line: 556, column: 18, scope: !4958, inlinedAt: !6005)
!6020 = !DILocation(line: 557, column: 14, scope: !4955, inlinedAt: !6005)
!6021 = !DILocation(line: 557, column: 26, scope: !4955, inlinedAt: !6005)
!6022 = !DILocation(line: 557, column: 47, scope: !4955, inlinedAt: !6005)
!6023 = !DILocation(line: 557, column: 5, scope: !4958, inlinedAt: !6005)
!6024 = distinct !{!6024, !6016, !6025}
!6025 = !DILocation(line: 557, column: 70, scope: !4955, inlinedAt: !6005)
!6026 = !DILocation(line: 559, column: 15, scope: !4968, inlinedAt: !6005)
!6027 = !DILocation(line: 1737, column: 27, scope: !6006)
!6028 = !DILocation(line: 1744, column: 44, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6006, file: !312, line: 1742, column: 3)
!6030 = !DILocation(line: 1744, column: 17, scope: !6029)
!6031 = !DILocation(line: 588, column: 12, scope: !5133, inlinedAt: !6032)
!6032 = distinct !DILocation(line: 1746, column: 5, scope: !6029)
!6033 = !DILocation(line: 0, scope: !6006)
!6034 = !DILocation(line: 1752, column: 12, scope: !5994)
!6035 = !DILocation(line: 1754, column: 3, scope: !5994)
!6036 = distinct !DISubprogram(name: "RTC_CoarseCalibCmd", scope: !312, file: !312, line: 1765, type: !5165, scopeLine: 1766, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6037)
!6037 = !{!6038, !6039}
!6038 = !DILocalVariable(name: "NewState", arg: 1, scope: !6036, file: !312, line: 1765, type: !856)
!6039 = !DILocalVariable(name: "status", scope: !6036, file: !312, line: 1767, type: !358)
!6040 = !DILocation(line: 0, scope: !6036)
!6041 = !DILocation(line: 1773, column: 12, scope: !6036)
!6042 = !DILocation(line: 1774, column: 12, scope: !6036)
!6043 = !DILocation(line: 542, column: 3, scope: !4937, inlinedAt: !6044)
!6044 = distinct !DILocation(line: 1777, column: 7, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6036, file: !312, line: 1777, column: 7)
!6046 = !DILocation(line: 542, column: 17, scope: !4937, inlinedAt: !6044)
!6047 = !DILocation(line: 0, scope: !4937, inlinedAt: !6044)
!6048 = !DILocation(line: 547, column: 13, scope: !4947, inlinedAt: !6044)
!6049 = !DILocation(line: 547, column: 17, scope: !4947, inlinedAt: !6044)
!6050 = !DILocation(line: 547, column: 34, scope: !4947, inlinedAt: !6044)
!6051 = !DILocation(line: 547, column: 7, scope: !4937, inlinedAt: !6044)
!6052 = !DILocation(line: 574, column: 1, scope: !4937, inlinedAt: !6044)
!6053 = !DILocation(line: 1777, column: 7, scope: !6036)
!6054 = !DILocation(line: 550, column: 14, scope: !4955, inlinedAt: !6044)
!6055 = !DILocation(line: 553, column: 5, scope: !4955, inlinedAt: !6044)
!6056 = !DILocation(line: 555, column: 25, scope: !4958, inlinedAt: !6044)
!6057 = !DILocation(line: 555, column: 29, scope: !4958, inlinedAt: !6044)
!6058 = !DILocation(line: 556, column: 18, scope: !4958, inlinedAt: !6044)
!6059 = !DILocation(line: 557, column: 14, scope: !4955, inlinedAt: !6044)
!6060 = !DILocation(line: 557, column: 26, scope: !4955, inlinedAt: !6044)
!6061 = !DILocation(line: 557, column: 47, scope: !4955, inlinedAt: !6044)
!6062 = !DILocation(line: 557, column: 5, scope: !4958, inlinedAt: !6044)
!6063 = distinct !{!6063, !6055, !6064}
!6064 = !DILocation(line: 557, column: 70, scope: !4955, inlinedAt: !6044)
!6065 = !DILocation(line: 559, column: 15, scope: !4968, inlinedAt: !6044)
!6066 = !DILocation(line: 1777, column: 27, scope: !6045)
!6067 = !DILocation(line: 1783, column: 18, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !312, line: 1783, column: 9)
!6069 = distinct !DILexicalBlock(scope: !6045, file: !312, line: 1782, column: 3)
!6070 = !DILocation(line: 0, scope: !6068)
!6071 = !DILocation(line: 1783, column: 9, scope: !6069)
!6072 = !DILocation(line: 588, column: 12, scope: !5133, inlinedAt: !6073)
!6073 = distinct !DILocation(line: 1794, column: 5, scope: !6069)
!6074 = !DILocation(line: 0, scope: !6045)
!6075 = !DILocation(line: 1800, column: 12, scope: !6036)
!6076 = !DILocation(line: 1802, column: 3, scope: !6036)
!6077 = distinct !DISubprogram(name: "RTC_CalibOutputCmd", scope: !312, file: !312, line: 1811, type: !1502, scopeLine: 1812, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6078)
!6078 = !{!6079}
!6079 = !DILocalVariable(name: "NewState", arg: 1, scope: !6077, file: !312, line: 1811, type: !856)
!6080 = !DILocation(line: 0, scope: !6077)
!6081 = !DILocation(line: 1817, column: 12, scope: !6077)
!6082 = !DILocation(line: 1818, column: 12, scope: !6077)
!6083 = !DILocation(line: 1820, column: 16, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6077, file: !312, line: 1820, column: 7)
!6085 = !DILocation(line: 0, scope: !6084)
!6086 = !DILocation(line: 1820, column: 7, scope: !6077)
!6087 = !DILocation(line: 1832, column: 12, scope: !6077)
!6088 = !DILocation(line: 1833, column: 1, scope: !6077)
!6089 = distinct !DISubprogram(name: "RTC_CalibOutputConfig", scope: !312, file: !312, line: 1843, type: !831, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6090)
!6090 = !{!6091}
!6091 = !DILocalVariable(name: "RTC_CalibOutput", arg: 1, scope: !6089, file: !312, line: 1843, type: !20)
!6092 = !DILocation(line: 0, scope: !6089)
!6093 = !DILocation(line: 1849, column: 12, scope: !6089)
!6094 = !DILocation(line: 1850, column: 12, scope: !6089)
!6095 = !DILocation(line: 1853, column: 11, scope: !6089)
!6096 = !DILocation(line: 1856, column: 11, scope: !6089)
!6097 = !DILocation(line: 1859, column: 12, scope: !6089)
!6098 = !DILocation(line: 1860, column: 1, scope: !6089)
!6099 = distinct !DISubprogram(name: "RTC_SmoothCalibConfig", scope: !312, file: !312, line: 1879, type: !6100, scopeLine: 1882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6102)
!6100 = !DISubroutineType(types: !6101)
!6101 = !{!358, !20, !20, !20}
!6102 = !{!6103, !6104, !6105, !6106, !6107}
!6103 = !DILocalVariable(name: "RTC_SmoothCalibPeriod", arg: 1, scope: !6099, file: !312, line: 1879, type: !20)
!6104 = !DILocalVariable(name: "RTC_SmoothCalibPlusPulses", arg: 2, scope: !6099, file: !312, line: 1880, type: !20)
!6105 = !DILocalVariable(name: "RTC_SmouthCalibMinusPulsesValue", arg: 3, scope: !6099, file: !312, line: 1881, type: !20)
!6106 = !DILocalVariable(name: "status", scope: !6099, file: !312, line: 1883, type: !358)
!6107 = !DILocalVariable(name: "recalpfcount", scope: !6099, file: !312, line: 1884, type: !20)
!6108 = !DILocation(line: 0, scope: !6099)
!6109 = !DILocation(line: 1892, column: 12, scope: !6099)
!6110 = !DILocation(line: 1893, column: 12, scope: !6099)
!6111 = !DILocation(line: 1896, column: 13, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6099, file: !312, line: 1896, column: 7)
!6113 = !DILocation(line: 1896, column: 17, scope: !6112)
!6114 = !DILocation(line: 1896, column: 36, scope: !6112)
!6115 = !DILocation(line: 1896, column: 7, scope: !6099)
!6116 = !DILocation(line: 1899, column: 19, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6112, file: !312, line: 1897, column: 3)
!6118 = !DILocation(line: 1899, column: 23, scope: !6117)
!6119 = !DILocation(line: 1899, column: 42, scope: !6117)
!6120 = !DILocation(line: 1899, column: 52, scope: !6117)
!6121 = !DILocation(line: 1899, column: 5, scope: !6117)
!6122 = distinct !{!6122, !6121, !6123}
!6123 = !DILocation(line: 1902, column: 5, scope: !6117)
!6124 = !DILocation(line: 1906, column: 13, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6099, file: !312, line: 1906, column: 7)
!6126 = !DILocation(line: 1906, column: 17, scope: !6125)
!6127 = !DILocation(line: 1906, column: 36, scope: !6125)
!6128 = !DILocation(line: 1906, column: 7, scope: !6099)
!6129 = !DILocation(line: 1909, column: 60, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6125, file: !312, line: 1907, column: 3)
!6131 = !DILocation(line: 1909, column: 98, scope: !6130)
!6132 = !DILocation(line: 1909, column: 15, scope: !6130)
!6133 = !{!4934, !840, i64 60}
!6134 = !DILocation(line: 1912, column: 3, scope: !6130)
!6135 = !DILocation(line: 0, scope: !6125)
!6136 = !DILocation(line: 1919, column: 12, scope: !6099)
!6137 = !DILocation(line: 1921, column: 3, scope: !6099)
!6138 = !DILocation(line: 1901, column: 19, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6117, file: !312, line: 1900, column: 5)
!6140 = distinct !DISubprogram(name: "RTC_TimeStampCmd", scope: !312, file: !312, line: 1955, type: !1743, scopeLine: 1956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6141)
!6141 = !{!6142, !6143, !6144}
!6142 = !DILocalVariable(name: "RTC_TimeStampEdge", arg: 1, scope: !6140, file: !312, line: 1955, type: !20)
!6143 = !DILocalVariable(name: "NewState", arg: 2, scope: !6140, file: !312, line: 1955, type: !856)
!6144 = !DILocalVariable(name: "tmpreg", scope: !6140, file: !312, line: 1957, type: !20)
!6145 = !DILocation(line: 0, scope: !6140)
!6146 = !DILocation(line: 1964, column: 28, scope: !6140)
!6147 = !DILocation(line: 1967, column: 16, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6140, file: !312, line: 1967, column: 7)
!6149 = !DILocation(line: 1967, column: 7, scope: !6140)
!6150 = !DILocation(line: 1964, column: 31, scope: !6140)
!6151 = !DILocation(line: 0, scope: !6148)
!6152 = !DILocation(line: 1977, column: 12, scope: !6140)
!6153 = !DILocation(line: 1978, column: 12, scope: !6140)
!6154 = !DILocation(line: 1981, column: 11, scope: !6140)
!6155 = !DILocation(line: 1984, column: 12, scope: !6140)
!6156 = !DILocation(line: 1985, column: 1, scope: !6140)
!6157 = distinct !DISubprogram(name: "RTC_GetTimeStamp", scope: !312, file: !312, line: 1999, type: !6158, scopeLine: 2001, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6160)
!6158 = !DISubroutineType(types: !6159)
!6159 = !{null, !20, !5222, !5444}
!6160 = !{!6161, !6162, !6163, !6164, !6165}
!6161 = !DILocalVariable(name: "RTC_Format", arg: 1, scope: !6157, file: !312, line: 1999, type: !20)
!6162 = !DILocalVariable(name: "RTC_StampTimeStruct", arg: 2, scope: !6157, file: !312, line: 1999, type: !5222)
!6163 = !DILocalVariable(name: "RTC_StampDateStruct", arg: 3, scope: !6157, file: !312, line: 2000, type: !5444)
!6164 = !DILocalVariable(name: "tmptime", scope: !6157, file: !312, line: 2002, type: !20)
!6165 = !DILocalVariable(name: "tmpdate", scope: !6157, file: !312, line: 2002, type: !20)
!6166 = !DILocation(line: 0, scope: !6157)
!6167 = !DILocation(line: 2008, column: 29, scope: !6157)
!6168 = !{!4934, !840, i64 48}
!6169 = !DILocation(line: 2009, column: 29, scope: !6157)
!6170 = !{!4934, !840, i64 52}
!6171 = !DILocation(line: 2012, column: 82, scope: !6157)
!6172 = !DILocation(line: 2012, column: 36, scope: !6157)
!6173 = !DILocation(line: 2012, column: 24, scope: !6157)
!6174 = !DILocation(line: 2012, column: 34, scope: !6157)
!6175 = !DILocation(line: 2013, column: 86, scope: !6157)
!6176 = !DILocation(line: 2013, column: 38, scope: !6157)
!6177 = !DILocation(line: 2013, column: 24, scope: !6157)
!6178 = !DILocation(line: 2013, column: 36, scope: !6157)
!6179 = !DILocation(line: 2014, column: 38, scope: !6157)
!6180 = !DILocation(line: 2014, column: 24, scope: !6157)
!6181 = !DILocation(line: 2014, column: 36, scope: !6157)
!6182 = !DILocation(line: 2015, column: 34, scope: !6157)
!6183 = !DILocation(line: 2015, column: 24, scope: !6157)
!6184 = !DILocation(line: 2015, column: 32, scope: !6157)
!6185 = !DILocation(line: 2018, column: 24, scope: !6157)
!6186 = !DILocation(line: 2018, column: 33, scope: !6157)
!6187 = !DILocation(line: 2019, column: 82, scope: !6157)
!6188 = !DILocation(line: 2019, column: 36, scope: !6157)
!6189 = !DILocation(line: 2019, column: 24, scope: !6157)
!6190 = !DILocation(line: 2019, column: 34, scope: !6157)
!6191 = !DILocation(line: 2020, column: 35, scope: !6157)
!6192 = !DILocation(line: 2020, column: 24, scope: !6157)
!6193 = !DILocation(line: 2020, column: 33, scope: !6157)
!6194 = !DILocation(line: 2021, column: 73, scope: !6157)
!6195 = !DILocation(line: 2021, column: 38, scope: !6157)
!6196 = !DILocation(line: 2021, column: 24, scope: !6157)
!6197 = !DILocation(line: 2021, column: 36, scope: !6157)
!6198 = !DILocation(line: 2024, column: 18, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6157, file: !312, line: 2024, column: 7)
!6200 = !DILocation(line: 2024, column: 7, scope: !6157)
!6201 = !DILocation(line: 2027, column: 83, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6199, file: !312, line: 2025, column: 3)
!6203 = !DILocation(line: 0, scope: !5406, inlinedAt: !6204)
!6204 = distinct !DILocation(line: 2027, column: 47, scope: !6202)
!6205 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !6204)
!6206 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !6204)
!6207 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !6204)
!6208 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !6204)
!6209 = !DILocation(line: 2027, column: 36, scope: !6202)
!6210 = !DILocation(line: 2028, column: 85, scope: !6202)
!6211 = !DILocation(line: 0, scope: !5406, inlinedAt: !6212)
!6212 = distinct !DILocation(line: 2028, column: 49, scope: !6202)
!6213 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !6212)
!6214 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !6212)
!6215 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !6212)
!6216 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !6212)
!6217 = !DILocation(line: 2028, column: 38, scope: !6202)
!6218 = !DILocation(line: 2029, column: 85, scope: !6202)
!6219 = !DILocation(line: 0, scope: !5406, inlinedAt: !6220)
!6220 = distinct !DILocation(line: 2029, column: 49, scope: !6202)
!6221 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !6220)
!6222 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !6220)
!6223 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !6220)
!6224 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !6220)
!6225 = !DILocation(line: 2029, column: 38, scope: !6202)
!6226 = !DILocation(line: 2032, column: 83, scope: !6202)
!6227 = !DILocation(line: 0, scope: !5406, inlinedAt: !6228)
!6228 = distinct !DILocation(line: 2032, column: 47, scope: !6202)
!6229 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !6228)
!6230 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !6228)
!6231 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !6228)
!6232 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !6228)
!6233 = !DILocation(line: 2032, column: 36, scope: !6202)
!6234 = !DILocation(line: 2033, column: 82, scope: !6202)
!6235 = !DILocation(line: 0, scope: !5406, inlinedAt: !6236)
!6236 = distinct !DILocation(line: 2033, column: 46, scope: !6202)
!6237 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !6236)
!6238 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !6236)
!6239 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !6236)
!6240 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !6236)
!6241 = !DILocation(line: 2033, column: 35, scope: !6202)
!6242 = !DILocation(line: 2034, column: 85, scope: !6202)
!6243 = !DILocation(line: 0, scope: !5406, inlinedAt: !6244)
!6244 = distinct !DILocation(line: 2034, column: 49, scope: !6202)
!6245 = !DILocation(line: 2716, column: 43, scope: !5406, inlinedAt: !6244)
!6246 = !DILocation(line: 2716, column: 60, scope: !5406, inlinedAt: !6244)
!6247 = !DILocation(line: 2717, column: 24, scope: !5406, inlinedAt: !6244)
!6248 = !DILocation(line: 2717, column: 15, scope: !5406, inlinedAt: !6244)
!6249 = !DILocation(line: 2034, column: 38, scope: !6202)
!6250 = !DILocation(line: 2035, column: 3, scope: !6202)
!6251 = !DILocation(line: 2036, column: 1, scope: !6157)
!6252 = distinct !DISubprogram(name: "RTC_GetTimeStampSubSecond", scope: !312, file: !312, line: 2043, type: !2372, scopeLine: 2044, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !361)
!6253 = !DILocation(line: 2046, column: 26, scope: !6252)
!6254 = !{!4934, !840, i64 56}
!6255 = !DILocation(line: 2046, column: 3, scope: !6252)
!6256 = distinct !DISubprogram(name: "RTC_TamperTriggerConfig", scope: !312, file: !312, line: 2078, type: !897, scopeLine: 2079, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6257)
!6257 = !{!6258, !6259}
!6258 = !DILocalVariable(name: "RTC_Tamper", arg: 1, scope: !6256, file: !312, line: 2078, type: !20)
!6259 = !DILocalVariable(name: "RTC_TamperTrigger", arg: 2, scope: !6256, file: !312, line: 2078, type: !20)
!6260 = !DILocation(line: 0, scope: !6256)
!6261 = !DILocation(line: 2084, column: 25, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6256, file: !312, line: 2084, column: 7)
!6263 = !DILocation(line: 0, scope: !6262)
!6264 = !DILocation(line: 2084, column: 7, scope: !6256)
!6265 = !DILocation(line: 2087, column: 40, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6262, file: !312, line: 2085, column: 3)
!6267 = !DILocation(line: 2087, column: 16, scope: !6266)
!6268 = !DILocation(line: 2088, column: 3, scope: !6266)
!6269 = !DILocation(line: 2092, column: 16, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6262, file: !312, line: 2090, column: 3)
!6271 = !DILocation(line: 2094, column: 1, scope: !6256)
!6272 = distinct !DISubprogram(name: "RTC_TamperCmd", scope: !312, file: !312, line: 2104, type: !1743, scopeLine: 2105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6273)
!6273 = !{!6274, !6275}
!6274 = !DILocalVariable(name: "RTC_Tamper", arg: 1, scope: !6272, file: !312, line: 2104, type: !20)
!6275 = !DILocalVariable(name: "NewState", arg: 2, scope: !6272, file: !312, line: 2104, type: !856)
!6276 = !DILocation(line: 0, scope: !6272)
!6277 = !DILocation(line: 2110, column: 16, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6272, file: !312, line: 2110, column: 7)
!6279 = !DILocation(line: 2110, column: 7, scope: !6272)
!6280 = !DILocation(line: 2113, column: 16, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6278, file: !312, line: 2111, column: 3)
!6282 = !DILocation(line: 2114, column: 3, scope: !6281)
!6283 = !DILocation(line: 2118, column: 29, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6278, file: !312, line: 2116, column: 3)
!6285 = !DILocation(line: 2118, column: 16, scope: !6284)
!6286 = !DILocation(line: 0, scope: !6278)
!6287 = !DILocation(line: 2120, column: 1, scope: !6272)
!6288 = distinct !DISubprogram(name: "RTC_TamperFilterConfig", scope: !312, file: !312, line: 2135, type: !831, scopeLine: 2136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6289)
!6289 = !{!6290}
!6290 = !DILocalVariable(name: "RTC_TamperFilter", arg: 1, scope: !6288, file: !312, line: 2135, type: !20)
!6291 = !DILocation(line: 0, scope: !6288)
!6292 = !DILocation(line: 2141, column: 14, scope: !6288)
!6293 = !DILocation(line: 2144, column: 14, scope: !6288)
!6294 = !DILocation(line: 2145, column: 1, scope: !6288)
!6295 = distinct !DISubprogram(name: "RTC_TamperSamplingFreqConfig", scope: !312, file: !312, line: 2169, type: !831, scopeLine: 2170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6296)
!6296 = !{!6297}
!6297 = !DILocalVariable(name: "RTC_TamperSamplingFreq", arg: 1, scope: !6295, file: !312, line: 2169, type: !20)
!6298 = !DILocation(line: 0, scope: !6295)
!6299 = !DILocation(line: 2175, column: 14, scope: !6295)
!6300 = !DILocation(line: 2178, column: 14, scope: !6295)
!6301 = !DILocation(line: 2179, column: 1, scope: !6295)
!6302 = distinct !DISubprogram(name: "RTC_TamperPinsPrechargeDuration", scope: !312, file: !312, line: 2192, type: !831, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6303)
!6303 = !{!6304}
!6304 = !DILocalVariable(name: "RTC_TamperPrechargeDuration", arg: 1, scope: !6302, file: !312, line: 2192, type: !20)
!6305 = !DILocation(line: 0, scope: !6302)
!6306 = !DILocation(line: 2198, column: 14, scope: !6302)
!6307 = !DILocation(line: 2201, column: 14, scope: !6302)
!6308 = !DILocation(line: 2202, column: 1, scope: !6302)
!6309 = distinct !DISubprogram(name: "RTC_TimeStampOnTamperDetectionCmd", scope: !312, file: !312, line: 2212, type: !1502, scopeLine: 2213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6310)
!6310 = !{!6311}
!6311 = !DILocalVariable(name: "NewState", arg: 1, scope: !6309, file: !312, line: 2212, type: !856)
!6312 = !DILocation(line: 0, scope: !6309)
!6313 = !DILocation(line: 2217, column: 16, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6309, file: !312, line: 2217, column: 7)
!6315 = !DILocation(line: 0, scope: !6314)
!6316 = !DILocation(line: 2217, column: 7, scope: !6309)
!6317 = !DILocation(line: 2227, column: 1, scope: !6309)
!6318 = distinct !DISubprogram(name: "RTC_TamperPullUpCmd", scope: !312, file: !312, line: 2235, type: !1502, scopeLine: 2236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6319)
!6319 = !{!6320}
!6320 = !DILocalVariable(name: "NewState", arg: 1, scope: !6318, file: !312, line: 2235, type: !856)
!6321 = !DILocation(line: 0, scope: !6318)
!6322 = !DILocation(line: 2240, column: 15, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6318, file: !312, line: 2240, column: 6)
!6324 = !DILocation(line: 0, scope: !6323)
!6325 = !DILocation(line: 2240, column: 6, scope: !6318)
!6326 = !DILocation(line: 2250, column: 1, scope: !6318)
!6327 = distinct !DISubprogram(name: "RTC_WriteBackupRegister", scope: !312, file: !312, line: 2276, type: !897, scopeLine: 2277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6328)
!6328 = !{!6329, !6330, !6331}
!6329 = !DILocalVariable(name: "RTC_BKP_DR", arg: 1, scope: !6327, file: !312, line: 2276, type: !20)
!6330 = !DILocalVariable(name: "Data", arg: 2, scope: !6327, file: !312, line: 2276, type: !20)
!6331 = !DILocalVariable(name: "tmp", scope: !6327, file: !312, line: 2278, type: !27)
!6332 = !DILocation(line: 0, scope: !6327)
!6333 = !DILocation(line: 2278, column: 3, scope: !6327)
!6334 = !DILocation(line: 2278, column: 17, scope: !6327)
!6335 = !DILocation(line: 2283, column: 7, scope: !6327)
!6336 = !DILocation(line: 2284, column: 22, scope: !6327)
!6337 = !DILocation(line: 2284, column: 7, scope: !6327)
!6338 = !DILocation(line: 2287, column: 21, scope: !6327)
!6339 = !DILocation(line: 2287, column: 4, scope: !6327)
!6340 = !DILocation(line: 2287, column: 25, scope: !6327)
!6341 = !DILocation(line: 2288, column: 1, scope: !6327)
!6342 = distinct !DISubprogram(name: "RTC_ReadBackupRegister", scope: !312, file: !312, line: 2297, type: !5897, scopeLine: 2298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6343)
!6343 = !{!6344, !6345}
!6344 = !DILocalVariable(name: "RTC_BKP_DR", arg: 1, scope: !6342, file: !312, line: 2297, type: !20)
!6345 = !DILocalVariable(name: "tmp", scope: !6342, file: !312, line: 2299, type: !27)
!6346 = !DILocation(line: 0, scope: !6342)
!6347 = !DILocation(line: 2299, column: 3, scope: !6342)
!6348 = !DILocation(line: 2299, column: 17, scope: !6342)
!6349 = !DILocation(line: 2304, column: 7, scope: !6342)
!6350 = !DILocation(line: 2305, column: 22, scope: !6342)
!6351 = !DILocation(line: 2305, column: 7, scope: !6342)
!6352 = !DILocation(line: 2308, column: 29, scope: !6342)
!6353 = !DILocation(line: 2308, column: 12, scope: !6342)
!6354 = !DILocation(line: 2308, column: 11, scope: !6342)
!6355 = !DILocation(line: 2309, column: 1, scope: !6342)
!6356 = !DILocation(line: 2308, column: 3, scope: !6342)
!6357 = distinct !DISubprogram(name: "RTC_TamperPinSelection", scope: !312, file: !312, line: 2337, type: !831, scopeLine: 2338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6358)
!6358 = !{!6359}
!6359 = !DILocalVariable(name: "RTC_TamperPin", arg: 1, scope: !6357, file: !312, line: 2337, type: !20)
!6360 = !DILocation(line: 0, scope: !6357)
!6361 = !DILocation(line: 2342, column: 14, scope: !6357)
!6362 = !DILocation(line: 2343, column: 14, scope: !6357)
!6363 = !DILocation(line: 2344, column: 1, scope: !6357)
!6364 = distinct !DISubprogram(name: "RTC_TimeStampPinSelection", scope: !312, file: !312, line: 2354, type: !831, scopeLine: 2355, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6365)
!6365 = !{!6366}
!6366 = !DILocalVariable(name: "RTC_TimeStampPin", arg: 1, scope: !6364, file: !312, line: 2354, type: !20)
!6367 = !DILocation(line: 0, scope: !6364)
!6368 = !DILocation(line: 2359, column: 14, scope: !6364)
!6369 = !DILocation(line: 2360, column: 14, scope: !6364)
!6370 = !DILocation(line: 2361, column: 1, scope: !6364)
!6371 = distinct !DISubprogram(name: "RTC_OutputTypeConfig", scope: !312, file: !312, line: 2373, type: !831, scopeLine: 2374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6372)
!6372 = !{!6373}
!6373 = !DILocalVariable(name: "RTC_OutputType", arg: 1, scope: !6371, file: !312, line: 2373, type: !20)
!6374 = !DILocation(line: 0, scope: !6371)
!6375 = !DILocation(line: 2378, column: 14, scope: !6371)
!6376 = !DILocation(line: 2379, column: 14, scope: !6371)
!6377 = !DILocation(line: 2380, column: 1, scope: !6371)
!6378 = distinct !DISubprogram(name: "RTC_SynchroShiftConfig", scope: !312, file: !312, line: 2411, type: !5995, scopeLine: 2412, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6379)
!6379 = !{!6380, !6381, !6382, !6383}
!6380 = !DILocalVariable(name: "RTC_ShiftAdd1S", arg: 1, scope: !6378, file: !312, line: 2411, type: !20)
!6381 = !DILocalVariable(name: "RTC_ShiftSubFS", arg: 2, scope: !6378, file: !312, line: 2411, type: !20)
!6382 = !DILocalVariable(name: "status", scope: !6378, file: !312, line: 2413, type: !358)
!6383 = !DILocalVariable(name: "shpfcount", scope: !6378, file: !312, line: 2414, type: !20)
!6384 = !DILocation(line: 0, scope: !6378)
!6385 = !DILocation(line: 2421, column: 12, scope: !6378)
!6386 = !DILocation(line: 2422, column: 12, scope: !6378)
!6387 = !DILocation(line: 2425, column: 13, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6378, file: !312, line: 2425, column: 7)
!6389 = !DILocation(line: 2425, column: 17, scope: !6388)
!6390 = !DILocation(line: 2425, column: 33, scope: !6388)
!6391 = !DILocation(line: 2425, column: 7, scope: !6378)
!6392 = !DILocation(line: 2428, column: 19, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6388, file: !312, line: 2426, column: 3)
!6394 = !DILocation(line: 2428, column: 23, scope: !6393)
!6395 = !DILocation(line: 2428, column: 39, scope: !6393)
!6396 = !DILocation(line: 2428, column: 49, scope: !6393)
!6397 = !DILocation(line: 2428, column: 5, scope: !6393)
!6398 = distinct !{!6398, !6397, !6399}
!6399 = !DILocation(line: 2431, column: 5, scope: !6393)
!6400 = !DILocation(line: 2435, column: 13, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6378, file: !312, line: 2435, column: 7)
!6402 = !DILocation(line: 2435, column: 17, scope: !6401)
!6403 = !DILocation(line: 2435, column: 33, scope: !6401)
!6404 = !DILocation(line: 2435, column: 7, scope: !6378)
!6405 = !DILocation(line: 2438, column: 14, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6407, file: !312, line: 2438, column: 8)
!6407 = distinct !DILexicalBlock(scope: !6401, file: !312, line: 2436, column: 3)
!6408 = !DILocation(line: 2438, column: 17, scope: !6406)
!6409 = !DILocation(line: 2438, column: 35, scope: !6406)
!6410 = !DILocation(line: 2438, column: 8, scope: !6407)
!6411 = !DILocation(line: 2441, column: 58, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6406, file: !312, line: 2439, column: 5)
!6413 = !DILocation(line: 2441, column: 19, scope: !6412)
!6414 = !{!4934, !840, i64 44}
!6415 = !DILocation(line: 609, column: 3, scope: !5009, inlinedAt: !6416)
!6416 = distinct !DILocation(line: 2443, column: 10, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6412, file: !312, line: 2443, column: 10)
!6418 = !DILocation(line: 609, column: 17, scope: !5009, inlinedAt: !6416)
!6419 = !DILocation(line: 0, scope: !5009, inlinedAt: !6416)
!6420 = !DILocation(line: 614, column: 12, scope: !5009, inlinedAt: !6416)
!6421 = !DILocation(line: 615, column: 12, scope: !5009, inlinedAt: !6416)
!6422 = !DILocation(line: 618, column: 12, scope: !5009, inlinedAt: !6416)
!6423 = !DILocation(line: 621, column: 3, scope: !5009, inlinedAt: !6416)
!6424 = !DILocation(line: 623, column: 26, scope: !5023, inlinedAt: !6416)
!6425 = !DILocation(line: 623, column: 30, scope: !5023, inlinedAt: !6416)
!6426 = !DILocation(line: 624, column: 19, scope: !5023, inlinedAt: !6416)
!6427 = !DILocation(line: 625, column: 12, scope: !5009, inlinedAt: !6416)
!6428 = !DILocation(line: 625, column: 27, scope: !5009, inlinedAt: !6416)
!6429 = !DILocation(line: 625, column: 47, scope: !5009, inlinedAt: !6416)
!6430 = !DILocation(line: 625, column: 3, scope: !5023, inlinedAt: !6416)
!6431 = distinct !{!6431, !6423, !6432}
!6432 = !DILocation(line: 625, column: 73, scope: !5009, inlinedAt: !6416)
!6433 = !DILocation(line: 627, column: 13, scope: !5033, inlinedAt: !6416)
!6434 = !DILocation(line: 637, column: 12, scope: !5009, inlinedAt: !6416)
!6435 = !DILocation(line: 640, column: 1, scope: !5009, inlinedAt: !6416)
!6436 = !DILocation(line: 0, scope: !6401)
!6437 = !DILocation(line: 2463, column: 12, scope: !6378)
!6438 = !DILocation(line: 2465, column: 3, scope: !6378)
!6439 = !DILocation(line: 2430, column: 16, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6393, file: !312, line: 2429, column: 5)
!6441 = distinct !DISubprogram(name: "RTC_ITConfig", scope: !312, file: !312, line: 2530, type: !1743, scopeLine: 2531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6442)
!6442 = !{!6443, !6444}
!6443 = !DILocalVariable(name: "RTC_IT", arg: 1, scope: !6441, file: !312, line: 2530, type: !20)
!6444 = !DILocalVariable(name: "NewState", arg: 2, scope: !6441, file: !312, line: 2530, type: !856)
!6445 = !DILocation(line: 0, scope: !6441)
!6446 = !DILocation(line: 2537, column: 12, scope: !6441)
!6447 = !DILocation(line: 2538, column: 12, scope: !6441)
!6448 = !DILocation(line: 2540, column: 16, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6441, file: !312, line: 2540, column: 7)
!6450 = !DILocation(line: 0, scope: !6449)
!6451 = !DILocation(line: 2540, column: 7, scope: !6441)
!6452 = !DILocation(line: 2543, column: 13, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !312, line: 2541, column: 3)
!6454 = !DILocation(line: 2545, column: 37, scope: !6453)
!6455 = !DILocation(line: 2545, column: 16, scope: !6453)
!6456 = !DILocation(line: 2546, column: 3, scope: !6453)
!6457 = !DILocation(line: 2550, column: 26, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6449, file: !312, line: 2548, column: 3)
!6459 = !DILocation(line: 2550, column: 13, scope: !6458)
!6460 = !DILocation(line: 2552, column: 38, scope: !6458)
!6461 = !DILocation(line: 2552, column: 29, scope: !6458)
!6462 = !DILocation(line: 2552, column: 16, scope: !6458)
!6463 = !DILocation(line: 2555, column: 12, scope: !6441)
!6464 = !DILocation(line: 2556, column: 1, scope: !6441)
!6465 = distinct !DISubprogram(name: "RTC_GetFlagStatus", scope: !312, file: !312, line: 2576, type: !2717, scopeLine: 2577, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6466)
!6466 = !{!6467, !6468, !6469}
!6467 = !DILocalVariable(name: "RTC_FLAG", arg: 1, scope: !6465, file: !312, line: 2576, type: !20)
!6468 = !DILocalVariable(name: "bitstatus", scope: !6465, file: !312, line: 2578, type: !1276)
!6469 = !DILocalVariable(name: "tmpreg", scope: !6465, file: !312, line: 2579, type: !20)
!6470 = !DILocation(line: 0, scope: !6465)
!6471 = !DILocation(line: 2585, column: 28, scope: !6465)
!6472 = !DILocation(line: 2585, column: 32, scope: !6465)
!6473 = !DILocation(line: 2588, column: 15, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6465, file: !312, line: 2588, column: 7)
!6475 = !DILocation(line: 2588, column: 27, scope: !6474)
!6476 = !DILocation(line: 2596, column: 3, scope: !6465)
!6477 = distinct !DISubprogram(name: "RTC_ClearFlag", scope: !312, file: !312, line: 2612, type: !831, scopeLine: 2613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6478)
!6478 = !{!6479}
!6479 = !DILocalVariable(name: "RTC_FLAG", arg: 1, scope: !6477, file: !312, line: 2612, type: !20)
!6480 = !DILocation(line: 0, scope: !6477)
!6481 = !DILocation(line: 2618, column: 63, scope: !6477)
!6482 = !DILocation(line: 2618, column: 95, scope: !6477)
!6483 = !DILocation(line: 2618, column: 99, scope: !6477)
!6484 = !DILocation(line: 2618, column: 77, scope: !6477)
!6485 = !DILocation(line: 2618, column: 12, scope: !6477)
!6486 = !DILocation(line: 2619, column: 1, scope: !6477)
!6487 = distinct !DISubprogram(name: "RTC_GetITStatus", scope: !312, file: !312, line: 2632, type: !2735, scopeLine: 2633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6488)
!6488 = !{!6489, !6490, !6491, !6492}
!6489 = !DILocalVariable(name: "RTC_IT", arg: 1, scope: !6487, file: !312, line: 2632, type: !20)
!6490 = !DILocalVariable(name: "bitstatus", scope: !6487, file: !312, line: 2634, type: !1359)
!6491 = !DILocalVariable(name: "tmpreg", scope: !6487, file: !312, line: 2635, type: !20)
!6492 = !DILocalVariable(name: "enablestatus", scope: !6487, file: !312, line: 2635, type: !20)
!6493 = !DILocation(line: 0, scope: !6487)
!6494 = !DILocation(line: 2641, column: 28, scope: !6487)
!6495 = !DILocation(line: 2644, column: 35, scope: !6487)
!6496 = !DILocation(line: 2644, column: 38, scope: !6487)
!6497 = !DILocation(line: 2644, column: 68, scope: !6487)
!6498 = !DILocation(line: 2641, column: 34, scope: !6487)
!6499 = !DILocation(line: 2644, column: 58, scope: !6487)
!6500 = !DILocation(line: 2644, column: 48, scope: !6487)
!6501 = !DILocation(line: 2647, column: 29, scope: !6487)
!6502 = !DILocation(line: 2650, column: 21, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6487, file: !312, line: 2650, column: 7)
!6504 = !DILocation(line: 2650, column: 41, scope: !6503)
!6505 = !DILocation(line: 2647, column: 53, scope: !6487)
!6506 = !DILocation(line: 2647, column: 33, scope: !6487)
!6507 = !DILocation(line: 2650, column: 53, scope: !6503)
!6508 = !DILocation(line: 2650, column: 67, scope: !6503)
!6509 = !DILocation(line: 2650, column: 7, scope: !6487)
!6510 = !DILocation(line: 0, scope: !6503)
!6511 = !DILocation(line: 2658, column: 3, scope: !6487)
!6512 = distinct !DISubprogram(name: "RTC_ClearITPendingBit", scope: !312, file: !312, line: 2672, type: !831, scopeLine: 2673, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !311, retainedNodes: !6513)
!6513 = !{!6514, !6515}
!6514 = !DILocalVariable(name: "RTC_IT", arg: 1, scope: !6512, file: !312, line: 2672, type: !20)
!6515 = !DILocalVariable(name: "tmpreg", scope: !6512, file: !312, line: 2674, type: !20)
!6516 = !DILocation(line: 0, scope: !6512)
!6517 = !DILocation(line: 2680, column: 30, scope: !6512)
!6518 = !DILocation(line: 2683, column: 61, scope: !6512)
!6519 = !DILocation(line: 2683, column: 93, scope: !6512)
!6520 = !DILocation(line: 2683, column: 97, scope: !6512)
!6521 = !DILocation(line: 2683, column: 75, scope: !6512)
!6522 = !DILocation(line: 2683, column: 12, scope: !6512)
!6523 = !DILocation(line: 2684, column: 1, scope: !6512)
!6524 = distinct !DISubprogram(name: "CRC_ResetDR", scope: !360, file: !360, line: 50, type: !1415, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !359, retainedNodes: !361)
!6525 = !DILocation(line: 53, column: 11, scope: !6524)
!6526 = !{!6527, !840, i64 8}
!6527 = !{!"", !840, i64 0, !841, i64 4, !841, i64 5, !2880, i64 6, !840, i64 8}
!6528 = !DILocation(line: 54, column: 1, scope: !6524)
!6529 = distinct !DISubprogram(name: "CRC_CalcCRC", scope: !360, file: !360, line: 61, type: !5897, scopeLine: 62, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !359, retainedNodes: !6530)
!6530 = !{!6531}
!6531 = !DILocalVariable(name: "Data", arg: 1, scope: !6529, file: !360, line: 61, type: !20)
!6532 = !DILocation(line: 0, scope: !6529)
!6533 = !DILocation(line: 63, column: 11, scope: !6529)
!6534 = !{!6527, !840, i64 0}
!6535 = !DILocation(line: 65, column: 16, scope: !6529)
!6536 = !DILocation(line: 65, column: 3, scope: !6529)
!6537 = distinct !DISubprogram(name: "CRC_CalcBlockCRC", scope: !360, file: !360, line: 74, type: !6538, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !359, retainedNodes: !6540)
!6538 = !DISubroutineType(types: !6539)
!6539 = !{!20, !451, !20}
!6540 = !{!6541, !6542, !6543}
!6541 = !DILocalVariable(name: "pBuffer", arg: 1, scope: !6537, file: !360, line: 74, type: !451)
!6542 = !DILocalVariable(name: "BufferLength", arg: 2, scope: !6537, file: !360, line: 74, type: !20)
!6543 = !DILocalVariable(name: "index", scope: !6537, file: !360, line: 76, type: !20)
!6544 = !DILocation(line: 0, scope: !6537)
!6545 = !DILocation(line: 78, column: 24, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6547, file: !360, line: 78, column: 3)
!6547 = distinct !DILexicalBlock(scope: !6537, file: !360, line: 78, column: 3)
!6548 = !DILocation(line: 78, column: 3, scope: !6547)
!6549 = !DILocation(line: 80, column: 15, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !360, line: 79, column: 3)
!6551 = !DILocation(line: 80, column: 13, scope: !6550)
!6552 = !DILocation(line: 78, column: 45, scope: !6546)
!6553 = distinct !{!6553, !6548, !6554}
!6554 = !DILocation(line: 81, column: 3, scope: !6547)
!6555 = !DILocation(line: 82, column: 16, scope: !6537)
!6556 = !DILocation(line: 82, column: 3, scope: !6537)
!6557 = distinct !DISubprogram(name: "CRC_GetCRC", scope: !360, file: !360, line: 90, type: !2372, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !359, retainedNodes: !361)
!6558 = !DILocation(line: 92, column: 16, scope: !6557)
!6559 = !DILocation(line: 92, column: 3, scope: !6557)
!6560 = distinct !DISubprogram(name: "CRC_SetIDRegister", scope: !360, file: !360, line: 100, type: !1430, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !359, retainedNodes: !6561)
!6561 = !{!6562}
!6562 = !DILocalVariable(name: "IDValue", arg: 1, scope: !6560, file: !360, line: 100, type: !60)
!6563 = !DILocation(line: 0, scope: !6560)
!6564 = !DILocation(line: 102, column: 12, scope: !6560)
!6565 = !{!6527, !841, i64 4}
!6566 = !DILocation(line: 103, column: 1, scope: !6560)
!6567 = distinct !DISubprogram(name: "CRC_GetIDRegister", scope: !360, file: !360, line: 110, type: !1610, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !359, retainedNodes: !361)
!6568 = !DILocation(line: 112, column: 16, scope: !6567)
!6569 = !DILocation(line: 112, column: 3, scope: !6567)
!6570 = distinct !DISubprogram(name: "FSMC_NORSRAMDeInit", scope: !373, file: !373, line: 116, type: !831, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6571)
!6571 = !{!6572}
!6572 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !6570, file: !373, line: 116, type: !20)
!6573 = !DILocation(line: 0, scope: !6570)
!6574 = !DILocation(line: 122, column: 16, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6570, file: !373, line: 122, column: 6)
!6576 = !DILocation(line: 0, scope: !6575)
!6577 = !DILocation(line: 122, column: 6, scope: !6570)
!6578 = !DILocation(line: 131, column: 30, scope: !6570)
!6579 = !DILocation(line: 131, column: 3, scope: !6570)
!6580 = !DILocation(line: 131, column: 35, scope: !6570)
!6581 = !DILocation(line: 132, column: 3, scope: !6570)
!6582 = !DILocation(line: 132, column: 32, scope: !6570)
!6583 = !DILocation(line: 133, column: 1, scope: !6570)
!6584 = distinct !DISubprogram(name: "FSMC_NORSRAMInit", scope: !373, file: !373, line: 143, type: !6585, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6618)
!6585 = !DISubroutineType(types: !6586)
!6586 = !{null, !6587}
!6587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6588, size: 32)
!6588 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_NORSRAMInitTypeDef", file: !6589, line: 141, baseType: !6590)
!6589 = !DIFile(filename: "inc/peripherals/stm32f4xx_fsmc.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!6590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6589, line: 88, size: 480, elements: !6591)
!6591 = !{!6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601, !6602, !6603, !6604, !6605, !6617}
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_Bank", scope: !6590, file: !6589, line: 90, baseType: !20, size: 32)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_DataAddressMux", scope: !6590, file: !6589, line: 93, baseType: !20, size: 32, offset: 32)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_MemoryType", scope: !6590, file: !6589, line: 97, baseType: !20, size: 32, offset: 64)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_MemoryDataWidth", scope: !6590, file: !6589, line: 101, baseType: !20, size: 32, offset: 96)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_BurstAccessMode", scope: !6590, file: !6589, line: 104, baseType: !20, size: 32, offset: 128)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_AsynchronousWait", scope: !6590, file: !6589, line: 108, baseType: !20, size: 32, offset: 160)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_WaitSignalPolarity", scope: !6590, file: !6589, line: 112, baseType: !20, size: 32, offset: 192)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_WrapMode", scope: !6590, file: !6589, line: 116, baseType: !20, size: 32, offset: 224)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_WaitSignalActive", scope: !6590, file: !6589, line: 120, baseType: !20, size: 32, offset: 256)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_WriteOperation", scope: !6590, file: !6589, line: 125, baseType: !20, size: 32, offset: 288)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_WaitSignal", scope: !6590, file: !6589, line: 128, baseType: !20, size: 32, offset: 320)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_ExtendedMode", scope: !6590, file: !6589, line: 132, baseType: !20, size: 32, offset: 352)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_WriteBurst", scope: !6590, file: !6589, line: 135, baseType: !20, size: 32, offset: 384)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_ReadWriteTimingStruct", scope: !6590, file: !6589, line: 138, baseType: !6606, size: 32, offset: 416)
!6606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 32)
!6607 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_NORSRAMTimingInitTypeDef", file: !6589, line: 83, baseType: !6608)
!6608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6589, line: 47, size: 224, elements: !6609)
!6609 = !{!6610, !6611, !6612, !6613, !6614, !6615, !6616}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_AddressSetupTime", scope: !6608, file: !6589, line: 49, baseType: !20, size: 32)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_AddressHoldTime", scope: !6608, file: !6589, line: 54, baseType: !20, size: 32, offset: 32)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_DataSetupTime", scope: !6608, file: !6589, line: 59, baseType: !20, size: 32, offset: 64)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_BusTurnAroundDuration", scope: !6608, file: !6589, line: 64, baseType: !20, size: 32, offset: 96)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_CLKDivision", scope: !6608, file: !6589, line: 69, baseType: !20, size: 32, offset: 128)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_DataLatency", scope: !6608, file: !6589, line: 73, baseType: !20, size: 32, offset: 160)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_AccessMode", scope: !6608, file: !6589, line: 81, baseType: !20, size: 32, offset: 192)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_WriteTimingStruct", scope: !6590, file: !6589, line: 140, baseType: !6606, size: 32, offset: 448)
!6618 = !{!6619}
!6619 = !DILocalVariable(name: "FSMC_NORSRAMInitStruct", arg: 1, scope: !6584, file: !373, line: 143, type: !6587)
!6620 = !DILocation(line: 0, scope: !6584)
!6621 = !DILocation(line: 169, column: 47, scope: !6584)
!6622 = !{!6623, !840, i64 4}
!6623 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !840, i64 32, !840, i64 36, !840, i64 40, !840, i64 44, !840, i64 48, !6624, i64 52, !6624, i64 56}
!6624 = !{!"any pointer", !841, i64 0}
!6625 = !DILocation(line: 170, column: 37, scope: !6584)
!6626 = !{!6623, !840, i64 8}
!6627 = !DILocation(line: 169, column: 67, scope: !6584)
!6628 = !DILocation(line: 171, column: 37, scope: !6584)
!6629 = !{!6623, !840, i64 12}
!6630 = !DILocation(line: 170, column: 53, scope: !6584)
!6631 = !DILocation(line: 172, column: 37, scope: !6584)
!6632 = !{!6623, !840, i64 16}
!6633 = !DILocation(line: 171, column: 58, scope: !6584)
!6634 = !DILocation(line: 173, column: 37, scope: !6584)
!6635 = !{!6623, !840, i64 20}
!6636 = !DILocation(line: 172, column: 58, scope: !6584)
!6637 = !DILocation(line: 174, column: 37, scope: !6584)
!6638 = !{!6623, !840, i64 24}
!6639 = !DILocation(line: 173, column: 59, scope: !6584)
!6640 = !DILocation(line: 175, column: 37, scope: !6584)
!6641 = !{!6623, !840, i64 28}
!6642 = !DILocation(line: 174, column: 61, scope: !6584)
!6643 = !DILocation(line: 176, column: 37, scope: !6584)
!6644 = !{!6623, !840, i64 32}
!6645 = !DILocation(line: 175, column: 51, scope: !6584)
!6646 = !DILocation(line: 177, column: 37, scope: !6584)
!6647 = !{!6623, !840, i64 36}
!6648 = !DILocation(line: 176, column: 59, scope: !6584)
!6649 = !DILocation(line: 178, column: 37, scope: !6584)
!6650 = !{!6623, !840, i64 40}
!6651 = !DILocation(line: 177, column: 57, scope: !6584)
!6652 = !DILocation(line: 179, column: 37, scope: !6584)
!6653 = !{!6623, !840, i64 44}
!6654 = !DILocation(line: 178, column: 53, scope: !6584)
!6655 = !DILocation(line: 180, column: 37, scope: !6584)
!6656 = !{!6623, !840, i64 48}
!6657 = !DILocation(line: 179, column: 55, scope: !6584)
!6658 = !DILocation(line: 168, column: 44, scope: !6584)
!6659 = !{!6623, !840, i64 0}
!6660 = !DILocation(line: 168, column: 3, scope: !6584)
!6661 = !DILocation(line: 168, column: 55, scope: !6584)
!6662 = !DILocation(line: 181, column: 30, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6584, file: !373, line: 181, column: 6)
!6664 = !DILocation(line: 181, column: 46, scope: !6663)
!6665 = !DILocation(line: 181, column: 6, scope: !6584)
!6666 = !DILocation(line: 183, column: 46, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !373, line: 182, column: 3)
!6668 = !DILocation(line: 183, column: 5, scope: !6667)
!6669 = !DILocation(line: 183, column: 57, scope: !6667)
!6670 = !DILocation(line: 184, column: 3, scope: !6667)
!6671 = !DILocation(line: 187, column: 47, scope: !6584)
!6672 = !{!6623, !6624, i64 52}
!6673 = !DILocation(line: 187, column: 75, scope: !6584)
!6674 = !{!6675, !840, i64 0}
!6675 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24}
!6676 = !DILocation(line: 188, column: 66, scope: !6584)
!6677 = !{!6675, !840, i64 4}
!6678 = !DILocation(line: 188, column: 87, scope: !6584)
!6679 = !DILocation(line: 187, column: 97, scope: !6584)
!6680 = !DILocation(line: 189, column: 66, scope: !6584)
!6681 = !{!6675, !840, i64 8}
!6682 = !DILocation(line: 189, column: 85, scope: !6584)
!6683 = !DILocation(line: 188, column: 93, scope: !6584)
!6684 = !DILocation(line: 190, column: 66, scope: !6584)
!6685 = !{!6675, !840, i64 12}
!6686 = !DILocation(line: 190, column: 93, scope: !6584)
!6687 = !DILocation(line: 189, column: 91, scope: !6584)
!6688 = !DILocation(line: 191, column: 66, scope: !6584)
!6689 = !{!6675, !840, i64 16}
!6690 = !DILocation(line: 191, column: 83, scope: !6584)
!6691 = !DILocation(line: 190, column: 100, scope: !6584)
!6692 = !DILocation(line: 192, column: 66, scope: !6584)
!6693 = !{!6675, !840, i64 20}
!6694 = !DILocation(line: 192, column: 83, scope: !6584)
!6695 = !DILocation(line: 191, column: 90, scope: !6584)
!6696 = !DILocation(line: 193, column: 66, scope: !6584)
!6697 = !{!6675, !840, i64 24}
!6698 = !DILocation(line: 192, column: 90, scope: !6584)
!6699 = !DILocation(line: 186, column: 44, scope: !6584)
!6700 = !DILocation(line: 186, column: 53, scope: !6584)
!6701 = !DILocation(line: 186, column: 3, scope: !6584)
!6702 = !DILocation(line: 186, column: 57, scope: !6584)
!6703 = !DILocation(line: 197, column: 30, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6584, file: !373, line: 197, column: 6)
!6705 = !DILocation(line: 197, column: 48, scope: !6704)
!6706 = !DILocation(line: 197, column: 6, scope: !6584)
!6707 = !DILocation(line: 206, column: 49, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6704, file: !373, line: 198, column: 3)
!6709 = !{!6623, !6624, i64 56}
!6710 = !DILocation(line: 206, column: 73, scope: !6708)
!6711 = !DILocation(line: 207, column: 64, scope: !6708)
!6712 = !DILocation(line: 207, column: 85, scope: !6708)
!6713 = !DILocation(line: 206, column: 95, scope: !6708)
!6714 = !DILocation(line: 208, column: 64, scope: !6708)
!6715 = !DILocation(line: 208, column: 83, scope: !6708)
!6716 = !DILocation(line: 207, column: 91, scope: !6708)
!6717 = !DILocation(line: 209, column: 64, scope: !6708)
!6718 = !DILocation(line: 209, column: 81, scope: !6708)
!6719 = !DILocation(line: 208, column: 89, scope: !6708)
!6720 = !DILocation(line: 210, column: 64, scope: !6708)
!6721 = !DILocation(line: 210, column: 81, scope: !6708)
!6722 = !DILocation(line: 209, column: 88, scope: !6708)
!6723 = !DILocation(line: 211, column: 64, scope: !6708)
!6724 = !DILocation(line: 210, column: 88, scope: !6708)
!6725 = !DILocation(line: 212, column: 3, scope: !6708)
!6726 = !DILocation(line: 0, scope: !6704)
!6727 = !DILocation(line: 217, column: 1, scope: !6584)
!6728 = distinct !DISubprogram(name: "FSMC_NORSRAMStructInit", scope: !373, file: !373, line: 225, type: !6585, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6729)
!6729 = !{!6730}
!6730 = !DILocalVariable(name: "FSMC_NORSRAMInitStruct", arg: 1, scope: !6728, file: !373, line: 225, type: !6587)
!6731 = !DILocation(line: 0, scope: !6728)
!6732 = !DILocation(line: 228, column: 27, scope: !6728)
!6733 = !DILocation(line: 228, column: 37, scope: !6728)
!6734 = !DILocation(line: 229, column: 27, scope: !6728)
!6735 = !DILocation(line: 229, column: 47, scope: !6728)
!6736 = !DILocation(line: 230, column: 27, scope: !6728)
!6737 = !DILocation(line: 230, column: 43, scope: !6728)
!6738 = !DILocation(line: 231, column: 27, scope: !6728)
!6739 = !DILocation(line: 231, column: 48, scope: !6728)
!6740 = !DILocation(line: 232, column: 27, scope: !6728)
!6741 = !DILocation(line: 232, column: 48, scope: !6728)
!6742 = !DILocation(line: 233, column: 27, scope: !6728)
!6743 = !DILocation(line: 233, column: 49, scope: !6728)
!6744 = !DILocation(line: 234, column: 27, scope: !6728)
!6745 = !DILocation(line: 234, column: 51, scope: !6728)
!6746 = !DILocation(line: 235, column: 27, scope: !6728)
!6747 = !DILocation(line: 235, column: 41, scope: !6728)
!6748 = !DILocation(line: 236, column: 27, scope: !6728)
!6749 = !DILocation(line: 236, column: 49, scope: !6728)
!6750 = !DILocation(line: 237, column: 27, scope: !6728)
!6751 = !DILocation(line: 237, column: 47, scope: !6728)
!6752 = !DILocation(line: 238, column: 27, scope: !6728)
!6753 = !DILocation(line: 238, column: 43, scope: !6728)
!6754 = !DILocation(line: 239, column: 27, scope: !6728)
!6755 = !DILocation(line: 239, column: 45, scope: !6728)
!6756 = !DILocation(line: 240, column: 27, scope: !6728)
!6757 = !DILocation(line: 240, column: 43, scope: !6728)
!6758 = !DILocation(line: 241, column: 27, scope: !6728)
!6759 = !DILocation(line: 241, column: 55, scope: !6728)
!6760 = !DILocation(line: 241, column: 77, scope: !6728)
!6761 = !DILocation(line: 242, column: 55, scope: !6728)
!6762 = !DILocation(line: 242, column: 76, scope: !6728)
!6763 = !DILocation(line: 243, column: 55, scope: !6728)
!6764 = !DILocation(line: 243, column: 74, scope: !6728)
!6765 = !DILocation(line: 244, column: 55, scope: !6728)
!6766 = !DILocation(line: 244, column: 82, scope: !6728)
!6767 = !DILocation(line: 245, column: 55, scope: !6728)
!6768 = !DILocation(line: 245, column: 72, scope: !6728)
!6769 = !DILocation(line: 246, column: 55, scope: !6728)
!6770 = !DILocation(line: 246, column: 72, scope: !6728)
!6771 = !DILocation(line: 247, column: 55, scope: !6728)
!6772 = !DILocation(line: 247, column: 71, scope: !6728)
!6773 = !DILocation(line: 248, column: 27, scope: !6728)
!6774 = !DILocation(line: 248, column: 51, scope: !6728)
!6775 = !DILocation(line: 248, column: 73, scope: !6728)
!6776 = !DILocation(line: 249, column: 51, scope: !6728)
!6777 = !DILocation(line: 249, column: 72, scope: !6728)
!6778 = !DILocation(line: 250, column: 51, scope: !6728)
!6779 = !DILocation(line: 250, column: 70, scope: !6728)
!6780 = !DILocation(line: 251, column: 51, scope: !6728)
!6781 = !DILocation(line: 251, column: 78, scope: !6728)
!6782 = !DILocation(line: 252, column: 51, scope: !6728)
!6783 = !DILocation(line: 252, column: 68, scope: !6728)
!6784 = !DILocation(line: 253, column: 51, scope: !6728)
!6785 = !DILocation(line: 253, column: 68, scope: !6728)
!6786 = !DILocation(line: 254, column: 51, scope: !6728)
!6787 = !DILocation(line: 254, column: 67, scope: !6728)
!6788 = !DILocation(line: 255, column: 1, scope: !6728)
!6789 = distinct !DISubprogram(name: "FSMC_NORSRAMCmd", scope: !373, file: !373, line: 268, type: !1743, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6790)
!6790 = !{!6791, !6792}
!6791 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !6789, file: !373, line: 268, type: !20)
!6792 = !DILocalVariable(name: "NewState", arg: 2, scope: !6789, file: !373, line: 268, type: !856)
!6793 = !DILocation(line: 0, scope: !6789)
!6794 = !DILocation(line: 273, column: 16, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6789, file: !373, line: 273, column: 7)
!6796 = !DILocation(line: 0, scope: !6795)
!6797 = !DILocation(line: 273, column: 7, scope: !6789)
!6798 = !DILocation(line: 283, column: 1, scope: !6789)
!6799 = distinct !DISubprogram(name: "FSMC_NANDDeInit", scope: !373, file: !373, line: 339, type: !831, scopeLine: 340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6800)
!6800 = !{!6801}
!6801 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !6799, file: !373, line: 339, type: !20)
!6802 = !DILocation(line: 0, scope: !6799)
!6803 = !DILocation(line: 344, column: 16, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6799, file: !373, line: 344, column: 6)
!6805 = !DILocation(line: 344, column: 6, scope: !6799)
!6806 = !DILocation(line: 347, column: 22, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6804, file: !373, line: 345, column: 3)
!6808 = !DILocation(line: 351, column: 3, scope: !6807)
!6809 = !DILocation(line: 356, column: 22, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6804, file: !373, line: 354, column: 3)
!6811 = !DILocation(line: 0, scope: !6804)
!6812 = !DILocation(line: 361, column: 1, scope: !6799)
!6813 = distinct !DISubprogram(name: "FSMC_NANDInit", scope: !373, file: !373, line: 370, type: !6814, scopeLine: 371, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6837)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{null, !6816}
!6816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6817, size: 32)
!6817 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_NANDInitTypeDef", file: !6589, line: 205, baseType: !6818)
!6818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6589, line: 177, size: 288, elements: !6819)
!6819 = !{!6820, !6821, !6822, !6823, !6824, !6825, !6826, !6827, !6836}
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_Bank", scope: !6818, file: !6589, line: 179, baseType: !20, size: 32)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_Waitfeature", scope: !6818, file: !6589, line: 182, baseType: !20, size: 32, offset: 32)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_MemoryDataWidth", scope: !6818, file: !6589, line: 185, baseType: !20, size: 32, offset: 64)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_ECC", scope: !6818, file: !6589, line: 188, baseType: !20, size: 32, offset: 96)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_ECCPageSize", scope: !6818, file: !6589, line: 191, baseType: !20, size: 32, offset: 128)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_TCLRSetupTime", scope: !6818, file: !6589, line: 194, baseType: !20, size: 32, offset: 160)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_TARSetupTime", scope: !6818, file: !6589, line: 198, baseType: !20, size: 32, offset: 192)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_CommonSpaceTimingStruct", scope: !6818, file: !6589, line: 202, baseType: !6828, size: 32, offset: 224)
!6828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6829, size: 32)
!6829 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_NAND_PCCARDTimingInitTypeDef", file: !6589, line: 172, baseType: !6830)
!6830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6589, line: 146, size: 128, elements: !6831)
!6831 = !{!6832, !6833, !6834, !6835}
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_SetupTime", scope: !6830, file: !6589, line: 148, baseType: !20, size: 32)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_WaitSetupTime", scope: !6830, file: !6589, line: 154, baseType: !20, size: 32, offset: 32)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_HoldSetupTime", scope: !6830, file: !6589, line: 160, baseType: !20, size: 32, offset: 64)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_HiZSetupTime", scope: !6830, file: !6589, line: 167, baseType: !20, size: 32, offset: 96)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_AttributeSpaceTimingStruct", scope: !6818, file: !6589, line: 204, baseType: !6828, size: 32, offset: 256)
!6837 = !{!6838, !6839, !6840, !6841}
!6838 = !DILocalVariable(name: "FSMC_NANDInitStruct", arg: 1, scope: !6813, file: !373, line: 370, type: !6816)
!6839 = !DILocalVariable(name: "tmppcr", scope: !6813, file: !373, line: 372, type: !20)
!6840 = !DILocalVariable(name: "tmppmem", scope: !6813, file: !373, line: 372, type: !20)
!6841 = !DILocalVariable(name: "tmppatt", scope: !6813, file: !373, line: 372, type: !20)
!6842 = !DILocation(line: 0, scope: !6813)
!6843 = !DILocation(line: 392, column: 43, scope: !6813)
!6844 = !{!6845, !840, i64 4}
!6845 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !6624, i64 28, !6624, i64 32}
!6846 = !DILocation(line: 394, column: 34, scope: !6813)
!6847 = !{!6845, !840, i64 8}
!6848 = !DILocation(line: 395, column: 34, scope: !6813)
!6849 = !{!6845, !840, i64 12}
!6850 = !DILocation(line: 396, column: 34, scope: !6813)
!6851 = !{!6845, !840, i64 16}
!6852 = !DILocation(line: 397, column: 35, scope: !6813)
!6853 = !{!6845, !840, i64 20}
!6854 = !DILocation(line: 397, column: 54, scope: !6813)
!6855 = !DILocation(line: 398, column: 35, scope: !6813)
!6856 = !{!6845, !840, i64 24}
!6857 = !DILocation(line: 398, column: 53, scope: !6813)
!6858 = !DILocation(line: 394, column: 55, scope: !6813)
!6859 = !DILocation(line: 395, column: 43, scope: !6813)
!6860 = !DILocation(line: 396, column: 51, scope: !6813)
!6861 = !DILocation(line: 397, column: 60, scope: !6813)
!6862 = !DILocation(line: 401, column: 44, scope: !6813)
!6863 = !{!6845, !6624, i64 28}
!6864 = !DILocation(line: 401, column: 74, scope: !6813)
!6865 = !DILocation(line: 402, column: 65, scope: !6813)
!6866 = !DILocation(line: 403, column: 65, scope: !6813)
!6867 = !DILocation(line: 404, column: 65, scope: !6813)
!6868 = !DILocation(line: 407, column: 44, scope: !6813)
!6869 = !{!6845, !6624, i64 32}
!6870 = !DILocation(line: 407, column: 77, scope: !6813)
!6871 = !DILocation(line: 408, column: 68, scope: !6813)
!6872 = !DILocation(line: 409, column: 68, scope: !6813)
!6873 = !DILocation(line: 410, column: 68, scope: !6813)
!6874 = !DILocation(line: 412, column: 27, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6813, file: !373, line: 412, column: 6)
!6876 = !{!6845, !840, i64 0}
!6877 = !DILocation(line: 412, column: 37, scope: !6875)
!6878 = !DILocation(line: 412, column: 6, scope: !6813)
!6879 = !DILocation(line: 415, column: 22, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6875, file: !373, line: 413, column: 3)
!6881 = !DILocation(line: 418, column: 3, scope: !6880)
!6882 = !DILocation(line: 422, column: 22, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6875, file: !373, line: 420, column: 3)
!6884 = !DILocation(line: 408, column: 87, scope: !6813)
!6885 = !DILocation(line: 407, column: 92, scope: !6813)
!6886 = !DILocation(line: 409, column: 87, scope: !6813)
!6887 = !DILocation(line: 408, column: 93, scope: !6813)
!6888 = !DILocation(line: 410, column: 86, scope: !6813)
!6889 = !DILocation(line: 409, column: 93, scope: !6813)
!6890 = !DILocation(line: 402, column: 84, scope: !6813)
!6891 = !DILocation(line: 401, column: 89, scope: !6813)
!6892 = !DILocation(line: 403, column: 84, scope: !6813)
!6893 = !DILocation(line: 402, column: 90, scope: !6813)
!6894 = !DILocation(line: 404, column: 83, scope: !6813)
!6895 = !DILocation(line: 403, column: 90, scope: !6813)
!6896 = !DILocation(line: 0, scope: !6875)
!6897 = !DILocation(line: 426, column: 1, scope: !6813)
!6898 = distinct !DISubprogram(name: "FSMC_NANDStructInit", scope: !373, file: !373, line: 435, type: !6814, scopeLine: 436, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6899)
!6899 = !{!6900}
!6900 = !DILocalVariable(name: "FSMC_NANDInitStruct", arg: 1, scope: !6898, file: !373, line: 435, type: !6816)
!6901 = !DILocation(line: 0, scope: !6898)
!6902 = !DILocation(line: 438, column: 24, scope: !6898)
!6903 = !DILocation(line: 438, column: 34, scope: !6898)
!6904 = !DILocation(line: 439, column: 24, scope: !6898)
!6905 = !DILocation(line: 439, column: 41, scope: !6898)
!6906 = !DILocation(line: 440, column: 24, scope: !6898)
!6907 = !DILocation(line: 440, column: 45, scope: !6898)
!6908 = !DILocation(line: 441, column: 24, scope: !6898)
!6909 = !DILocation(line: 441, column: 33, scope: !6898)
!6910 = !DILocation(line: 442, column: 24, scope: !6898)
!6911 = !DILocation(line: 442, column: 41, scope: !6898)
!6912 = !DILocation(line: 443, column: 24, scope: !6898)
!6913 = !DILocation(line: 443, column: 43, scope: !6898)
!6914 = !DILocation(line: 444, column: 24, scope: !6898)
!6915 = !DILocation(line: 444, column: 42, scope: !6898)
!6916 = !DILocation(line: 445, column: 24, scope: !6898)
!6917 = !DILocation(line: 445, column: 54, scope: !6898)
!6918 = !DILocation(line: 445, column: 69, scope: !6898)
!6919 = !DILocation(line: 446, column: 54, scope: !6898)
!6920 = !DILocation(line: 446, column: 73, scope: !6898)
!6921 = !DILocation(line: 447, column: 54, scope: !6898)
!6922 = !DILocation(line: 447, column: 73, scope: !6898)
!6923 = !DILocation(line: 448, column: 54, scope: !6898)
!6924 = !DILocation(line: 448, column: 72, scope: !6898)
!6925 = !DILocation(line: 449, column: 24, scope: !6898)
!6926 = !DILocation(line: 449, column: 57, scope: !6898)
!6927 = !DILocation(line: 449, column: 72, scope: !6898)
!6928 = !DILocation(line: 450, column: 57, scope: !6898)
!6929 = !DILocation(line: 450, column: 76, scope: !6898)
!6930 = !DILocation(line: 451, column: 57, scope: !6898)
!6931 = !DILocation(line: 451, column: 76, scope: !6898)
!6932 = !DILocation(line: 452, column: 57, scope: !6898)
!6933 = !DILocation(line: 452, column: 75, scope: !6898)
!6934 = !DILocation(line: 453, column: 1, scope: !6898)
!6935 = distinct !DISubprogram(name: "FSMC_NANDCmd", scope: !373, file: !373, line: 464, type: !1743, scopeLine: 465, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6936)
!6936 = !{!6937, !6938}
!6937 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !6935, file: !373, line: 464, type: !20)
!6938 = !DILocalVariable(name: "NewState", arg: 2, scope: !6935, file: !373, line: 464, type: !856)
!6939 = !DILocation(line: 0, scope: !6935)
!6940 = !DILocation(line: 469, column: 16, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6935, file: !373, line: 469, column: 7)
!6942 = !DILocation(line: 0, scope: !6941)
!6943 = !DILocation(line: 469, column: 7, scope: !6935)
!6944 = !DILocation(line: 472, column: 8, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6941, file: !373, line: 470, column: 3)
!6946 = !DILocation(line: 474, column: 24, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !373, line: 473, column: 5)
!6948 = distinct !DILexicalBlock(scope: !6945, file: !373, line: 472, column: 8)
!6949 = !DILocation(line: 475, column: 5, scope: !6947)
!6950 = !DILocation(line: 478, column: 24, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6948, file: !373, line: 477, column: 5)
!6952 = !DILocation(line: 484, column: 8, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6941, file: !373, line: 482, column: 3)
!6954 = !DILocation(line: 486, column: 24, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !373, line: 485, column: 5)
!6956 = distinct !DILexicalBlock(scope: !6953, file: !373, line: 484, column: 8)
!6957 = !DILocation(line: 487, column: 5, scope: !6955)
!6958 = !DILocation(line: 490, column: 24, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6956, file: !373, line: 489, column: 5)
!6960 = !DILocation(line: 493, column: 1, scope: !6935)
!6961 = distinct !DISubprogram(name: "FSMC_NANDECCCmd", scope: !373, file: !373, line: 504, type: !1743, scopeLine: 505, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6962)
!6962 = !{!6963, !6964}
!6963 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !6961, file: !373, line: 504, type: !20)
!6964 = !DILocalVariable(name: "NewState", arg: 2, scope: !6961, file: !373, line: 504, type: !856)
!6965 = !DILocation(line: 0, scope: !6961)
!6966 = !DILocation(line: 509, column: 16, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6961, file: !373, line: 509, column: 7)
!6968 = !DILocation(line: 0, scope: !6967)
!6969 = !DILocation(line: 509, column: 7, scope: !6961)
!6970 = !DILocation(line: 512, column: 8, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6967, file: !373, line: 510, column: 3)
!6972 = !DILocation(line: 514, column: 24, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !373, line: 513, column: 5)
!6974 = distinct !DILexicalBlock(scope: !6971, file: !373, line: 512, column: 8)
!6975 = !DILocation(line: 515, column: 5, scope: !6973)
!6976 = !DILocation(line: 518, column: 24, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6974, file: !373, line: 517, column: 5)
!6978 = !DILocation(line: 524, column: 8, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6967, file: !373, line: 522, column: 3)
!6980 = !DILocation(line: 526, column: 24, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !373, line: 525, column: 5)
!6982 = distinct !DILexicalBlock(scope: !6979, file: !373, line: 524, column: 8)
!6983 = !DILocation(line: 527, column: 5, scope: !6981)
!6984 = !DILocation(line: 530, column: 24, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6982, file: !373, line: 529, column: 5)
!6986 = !DILocation(line: 533, column: 1, scope: !6961)
!6987 = distinct !DISubprogram(name: "FSMC_GetECC", scope: !373, file: !373, line: 543, type: !5897, scopeLine: 544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !6988)
!6988 = !{!6989, !6990}
!6989 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !6987, file: !373, line: 543, type: !20)
!6990 = !DILocalVariable(name: "eccval", scope: !6987, file: !373, line: 545, type: !20)
!6991 = !DILocation(line: 0, scope: !6987)
!6992 = !DILocation(line: 547, column: 16, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6987, file: !373, line: 547, column: 6)
!6994 = !DILocation(line: 0, scope: !6993)
!6995 = !DILocation(line: 558, column: 3, scope: !6987)
!6996 = distinct !DISubprogram(name: "FSMC_PCCARDDeInit", scope: !373, file: !373, line: 607, type: !1415, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !361)
!6997 = !DILocation(line: 610, column: 20, scope: !6996)
!6998 = !{!6999, !840, i64 0}
!6999 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16}
!7000 = !DILocation(line: 611, column: 19, scope: !6996)
!7001 = !{!6999, !840, i64 4}
!7002 = !DILocation(line: 612, column: 21, scope: !6996)
!7003 = !{!6999, !840, i64 8}
!7004 = !DILocation(line: 613, column: 21, scope: !6996)
!7005 = !{!6999, !840, i64 12}
!7006 = !DILocation(line: 614, column: 20, scope: !6996)
!7007 = !{!6999, !840, i64 16}
!7008 = !DILocation(line: 615, column: 1, scope: !6996)
!7009 = distinct !DISubprogram(name: "FSMC_PCCARDInit", scope: !373, file: !373, line: 624, type: !7010, scopeLine: 625, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !7022)
!7010 = !DISubroutineType(types: !7011)
!7011 = !{null, !7012}
!7012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7013, size: 32)
!7013 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSMC_PCCARDInitTypeDef", file: !6589, line: 230, baseType: !7014)
!7014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6589, line: 211, size: 192, elements: !7015)
!7015 = !{!7016, !7017, !7018, !7019, !7020, !7021}
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_Waitfeature", scope: !7014, file: !6589, line: 213, baseType: !20, size: 32)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_TCLRSetupTime", scope: !7014, file: !6589, line: 216, baseType: !20, size: 32, offset: 32)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_TARSetupTime", scope: !7014, file: !6589, line: 220, baseType: !20, size: 32, offset: 64)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_CommonSpaceTimingStruct", scope: !7014, file: !6589, line: 225, baseType: !6828, size: 32, offset: 96)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_AttributeSpaceTimingStruct", scope: !7014, file: !6589, line: 227, baseType: !6828, size: 32, offset: 128)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "FSMC_IOSpaceTimingStruct", scope: !7014, file: !6589, line: 229, baseType: !6828, size: 32, offset: 160)
!7022 = !{!7023}
!7023 = !DILocalVariable(name: "FSMC_PCCARDInitStruct", arg: 1, scope: !7009, file: !373, line: 624, type: !7012)
!7024 = !DILocation(line: 0, scope: !7009)
!7025 = !DILocation(line: 646, column: 55, scope: !7009)
!7026 = !{!7027, !840, i64 0}
!7027 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !6624, i64 12, !6624, i64 16, !6624, i64 20}
!7028 = !DILocation(line: 648, column: 46, scope: !7009)
!7029 = !{!7027, !840, i64 4}
!7030 = !DILocation(line: 648, column: 65, scope: !7009)
!7031 = !DILocation(line: 649, column: 46, scope: !7009)
!7032 = !{!7027, !840, i64 8}
!7033 = !DILocation(line: 649, column: 64, scope: !7009)
!7034 = !DILocation(line: 648, column: 71, scope: !7009)
!7035 = !DILocation(line: 646, column: 20, scope: !7009)
!7036 = !DILocation(line: 652, column: 56, scope: !7009)
!7037 = !{!7027, !6624, i64 12}
!7038 = !DILocation(line: 652, column: 86, scope: !7009)
!7039 = !DILocation(line: 653, column: 77, scope: !7009)
!7040 = !DILocation(line: 653, column: 96, scope: !7009)
!7041 = !DILocation(line: 652, column: 101, scope: !7009)
!7042 = !DILocation(line: 654, column: 77, scope: !7009)
!7043 = !DILocation(line: 654, column: 96, scope: !7009)
!7044 = !DILocation(line: 653, column: 102, scope: !7009)
!7045 = !DILocation(line: 655, column: 77, scope: !7009)
!7046 = !DILocation(line: 655, column: 95, scope: !7009)
!7047 = !DILocation(line: 654, column: 102, scope: !7009)
!7048 = !DILocation(line: 652, column: 21, scope: !7009)
!7049 = !DILocation(line: 658, column: 56, scope: !7009)
!7050 = !{!7027, !6624, i64 16}
!7051 = !DILocation(line: 658, column: 89, scope: !7009)
!7052 = !DILocation(line: 659, column: 80, scope: !7009)
!7053 = !DILocation(line: 659, column: 99, scope: !7009)
!7054 = !DILocation(line: 658, column: 104, scope: !7009)
!7055 = !DILocation(line: 660, column: 80, scope: !7009)
!7056 = !DILocation(line: 660, column: 99, scope: !7009)
!7057 = !DILocation(line: 659, column: 105, scope: !7009)
!7058 = !DILocation(line: 661, column: 80, scope: !7009)
!7059 = !DILocation(line: 661, column: 98, scope: !7009)
!7060 = !DILocation(line: 660, column: 105, scope: !7009)
!7061 = !DILocation(line: 658, column: 21, scope: !7009)
!7062 = !DILocation(line: 664, column: 55, scope: !7009)
!7063 = !{!7027, !6624, i64 20}
!7064 = !DILocation(line: 664, column: 81, scope: !7009)
!7065 = !DILocation(line: 665, column: 72, scope: !7009)
!7066 = !DILocation(line: 665, column: 91, scope: !7009)
!7067 = !DILocation(line: 664, column: 96, scope: !7009)
!7068 = !DILocation(line: 666, column: 72, scope: !7009)
!7069 = !DILocation(line: 666, column: 91, scope: !7009)
!7070 = !DILocation(line: 665, column: 97, scope: !7009)
!7071 = !DILocation(line: 667, column: 72, scope: !7009)
!7072 = !DILocation(line: 667, column: 90, scope: !7009)
!7073 = !DILocation(line: 666, column: 97, scope: !7009)
!7074 = !DILocation(line: 664, column: 20, scope: !7009)
!7075 = !DILocation(line: 668, column: 1, scope: !7009)
!7076 = distinct !DISubprogram(name: "FSMC_PCCARDStructInit", scope: !373, file: !373, line: 676, type: !7010, scopeLine: 677, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !7077)
!7077 = !{!7078}
!7078 = !DILocalVariable(name: "FSMC_PCCARDInitStruct", arg: 1, scope: !7076, file: !373, line: 676, type: !7012)
!7079 = !DILocation(line: 0, scope: !7076)
!7080 = !DILocation(line: 679, column: 26, scope: !7076)
!7081 = !DILocation(line: 679, column: 43, scope: !7076)
!7082 = !DILocation(line: 680, column: 26, scope: !7076)
!7083 = !DILocation(line: 680, column: 45, scope: !7076)
!7084 = !DILocation(line: 681, column: 26, scope: !7076)
!7085 = !DILocation(line: 681, column: 44, scope: !7076)
!7086 = !DILocation(line: 682, column: 26, scope: !7076)
!7087 = !DILocation(line: 682, column: 56, scope: !7076)
!7088 = !DILocation(line: 682, column: 71, scope: !7076)
!7089 = !DILocation(line: 683, column: 56, scope: !7076)
!7090 = !DILocation(line: 683, column: 75, scope: !7076)
!7091 = !DILocation(line: 684, column: 56, scope: !7076)
!7092 = !DILocation(line: 684, column: 75, scope: !7076)
!7093 = !DILocation(line: 685, column: 56, scope: !7076)
!7094 = !DILocation(line: 685, column: 74, scope: !7076)
!7095 = !DILocation(line: 686, column: 26, scope: !7076)
!7096 = !DILocation(line: 686, column: 59, scope: !7076)
!7097 = !DILocation(line: 686, column: 74, scope: !7076)
!7098 = !DILocation(line: 687, column: 59, scope: !7076)
!7099 = !DILocation(line: 687, column: 78, scope: !7076)
!7100 = !DILocation(line: 688, column: 59, scope: !7076)
!7101 = !DILocation(line: 688, column: 78, scope: !7076)
!7102 = !DILocation(line: 689, column: 59, scope: !7076)
!7103 = !DILocation(line: 689, column: 77, scope: !7076)
!7104 = !DILocation(line: 690, column: 26, scope: !7076)
!7105 = !DILocation(line: 690, column: 52, scope: !7076)
!7106 = !DILocation(line: 690, column: 67, scope: !7076)
!7107 = !DILocation(line: 691, column: 52, scope: !7076)
!7108 = !DILocation(line: 691, column: 71, scope: !7076)
!7109 = !DILocation(line: 692, column: 52, scope: !7076)
!7110 = !DILocation(line: 692, column: 71, scope: !7076)
!7111 = !DILocation(line: 693, column: 52, scope: !7076)
!7112 = !DILocation(line: 693, column: 70, scope: !7076)
!7113 = !DILocation(line: 694, column: 1, scope: !7076)
!7114 = distinct !DISubprogram(name: "FSMC_PCCARDCmd", scope: !373, file: !373, line: 702, type: !1502, scopeLine: 703, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !7115)
!7115 = !{!7116}
!7116 = !DILocalVariable(name: "NewState", arg: 1, scope: !7114, file: !373, line: 702, type: !856)
!7117 = !DILocation(line: 0, scope: !7114)
!7118 = !DILocation(line: 706, column: 16, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7114, file: !373, line: 706, column: 7)
!7120 = !DILocation(line: 0, scope: !7119)
!7121 = !DILocation(line: 706, column: 7, scope: !7114)
!7122 = !DILocation(line: 716, column: 1, scope: !7114)
!7123 = distinct !DISubprogram(name: "FSMC_ITConfig", scope: !373, file: !373, line: 749, type: !7124, scopeLine: 750, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !7126)
!7124 = !DISubroutineType(types: !7125)
!7125 = !{null, !20, !20, !856}
!7126 = !{!7127, !7128, !7129}
!7127 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !7123, file: !373, line: 749, type: !20)
!7128 = !DILocalVariable(name: "FSMC_IT", arg: 2, scope: !7123, file: !373, line: 749, type: !20)
!7129 = !DILocalVariable(name: "NewState", arg: 3, scope: !7123, file: !373, line: 749, type: !856)
!7130 = !DILocation(line: 0, scope: !7123)
!7131 = !DILocation(line: 755, column: 16, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7123, file: !373, line: 755, column: 7)
!7133 = !DILocation(line: 0, scope: !7132)
!7134 = !DILocation(line: 755, column: 7, scope: !7123)
!7135 = !DILocation(line: 758, column: 8, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7132, file: !373, line: 756, column: 3)
!7137 = !DILocation(line: 760, column: 23, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7139, file: !373, line: 759, column: 5)
!7139 = distinct !DILexicalBlock(scope: !7136, file: !373, line: 758, column: 8)
!7140 = !DILocation(line: 761, column: 5, scope: !7138)
!7141 = !DILocation(line: 763, column: 24, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7139, file: !373, line: 763, column: 14)
!7143 = !DILocation(line: 763, column: 14, scope: !7139)
!7144 = !DILocation(line: 765, column: 23, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7142, file: !373, line: 764, column: 5)
!7146 = !DILocation(line: 766, column: 5, scope: !7145)
!7147 = !DILocation(line: 770, column: 23, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7142, file: !373, line: 769, column: 5)
!7149 = !DILocation(line: 776, column: 8, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7132, file: !373, line: 774, column: 3)
!7151 = !DILocation(line: 779, column: 36, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !373, line: 777, column: 5)
!7153 = distinct !DILexicalBlock(scope: !7150, file: !373, line: 776, column: 8)
!7154 = !DILocation(line: 779, column: 23, scope: !7152)
!7155 = !DILocation(line: 780, column: 5, scope: !7152)
!7156 = !DILocation(line: 782, column: 24, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7153, file: !373, line: 782, column: 14)
!7158 = !DILocation(line: 0, scope: !7157)
!7159 = !DILocation(line: 782, column: 14, scope: !7153)
!7160 = !DILocation(line: 784, column: 23, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7157, file: !373, line: 783, column: 5)
!7162 = !DILocation(line: 785, column: 5, scope: !7161)
!7163 = !DILocation(line: 789, column: 23, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7157, file: !373, line: 788, column: 5)
!7165 = !DILocation(line: 792, column: 1, scope: !7123)
!7166 = distinct !DISubprogram(name: "FSMC_GetFlagStatus", scope: !373, file: !373, line: 809, type: !7167, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !7169)
!7167 = !DISubroutineType(types: !7168)
!7168 = !{!1276, !20, !20}
!7169 = !{!7170, !7171, !7172, !7173}
!7170 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !7166, file: !373, line: 809, type: !20)
!7171 = !DILocalVariable(name: "FSMC_FLAG", arg: 2, scope: !7166, file: !373, line: 809, type: !20)
!7172 = !DILocalVariable(name: "bitstatus", scope: !7166, file: !373, line: 811, type: !1276)
!7173 = !DILocalVariable(name: "tmpsr", scope: !7166, file: !373, line: 812, type: !20)
!7174 = !DILocation(line: 0, scope: !7166)
!7175 = !DILocation(line: 818, column: 6, scope: !7166)
!7176 = !DILocation(line: 825, column: 3, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !373, line: 823, column: 3)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !373, line: 822, column: 11)
!7179 = distinct !DILexicalBlock(scope: !7166, file: !373, line: 818, column: 6)
!7180 = !DILocation(line: 0, scope: !7179)
!7181 = !DILocation(line: 833, column: 14, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7166, file: !373, line: 833, column: 7)
!7183 = !DILocation(line: 833, column: 27, scope: !7182)
!7184 = !DILocation(line: 842, column: 3, scope: !7166)
!7185 = distinct !DISubprogram(name: "FSMC_ClearFlag", scope: !373, file: !373, line: 859, type: !897, scopeLine: 860, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !7186)
!7186 = !{!7187, !7188}
!7187 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !7185, file: !373, line: 859, type: !20)
!7188 = !DILocalVariable(name: "FSMC_FLAG", arg: 2, scope: !7185, file: !373, line: 859, type: !20)
!7189 = !DILocation(line: 0, scope: !7185)
!7190 = !DILocation(line: 865, column: 16, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7185, file: !373, line: 865, column: 6)
!7192 = !DILocation(line: 865, column: 6, scope: !7185)
!7193 = !DILocation(line: 0, scope: !7191)
!7194 = !DILocation(line: 878, column: 1, scope: !7185)
!7195 = distinct !DISubprogram(name: "FSMC_GetITStatus", scope: !373, file: !373, line: 894, type: !3644, scopeLine: 895, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !7196)
!7196 = !{!7197, !7198, !7199, !7200, !7201, !7202}
!7197 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !7195, file: !373, line: 894, type: !20)
!7198 = !DILocalVariable(name: "FSMC_IT", arg: 2, scope: !7195, file: !373, line: 894, type: !20)
!7199 = !DILocalVariable(name: "bitstatus", scope: !7195, file: !373, line: 896, type: !1359)
!7200 = !DILocalVariable(name: "tmpsr", scope: !7195, file: !373, line: 897, type: !20)
!7201 = !DILocalVariable(name: "itstatus", scope: !7195, file: !373, line: 897, type: !20)
!7202 = !DILocalVariable(name: "itenable", scope: !7195, file: !373, line: 897, type: !20)
!7203 = !DILocation(line: 0, scope: !7195)
!7204 = !DILocation(line: 903, column: 6, scope: !7195)
!7205 = !DILocation(line: 910, column: 3, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !373, line: 908, column: 3)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !373, line: 907, column: 11)
!7208 = distinct !DILexicalBlock(scope: !7195, file: !373, line: 903, column: 6)
!7209 = !DILocation(line: 0, scope: !7208)
!7210 = !DILocation(line: 917, column: 20, scope: !7195)
!7211 = !DILocation(line: 919, column: 31, scope: !7195)
!7212 = !DILocation(line: 919, column: 20, scope: !7195)
!7213 = !DILocation(line: 920, column: 17, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7195, file: !373, line: 920, column: 7)
!7215 = !DILocation(line: 920, column: 38, scope: !7214)
!7216 = !DILocation(line: 928, column: 3, scope: !7195)
!7217 = distinct !DISubprogram(name: "FSMC_ClearITPendingBit", scope: !373, file: !373, line: 945, type: !897, scopeLine: 946, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !372, retainedNodes: !7218)
!7218 = !{!7219, !7220}
!7219 = !DILocalVariable(name: "FSMC_Bank", arg: 1, scope: !7217, file: !373, line: 945, type: !20)
!7220 = !DILocalVariable(name: "FSMC_IT", arg: 2, scope: !7217, file: !373, line: 945, type: !20)
!7221 = !DILocation(line: 0, scope: !7217)
!7222 = !DILocation(line: 951, column: 16, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7217, file: !373, line: 951, column: 6)
!7224 = !DILocation(line: 951, column: 6, scope: !7217)
!7225 = !DILocation(line: 0, scope: !7223)
!7226 = !DILocation(line: 964, column: 1, scope: !7217)
!7227 = distinct !DISubprogram(name: "SDIO_DeInit", scope: !418, file: !418, line: 259, type: !1415, scopeLine: 260, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !361)
!7228 = !DILocation(line: 261, column: 3, scope: !7227)
!7229 = !DILocation(line: 262, column: 3, scope: !7227)
!7230 = !DILocation(line: 263, column: 1, scope: !7227)
!7231 = distinct !DISubprogram(name: "SDIO_Init", scope: !418, file: !418, line: 272, type: !7232, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7245)
!7232 = !DISubroutineType(types: !7233)
!7233 = !{null, !7234}
!7234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7235, size: 32)
!7235 = !DIDerivedType(tag: DW_TAG_typedef, name: "SDIO_InitTypeDef", file: !7236, line: 66, baseType: !7237)
!7236 = !DIFile(filename: "inc/peripherals/stm32f4xx_sdio.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!7237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7236, line: 44, size: 192, elements: !7238)
!7238 = !{!7239, !7240, !7241, !7242, !7243, !7244}
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_ClockEdge", scope: !7237, file: !7236, line: 46, baseType: !20, size: 32)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_ClockBypass", scope: !7237, file: !7236, line: 49, baseType: !20, size: 32, offset: 32)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_ClockPowerSave", scope: !7237, file: !7236, line: 53, baseType: !20, size: 32, offset: 64)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_BusWide", scope: !7237, file: !7236, line: 57, baseType: !20, size: 32, offset: 96)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_HardwareFlowControl", scope: !7237, file: !7236, line: 60, baseType: !20, size: 32, offset: 128)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_ClockDiv", scope: !7237, file: !7236, line: 63, baseType: !60, size: 8, offset: 160)
!7245 = !{!7246, !7247}
!7246 = !DILocalVariable(name: "SDIO_InitStruct", arg: 1, scope: !7231, file: !418, line: 272, type: !7234)
!7247 = !DILocalVariable(name: "tmpreg", scope: !7231, file: !418, line: 274, type: !20)
!7248 = !DILocation(line: 0, scope: !7231)
!7249 = !DILocation(line: 285, column: 18, scope: !7231)
!7250 = !{!7251, !840, i64 4}
!7251 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !840, i64 32, !840, i64 36, !840, i64 40, !840, i64 44, !840, i64 48, !840, i64 52, !840, i64 56, !840, i64 60, !841, i64 64, !840, i64 72, !841, i64 76, !840, i64 128}
!7252 = !DILocation(line: 288, column: 10, scope: !7231)
!7253 = !DILocation(line: 296, column: 31, scope: !7231)
!7254 = !{!7255, !841, i64 20}
!7255 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !841, i64 20}
!7256 = !DILocation(line: 296, column: 14, scope: !7231)
!7257 = !DILocation(line: 296, column: 65, scope: !7231)
!7258 = !{!7255, !840, i64 8}
!7259 = !DILocation(line: 297, column: 31, scope: !7231)
!7260 = !{!7255, !840, i64 4}
!7261 = !DILocation(line: 297, column: 67, scope: !7231)
!7262 = !{!7255, !840, i64 12}
!7263 = !DILocation(line: 298, column: 31, scope: !7231)
!7264 = !{!7255, !840, i64 0}
!7265 = !DILocation(line: 298, column: 65, scope: !7231)
!7266 = !{!7255, !840, i64 16}
!7267 = !DILocation(line: 296, column: 46, scope: !7231)
!7268 = !DILocation(line: 296, column: 85, scope: !7231)
!7269 = !DILocation(line: 297, column: 48, scope: !7231)
!7270 = !DILocation(line: 297, column: 80, scope: !7231)
!7271 = !DILocation(line: 298, column: 46, scope: !7231)
!7272 = !DILocation(line: 296, column: 10, scope: !7231)
!7273 = !DILocation(line: 301, column: 15, scope: !7231)
!7274 = !DILocation(line: 302, column: 1, scope: !7231)
!7275 = distinct !DISubprogram(name: "SDIO_StructInit", scope: !418, file: !418, line: 310, type: !7232, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7276)
!7276 = !{!7277}
!7277 = !DILocalVariable(name: "SDIO_InitStruct", arg: 1, scope: !7275, file: !418, line: 310, type: !7234)
!7278 = !DILocation(line: 0, scope: !7275)
!7279 = !DILocation(line: 313, column: 20, scope: !7275)
!7280 = !DILocation(line: 313, column: 34, scope: !7275)
!7281 = !DILocation(line: 314, column: 20, scope: !7275)
!7282 = !DILocation(line: 314, column: 35, scope: !7275)
!7283 = !DILocation(line: 315, column: 20, scope: !7275)
!7284 = !DILocation(line: 315, column: 37, scope: !7275)
!7285 = !DILocation(line: 316, column: 20, scope: !7275)
!7286 = !DILocation(line: 316, column: 40, scope: !7275)
!7287 = !DILocation(line: 317, column: 20, scope: !7275)
!7288 = !DILocation(line: 317, column: 33, scope: !7275)
!7289 = !DILocation(line: 318, column: 20, scope: !7275)
!7290 = !DILocation(line: 318, column: 45, scope: !7275)
!7291 = !DILocation(line: 319, column: 1, scope: !7275)
!7292 = distinct !DISubprogram(name: "SDIO_ClockCmd", scope: !418, file: !418, line: 327, type: !1502, scopeLine: 328, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7293)
!7293 = !{!7294}
!7294 = !DILocalVariable(name: "NewState", arg: 1, scope: !7292, file: !418, line: 327, type: !856)
!7295 = !DILocation(line: 0, scope: !7292)
!7296 = !DILocation(line: 332, column: 37, scope: !7292)
!7297 = !DILocation(line: 333, column: 1, scope: !7292)
!7298 = distinct !DISubprogram(name: "SDIO_SetPowerState", scope: !418, file: !418, line: 343, type: !831, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7299)
!7299 = !{!7300}
!7300 = !DILocalVariable(name: "SDIO_PowerState", arg: 1, scope: !7298, file: !418, line: 343, type: !20)
!7301 = !DILocation(line: 0, scope: !7298)
!7302 = !DILocation(line: 348, column: 15, scope: !7298)
!7303 = !{!7251, !840, i64 0}
!7304 = !DILocation(line: 349, column: 1, scope: !7298)
!7305 = distinct !DISubprogram(name: "SDIO_GetPowerState", scope: !418, file: !418, line: 360, type: !2372, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !361)
!7306 = !DILocation(line: 362, column: 17, scope: !7305)
!7307 = !DILocation(line: 362, column: 23, scope: !7305)
!7308 = !DILocation(line: 362, column: 3, scope: !7305)
!7309 = distinct !DISubprogram(name: "SDIO_SendCommand", scope: !418, file: !418, line: 392, type: !7310, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7321)
!7310 = !DISubroutineType(types: !7311)
!7311 = !{null, !7312}
!7312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7313, size: 32)
!7313 = !DIDerivedType(tag: DW_TAG_typedef, name: "SDIO_CmdInitTypeDef", file: !7236, line: 86, baseType: !7314)
!7314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7236, line: 68, size: 160, elements: !7315)
!7315 = !{!7316, !7317, !7318, !7319, !7320}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_Argument", scope: !7314, file: !7236, line: 70, baseType: !20, size: 32)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_CmdIndex", scope: !7314, file: !7236, line: 75, baseType: !20, size: 32, offset: 32)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_Response", scope: !7314, file: !7236, line: 77, baseType: !20, size: 32, offset: 64)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_Wait", scope: !7314, file: !7236, line: 80, baseType: !20, size: 32, offset: 96)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_CPSM", scope: !7314, file: !7236, line: 83, baseType: !20, size: 32, offset: 128)
!7321 = !{!7322, !7323}
!7322 = !DILocalVariable(name: "SDIO_CmdInitStruct", arg: 1, scope: !7309, file: !418, line: 392, type: !7312)
!7323 = !DILocalVariable(name: "tmpreg", scope: !7309, file: !418, line: 394, type: !20)
!7324 = !DILocation(line: 0, scope: !7309)
!7325 = !DILocation(line: 404, column: 35, scope: !7309)
!7326 = !DILocation(line: 404, column: 13, scope: !7309)
!7327 = !{!7251, !840, i64 8}
!7328 = !DILocation(line: 408, column: 18, scope: !7309)
!7329 = !{!7251, !840, i64 12}
!7330 = !DILocation(line: 410, column: 10, scope: !7309)
!7331 = !DILocation(line: 415, column: 43, scope: !7309)
!7332 = !DILocation(line: 415, column: 79, scope: !7309)
!7333 = !DILocation(line: 416, column: 34, scope: !7309)
!7334 = !DILocation(line: 416, column: 66, scope: !7309)
!7335 = !DILocation(line: 415, column: 57, scope: !7309)
!7336 = !DILocation(line: 416, column: 12, scope: !7309)
!7337 = !DILocation(line: 416, column: 44, scope: !7309)
!7338 = !DILocation(line: 415, column: 10, scope: !7309)
!7339 = !DILocation(line: 419, column: 13, scope: !7309)
!7340 = !DILocation(line: 420, column: 1, scope: !7309)
!7341 = distinct !DISubprogram(name: "SDIO_CmdStructInit", scope: !418, file: !418, line: 428, type: !7310, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7342)
!7342 = !{!7343}
!7343 = !DILocalVariable(name: "SDIO_CmdInitStruct", arg: 1, scope: !7341, file: !418, line: 428, type: !7312)
!7344 = !DILocation(line: 0, scope: !7341)
!7345 = !DILocation(line: 431, column: 23, scope: !7341)
!7346 = !DILocation(line: 431, column: 37, scope: !7341)
!7347 = !DILocation(line: 432, column: 23, scope: !7341)
!7348 = !DILocation(line: 432, column: 37, scope: !7341)
!7349 = !DILocation(line: 433, column: 23, scope: !7341)
!7350 = !DILocation(line: 433, column: 37, scope: !7341)
!7351 = !DILocation(line: 434, column: 23, scope: !7341)
!7352 = !DILocation(line: 434, column: 33, scope: !7341)
!7353 = !DILocation(line: 435, column: 23, scope: !7341)
!7354 = !DILocation(line: 435, column: 33, scope: !7341)
!7355 = !DILocation(line: 436, column: 1, scope: !7341)
!7356 = distinct !DISubprogram(name: "SDIO_GetCommandResponse", scope: !418, file: !418, line: 443, type: !1610, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !361)
!7357 = !DILocation(line: 445, column: 26, scope: !7356)
!7358 = !{!7251, !840, i64 16}
!7359 = !DILocation(line: 445, column: 10, scope: !7356)
!7360 = !DILocation(line: 445, column: 3, scope: !7356)
!7361 = distinct !DISubprogram(name: "SDIO_GetResponse", scope: !418, file: !418, line: 458, type: !5897, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7362)
!7362 = !{!7363, !7364}
!7363 = !DILocalVariable(name: "SDIO_RESP", arg: 1, scope: !7361, file: !418, line: 458, type: !20)
!7364 = !DILocalVariable(name: "tmp", scope: !7361, file: !418, line: 460, type: !27)
!7365 = !DILocation(line: 0, scope: !7361)
!7366 = !DILocation(line: 460, column: 3, scope: !7361)
!7367 = !DILocation(line: 460, column: 17, scope: !7361)
!7368 = !DILocation(line: 465, column: 24, scope: !7361)
!7369 = !DILocation(line: 465, column: 7, scope: !7361)
!7370 = !DILocation(line: 467, column: 30, scope: !7361)
!7371 = !DILocation(line: 467, column: 12, scope: !7361)
!7372 = !DILocation(line: 467, column: 11, scope: !7361)
!7373 = !DILocation(line: 468, column: 1, scope: !7361)
!7374 = !DILocation(line: 467, column: 3, scope: !7361)
!7375 = distinct !DISubprogram(name: "SDIO_DataConfig", scope: !418, file: !418, line: 496, type: !7376, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7388)
!7376 = !DISubroutineType(types: !7377)
!7377 = !{null, !7378}
!7378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7379, size: 32)
!7379 = !DIDerivedType(tag: DW_TAG_typedef, name: "SDIO_DataInitTypeDef", file: !7236, line: 107, baseType: !7380)
!7380 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7236, line: 88, size: 192, elements: !7381)
!7381 = !{!7382, !7383, !7384, !7385, !7386, !7387}
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_DataTimeOut", scope: !7380, file: !7236, line: 90, baseType: !20, size: 32)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_DataLength", scope: !7380, file: !7236, line: 92, baseType: !20, size: 32, offset: 32)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_DataBlockSize", scope: !7380, file: !7236, line: 94, baseType: !20, size: 32, offset: 64)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_TransferDir", scope: !7380, file: !7236, line: 97, baseType: !20, size: 32, offset: 96)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_TransferMode", scope: !7380, file: !7236, line: 101, baseType: !20, size: 32, offset: 128)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_DPSM", scope: !7380, file: !7236, line: 104, baseType: !20, size: 32, offset: 160)
!7388 = !{!7389, !7390}
!7389 = !DILocalVariable(name: "SDIO_DataInitStruct", arg: 1, scope: !7375, file: !418, line: 496, type: !7378)
!7390 = !DILocalVariable(name: "tmpreg", scope: !7375, file: !418, line: 498, type: !20)
!7391 = !DILocation(line: 0, scope: !7375)
!7392 = !DILocation(line: 509, column: 39, scope: !7375)
!7393 = !DILocation(line: 509, column: 16, scope: !7375)
!7394 = !{!7251, !840, i64 36}
!7395 = !DILocation(line: 513, column: 37, scope: !7375)
!7396 = !DILocation(line: 513, column: 14, scope: !7375)
!7397 = !{!7251, !840, i64 40}
!7398 = !DILocation(line: 517, column: 18, scope: !7375)
!7399 = !{!7251, !840, i64 44}
!7400 = !DILocation(line: 519, column: 10, scope: !7375)
!7401 = !DILocation(line: 524, column: 44, scope: !7375)
!7402 = !DILocation(line: 524, column: 86, scope: !7375)
!7403 = !DILocation(line: 525, column: 35, scope: !7375)
!7404 = !DILocation(line: 525, column: 76, scope: !7375)
!7405 = !DILocation(line: 524, column: 63, scope: !7375)
!7406 = !DILocation(line: 525, column: 12, scope: !7375)
!7407 = !DILocation(line: 525, column: 53, scope: !7375)
!7408 = !DILocation(line: 524, column: 10, scope: !7375)
!7409 = !DILocation(line: 528, column: 15, scope: !7375)
!7410 = !DILocation(line: 529, column: 1, scope: !7375)
!7411 = distinct !DISubprogram(name: "SDIO_DataStructInit", scope: !418, file: !418, line: 537, type: !7376, scopeLine: 538, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7412)
!7412 = !{!7413}
!7413 = !DILocalVariable(name: "SDIO_DataInitStruct", arg: 1, scope: !7411, file: !418, line: 537, type: !7378)
!7414 = !DILocation(line: 0, scope: !7411)
!7415 = !DILocation(line: 540, column: 24, scope: !7411)
!7416 = !DILocation(line: 540, column: 41, scope: !7411)
!7417 = !DILocation(line: 541, column: 24, scope: !7411)
!7418 = !DILocation(line: 541, column: 40, scope: !7411)
!7419 = !DILocation(line: 542, column: 24, scope: !7411)
!7420 = !DILocation(line: 542, column: 43, scope: !7411)
!7421 = !DILocation(line: 543, column: 24, scope: !7411)
!7422 = !DILocation(line: 543, column: 41, scope: !7411)
!7423 = !DILocation(line: 544, column: 24, scope: !7411)
!7424 = !DILocation(line: 544, column: 42, scope: !7411)
!7425 = !DILocation(line: 545, column: 24, scope: !7411)
!7426 = !DILocation(line: 545, column: 34, scope: !7411)
!7427 = !DILocation(line: 546, column: 1, scope: !7411)
!7428 = distinct !DISubprogram(name: "SDIO_GetDataCounter", scope: !418, file: !418, line: 553, type: !2372, scopeLine: 554, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !361)
!7429 = !DILocation(line: 555, column: 16, scope: !7428)
!7430 = !{!7251, !840, i64 48}
!7431 = !DILocation(line: 555, column: 3, scope: !7428)
!7432 = distinct !DISubprogram(name: "SDIO_ReadData", scope: !418, file: !418, line: 563, type: !2372, scopeLine: 564, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !361)
!7433 = !DILocation(line: 565, column: 16, scope: !7432)
!7434 = !{!7251, !840, i64 128}
!7435 = !DILocation(line: 565, column: 3, scope: !7432)
!7436 = distinct !DISubprogram(name: "SDIO_WriteData", scope: !418, file: !418, line: 573, type: !831, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7437)
!7437 = !{!7438}
!7438 = !DILocalVariable(name: "Data", arg: 1, scope: !7436, file: !418, line: 573, type: !20)
!7439 = !DILocation(line: 0, scope: !7436)
!7440 = !DILocation(line: 575, column: 14, scope: !7436)
!7441 = !DILocation(line: 576, column: 1, scope: !7436)
!7442 = distinct !DISubprogram(name: "SDIO_GetFIFOCount", scope: !418, file: !418, line: 583, type: !2372, scopeLine: 584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !361)
!7443 = !DILocation(line: 585, column: 16, scope: !7442)
!7444 = !{!7251, !840, i64 72}
!7445 = !DILocation(line: 585, column: 3, scope: !7442)
!7446 = distinct !DISubprogram(name: "SDIO_StartSDIOReadWait", scope: !418, file: !418, line: 612, type: !1502, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7447)
!7447 = !{!7448}
!7448 = !DILocalVariable(name: "NewState", arg: 1, scope: !7446, file: !418, line: 612, type: !856)
!7449 = !DILocation(line: 0, scope: !7446)
!7450 = !DILocation(line: 617, column: 39, scope: !7446)
!7451 = !DILocation(line: 618, column: 1, scope: !7446)
!7452 = distinct !DISubprogram(name: "SDIO_StopSDIOReadWait", scope: !418, file: !418, line: 626, type: !1502, scopeLine: 627, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7453)
!7453 = !{!7454}
!7454 = !DILocalVariable(name: "NewState", arg: 1, scope: !7452, file: !418, line: 626, type: !856)
!7455 = !DILocation(line: 0, scope: !7452)
!7456 = !DILocation(line: 631, column: 38, scope: !7452)
!7457 = !DILocation(line: 632, column: 1, scope: !7452)
!7458 = distinct !DISubprogram(name: "SDIO_SetSDIOReadWaitMode", scope: !418, file: !418, line: 642, type: !831, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7459)
!7459 = !{!7460}
!7460 = !DILocalVariable(name: "SDIO_ReadWaitMode", arg: 1, scope: !7458, file: !418, line: 642, type: !20)
!7461 = !DILocation(line: 0, scope: !7458)
!7462 = !DILocation(line: 647, column: 37, scope: !7458)
!7463 = !DILocation(line: 648, column: 1, scope: !7458)
!7464 = distinct !DISubprogram(name: "SDIO_SetSDIOOperation", scope: !418, file: !418, line: 656, type: !1502, scopeLine: 657, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7465)
!7465 = !{!7466}
!7466 = !DILocalVariable(name: "NewState", arg: 1, scope: !7464, file: !418, line: 656, type: !856)
!7467 = !DILocation(line: 0, scope: !7464)
!7468 = !DILocation(line: 661, column: 38, scope: !7464)
!7469 = !DILocation(line: 662, column: 1, scope: !7464)
!7470 = distinct !DISubprogram(name: "SDIO_SendSDIOSuspendCmd", scope: !418, file: !418, line: 670, type: !1502, scopeLine: 671, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7471)
!7471 = !{!7472}
!7472 = !DILocalVariable(name: "NewState", arg: 1, scope: !7470, file: !418, line: 670, type: !856)
!7473 = !DILocation(line: 0, scope: !7470)
!7474 = !DILocation(line: 675, column: 41, scope: !7470)
!7475 = !DILocation(line: 676, column: 1, scope: !7470)
!7476 = distinct !DISubprogram(name: "SDIO_CommandCompletionCmd", scope: !418, file: !418, line: 702, type: !1502, scopeLine: 703, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7477)
!7477 = !{!7478}
!7478 = !DILocalVariable(name: "NewState", arg: 1, scope: !7476, file: !418, line: 702, type: !856)
!7479 = !DILocation(line: 0, scope: !7476)
!7480 = !DILocation(line: 707, column: 40, scope: !7476)
!7481 = !DILocation(line: 708, column: 1, scope: !7476)
!7482 = distinct !DISubprogram(name: "SDIO_CEATAITCmd", scope: !418, file: !418, line: 716, type: !1502, scopeLine: 717, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7483)
!7483 = !{!7484}
!7484 = !DILocalVariable(name: "NewState", arg: 1, scope: !7482, file: !418, line: 716, type: !856)
!7485 = !DILocation(line: 0, scope: !7482)
!7486 = !DILocation(line: 721, column: 71, scope: !7482)
!7487 = !DILocation(line: 721, column: 34, scope: !7482)
!7488 = !DILocation(line: 722, column: 1, scope: !7482)
!7489 = distinct !DISubprogram(name: "SDIO_SendCEATACmd", scope: !418, file: !418, line: 730, type: !1502, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7490)
!7490 = !{!7491}
!7491 = !DILocalVariable(name: "NewState", arg: 1, scope: !7489, file: !418, line: 730, type: !856)
!7492 = !DILocation(line: 0, scope: !7489)
!7493 = !DILocation(line: 735, column: 36, scope: !7489)
!7494 = !DILocation(line: 736, column: 1, scope: !7489)
!7495 = distinct !DISubprogram(name: "SDIO_DMACmd", scope: !418, file: !418, line: 762, type: !1502, scopeLine: 763, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7496)
!7496 = !{!7497}
!7497 = !DILocalVariable(name: "NewState", arg: 1, scope: !7495, file: !418, line: 762, type: !856)
!7498 = !DILocation(line: 0, scope: !7495)
!7499 = !DILocation(line: 767, column: 37, scope: !7495)
!7500 = !DILocation(line: 768, column: 1, scope: !7495)
!7501 = distinct !DISubprogram(name: "SDIO_ITConfig", scope: !418, file: !418, line: 820, type: !1743, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7502)
!7502 = !{!7503, !7504}
!7503 = !DILocalVariable(name: "SDIO_IT", arg: 1, scope: !7501, file: !418, line: 820, type: !20)
!7504 = !DILocalVariable(name: "NewState", arg: 2, scope: !7501, file: !418, line: 820, type: !856)
!7505 = !DILocation(line: 0, scope: !7501)
!7506 = !DILocation(line: 826, column: 16, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7501, file: !418, line: 826, column: 7)
!7508 = !DILocation(line: 826, column: 7, scope: !7501)
!7509 = !DILocation(line: 829, column: 16, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7507, file: !418, line: 827, column: 3)
!7511 = !{!7251, !840, i64 60}
!7512 = !DILocation(line: 830, column: 3, scope: !7510)
!7513 = !DILocation(line: 834, column: 19, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7507, file: !418, line: 832, column: 3)
!7515 = !DILocation(line: 834, column: 16, scope: !7514)
!7516 = !DILocation(line: 0, scope: !7507)
!7517 = !DILocation(line: 836, column: 1, scope: !7501)
!7518 = distinct !DISubprogram(name: "SDIO_GetFlagStatus", scope: !418, file: !418, line: 868, type: !2717, scopeLine: 869, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7519)
!7519 = !{!7520, !7521}
!7520 = !DILocalVariable(name: "SDIO_FLAG", arg: 1, scope: !7518, file: !418, line: 868, type: !20)
!7521 = !DILocalVariable(name: "bitstatus", scope: !7518, file: !418, line: 870, type: !1276)
!7522 = !DILocation(line: 0, scope: !7518)
!7523 = !DILocation(line: 875, column: 14, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7518, file: !418, line: 875, column: 7)
!7525 = !{!7251, !840, i64 52}
!7526 = !DILocation(line: 875, column: 18, scope: !7524)
!7527 = !DILocation(line: 875, column: 31, scope: !7524)
!7528 = !DILocation(line: 883, column: 3, scope: !7518)
!7529 = distinct !DISubprogram(name: "SDIO_ClearFlag", scope: !418, file: !418, line: 905, type: !831, scopeLine: 906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7530)
!7530 = !{!7531}
!7531 = !DILocalVariable(name: "SDIO_FLAG", arg: 1, scope: !7529, file: !418, line: 905, type: !20)
!7532 = !DILocation(line: 0, scope: !7529)
!7533 = !DILocation(line: 910, column: 13, scope: !7529)
!7534 = !{!7251, !840, i64 56}
!7535 = !DILocation(line: 911, column: 1, scope: !7529)
!7536 = distinct !DISubprogram(name: "SDIO_GetITStatus", scope: !418, file: !418, line: 944, type: !2735, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7537)
!7537 = !{!7538, !7539}
!7538 = !DILocalVariable(name: "SDIO_IT", arg: 1, scope: !7536, file: !418, line: 944, type: !20)
!7539 = !DILocalVariable(name: "bitstatus", scope: !7536, file: !418, line: 946, type: !1359)
!7540 = !DILocation(line: 0, scope: !7536)
!7541 = !DILocation(line: 950, column: 14, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7536, file: !418, line: 950, column: 7)
!7543 = !DILocation(line: 950, column: 18, scope: !7542)
!7544 = !DILocation(line: 950, column: 29, scope: !7542)
!7545 = !DILocation(line: 958, column: 3, scope: !7536)
!7546 = distinct !DISubprogram(name: "SDIO_ClearITPendingBit", scope: !418, file: !418, line: 980, type: !831, scopeLine: 981, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !417, retainedNodes: !7547)
!7547 = !{!7548}
!7548 = !DILocalVariable(name: "SDIO_IT", arg: 1, scope: !7546, file: !418, line: 980, type: !20)
!7549 = !DILocation(line: 0, scope: !7546)
!7550 = !DILocation(line: 985, column: 13, scope: !7546)
!7551 = !DILocation(line: 986, column: 1, scope: !7546)
!7552 = distinct !DISubprogram(name: "CRYP_AES_ECB", scope: !448, file: !448, line: 98, type: !7553, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !447, retainedNodes: !7556)
!7553 = !DISubroutineType(types: !7554)
!7554 = !{!358, !60, !7555, !64, !7555, !20, !7555}
!7555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!7556 = !{!7557, !7558, !7559, !7560, !7561, !7562, !7563, !7572, !7584, !7585, !7586, !7587, !7588, !7589, !7590}
!7557 = !DILocalVariable(name: "Mode", arg: 1, scope: !7552, file: !448, line: 98, type: !60)
!7558 = !DILocalVariable(name: "Key", arg: 2, scope: !7552, file: !448, line: 98, type: !7555)
!7559 = !DILocalVariable(name: "Keysize", arg: 3, scope: !7552, file: !448, line: 98, type: !64)
!7560 = !DILocalVariable(name: "Input", arg: 4, scope: !7552, file: !448, line: 99, type: !7555)
!7561 = !DILocalVariable(name: "Ilength", arg: 5, scope: !7552, file: !448, line: 99, type: !20)
!7562 = !DILocalVariable(name: "Output", arg: 6, scope: !7552, file: !448, line: 99, type: !7555)
!7563 = !DILocalVariable(name: "AES_CRYP_InitStructure", scope: !7552, file: !448, line: 101, type: !7564)
!7564 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_InitTypeDef", file: !7565, line: 59, baseType: !7566)
!7565 = !DIFile(filename: "inc/peripherals/stm32f4xx_cryp.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!7566 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 47, size: 64, elements: !7567)
!7567 = !{!7568, !7569, !7570, !7571}
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_AlgoDir", scope: !7566, file: !7565, line: 49, baseType: !64, size: 16)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_AlgoMode", scope: !7566, file: !7565, line: 51, baseType: !64, size: 16, offset: 16)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_DataType", scope: !7566, file: !7565, line: 54, baseType: !64, size: 16, offset: 32)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_KeySize", scope: !7566, file: !7565, line: 56, baseType: !64, size: 16, offset: 48)
!7572 = !DILocalVariable(name: "AES_CRYP_KeyInitStructure", scope: !7552, file: !448, line: 102, type: !7573)
!7573 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_KeyInitTypeDef", file: !7565, line: 74, baseType: !7574)
!7574 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 64, size: 256, elements: !7575)
!7575 = !{!7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583}
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key0Left", scope: !7574, file: !7565, line: 66, baseType: !20, size: 32)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key0Right", scope: !7574, file: !7565, line: 67, baseType: !20, size: 32, offset: 32)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key1Left", scope: !7574, file: !7565, line: 68, baseType: !20, size: 32, offset: 64)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key1Right", scope: !7574, file: !7565, line: 69, baseType: !20, size: 32, offset: 96)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key2Left", scope: !7574, file: !7565, line: 70, baseType: !20, size: 32, offset: 128)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key2Right", scope: !7574, file: !7565, line: 71, baseType: !20, size: 32, offset: 160)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key3Left", scope: !7574, file: !7565, line: 72, baseType: !20, size: 32, offset: 192)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key3Right", scope: !7574, file: !7565, line: 73, baseType: !20, size: 32, offset: 224)
!7584 = !DILocalVariable(name: "counter", scope: !7552, file: !448, line: 103, type: !27)
!7585 = !DILocalVariable(name: "busystatus", scope: !7552, file: !448, line: 104, type: !20)
!7586 = !DILocalVariable(name: "status", scope: !7552, file: !448, line: 105, type: !358)
!7587 = !DILocalVariable(name: "keyaddr", scope: !7552, file: !448, line: 106, type: !20)
!7588 = !DILocalVariable(name: "inputaddr", scope: !7552, file: !448, line: 107, type: !20)
!7589 = !DILocalVariable(name: "outputaddr", scope: !7552, file: !448, line: 108, type: !20)
!7590 = !DILocalVariable(name: "i", scope: !7552, file: !448, line: 109, type: !20)
!7591 = !DILocation(line: 0, scope: !7552)
!7592 = !DILocation(line: 101, column: 3, scope: !7552)
!7593 = !DILocation(line: 101, column: 20, scope: !7552)
!7594 = !DILocation(line: 102, column: 3, scope: !7552)
!7595 = !DILocation(line: 102, column: 23, scope: !7552)
!7596 = !DILocation(line: 103, column: 3, scope: !7552)
!7597 = !DILocation(line: 103, column: 17, scope: !7552)
!7598 = !DILocation(line: 106, column: 25, scope: !7552)
!7599 = !DILocation(line: 107, column: 25, scope: !7552)
!7600 = !DILocation(line: 108, column: 25, scope: !7552)
!7601 = !DILocation(line: 112, column: 3, scope: !7552)
!7602 = !DILocation(line: 114, column: 3, scope: !7552)
!7603 = !DILocation(line: 117, column: 28, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7552, file: !448, line: 115, column: 3)
!7605 = !DILocation(line: 117, column: 41, scope: !7604)
!7606 = !{!7607, !2880, i64 6}
!7607 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !2880, i64 6}
!7608 = !DILocation(line: 118, column: 54, scope: !7604)
!7609 = !DILocation(line: 118, column: 53, scope: !7604)
!7610 = !DILocalVariable(name: "value", arg: 1, scope: !7611, file: !7612, line: 348, type: !20)
!7611 = distinct !DISubprogram(name: "__REV", scope: !7612, file: !7612, line: 348, type: !5897, scopeLine: 349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !447, retainedNodes: !7613)
!7612 = !DIFile(filename: "inc/core/core_cmInstr.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!7613 = !{!7610, !7614}
!7614 = !DILocalVariable(name: "result", scope: !7611, file: !7612, line: 350, type: !20)
!7615 = !DILocation(line: 0, scope: !7611, inlinedAt: !7616)
!7616 = distinct !DILocation(line: 118, column: 47, scope: !7604)
!7617 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7616)
!7618 = !{i32 693408}
!7619 = !DILocation(line: 118, column: 31, scope: !7604)
!7620 = !DILocation(line: 118, column: 45, scope: !7604)
!7621 = !{!7622, !840, i64 16}
!7622 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28}
!7623 = !DILocation(line: 119, column: 12, scope: !7604)
!7624 = !DILocation(line: 120, column: 54, scope: !7604)
!7625 = !DILocation(line: 120, column: 53, scope: !7604)
!7626 = !DILocation(line: 0, scope: !7611, inlinedAt: !7627)
!7627 = distinct !DILocation(line: 120, column: 47, scope: !7604)
!7628 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7627)
!7629 = !DILocation(line: 120, column: 31, scope: !7604)
!7630 = !DILocation(line: 120, column: 45, scope: !7604)
!7631 = !{!7622, !840, i64 20}
!7632 = !DILocation(line: 121, column: 12, scope: !7604)
!7633 = !DILocation(line: 122, column: 54, scope: !7604)
!7634 = !DILocation(line: 122, column: 53, scope: !7604)
!7635 = !DILocation(line: 0, scope: !7611, inlinedAt: !7636)
!7636 = distinct !DILocation(line: 122, column: 47, scope: !7604)
!7637 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7636)
!7638 = !DILocation(line: 122, column: 31, scope: !7604)
!7639 = !DILocation(line: 122, column: 45, scope: !7604)
!7640 = !{!7622, !840, i64 24}
!7641 = !DILocation(line: 123, column: 12, scope: !7604)
!7642 = !DILocation(line: 124, column: 54, scope: !7604)
!7643 = !DILocation(line: 124, column: 53, scope: !7604)
!7644 = !DILocation(line: 0, scope: !7611, inlinedAt: !7645)
!7645 = distinct !DILocation(line: 124, column: 47, scope: !7604)
!7646 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7645)
!7647 = !DILocation(line: 125, column: 5, scope: !7604)
!7648 = !DILocation(line: 127, column: 28, scope: !7604)
!7649 = !DILocation(line: 127, column: 42, scope: !7604)
!7650 = !DILocation(line: 128, column: 54, scope: !7604)
!7651 = !DILocation(line: 128, column: 53, scope: !7604)
!7652 = !DILocation(line: 0, scope: !7611, inlinedAt: !7653)
!7653 = distinct !DILocation(line: 128, column: 47, scope: !7604)
!7654 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7653)
!7655 = !DILocation(line: 128, column: 31, scope: !7604)
!7656 = !DILocation(line: 128, column: 45, scope: !7604)
!7657 = !{!7622, !840, i64 8}
!7658 = !DILocation(line: 129, column: 12, scope: !7604)
!7659 = !DILocation(line: 130, column: 54, scope: !7604)
!7660 = !DILocation(line: 130, column: 53, scope: !7604)
!7661 = !DILocation(line: 0, scope: !7611, inlinedAt: !7662)
!7662 = distinct !DILocation(line: 130, column: 47, scope: !7604)
!7663 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7662)
!7664 = !DILocation(line: 130, column: 31, scope: !7604)
!7665 = !DILocation(line: 130, column: 45, scope: !7604)
!7666 = !{!7622, !840, i64 12}
!7667 = !DILocation(line: 131, column: 12, scope: !7604)
!7668 = !DILocation(line: 132, column: 54, scope: !7604)
!7669 = !DILocation(line: 132, column: 53, scope: !7604)
!7670 = !DILocation(line: 0, scope: !7611, inlinedAt: !7671)
!7671 = distinct !DILocation(line: 132, column: 47, scope: !7604)
!7672 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7671)
!7673 = !DILocation(line: 132, column: 31, scope: !7604)
!7674 = !DILocation(line: 132, column: 45, scope: !7604)
!7675 = !DILocation(line: 133, column: 12, scope: !7604)
!7676 = !DILocation(line: 134, column: 54, scope: !7604)
!7677 = !DILocation(line: 134, column: 53, scope: !7604)
!7678 = !DILocation(line: 0, scope: !7611, inlinedAt: !7679)
!7679 = distinct !DILocation(line: 134, column: 47, scope: !7604)
!7680 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7679)
!7681 = !DILocation(line: 134, column: 31, scope: !7604)
!7682 = !DILocation(line: 134, column: 45, scope: !7604)
!7683 = !DILocation(line: 135, column: 12, scope: !7604)
!7684 = !DILocation(line: 136, column: 54, scope: !7604)
!7685 = !DILocation(line: 136, column: 53, scope: !7604)
!7686 = !DILocation(line: 0, scope: !7611, inlinedAt: !7687)
!7687 = distinct !DILocation(line: 136, column: 47, scope: !7604)
!7688 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7687)
!7689 = !DILocation(line: 136, column: 31, scope: !7604)
!7690 = !DILocation(line: 136, column: 45, scope: !7604)
!7691 = !DILocation(line: 137, column: 12, scope: !7604)
!7692 = !DILocation(line: 138, column: 54, scope: !7604)
!7693 = !DILocation(line: 138, column: 53, scope: !7604)
!7694 = !DILocation(line: 0, scope: !7611, inlinedAt: !7695)
!7695 = distinct !DILocation(line: 138, column: 47, scope: !7604)
!7696 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7695)
!7697 = !DILocation(line: 139, column: 5, scope: !7604)
!7698 = !DILocation(line: 141, column: 28, scope: !7604)
!7699 = !DILocation(line: 141, column: 42, scope: !7604)
!7700 = !DILocation(line: 142, column: 54, scope: !7604)
!7701 = !DILocation(line: 142, column: 53, scope: !7604)
!7702 = !DILocation(line: 0, scope: !7611, inlinedAt: !7703)
!7703 = distinct !DILocation(line: 142, column: 47, scope: !7604)
!7704 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7703)
!7705 = !DILocation(line: 142, column: 31, scope: !7604)
!7706 = !DILocation(line: 142, column: 45, scope: !7604)
!7707 = !{!7622, !840, i64 0}
!7708 = !DILocation(line: 143, column: 12, scope: !7604)
!7709 = !DILocation(line: 144, column: 54, scope: !7604)
!7710 = !DILocation(line: 144, column: 53, scope: !7604)
!7711 = !DILocation(line: 0, scope: !7611, inlinedAt: !7712)
!7712 = distinct !DILocation(line: 144, column: 47, scope: !7604)
!7713 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7712)
!7714 = !DILocation(line: 144, column: 31, scope: !7604)
!7715 = !DILocation(line: 144, column: 45, scope: !7604)
!7716 = !{!7622, !840, i64 4}
!7717 = !DILocation(line: 145, column: 12, scope: !7604)
!7718 = !DILocation(line: 146, column: 54, scope: !7604)
!7719 = !DILocation(line: 146, column: 53, scope: !7604)
!7720 = !DILocation(line: 0, scope: !7611, inlinedAt: !7721)
!7721 = distinct !DILocation(line: 146, column: 47, scope: !7604)
!7722 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7721)
!7723 = !DILocation(line: 146, column: 31, scope: !7604)
!7724 = !DILocation(line: 146, column: 45, scope: !7604)
!7725 = !DILocation(line: 147, column: 12, scope: !7604)
!7726 = !DILocation(line: 148, column: 54, scope: !7604)
!7727 = !DILocation(line: 148, column: 53, scope: !7604)
!7728 = !DILocation(line: 0, scope: !7611, inlinedAt: !7729)
!7729 = distinct !DILocation(line: 148, column: 47, scope: !7604)
!7730 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7729)
!7731 = !DILocation(line: 148, column: 31, scope: !7604)
!7732 = !DILocation(line: 148, column: 45, scope: !7604)
!7733 = !DILocation(line: 149, column: 12, scope: !7604)
!7734 = !DILocation(line: 150, column: 54, scope: !7604)
!7735 = !DILocation(line: 150, column: 53, scope: !7604)
!7736 = !DILocation(line: 0, scope: !7611, inlinedAt: !7737)
!7737 = distinct !DILocation(line: 150, column: 47, scope: !7604)
!7738 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7737)
!7739 = !DILocation(line: 150, column: 31, scope: !7604)
!7740 = !DILocation(line: 150, column: 45, scope: !7604)
!7741 = !DILocation(line: 151, column: 12, scope: !7604)
!7742 = !DILocation(line: 152, column: 54, scope: !7604)
!7743 = !DILocation(line: 152, column: 53, scope: !7604)
!7744 = !DILocation(line: 0, scope: !7611, inlinedAt: !7745)
!7745 = distinct !DILocation(line: 152, column: 47, scope: !7604)
!7746 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7745)
!7747 = !DILocation(line: 152, column: 31, scope: !7604)
!7748 = !DILocation(line: 152, column: 45, scope: !7604)
!7749 = !DILocation(line: 153, column: 12, scope: !7604)
!7750 = !DILocation(line: 154, column: 54, scope: !7604)
!7751 = !DILocation(line: 154, column: 53, scope: !7604)
!7752 = !DILocation(line: 0, scope: !7611, inlinedAt: !7753)
!7753 = distinct !DILocation(line: 154, column: 47, scope: !7604)
!7754 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7753)
!7755 = !DILocation(line: 154, column: 31, scope: !7604)
!7756 = !DILocation(line: 154, column: 45, scope: !7604)
!7757 = !DILocation(line: 155, column: 12, scope: !7604)
!7758 = !DILocation(line: 156, column: 54, scope: !7604)
!7759 = !DILocation(line: 156, column: 53, scope: !7604)
!7760 = !DILocation(line: 0, scope: !7611, inlinedAt: !7761)
!7761 = distinct !DILocation(line: 156, column: 47, scope: !7604)
!7762 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7761)
!7763 = !DILocation(line: 157, column: 5, scope: !7604)
!7764 = !DILocation(line: 0, scope: !7604)
!7765 = !{!7622, !840, i64 28}
!7766 = !DILocation(line: 163, column: 11, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7552, file: !448, line: 163, column: 6)
!7768 = !DILocation(line: 163, column: 6, scope: !7552)
!7769 = !DILocation(line: 166, column: 5, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7767, file: !448, line: 164, column: 3)
!7771 = !DILocation(line: 169, column: 28, scope: !7770)
!7772 = !DILocation(line: 169, column: 41, scope: !7770)
!7773 = !{!7607, !2880, i64 0}
!7774 = !DILocation(line: 170, column: 28, scope: !7770)
!7775 = !DILocation(line: 170, column: 42, scope: !7770)
!7776 = !{!7607, !2880, i64 2}
!7777 = !DILocation(line: 171, column: 28, scope: !7770)
!7778 = !DILocation(line: 171, column: 42, scope: !7770)
!7779 = !{!7607, !2880, i64 4}
!7780 = !DILocation(line: 172, column: 5, scope: !7770)
!7781 = !DILocation(line: 175, column: 5, scope: !7770)
!7782 = !DILocation(line: 178, column: 5, scope: !7770)
!7783 = !DILocation(line: 181, column: 5, scope: !7770)
!7784 = !DILocation(line: 183, column: 20, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7770, file: !448, line: 182, column: 5)
!7786 = !DILocation(line: 184, column: 14, scope: !7785)
!7787 = !DILocation(line: 185, column: 14, scope: !7770)
!7788 = !DILocation(line: 185, column: 22, scope: !7770)
!7789 = !DILocation(line: 185, column: 42, scope: !7770)
!7790 = !DILocation(line: 185, column: 5, scope: !7785)
!7791 = distinct !{!7791, !7783, !7792}
!7792 = !DILocation(line: 185, column: 66, scope: !7770)
!7793 = !DILocation(line: 187, column: 9, scope: !7770)
!7794 = !DILocation(line: 194, column: 43, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7796, file: !448, line: 192, column: 5)
!7796 = distinct !DILexicalBlock(scope: !7770, file: !448, line: 187, column: 9)
!7797 = !DILocation(line: 201, column: 5, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7767, file: !448, line: 199, column: 3)
!7799 = !DILocation(line: 204, column: 28, scope: !7798)
!7800 = !DILocation(line: 204, column: 42, scope: !7798)
!7801 = !DILocation(line: 207, column: 26, scope: !7552)
!7802 = !DILocation(line: 207, column: 40, scope: !7552)
!7803 = !DILocation(line: 208, column: 26, scope: !7552)
!7804 = !DILocation(line: 208, column: 40, scope: !7552)
!7805 = !DILocation(line: 209, column: 3, scope: !7552)
!7806 = !DILocation(line: 212, column: 3, scope: !7552)
!7807 = !DILocation(line: 215, column: 3, scope: !7552)
!7808 = !DILocation(line: 217, column: 15, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !448, line: 217, column: 3)
!7810 = distinct !DILexicalBlock(scope: !7552, file: !448, line: 217, column: 3)
!7811 = !DILocation(line: 217, column: 25, scope: !7809)
!7812 = !DILocation(line: 217, column: 3, scope: !7810)
!7813 = !DILocation(line: 221, column: 18, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7809, file: !448, line: 218, column: 3)
!7815 = !DILocation(line: 221, column: 17, scope: !7814)
!7816 = !DILocation(line: 221, column: 5, scope: !7814)
!7817 = !DILocation(line: 222, column: 14, scope: !7814)
!7818 = !DILocation(line: 223, column: 18, scope: !7814)
!7819 = !DILocation(line: 223, column: 17, scope: !7814)
!7820 = !DILocation(line: 223, column: 5, scope: !7814)
!7821 = !DILocation(line: 224, column: 14, scope: !7814)
!7822 = !DILocation(line: 225, column: 18, scope: !7814)
!7823 = !DILocation(line: 225, column: 17, scope: !7814)
!7824 = !DILocation(line: 225, column: 5, scope: !7814)
!7825 = !DILocation(line: 226, column: 14, scope: !7814)
!7826 = !DILocation(line: 227, column: 18, scope: !7814)
!7827 = !DILocation(line: 227, column: 17, scope: !7814)
!7828 = !DILocation(line: 227, column: 5, scope: !7814)
!7829 = !DILocation(line: 231, column: 13, scope: !7814)
!7830 = !DILocation(line: 232, column: 5, scope: !7814)
!7831 = !DILocation(line: 234, column: 20, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7814, file: !448, line: 233, column: 5)
!7833 = !DILocation(line: 235, column: 14, scope: !7832)
!7834 = !DILocation(line: 236, column: 14, scope: !7814)
!7835 = !DILocation(line: 236, column: 22, scope: !7814)
!7836 = !DILocation(line: 236, column: 42, scope: !7814)
!7837 = !DILocation(line: 236, column: 5, scope: !7832)
!7838 = distinct !{!7838, !7830, !7839}
!7839 = !DILocation(line: 236, column: 66, scope: !7814)
!7840 = !DILocation(line: 238, column: 9, scope: !7814)
!7841 = !DILocation(line: 228, column: 14, scope: !7814)
!7842 = !DILocation(line: 246, column: 34, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !448, line: 243, column: 5)
!7844 = distinct !DILexicalBlock(scope: !7814, file: !448, line: 238, column: 9)
!7845 = !DILocation(line: 246, column: 8, scope: !7843)
!7846 = !DILocation(line: 246, column: 32, scope: !7843)
!7847 = !DILocation(line: 247, column: 17, scope: !7843)
!7848 = !DILocation(line: 248, column: 34, scope: !7843)
!7849 = !DILocation(line: 248, column: 8, scope: !7843)
!7850 = !DILocation(line: 248, column: 32, scope: !7843)
!7851 = !DILocation(line: 249, column: 17, scope: !7843)
!7852 = !DILocation(line: 250, column: 34, scope: !7843)
!7853 = !DILocation(line: 250, column: 8, scope: !7843)
!7854 = !DILocation(line: 250, column: 32, scope: !7843)
!7855 = !DILocation(line: 251, column: 17, scope: !7843)
!7856 = !DILocation(line: 252, column: 34, scope: !7843)
!7857 = !DILocation(line: 252, column: 8, scope: !7843)
!7858 = !DILocation(line: 252, column: 32, scope: !7843)
!7859 = !DILocation(line: 253, column: 17, scope: !7843)
!7860 = !DILocation(line: 217, column: 49, scope: !7809)
!7861 = distinct !{!7861, !7812, !7862}
!7862 = !DILocation(line: 255, column: 3, scope: !7810)
!7863 = !DILocation(line: 258, column: 3, scope: !7552)
!7864 = !DILocation(line: 261, column: 1, scope: !7552)
!7865 = !DILocation(line: 260, column: 3, scope: !7552)
!7866 = distinct !DISubprogram(name: "CRYP_AES_CBC", scope: !448, file: !448, line: 279, type: !7867, scopeLine: 282, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !447, retainedNodes: !7869)
!7867 = !DISubroutineType(types: !7868)
!7868 = !{!358, !60, !7555, !7555, !64, !7555, !20, !7555}
!7869 = !{!7870, !7871, !7872, !7873, !7874, !7875, !7876, !7877, !7878, !7879, !7887, !7888, !7889, !7890, !7891, !7892, !7893, !7894}
!7870 = !DILocalVariable(name: "Mode", arg: 1, scope: !7866, file: !448, line: 279, type: !60)
!7871 = !DILocalVariable(name: "InitVectors", arg: 2, scope: !7866, file: !448, line: 279, type: !7555)
!7872 = !DILocalVariable(name: "Key", arg: 3, scope: !7866, file: !448, line: 279, type: !7555)
!7873 = !DILocalVariable(name: "Keysize", arg: 4, scope: !7866, file: !448, line: 280, type: !64)
!7874 = !DILocalVariable(name: "Input", arg: 5, scope: !7866, file: !448, line: 280, type: !7555)
!7875 = !DILocalVariable(name: "Ilength", arg: 6, scope: !7866, file: !448, line: 280, type: !20)
!7876 = !DILocalVariable(name: "Output", arg: 7, scope: !7866, file: !448, line: 281, type: !7555)
!7877 = !DILocalVariable(name: "AES_CRYP_InitStructure", scope: !7866, file: !448, line: 283, type: !7564)
!7878 = !DILocalVariable(name: "AES_CRYP_KeyInitStructure", scope: !7866, file: !448, line: 284, type: !7573)
!7879 = !DILocalVariable(name: "AES_CRYP_IVInitStructure", scope: !7866, file: !448, line: 285, type: !7880)
!7880 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_IVInitTypeDef", file: !7565, line: 84, baseType: !7881)
!7881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 78, size: 128, elements: !7882)
!7882 = !{!7883, !7884, !7885, !7886}
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0Left", scope: !7881, file: !7565, line: 80, baseType: !20, size: 32)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0Right", scope: !7881, file: !7565, line: 81, baseType: !20, size: 32, offset: 32)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1Left", scope: !7881, file: !7565, line: 82, baseType: !20, size: 32, offset: 64)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1Right", scope: !7881, file: !7565, line: 83, baseType: !20, size: 32, offset: 96)
!7887 = !DILocalVariable(name: "counter", scope: !7866, file: !448, line: 286, type: !27)
!7888 = !DILocalVariable(name: "busystatus", scope: !7866, file: !448, line: 287, type: !20)
!7889 = !DILocalVariable(name: "status", scope: !7866, file: !448, line: 288, type: !358)
!7890 = !DILocalVariable(name: "keyaddr", scope: !7866, file: !448, line: 289, type: !20)
!7891 = !DILocalVariable(name: "inputaddr", scope: !7866, file: !448, line: 290, type: !20)
!7892 = !DILocalVariable(name: "outputaddr", scope: !7866, file: !448, line: 291, type: !20)
!7893 = !DILocalVariable(name: "ivaddr", scope: !7866, file: !448, line: 292, type: !20)
!7894 = !DILocalVariable(name: "i", scope: !7866, file: !448, line: 293, type: !20)
!7895 = !DILocation(line: 0, scope: !7866)
!7896 = !DILocation(line: 283, column: 3, scope: !7866)
!7897 = !DILocation(line: 283, column: 20, scope: !7866)
!7898 = !DILocation(line: 284, column: 3, scope: !7866)
!7899 = !DILocation(line: 284, column: 23, scope: !7866)
!7900 = !DILocation(line: 285, column: 3, scope: !7866)
!7901 = !DILocation(line: 285, column: 22, scope: !7866)
!7902 = !DILocation(line: 286, column: 3, scope: !7866)
!7903 = !DILocation(line: 286, column: 17, scope: !7866)
!7904 = !DILocation(line: 289, column: 25, scope: !7866)
!7905 = !DILocation(line: 290, column: 25, scope: !7866)
!7906 = !DILocation(line: 291, column: 25, scope: !7866)
!7907 = !DILocation(line: 292, column: 25, scope: !7866)
!7908 = !DILocation(line: 296, column: 3, scope: !7866)
!7909 = !DILocation(line: 298, column: 3, scope: !7866)
!7910 = !DILocation(line: 301, column: 28, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7866, file: !448, line: 299, column: 3)
!7912 = !DILocation(line: 301, column: 41, scope: !7911)
!7913 = !DILocation(line: 302, column: 54, scope: !7911)
!7914 = !DILocation(line: 302, column: 53, scope: !7911)
!7915 = !DILocation(line: 0, scope: !7611, inlinedAt: !7916)
!7916 = distinct !DILocation(line: 302, column: 47, scope: !7911)
!7917 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7916)
!7918 = !DILocation(line: 302, column: 31, scope: !7911)
!7919 = !DILocation(line: 302, column: 45, scope: !7911)
!7920 = !DILocation(line: 303, column: 12, scope: !7911)
!7921 = !DILocation(line: 304, column: 54, scope: !7911)
!7922 = !DILocation(line: 304, column: 53, scope: !7911)
!7923 = !DILocation(line: 0, scope: !7611, inlinedAt: !7924)
!7924 = distinct !DILocation(line: 304, column: 47, scope: !7911)
!7925 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7924)
!7926 = !DILocation(line: 304, column: 31, scope: !7911)
!7927 = !DILocation(line: 304, column: 45, scope: !7911)
!7928 = !DILocation(line: 305, column: 12, scope: !7911)
!7929 = !DILocation(line: 306, column: 54, scope: !7911)
!7930 = !DILocation(line: 306, column: 53, scope: !7911)
!7931 = !DILocation(line: 0, scope: !7611, inlinedAt: !7932)
!7932 = distinct !DILocation(line: 306, column: 47, scope: !7911)
!7933 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7932)
!7934 = !DILocation(line: 306, column: 31, scope: !7911)
!7935 = !DILocation(line: 306, column: 45, scope: !7911)
!7936 = !DILocation(line: 307, column: 12, scope: !7911)
!7937 = !DILocation(line: 308, column: 54, scope: !7911)
!7938 = !DILocation(line: 308, column: 53, scope: !7911)
!7939 = !DILocation(line: 0, scope: !7611, inlinedAt: !7940)
!7940 = distinct !DILocation(line: 308, column: 47, scope: !7911)
!7941 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7940)
!7942 = !DILocation(line: 309, column: 5, scope: !7911)
!7943 = !DILocation(line: 311, column: 28, scope: !7911)
!7944 = !DILocation(line: 311, column: 42, scope: !7911)
!7945 = !DILocation(line: 312, column: 54, scope: !7911)
!7946 = !DILocation(line: 312, column: 53, scope: !7911)
!7947 = !DILocation(line: 0, scope: !7611, inlinedAt: !7948)
!7948 = distinct !DILocation(line: 312, column: 47, scope: !7911)
!7949 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7948)
!7950 = !DILocation(line: 312, column: 31, scope: !7911)
!7951 = !DILocation(line: 312, column: 45, scope: !7911)
!7952 = !DILocation(line: 313, column: 12, scope: !7911)
!7953 = !DILocation(line: 314, column: 54, scope: !7911)
!7954 = !DILocation(line: 314, column: 53, scope: !7911)
!7955 = !DILocation(line: 0, scope: !7611, inlinedAt: !7956)
!7956 = distinct !DILocation(line: 314, column: 47, scope: !7911)
!7957 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7956)
!7958 = !DILocation(line: 314, column: 31, scope: !7911)
!7959 = !DILocation(line: 314, column: 45, scope: !7911)
!7960 = !DILocation(line: 315, column: 12, scope: !7911)
!7961 = !DILocation(line: 316, column: 54, scope: !7911)
!7962 = !DILocation(line: 316, column: 53, scope: !7911)
!7963 = !DILocation(line: 0, scope: !7611, inlinedAt: !7964)
!7964 = distinct !DILocation(line: 316, column: 47, scope: !7911)
!7965 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7964)
!7966 = !DILocation(line: 316, column: 31, scope: !7911)
!7967 = !DILocation(line: 316, column: 45, scope: !7911)
!7968 = !DILocation(line: 317, column: 12, scope: !7911)
!7969 = !DILocation(line: 318, column: 54, scope: !7911)
!7970 = !DILocation(line: 318, column: 53, scope: !7911)
!7971 = !DILocation(line: 0, scope: !7611, inlinedAt: !7972)
!7972 = distinct !DILocation(line: 318, column: 47, scope: !7911)
!7973 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7972)
!7974 = !DILocation(line: 318, column: 31, scope: !7911)
!7975 = !DILocation(line: 318, column: 45, scope: !7911)
!7976 = !DILocation(line: 319, column: 12, scope: !7911)
!7977 = !DILocation(line: 320, column: 54, scope: !7911)
!7978 = !DILocation(line: 320, column: 53, scope: !7911)
!7979 = !DILocation(line: 0, scope: !7611, inlinedAt: !7980)
!7980 = distinct !DILocation(line: 320, column: 47, scope: !7911)
!7981 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7980)
!7982 = !DILocation(line: 320, column: 31, scope: !7911)
!7983 = !DILocation(line: 320, column: 45, scope: !7911)
!7984 = !DILocation(line: 321, column: 12, scope: !7911)
!7985 = !DILocation(line: 322, column: 54, scope: !7911)
!7986 = !DILocation(line: 322, column: 53, scope: !7911)
!7987 = !DILocation(line: 0, scope: !7611, inlinedAt: !7988)
!7988 = distinct !DILocation(line: 322, column: 47, scope: !7911)
!7989 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7988)
!7990 = !DILocation(line: 323, column: 5, scope: !7911)
!7991 = !DILocation(line: 325, column: 28, scope: !7911)
!7992 = !DILocation(line: 325, column: 42, scope: !7911)
!7993 = !DILocation(line: 326, column: 54, scope: !7911)
!7994 = !DILocation(line: 326, column: 53, scope: !7911)
!7995 = !DILocation(line: 0, scope: !7611, inlinedAt: !7996)
!7996 = distinct !DILocation(line: 326, column: 47, scope: !7911)
!7997 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !7996)
!7998 = !DILocation(line: 326, column: 31, scope: !7911)
!7999 = !DILocation(line: 326, column: 45, scope: !7911)
!8000 = !DILocation(line: 327, column: 12, scope: !7911)
!8001 = !DILocation(line: 328, column: 54, scope: !7911)
!8002 = !DILocation(line: 328, column: 53, scope: !7911)
!8003 = !DILocation(line: 0, scope: !7611, inlinedAt: !8004)
!8004 = distinct !DILocation(line: 328, column: 47, scope: !7911)
!8005 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8004)
!8006 = !DILocation(line: 328, column: 31, scope: !7911)
!8007 = !DILocation(line: 328, column: 45, scope: !7911)
!8008 = !DILocation(line: 329, column: 12, scope: !7911)
!8009 = !DILocation(line: 330, column: 54, scope: !7911)
!8010 = !DILocation(line: 330, column: 53, scope: !7911)
!8011 = !DILocation(line: 0, scope: !7611, inlinedAt: !8012)
!8012 = distinct !DILocation(line: 330, column: 47, scope: !7911)
!8013 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8012)
!8014 = !DILocation(line: 330, column: 31, scope: !7911)
!8015 = !DILocation(line: 330, column: 45, scope: !7911)
!8016 = !DILocation(line: 331, column: 12, scope: !7911)
!8017 = !DILocation(line: 332, column: 54, scope: !7911)
!8018 = !DILocation(line: 332, column: 53, scope: !7911)
!8019 = !DILocation(line: 0, scope: !7611, inlinedAt: !8020)
!8020 = distinct !DILocation(line: 332, column: 47, scope: !7911)
!8021 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8020)
!8022 = !DILocation(line: 332, column: 31, scope: !7911)
!8023 = !DILocation(line: 332, column: 45, scope: !7911)
!8024 = !DILocation(line: 333, column: 12, scope: !7911)
!8025 = !DILocation(line: 334, column: 54, scope: !7911)
!8026 = !DILocation(line: 334, column: 53, scope: !7911)
!8027 = !DILocation(line: 0, scope: !7611, inlinedAt: !8028)
!8028 = distinct !DILocation(line: 334, column: 47, scope: !7911)
!8029 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8028)
!8030 = !DILocation(line: 334, column: 31, scope: !7911)
!8031 = !DILocation(line: 334, column: 45, scope: !7911)
!8032 = !DILocation(line: 335, column: 12, scope: !7911)
!8033 = !DILocation(line: 336, column: 54, scope: !7911)
!8034 = !DILocation(line: 336, column: 53, scope: !7911)
!8035 = !DILocation(line: 0, scope: !7611, inlinedAt: !8036)
!8036 = distinct !DILocation(line: 336, column: 47, scope: !7911)
!8037 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8036)
!8038 = !DILocation(line: 336, column: 31, scope: !7911)
!8039 = !DILocation(line: 336, column: 45, scope: !7911)
!8040 = !DILocation(line: 337, column: 12, scope: !7911)
!8041 = !DILocation(line: 338, column: 54, scope: !7911)
!8042 = !DILocation(line: 338, column: 53, scope: !7911)
!8043 = !DILocation(line: 0, scope: !7611, inlinedAt: !8044)
!8044 = distinct !DILocation(line: 338, column: 47, scope: !7911)
!8045 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8044)
!8046 = !DILocation(line: 338, column: 31, scope: !7911)
!8047 = !DILocation(line: 338, column: 45, scope: !7911)
!8048 = !DILocation(line: 339, column: 12, scope: !7911)
!8049 = !DILocation(line: 340, column: 54, scope: !7911)
!8050 = !DILocation(line: 340, column: 53, scope: !7911)
!8051 = !DILocation(line: 0, scope: !7611, inlinedAt: !8052)
!8052 = distinct !DILocation(line: 340, column: 47, scope: !7911)
!8053 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8052)
!8054 = !DILocation(line: 341, column: 5, scope: !7911)
!8055 = !DILocation(line: 0, scope: !7911)
!8056 = !DILocation(line: 347, column: 50, scope: !7866)
!8057 = !DILocation(line: 347, column: 49, scope: !7866)
!8058 = !DILocation(line: 0, scope: !7611, inlinedAt: !8059)
!8059 = distinct !DILocation(line: 347, column: 43, scope: !7866)
!8060 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8059)
!8061 = !DILocation(line: 347, column: 28, scope: !7866)
!8062 = !DILocation(line: 347, column: 41, scope: !7866)
!8063 = !DILocation(line: 348, column: 9, scope: !7866)
!8064 = !DILocation(line: 349, column: 50, scope: !7866)
!8065 = !DILocation(line: 349, column: 49, scope: !7866)
!8066 = !DILocation(line: 0, scope: !7611, inlinedAt: !8067)
!8067 = distinct !DILocation(line: 349, column: 43, scope: !7866)
!8068 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8067)
!8069 = !DILocation(line: 349, column: 28, scope: !7866)
!8070 = !DILocation(line: 349, column: 41, scope: !7866)
!8071 = !DILocation(line: 350, column: 9, scope: !7866)
!8072 = !DILocation(line: 351, column: 50, scope: !7866)
!8073 = !DILocation(line: 351, column: 49, scope: !7866)
!8074 = !DILocation(line: 0, scope: !7611, inlinedAt: !8075)
!8075 = distinct !DILocation(line: 351, column: 43, scope: !7866)
!8076 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8075)
!8077 = !DILocation(line: 351, column: 28, scope: !7866)
!8078 = !DILocation(line: 351, column: 41, scope: !7866)
!8079 = !DILocation(line: 352, column: 9, scope: !7866)
!8080 = !DILocation(line: 353, column: 50, scope: !7866)
!8081 = !DILocation(line: 353, column: 49, scope: !7866)
!8082 = !DILocation(line: 0, scope: !7611, inlinedAt: !8083)
!8083 = distinct !DILocation(line: 353, column: 43, scope: !7866)
!8084 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8083)
!8085 = !DILocation(line: 353, column: 28, scope: !7866)
!8086 = !DILocation(line: 353, column: 41, scope: !7866)
!8087 = !DILocation(line: 357, column: 11, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !7866, file: !448, line: 357, column: 6)
!8089 = !DILocation(line: 357, column: 6, scope: !7866)
!8090 = !DILocation(line: 360, column: 5, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8088, file: !448, line: 358, column: 3)
!8092 = !DILocation(line: 363, column: 28, scope: !8091)
!8093 = !DILocation(line: 363, column: 41, scope: !8091)
!8094 = !DILocation(line: 364, column: 28, scope: !8091)
!8095 = !DILocation(line: 364, column: 42, scope: !8091)
!8096 = !DILocation(line: 365, column: 28, scope: !8091)
!8097 = !DILocation(line: 365, column: 42, scope: !8091)
!8098 = !DILocation(line: 367, column: 5, scope: !8091)
!8099 = !DILocation(line: 370, column: 5, scope: !8091)
!8100 = !DILocation(line: 373, column: 5, scope: !8091)
!8101 = !DILocation(line: 376, column: 5, scope: !8091)
!8102 = !DILocation(line: 378, column: 20, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8091, file: !448, line: 377, column: 5)
!8104 = !DILocation(line: 379, column: 14, scope: !8103)
!8105 = !DILocation(line: 380, column: 14, scope: !8091)
!8106 = !DILocation(line: 380, column: 22, scope: !8091)
!8107 = !DILocation(line: 380, column: 42, scope: !8091)
!8108 = !DILocation(line: 380, column: 5, scope: !8103)
!8109 = distinct !{!8109, !8101, !8110}
!8110 = !DILocation(line: 380, column: 66, scope: !8091)
!8111 = !DILocation(line: 382, column: 9, scope: !8091)
!8112 = !DILocation(line: 389, column: 43, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8114, file: !448, line: 387, column: 5)
!8114 = distinct !DILexicalBlock(scope: !8091, file: !448, line: 382, column: 9)
!8115 = !DILocation(line: 395, column: 5, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8088, file: !448, line: 394, column: 3)
!8117 = !DILocation(line: 398, column: 28, scope: !8116)
!8118 = !DILocation(line: 398, column: 42, scope: !8116)
!8119 = !DILocation(line: 400, column: 26, scope: !7866)
!8120 = !DILocation(line: 400, column: 40, scope: !7866)
!8121 = !DILocation(line: 401, column: 26, scope: !7866)
!8122 = !DILocation(line: 401, column: 40, scope: !7866)
!8123 = !DILocation(line: 402, column: 3, scope: !7866)
!8124 = !DILocation(line: 405, column: 3, scope: !7866)
!8125 = !DILocation(line: 408, column: 3, scope: !7866)
!8126 = !DILocation(line: 411, column: 3, scope: !7866)
!8127 = !DILocation(line: 414, column: 15, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !448, line: 414, column: 3)
!8129 = distinct !DILexicalBlock(scope: !7866, file: !448, line: 414, column: 3)
!8130 = !DILocation(line: 414, column: 25, scope: !8128)
!8131 = !DILocation(line: 414, column: 3, scope: !8129)
!8132 = !DILocation(line: 418, column: 18, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8128, file: !448, line: 415, column: 3)
!8134 = !DILocation(line: 418, column: 17, scope: !8133)
!8135 = !DILocation(line: 418, column: 5, scope: !8133)
!8136 = !DILocation(line: 419, column: 14, scope: !8133)
!8137 = !DILocation(line: 420, column: 18, scope: !8133)
!8138 = !DILocation(line: 420, column: 17, scope: !8133)
!8139 = !DILocation(line: 420, column: 5, scope: !8133)
!8140 = !DILocation(line: 421, column: 14, scope: !8133)
!8141 = !DILocation(line: 422, column: 18, scope: !8133)
!8142 = !DILocation(line: 422, column: 17, scope: !8133)
!8143 = !DILocation(line: 422, column: 5, scope: !8133)
!8144 = !DILocation(line: 423, column: 14, scope: !8133)
!8145 = !DILocation(line: 424, column: 18, scope: !8133)
!8146 = !DILocation(line: 424, column: 17, scope: !8133)
!8147 = !DILocation(line: 424, column: 5, scope: !8133)
!8148 = !DILocation(line: 427, column: 13, scope: !8133)
!8149 = !DILocation(line: 428, column: 5, scope: !8133)
!8150 = !DILocation(line: 430, column: 20, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8133, file: !448, line: 429, column: 5)
!8152 = !DILocation(line: 431, column: 14, scope: !8151)
!8153 = !DILocation(line: 432, column: 14, scope: !8133)
!8154 = !DILocation(line: 432, column: 22, scope: !8133)
!8155 = !DILocation(line: 432, column: 42, scope: !8133)
!8156 = !DILocation(line: 432, column: 5, scope: !8151)
!8157 = distinct !{!8157, !8149, !8158}
!8158 = !DILocation(line: 432, column: 66, scope: !8133)
!8159 = !DILocation(line: 434, column: 9, scope: !8133)
!8160 = !DILocation(line: 425, column: 14, scope: !8133)
!8161 = !DILocation(line: 442, column: 34, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !448, line: 439, column: 5)
!8163 = distinct !DILexicalBlock(scope: !8133, file: !448, line: 434, column: 9)
!8164 = !DILocation(line: 442, column: 8, scope: !8162)
!8165 = !DILocation(line: 442, column: 32, scope: !8162)
!8166 = !DILocation(line: 443, column: 17, scope: !8162)
!8167 = !DILocation(line: 444, column: 34, scope: !8162)
!8168 = !DILocation(line: 444, column: 8, scope: !8162)
!8169 = !DILocation(line: 444, column: 32, scope: !8162)
!8170 = !DILocation(line: 445, column: 17, scope: !8162)
!8171 = !DILocation(line: 446, column: 34, scope: !8162)
!8172 = !DILocation(line: 446, column: 8, scope: !8162)
!8173 = !DILocation(line: 446, column: 32, scope: !8162)
!8174 = !DILocation(line: 447, column: 17, scope: !8162)
!8175 = !DILocation(line: 448, column: 34, scope: !8162)
!8176 = !DILocation(line: 448, column: 8, scope: !8162)
!8177 = !DILocation(line: 448, column: 32, scope: !8162)
!8178 = !DILocation(line: 449, column: 17, scope: !8162)
!8179 = !DILocation(line: 414, column: 49, scope: !8128)
!8180 = distinct !{!8180, !8131, !8181}
!8181 = !DILocation(line: 451, column: 3, scope: !8129)
!8182 = !DILocation(line: 454, column: 3, scope: !7866)
!8183 = !DILocation(line: 457, column: 1, scope: !7866)
!8184 = !DILocation(line: 456, column: 3, scope: !7866)
!8185 = distinct !DISubprogram(name: "CRYP_AES_CTR", scope: !448, file: !448, line: 475, type: !7867, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !447, retainedNodes: !8186)
!8186 = !{!8187, !8188, !8189, !8190, !8191, !8192, !8193, !8194, !8195, !8196, !8197, !8198, !8199, !8200, !8201, !8202, !8203, !8204}
!8187 = !DILocalVariable(name: "Mode", arg: 1, scope: !8185, file: !448, line: 475, type: !60)
!8188 = !DILocalVariable(name: "InitVectors", arg: 2, scope: !8185, file: !448, line: 475, type: !7555)
!8189 = !DILocalVariable(name: "Key", arg: 3, scope: !8185, file: !448, line: 475, type: !7555)
!8190 = !DILocalVariable(name: "Keysize", arg: 4, scope: !8185, file: !448, line: 476, type: !64)
!8191 = !DILocalVariable(name: "Input", arg: 5, scope: !8185, file: !448, line: 476, type: !7555)
!8192 = !DILocalVariable(name: "Ilength", arg: 6, scope: !8185, file: !448, line: 476, type: !20)
!8193 = !DILocalVariable(name: "Output", arg: 7, scope: !8185, file: !448, line: 477, type: !7555)
!8194 = !DILocalVariable(name: "AES_CRYP_InitStructure", scope: !8185, file: !448, line: 479, type: !7564)
!8195 = !DILocalVariable(name: "AES_CRYP_KeyInitStructure", scope: !8185, file: !448, line: 480, type: !7573)
!8196 = !DILocalVariable(name: "AES_CRYP_IVInitStructure", scope: !8185, file: !448, line: 481, type: !7880)
!8197 = !DILocalVariable(name: "counter", scope: !8185, file: !448, line: 482, type: !27)
!8198 = !DILocalVariable(name: "busystatus", scope: !8185, file: !448, line: 483, type: !20)
!8199 = !DILocalVariable(name: "status", scope: !8185, file: !448, line: 484, type: !358)
!8200 = !DILocalVariable(name: "keyaddr", scope: !8185, file: !448, line: 485, type: !20)
!8201 = !DILocalVariable(name: "inputaddr", scope: !8185, file: !448, line: 486, type: !20)
!8202 = !DILocalVariable(name: "outputaddr", scope: !8185, file: !448, line: 487, type: !20)
!8203 = !DILocalVariable(name: "ivaddr", scope: !8185, file: !448, line: 488, type: !20)
!8204 = !DILocalVariable(name: "i", scope: !8185, file: !448, line: 489, type: !20)
!8205 = !DILocation(line: 0, scope: !8185)
!8206 = !DILocation(line: 479, column: 3, scope: !8185)
!8207 = !DILocation(line: 479, column: 20, scope: !8185)
!8208 = !DILocation(line: 480, column: 3, scope: !8185)
!8209 = !DILocation(line: 480, column: 23, scope: !8185)
!8210 = !DILocation(line: 481, column: 3, scope: !8185)
!8211 = !DILocation(line: 481, column: 22, scope: !8185)
!8212 = !DILocation(line: 482, column: 3, scope: !8185)
!8213 = !DILocation(line: 482, column: 17, scope: !8185)
!8214 = !DILocation(line: 485, column: 25, scope: !8185)
!8215 = !DILocation(line: 486, column: 25, scope: !8185)
!8216 = !DILocation(line: 487, column: 25, scope: !8185)
!8217 = !DILocation(line: 488, column: 25, scope: !8185)
!8218 = !DILocation(line: 492, column: 3, scope: !8185)
!8219 = !DILocation(line: 494, column: 3, scope: !8185)
!8220 = !DILocation(line: 497, column: 28, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8185, file: !448, line: 495, column: 3)
!8222 = !DILocation(line: 497, column: 41, scope: !8221)
!8223 = !DILocation(line: 498, column: 54, scope: !8221)
!8224 = !DILocation(line: 498, column: 53, scope: !8221)
!8225 = !DILocation(line: 0, scope: !7611, inlinedAt: !8226)
!8226 = distinct !DILocation(line: 498, column: 47, scope: !8221)
!8227 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8226)
!8228 = !DILocation(line: 498, column: 31, scope: !8221)
!8229 = !DILocation(line: 498, column: 45, scope: !8221)
!8230 = !DILocation(line: 499, column: 12, scope: !8221)
!8231 = !DILocation(line: 500, column: 54, scope: !8221)
!8232 = !DILocation(line: 500, column: 53, scope: !8221)
!8233 = !DILocation(line: 0, scope: !7611, inlinedAt: !8234)
!8234 = distinct !DILocation(line: 500, column: 47, scope: !8221)
!8235 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8234)
!8236 = !DILocation(line: 500, column: 31, scope: !8221)
!8237 = !DILocation(line: 500, column: 45, scope: !8221)
!8238 = !DILocation(line: 501, column: 12, scope: !8221)
!8239 = !DILocation(line: 502, column: 54, scope: !8221)
!8240 = !DILocation(line: 502, column: 53, scope: !8221)
!8241 = !DILocation(line: 0, scope: !7611, inlinedAt: !8242)
!8242 = distinct !DILocation(line: 502, column: 47, scope: !8221)
!8243 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8242)
!8244 = !DILocation(line: 502, column: 31, scope: !8221)
!8245 = !DILocation(line: 502, column: 45, scope: !8221)
!8246 = !DILocation(line: 503, column: 12, scope: !8221)
!8247 = !DILocation(line: 504, column: 54, scope: !8221)
!8248 = !DILocation(line: 504, column: 53, scope: !8221)
!8249 = !DILocation(line: 0, scope: !7611, inlinedAt: !8250)
!8250 = distinct !DILocation(line: 504, column: 47, scope: !8221)
!8251 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8250)
!8252 = !DILocation(line: 505, column: 5, scope: !8221)
!8253 = !DILocation(line: 507, column: 28, scope: !8221)
!8254 = !DILocation(line: 507, column: 42, scope: !8221)
!8255 = !DILocation(line: 508, column: 54, scope: !8221)
!8256 = !DILocation(line: 508, column: 53, scope: !8221)
!8257 = !DILocation(line: 0, scope: !7611, inlinedAt: !8258)
!8258 = distinct !DILocation(line: 508, column: 47, scope: !8221)
!8259 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8258)
!8260 = !DILocation(line: 508, column: 31, scope: !8221)
!8261 = !DILocation(line: 508, column: 45, scope: !8221)
!8262 = !DILocation(line: 509, column: 12, scope: !8221)
!8263 = !DILocation(line: 510, column: 54, scope: !8221)
!8264 = !DILocation(line: 510, column: 53, scope: !8221)
!8265 = !DILocation(line: 0, scope: !7611, inlinedAt: !8266)
!8266 = distinct !DILocation(line: 510, column: 47, scope: !8221)
!8267 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8266)
!8268 = !DILocation(line: 510, column: 31, scope: !8221)
!8269 = !DILocation(line: 510, column: 45, scope: !8221)
!8270 = !DILocation(line: 511, column: 12, scope: !8221)
!8271 = !DILocation(line: 512, column: 54, scope: !8221)
!8272 = !DILocation(line: 512, column: 53, scope: !8221)
!8273 = !DILocation(line: 0, scope: !7611, inlinedAt: !8274)
!8274 = distinct !DILocation(line: 512, column: 47, scope: !8221)
!8275 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8274)
!8276 = !DILocation(line: 512, column: 31, scope: !8221)
!8277 = !DILocation(line: 512, column: 45, scope: !8221)
!8278 = !DILocation(line: 513, column: 12, scope: !8221)
!8279 = !DILocation(line: 514, column: 54, scope: !8221)
!8280 = !DILocation(line: 514, column: 53, scope: !8221)
!8281 = !DILocation(line: 0, scope: !7611, inlinedAt: !8282)
!8282 = distinct !DILocation(line: 514, column: 47, scope: !8221)
!8283 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8282)
!8284 = !DILocation(line: 514, column: 31, scope: !8221)
!8285 = !DILocation(line: 514, column: 45, scope: !8221)
!8286 = !DILocation(line: 515, column: 12, scope: !8221)
!8287 = !DILocation(line: 516, column: 54, scope: !8221)
!8288 = !DILocation(line: 516, column: 53, scope: !8221)
!8289 = !DILocation(line: 0, scope: !7611, inlinedAt: !8290)
!8290 = distinct !DILocation(line: 516, column: 47, scope: !8221)
!8291 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8290)
!8292 = !DILocation(line: 516, column: 31, scope: !8221)
!8293 = !DILocation(line: 516, column: 45, scope: !8221)
!8294 = !DILocation(line: 517, column: 12, scope: !8221)
!8295 = !DILocation(line: 518, column: 54, scope: !8221)
!8296 = !DILocation(line: 518, column: 53, scope: !8221)
!8297 = !DILocation(line: 0, scope: !7611, inlinedAt: !8298)
!8298 = distinct !DILocation(line: 518, column: 47, scope: !8221)
!8299 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8298)
!8300 = !DILocation(line: 519, column: 5, scope: !8221)
!8301 = !DILocation(line: 521, column: 28, scope: !8221)
!8302 = !DILocation(line: 521, column: 42, scope: !8221)
!8303 = !DILocation(line: 522, column: 54, scope: !8221)
!8304 = !DILocation(line: 522, column: 53, scope: !8221)
!8305 = !DILocation(line: 0, scope: !7611, inlinedAt: !8306)
!8306 = distinct !DILocation(line: 522, column: 47, scope: !8221)
!8307 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8306)
!8308 = !DILocation(line: 522, column: 31, scope: !8221)
!8309 = !DILocation(line: 522, column: 45, scope: !8221)
!8310 = !DILocation(line: 523, column: 12, scope: !8221)
!8311 = !DILocation(line: 524, column: 54, scope: !8221)
!8312 = !DILocation(line: 524, column: 53, scope: !8221)
!8313 = !DILocation(line: 0, scope: !7611, inlinedAt: !8314)
!8314 = distinct !DILocation(line: 524, column: 47, scope: !8221)
!8315 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8314)
!8316 = !DILocation(line: 524, column: 31, scope: !8221)
!8317 = !DILocation(line: 524, column: 45, scope: !8221)
!8318 = !DILocation(line: 525, column: 12, scope: !8221)
!8319 = !DILocation(line: 526, column: 54, scope: !8221)
!8320 = !DILocation(line: 526, column: 53, scope: !8221)
!8321 = !DILocation(line: 0, scope: !7611, inlinedAt: !8322)
!8322 = distinct !DILocation(line: 526, column: 47, scope: !8221)
!8323 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8322)
!8324 = !DILocation(line: 526, column: 31, scope: !8221)
!8325 = !DILocation(line: 526, column: 45, scope: !8221)
!8326 = !DILocation(line: 527, column: 12, scope: !8221)
!8327 = !DILocation(line: 528, column: 54, scope: !8221)
!8328 = !DILocation(line: 528, column: 53, scope: !8221)
!8329 = !DILocation(line: 0, scope: !7611, inlinedAt: !8330)
!8330 = distinct !DILocation(line: 528, column: 47, scope: !8221)
!8331 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8330)
!8332 = !DILocation(line: 528, column: 31, scope: !8221)
!8333 = !DILocation(line: 528, column: 45, scope: !8221)
!8334 = !DILocation(line: 529, column: 12, scope: !8221)
!8335 = !DILocation(line: 530, column: 54, scope: !8221)
!8336 = !DILocation(line: 530, column: 53, scope: !8221)
!8337 = !DILocation(line: 0, scope: !7611, inlinedAt: !8338)
!8338 = distinct !DILocation(line: 530, column: 47, scope: !8221)
!8339 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8338)
!8340 = !DILocation(line: 530, column: 31, scope: !8221)
!8341 = !DILocation(line: 530, column: 45, scope: !8221)
!8342 = !DILocation(line: 531, column: 12, scope: !8221)
!8343 = !DILocation(line: 532, column: 54, scope: !8221)
!8344 = !DILocation(line: 532, column: 53, scope: !8221)
!8345 = !DILocation(line: 0, scope: !7611, inlinedAt: !8346)
!8346 = distinct !DILocation(line: 532, column: 47, scope: !8221)
!8347 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8346)
!8348 = !DILocation(line: 532, column: 31, scope: !8221)
!8349 = !DILocation(line: 532, column: 45, scope: !8221)
!8350 = !DILocation(line: 533, column: 12, scope: !8221)
!8351 = !DILocation(line: 534, column: 54, scope: !8221)
!8352 = !DILocation(line: 534, column: 53, scope: !8221)
!8353 = !DILocation(line: 0, scope: !7611, inlinedAt: !8354)
!8354 = distinct !DILocation(line: 534, column: 47, scope: !8221)
!8355 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8354)
!8356 = !DILocation(line: 534, column: 31, scope: !8221)
!8357 = !DILocation(line: 534, column: 45, scope: !8221)
!8358 = !DILocation(line: 535, column: 12, scope: !8221)
!8359 = !DILocation(line: 536, column: 54, scope: !8221)
!8360 = !DILocation(line: 536, column: 53, scope: !8221)
!8361 = !DILocation(line: 0, scope: !7611, inlinedAt: !8362)
!8362 = distinct !DILocation(line: 536, column: 47, scope: !8221)
!8363 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8362)
!8364 = !DILocation(line: 537, column: 5, scope: !8221)
!8365 = !DILocation(line: 0, scope: !8221)
!8366 = !DILocation(line: 542, column: 50, scope: !8185)
!8367 = !DILocation(line: 542, column: 49, scope: !8185)
!8368 = !DILocation(line: 0, scope: !7611, inlinedAt: !8369)
!8369 = distinct !DILocation(line: 542, column: 43, scope: !8185)
!8370 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8369)
!8371 = !DILocation(line: 542, column: 28, scope: !8185)
!8372 = !DILocation(line: 542, column: 41, scope: !8185)
!8373 = !DILocation(line: 543, column: 9, scope: !8185)
!8374 = !DILocation(line: 544, column: 50, scope: !8185)
!8375 = !DILocation(line: 544, column: 49, scope: !8185)
!8376 = !DILocation(line: 0, scope: !7611, inlinedAt: !8377)
!8377 = distinct !DILocation(line: 544, column: 43, scope: !8185)
!8378 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8377)
!8379 = !DILocation(line: 544, column: 28, scope: !8185)
!8380 = !DILocation(line: 544, column: 41, scope: !8185)
!8381 = !DILocation(line: 545, column: 9, scope: !8185)
!8382 = !DILocation(line: 546, column: 50, scope: !8185)
!8383 = !DILocation(line: 546, column: 49, scope: !8185)
!8384 = !DILocation(line: 0, scope: !7611, inlinedAt: !8385)
!8385 = distinct !DILocation(line: 546, column: 43, scope: !8185)
!8386 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8385)
!8387 = !DILocation(line: 546, column: 28, scope: !8185)
!8388 = !DILocation(line: 546, column: 41, scope: !8185)
!8389 = !DILocation(line: 547, column: 9, scope: !8185)
!8390 = !DILocation(line: 548, column: 50, scope: !8185)
!8391 = !DILocation(line: 548, column: 49, scope: !8185)
!8392 = !DILocation(line: 0, scope: !7611, inlinedAt: !8393)
!8393 = distinct !DILocation(line: 548, column: 43, scope: !8185)
!8394 = !DILocation(line: 352, column: 3, scope: !7611, inlinedAt: !8393)
!8395 = !DILocation(line: 548, column: 28, scope: !8185)
!8396 = !DILocation(line: 548, column: 41, scope: !8185)
!8397 = !DILocation(line: 551, column: 3, scope: !8185)
!8398 = !DILocation(line: 554, column: 11, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8185, file: !448, line: 554, column: 6)
!8400 = !DILocation(line: 0, scope: !8399)
!8401 = !DILocation(line: 565, column: 26, scope: !8185)
!8402 = !DILocation(line: 565, column: 40, scope: !8185)
!8403 = !DILocation(line: 566, column: 26, scope: !8185)
!8404 = !DILocation(line: 566, column: 40, scope: !8185)
!8405 = !DILocation(line: 567, column: 3, scope: !8185)
!8406 = !DILocation(line: 570, column: 3, scope: !8185)
!8407 = !DILocation(line: 573, column: 3, scope: !8185)
!8408 = !DILocation(line: 576, column: 3, scope: !8185)
!8409 = !DILocation(line: 578, column: 15, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !448, line: 578, column: 3)
!8411 = distinct !DILexicalBlock(scope: !8185, file: !448, line: 578, column: 3)
!8412 = !DILocation(line: 578, column: 3, scope: !8411)
!8413 = !DILocation(line: 582, column: 18, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8410, file: !448, line: 579, column: 3)
!8415 = !DILocation(line: 582, column: 17, scope: !8414)
!8416 = !DILocation(line: 582, column: 5, scope: !8414)
!8417 = !DILocation(line: 583, column: 14, scope: !8414)
!8418 = !DILocation(line: 584, column: 18, scope: !8414)
!8419 = !DILocation(line: 584, column: 17, scope: !8414)
!8420 = !DILocation(line: 584, column: 5, scope: !8414)
!8421 = !DILocation(line: 585, column: 14, scope: !8414)
!8422 = !DILocation(line: 586, column: 18, scope: !8414)
!8423 = !DILocation(line: 586, column: 17, scope: !8414)
!8424 = !DILocation(line: 586, column: 5, scope: !8414)
!8425 = !DILocation(line: 587, column: 14, scope: !8414)
!8426 = !DILocation(line: 588, column: 18, scope: !8414)
!8427 = !DILocation(line: 588, column: 17, scope: !8414)
!8428 = !DILocation(line: 588, column: 5, scope: !8414)
!8429 = !DILocation(line: 591, column: 13, scope: !8414)
!8430 = !DILocation(line: 592, column: 5, scope: !8414)
!8431 = !DILocation(line: 594, column: 20, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8414, file: !448, line: 593, column: 5)
!8433 = !DILocation(line: 595, column: 14, scope: !8432)
!8434 = !DILocation(line: 596, column: 14, scope: !8414)
!8435 = !DILocation(line: 596, column: 22, scope: !8414)
!8436 = !DILocation(line: 596, column: 42, scope: !8414)
!8437 = !DILocation(line: 596, column: 5, scope: !8432)
!8438 = distinct !{!8438, !8430, !8439}
!8439 = !DILocation(line: 596, column: 66, scope: !8414)
!8440 = !DILocation(line: 598, column: 9, scope: !8414)
!8441 = !DILocation(line: 589, column: 14, scope: !8414)
!8442 = !DILocation(line: 606, column: 34, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8444, file: !448, line: 603, column: 5)
!8444 = distinct !DILexicalBlock(scope: !8414, file: !448, line: 598, column: 9)
!8445 = !DILocation(line: 606, column: 8, scope: !8443)
!8446 = !DILocation(line: 606, column: 32, scope: !8443)
!8447 = !DILocation(line: 607, column: 17, scope: !8443)
!8448 = !DILocation(line: 608, column: 34, scope: !8443)
!8449 = !DILocation(line: 608, column: 8, scope: !8443)
!8450 = !DILocation(line: 608, column: 32, scope: !8443)
!8451 = !DILocation(line: 609, column: 17, scope: !8443)
!8452 = !DILocation(line: 610, column: 34, scope: !8443)
!8453 = !DILocation(line: 610, column: 8, scope: !8443)
!8454 = !DILocation(line: 610, column: 32, scope: !8443)
!8455 = !DILocation(line: 611, column: 17, scope: !8443)
!8456 = !DILocation(line: 612, column: 34, scope: !8443)
!8457 = !DILocation(line: 612, column: 8, scope: !8443)
!8458 = !DILocation(line: 612, column: 32, scope: !8443)
!8459 = !DILocation(line: 613, column: 17, scope: !8443)
!8460 = !DILocation(line: 578, column: 49, scope: !8410)
!8461 = distinct !{!8461, !8412, !8462}
!8462 = !DILocation(line: 615, column: 3, scope: !8411)
!8463 = !DILocation(line: 617, column: 3, scope: !8185)
!8464 = !DILocation(line: 620, column: 1, scope: !8185)
!8465 = !DILocation(line: 619, column: 3, scope: !8185)
!8466 = distinct !DISubprogram(name: "GPIO_DeInit", scope: !453, file: !453, line: 120, type: !8467, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8469)
!8467 = !DISubroutineType(types: !8468)
!8468 = !{null, !482}
!8469 = !{!8470}
!8470 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8466, file: !453, line: 120, type: !482)
!8471 = !DILocation(line: 0, scope: !8466)
!8472 = !DILocation(line: 125, column: 7, scope: !8466)
!8473 = !DILocation(line: 0, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8466, file: !453, line: 125, column: 7)
!8475 = !DILocation(line: 173, column: 1, scope: !8466)
!8476 = distinct !DISubprogram(name: "GPIO_Init", scope: !453, file: !453, line: 182, type: !8477, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8492)
!8477 = !DISubroutineType(types: !8478)
!8478 = !{null, !482, !8479}
!8479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8480, size: 32)
!8480 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !456, line: 133, baseType: !8481)
!8481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !456, line: 117, size: 160, elements: !8482)
!8482 = !{!8483, !8484, !8486, !8488, !8490}
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_Pin", scope: !8481, file: !456, line: 119, baseType: !20, size: 32)
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_Mode", scope: !8481, file: !456, line: 122, baseType: !8485, size: 32, offset: 32)
!8485 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIOMode_TypeDef", file: !456, line: 63, baseType: !455)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_Speed", scope: !8481, file: !456, line: 125, baseType: !8487, size: 32, offset: 64)
!8487 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIOSpeed_TypeDef", file: !456, line: 87, baseType: !462)
!8488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OType", scope: !8481, file: !456, line: 128, baseType: !8489, size: 32, offset: 96)
!8489 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIOOType_TypeDef", file: !456, line: 74, baseType: !468)
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PuPd", scope: !8481, file: !456, line: 131, baseType: !8491, size: 32, offset: 128)
!8491 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIOPuPd_TypeDef", file: !456, line: 99, baseType: !472)
!8492 = !{!8493, !8494, !8495, !8496, !8497}
!8493 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8476, file: !453, line: 182, type: !482)
!8494 = !DILocalVariable(name: "GPIO_InitStruct", arg: 2, scope: !8476, file: !453, line: 182, type: !8479)
!8495 = !DILocalVariable(name: "pinpos", scope: !8476, file: !453, line: 184, type: !20)
!8496 = !DILocalVariable(name: "pos", scope: !8476, file: !453, line: 184, type: !20)
!8497 = !DILocalVariable(name: "currentpin", scope: !8476, file: !453, line: 184, type: !20)
!8498 = !DILocation(line: 0, scope: !8476)
!8499 = !DILocation(line: 0, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !453, line: 195, column: 3)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !453, line: 194, column: 3)
!8502 = distinct !DILexicalBlock(scope: !8476, file: !453, line: 194, column: 3)
!8503 = !{!8504, !840, i64 0}
!8504 = !{!"", !840, i64 0, !841, i64 4, !841, i64 8, !841, i64 12, !841, i64 16}
!8505 = !DILocation(line: 0, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !453, line: 201, column: 5)
!8507 = distinct !DILexicalBlock(scope: !8500, file: !453, line: 200, column: 9)
!8508 = !DILocation(line: 0, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !453, line: 206, column: 7)
!8510 = distinct !DILexicalBlock(scope: !8506, file: !453, line: 205, column: 11)
!8511 = !DILocation(line: 194, column: 3, scope: !8502)
!8512 = !DILocation(line: 196, column: 28, scope: !8500)
!8513 = !DILocation(line: 198, column: 46, scope: !8500)
!8514 = !DILocation(line: 200, column: 20, scope: !8507)
!8515 = !DILocation(line: 200, column: 9, scope: !8500)
!8516 = !DILocation(line: 202, column: 55, scope: !8506)
!8517 = !DILocation(line: 202, column: 44, scope: !8506)
!8518 = !DILocation(line: 202, column: 24, scope: !8506)
!8519 = !DILocation(line: 202, column: 21, scope: !8506)
!8520 = !{!8521, !840, i64 0}
!8521 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !2880, i64 24, !2880, i64 26, !840, i64 28, !841, i64 32}
!8522 = !DILocation(line: 203, column: 52, scope: !8506)
!8523 = !{!8504, !841, i64 4}
!8524 = !DILocation(line: 203, column: 63, scope: !8506)
!8525 = !DILocation(line: 203, column: 20, scope: !8506)
!8526 = !DILocation(line: 205, column: 57, scope: !8510)
!8527 = !DILocation(line: 211, column: 24, scope: !8509)
!8528 = !{!8521, !840, i64 8}
!8529 = !DILocation(line: 212, column: 56, scope: !8509)
!8530 = !{!8504, !841, i64 8}
!8531 = !DILocation(line: 212, column: 68, scope: !8509)
!8532 = !DILocation(line: 212, column: 24, scope: !8509)
!8533 = !DILocation(line: 218, column: 27, scope: !8509)
!8534 = !DILocation(line: 218, column: 24, scope: !8509)
!8535 = !{!8521, !840, i64 4}
!8536 = !DILocation(line: 219, column: 65, scope: !8509)
!8537 = !{!8504, !841, i64 12}
!8538 = !DILocation(line: 219, column: 37, scope: !8509)
!8539 = !DILocation(line: 219, column: 77, scope: !8509)
!8540 = !DILocation(line: 219, column: 26, scope: !8509)
!8541 = !DILocation(line: 219, column: 23, scope: !8509)
!8542 = !DILocation(line: 220, column: 7, scope: !8509)
!8543 = !DILocation(line: 223, column: 20, scope: !8506)
!8544 = !{!8521, !840, i64 12}
!8545 = !DILocation(line: 224, column: 52, scope: !8506)
!8546 = !{!8504, !841, i64 16}
!8547 = !DILocation(line: 224, column: 63, scope: !8506)
!8548 = !DILocation(line: 224, column: 20, scope: !8506)
!8549 = !DILocation(line: 225, column: 5, scope: !8506)
!8550 = !DILocation(line: 194, column: 44, scope: !8501)
!8551 = !DILocation(line: 227, column: 1, scope: !8476)
!8552 = !DILocation(line: 194, column: 30, scope: !8501)
!8553 = distinct !{!8553, !8511, !8554}
!8554 = !DILocation(line: 226, column: 3, scope: !8502)
!8555 = distinct !DISubprogram(name: "GPIO_StructInit", scope: !453, file: !453, line: 234, type: !8556, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8558)
!8556 = !DISubroutineType(types: !8557)
!8557 = !{null, !8479}
!8558 = !{!8559}
!8559 = !DILocalVariable(name: "GPIO_InitStruct", arg: 1, scope: !8555, file: !453, line: 234, type: !8479)
!8560 = !DILocation(line: 0, scope: !8555)
!8561 = !DILocation(line: 237, column: 20, scope: !8555)
!8562 = !DILocation(line: 237, column: 30, scope: !8555)
!8563 = !DILocation(line: 238, column: 20, scope: !8555)
!8564 = !DILocation(line: 238, column: 30, scope: !8555)
!8565 = !DILocation(line: 239, column: 20, scope: !8555)
!8566 = !DILocation(line: 239, column: 31, scope: !8555)
!8567 = !DILocation(line: 240, column: 20, scope: !8555)
!8568 = !DILocation(line: 240, column: 31, scope: !8555)
!8569 = !DILocation(line: 241, column: 20, scope: !8555)
!8570 = !DILocation(line: 241, column: 30, scope: !8555)
!8571 = !DILocation(line: 242, column: 1, scope: !8555)
!8572 = distinct !DISubprogram(name: "GPIO_PinLockConfig", scope: !453, file: !453, line: 255, type: !8573, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8575)
!8573 = !DISubroutineType(types: !8574)
!8574 = !{null, !482, !64}
!8575 = !{!8576, !8577, !8578}
!8576 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8572, file: !453, line: 255, type: !482)
!8577 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8572, file: !453, line: 255, type: !64)
!8578 = !DILocalVariable(name: "tmp", scope: !8572, file: !453, line: 257, type: !27)
!8579 = !DILocation(line: 0, scope: !8572)
!8580 = !DILocation(line: 257, column: 3, scope: !8572)
!8581 = !DILocation(line: 257, column: 17, scope: !8572)
!8582 = !DILocation(line: 263, column: 10, scope: !8572)
!8583 = !DILocation(line: 263, column: 7, scope: !8572)
!8584 = !DILocation(line: 265, column: 17, scope: !8572)
!8585 = !DILocation(line: 265, column: 10, scope: !8572)
!8586 = !DILocation(line: 265, column: 15, scope: !8572)
!8587 = !{!8521, !840, i64 28}
!8588 = !DILocation(line: 267, column: 15, scope: !8572)
!8589 = !DILocation(line: 269, column: 17, scope: !8572)
!8590 = !DILocation(line: 269, column: 15, scope: !8572)
!8591 = !DILocation(line: 271, column: 16, scope: !8572)
!8592 = !DILocation(line: 271, column: 7, scope: !8572)
!8593 = !DILocation(line: 273, column: 16, scope: !8572)
!8594 = !DILocation(line: 273, column: 7, scope: !8572)
!8595 = !DILocation(line: 274, column: 1, scope: !8572)
!8596 = distinct !DISubprogram(name: "GPIO_ReadInputDataBit", scope: !453, file: !453, line: 299, type: !8597, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8599)
!8597 = !DISubroutineType(types: !8598)
!8598 = !{!60, !482, !64}
!8599 = !{!8600, !8601, !8602}
!8600 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8596, file: !453, line: 299, type: !482)
!8601 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8596, file: !453, line: 299, type: !64)
!8602 = !DILocalVariable(name: "bitstatus", scope: !8596, file: !453, line: 301, type: !60)
!8603 = !DILocation(line: 0, scope: !8596)
!8604 = !DILocation(line: 307, column: 15, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8596, file: !453, line: 307, column: 7)
!8606 = !{!8521, !840, i64 16}
!8607 = !DILocation(line: 307, column: 21, scope: !8605)
!8608 = !DILocation(line: 307, column: 19, scope: !8605)
!8609 = !DILocation(line: 307, column: 31, scope: !8605)
!8610 = !DILocation(line: 315, column: 3, scope: !8596)
!8611 = distinct !DISubprogram(name: "GPIO_ReadInputData", scope: !453, file: !453, line: 323, type: !8612, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8614)
!8612 = !DISubroutineType(types: !8613)
!8613 = !{!64, !482}
!8614 = !{!8615}
!8615 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8611, file: !453, line: 323, type: !482)
!8616 = !DILocation(line: 0, scope: !8611)
!8617 = !DILocation(line: 328, column: 28, scope: !8611)
!8618 = !DILocation(line: 328, column: 11, scope: !8611)
!8619 = !DILocation(line: 328, column: 3, scope: !8611)
!8620 = distinct !DISubprogram(name: "GPIO_ReadOutputDataBit", scope: !453, file: !453, line: 338, type: !8597, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8621)
!8621 = !{!8622, !8623, !8624}
!8622 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8620, file: !453, line: 338, type: !482)
!8623 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8620, file: !453, line: 338, type: !64)
!8624 = !DILocalVariable(name: "bitstatus", scope: !8620, file: !453, line: 340, type: !60)
!8625 = !DILocation(line: 0, scope: !8620)
!8626 = !DILocation(line: 346, column: 15, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8620, file: !453, line: 346, column: 7)
!8628 = !{!8521, !840, i64 20}
!8629 = !DILocation(line: 346, column: 21, scope: !8627)
!8630 = !DILocation(line: 346, column: 19, scope: !8627)
!8631 = !DILocation(line: 346, column: 31, scope: !8627)
!8632 = !DILocation(line: 354, column: 3, scope: !8620)
!8633 = distinct !DISubprogram(name: "GPIO_ReadOutputData", scope: !453, file: !453, line: 362, type: !8612, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8634)
!8634 = !{!8635}
!8635 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8633, file: !453, line: 362, type: !482)
!8636 = !DILocation(line: 0, scope: !8633)
!8637 = !DILocation(line: 367, column: 28, scope: !8633)
!8638 = !DILocation(line: 367, column: 11, scope: !8633)
!8639 = !DILocation(line: 367, column: 3, scope: !8633)
!8640 = distinct !DISubprogram(name: "GPIO_SetBits", scope: !453, file: !453, line: 380, type: !8573, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8641)
!8641 = !{!8642, !8643}
!8642 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8640, file: !453, line: 380, type: !482)
!8643 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8640, file: !453, line: 380, type: !64)
!8644 = !DILocation(line: 0, scope: !8640)
!8645 = !DILocation(line: 386, column: 10, scope: !8640)
!8646 = !DILocation(line: 386, column: 16, scope: !8640)
!8647 = !{!8521, !2880, i64 24}
!8648 = !DILocation(line: 387, column: 1, scope: !8640)
!8649 = distinct !DISubprogram(name: "GPIO_ResetBits", scope: !453, file: !453, line: 399, type: !8573, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8650)
!8650 = !{!8651, !8652}
!8651 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8649, file: !453, line: 399, type: !482)
!8652 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8649, file: !453, line: 399, type: !64)
!8653 = !DILocation(line: 0, scope: !8649)
!8654 = !DILocation(line: 405, column: 10, scope: !8649)
!8655 = !DILocation(line: 405, column: 16, scope: !8649)
!8656 = !{!8521, !2880, i64 26}
!8657 = !DILocation(line: 406, column: 1, scope: !8649)
!8658 = distinct !DISubprogram(name: "GPIO_WriteBit", scope: !453, file: !453, line: 419, type: !8659, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8662)
!8659 = !DISubroutineType(types: !8660)
!8660 = !{null, !482, !64, !8661}
!8661 = !DIDerivedType(tag: DW_TAG_typedef, name: "BitAction", file: !456, line: 110, baseType: !477)
!8662 = !{!8663, !8664, !8665}
!8663 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8658, file: !453, line: 419, type: !482)
!8664 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8658, file: !453, line: 419, type: !64)
!8665 = !DILocalVariable(name: "BitVal", arg: 3, scope: !8658, file: !453, line: 419, type: !8661)
!8666 = !DILocation(line: 0, scope: !8658)
!8667 = !DILocation(line: 426, column: 14, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8658, file: !453, line: 426, column: 7)
!8669 = !DILocation(line: 426, column: 7, scope: !8658)
!8670 = !DILocation(line: 428, column: 12, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8668, file: !453, line: 427, column: 3)
!8672 = !DILocation(line: 428, column: 18, scope: !8671)
!8673 = !DILocation(line: 429, column: 3, scope: !8671)
!8674 = !DILocation(line: 432, column: 12, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8668, file: !453, line: 431, column: 3)
!8676 = !DILocation(line: 432, column: 18, scope: !8675)
!8677 = !DILocation(line: 434, column: 1, scope: !8658)
!8678 = distinct !DISubprogram(name: "GPIO_Write", scope: !453, file: !453, line: 442, type: !8573, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8679)
!8679 = !{!8680, !8681}
!8680 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8678, file: !453, line: 442, type: !482)
!8681 = !DILocalVariable(name: "PortVal", arg: 2, scope: !8678, file: !453, line: 442, type: !64)
!8682 = !DILocation(line: 0, scope: !8678)
!8683 = !DILocation(line: 447, column: 16, scope: !8678)
!8684 = !DILocation(line: 447, column: 10, scope: !8678)
!8685 = !DILocation(line: 447, column: 14, scope: !8678)
!8686 = !DILocation(line: 448, column: 1, scope: !8678)
!8687 = distinct !DISubprogram(name: "GPIO_ToggleBits", scope: !453, file: !453, line: 456, type: !8573, scopeLine: 457, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8688)
!8688 = !{!8689, !8690}
!8689 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8687, file: !453, line: 456, type: !482)
!8690 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8687, file: !453, line: 456, type: !64)
!8691 = !DILocation(line: 0, scope: !8687)
!8692 = !DILocation(line: 461, column: 17, scope: !8687)
!8693 = !DILocation(line: 461, column: 10, scope: !8687)
!8694 = !DILocation(line: 461, column: 14, scope: !8687)
!8695 = !DILocation(line: 462, column: 1, scope: !8687)
!8696 = distinct !DISubprogram(name: "GPIO_PinAFConfig", scope: !453, file: !453, line: 529, type: !8697, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !8699)
!8697 = !DISubroutineType(types: !8698)
!8698 = !{null, !482, !64, !60}
!8699 = !{!8700, !8701, !8702, !8703, !8704}
!8700 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8696, file: !453, line: 529, type: !482)
!8701 = !DILocalVariable(name: "GPIO_PinSource", arg: 2, scope: !8696, file: !453, line: 529, type: !64)
!8702 = !DILocalVariable(name: "GPIO_AF", arg: 3, scope: !8696, file: !453, line: 529, type: !60)
!8703 = !DILocalVariable(name: "temp", scope: !8696, file: !453, line: 531, type: !20)
!8704 = !DILocalVariable(name: "temp_2", scope: !8696, file: !453, line: 532, type: !20)
!8705 = !DILocation(line: 0, scope: !8696)
!8706 = !DILocation(line: 539, column: 11, scope: !8696)
!8707 = !DILocation(line: 539, column: 46, scope: !8696)
!8708 = !DILocation(line: 539, column: 89, scope: !8696)
!8709 = !DILocation(line: 539, column: 31, scope: !8696)
!8710 = !DILocation(line: 540, column: 57, scope: !8696)
!8711 = !DILocation(line: 540, column: 41, scope: !8696)
!8712 = !DILocation(line: 540, column: 29, scope: !8696)
!8713 = !DILocation(line: 540, column: 3, scope: !8696)
!8714 = !DILocation(line: 540, column: 38, scope: !8696)
!8715 = !DILocation(line: 541, column: 12, scope: !8696)
!8716 = !DILocation(line: 541, column: 47, scope: !8696)
!8717 = !DILocation(line: 542, column: 38, scope: !8696)
!8718 = !DILocation(line: 543, column: 1, scope: !8696)
!8719 = distinct !DISubprogram(name: "SPI_I2S_DeInit", scope: !498, file: !498, line: 218, type: !8720, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8722)
!8720 = !DISubroutineType(types: !8721)
!8721 = !{null, !500}
!8722 = !{!8723}
!8723 = !DILocalVariable(name: "SPIx", arg: 1, scope: !8719, file: !498, line: 218, type: !500)
!8724 = !DILocation(line: 0, scope: !8719)
!8725 = !DILocation(line: 223, column: 7, scope: !8719)
!8726 = !DILocation(line: 226, column: 5, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8728, file: !498, line: 224, column: 3)
!8728 = distinct !DILexicalBlock(scope: !8719, file: !498, line: 223, column: 7)
!8729 = !DILocation(line: 228, column: 5, scope: !8727)
!8730 = !DILocation(line: 229, column: 3, scope: !8727)
!8731 = !DILocation(line: 233, column: 5, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !498, line: 231, column: 3)
!8733 = distinct !DILexicalBlock(scope: !8728, file: !498, line: 230, column: 12)
!8734 = !DILocation(line: 235, column: 5, scope: !8732)
!8735 = !DILocation(line: 236, column: 5, scope: !8732)
!8736 = !DILocation(line: 242, column: 7, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8738, file: !498, line: 240, column: 5)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !498, line: 239, column: 9)
!8739 = distinct !DILexicalBlock(scope: !8733, file: !498, line: 238, column: 3)
!8740 = !DILocation(line: 244, column: 7, scope: !8737)
!8741 = !DILocation(line: 245, column: 5, scope: !8737)
!8742 = !DILocation(line: 247, column: 1, scope: !8719)
!8743 = distinct !DISubprogram(name: "SPI_Init", scope: !498, file: !498, line: 257, type: !8744, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8760)
!8744 = !DISubroutineType(types: !8745)
!8745 = !{null, !500, !8746}
!8746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8747, size: 32)
!8747 = !DIDerivedType(tag: DW_TAG_typedef, name: "SPI_InitTypeDef", file: !8748, line: 79, baseType: !8749)
!8748 = !DIFile(filename: "inc/peripherals/stm32f4xx_spi.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!8749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8748, line: 48, size: 144, elements: !8750)
!8750 = !{!8751, !8752, !8753, !8754, !8755, !8756, !8757, !8758, !8759}
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_Direction", scope: !8749, file: !8748, line: 50, baseType: !64, size: 16)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_Mode", scope: !8749, file: !8748, line: 53, baseType: !64, size: 16, offset: 16)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_DataSize", scope: !8749, file: !8748, line: 56, baseType: !64, size: 16, offset: 32)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CPOL", scope: !8749, file: !8748, line: 59, baseType: !64, size: 16, offset: 48)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CPHA", scope: !8749, file: !8748, line: 62, baseType: !64, size: 16, offset: 64)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_NSS", scope: !8749, file: !8748, line: 65, baseType: !64, size: 16, offset: 80)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_BaudRatePrescaler", scope: !8749, file: !8748, line: 69, baseType: !64, size: 16, offset: 96)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_FirstBit", scope: !8749, file: !8748, line: 75, baseType: !64, size: 16, offset: 112)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CRCPolynomial", scope: !8749, file: !8748, line: 78, baseType: !64, size: 16, offset: 128)
!8760 = !{!8761, !8762, !8763}
!8761 = !DILocalVariable(name: "SPIx", arg: 1, scope: !8743, file: !498, line: 257, type: !500)
!8762 = !DILocalVariable(name: "SPI_InitStruct", arg: 2, scope: !8743, file: !498, line: 257, type: !8746)
!8763 = !DILocalVariable(name: "tmpreg", scope: !8743, file: !498, line: 259, type: !64)
!8764 = !DILocation(line: 0, scope: !8743)
!8765 = !DILocation(line: 277, column: 18, scope: !8743)
!8766 = !{!8767, !2880, i64 0}
!8767 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !2880, i64 6, !2880, i64 8, !2880, i64 10, !2880, i64 12, !2880, i64 14, !2880, i64 16, !2880, i64 18, !2880, i64 20, !2880, i64 22, !2880, i64 24, !2880, i64 26, !2880, i64 28, !2880, i64 30, !2880, i64 32, !2880, i64 34}
!8768 = !DILocation(line: 279, column: 10, scope: !8743)
!8769 = !DILocation(line: 288, column: 50, scope: !8743)
!8770 = !{!8771, !2880, i64 0}
!8771 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !2880, i64 6, !2880, i64 8, !2880, i64 10, !2880, i64 12, !2880, i64 14, !2880, i64 16}
!8772 = !DILocation(line: 288, column: 82, scope: !8743)
!8773 = !{!8771, !2880, i64 2}
!8774 = !DILocation(line: 289, column: 35, scope: !8743)
!8775 = !{!8771, !2880, i64 4}
!8776 = !DILocation(line: 289, column: 66, scope: !8743)
!8777 = !{!8771, !2880, i64 6}
!8778 = !DILocation(line: 290, column: 35, scope: !8743)
!8779 = !{!8771, !2880, i64 8}
!8780 = !DILocation(line: 290, column: 62, scope: !8743)
!8781 = !{!8771, !2880, i64 10}
!8782 = !DILocation(line: 291, column: 35, scope: !8743)
!8783 = !{!8771, !2880, i64 12}
!8784 = !DILocation(line: 291, column: 75, scope: !8743)
!8785 = !{!8771, !2880, i64 14}
!8786 = !DILocation(line: 288, column: 64, scope: !8743)
!8787 = !DILocation(line: 288, column: 91, scope: !8743)
!8788 = !DILocation(line: 289, column: 48, scope: !8743)
!8789 = !DILocation(line: 289, column: 75, scope: !8743)
!8790 = !DILocation(line: 290, column: 44, scope: !8743)
!8791 = !DILocation(line: 290, column: 70, scope: !8743)
!8792 = !DILocation(line: 291, column: 57, scope: !8743)
!8793 = !DILocation(line: 288, column: 10, scope: !8743)
!8794 = !DILocation(line: 293, column: 13, scope: !8743)
!8795 = !DILocation(line: 296, column: 9, scope: !8743)
!8796 = !DILocation(line: 296, column: 17, scope: !8743)
!8797 = !{!8767, !2880, i64 28}
!8798 = !DILocation(line: 299, column: 33, scope: !8743)
!8799 = !{!8771, !2880, i64 16}
!8800 = !DILocation(line: 299, column: 9, scope: !8743)
!8801 = !DILocation(line: 299, column: 15, scope: !8743)
!8802 = !{!8767, !2880, i64 16}
!8803 = !DILocation(line: 300, column: 1, scope: !8743)
!8804 = distinct !DISubprogram(name: "I2S_Init", scope: !498, file: !498, line: 321, type: !8805, scopeLine: 322, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8817)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{null, !500, !8807}
!8807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8808, size: 32)
!8808 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2S_InitTypeDef", file: !8748, line: 105, baseType: !8809)
!8809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8748, line: 85, size: 128, elements: !8810)
!8810 = !{!8811, !8812, !8813, !8814, !8815, !8816}
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_Mode", scope: !8809, file: !8748, line: 88, baseType: !64, size: 16)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_Standard", scope: !8809, file: !8748, line: 91, baseType: !64, size: 16, offset: 16)
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_DataFormat", scope: !8809, file: !8748, line: 94, baseType: !64, size: 16, offset: 32)
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_MCLKOutput", scope: !8809, file: !8748, line: 97, baseType: !64, size: 16, offset: 48)
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_AudioFreq", scope: !8809, file: !8748, line: 100, baseType: !20, size: 32, offset: 64)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_CPOL", scope: !8809, file: !8748, line: 103, baseType: !64, size: 16, offset: 96)
!8817 = !{!8818, !8819, !8820, !8821, !8822, !8823, !8824, !8825, !8826, !8827, !8828}
!8818 = !DILocalVariable(name: "SPIx", arg: 1, scope: !8804, file: !498, line: 321, type: !500)
!8819 = !DILocalVariable(name: "I2S_InitStruct", arg: 2, scope: !8804, file: !498, line: 321, type: !8807)
!8820 = !DILocalVariable(name: "tmpreg", scope: !8804, file: !498, line: 323, type: !64)
!8821 = !DILocalVariable(name: "i2sdiv", scope: !8804, file: !498, line: 323, type: !64)
!8822 = !DILocalVariable(name: "i2sodd", scope: !8804, file: !498, line: 323, type: !64)
!8823 = !DILocalVariable(name: "packetlength", scope: !8804, file: !498, line: 323, type: !64)
!8824 = !DILocalVariable(name: "tmp", scope: !8804, file: !498, line: 324, type: !20)
!8825 = !DILocalVariable(name: "i2sclk", scope: !8804, file: !498, line: 324, type: !20)
!8826 = !DILocalVariable(name: "pllm", scope: !8804, file: !498, line: 326, type: !20)
!8827 = !DILocalVariable(name: "plln", scope: !8804, file: !498, line: 326, type: !20)
!8828 = !DILocalVariable(name: "pllr", scope: !8804, file: !498, line: 326, type: !20)
!8829 = !DILocation(line: 0, scope: !8804)
!8830 = !DILocation(line: 340, column: 9, scope: !8804)
!8831 = !DILocation(line: 340, column: 17, scope: !8804)
!8832 = !DILocation(line: 341, column: 9, scope: !8804)
!8833 = !DILocation(line: 341, column: 15, scope: !8804)
!8834 = !{!8767, !2880, i64 32}
!8835 = !DILocation(line: 344, column: 18, scope: !8804)
!8836 = !DILocation(line: 347, column: 22, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8804, file: !498, line: 347, column: 6)
!8838 = !{!8839, !840, i64 8}
!8839 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !2880, i64 6, !840, i64 8, !2880, i64 12}
!8840 = !DILocation(line: 347, column: 36, scope: !8837)
!8841 = !DILocation(line: 347, column: 6, scope: !8804)
!8842 = !DILocation(line: 437, column: 93, scope: !8804)
!8843 = !{!8839, !2880, i64 6}
!8844 = !DILocation(line: 441, column: 88, scope: !8804)
!8845 = !{!8839, !2880, i64 4}
!8846 = !DILocation(line: 356, column: 24, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !498, line: 356, column: 8)
!8848 = distinct !DILexicalBlock(scope: !8837, file: !498, line: 354, column: 3)
!8849 = !DILocation(line: 356, column: 39, scope: !8847)
!8850 = !DILocation(line: 383, column: 15, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8848, file: !498, line: 383, column: 9)
!8852 = !DILocation(line: 383, column: 20, scope: !8851)
!8853 = !DILocation(line: 383, column: 39, scope: !8851)
!8854 = !DILocation(line: 383, column: 9, scope: !8848)
!8855 = !DILocation(line: 385, column: 17, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8851, file: !498, line: 384, column: 5)
!8857 = !DILocation(line: 386, column: 5, scope: !8856)
!8858 = !DILocation(line: 389, column: 30, scope: !8848)
!8859 = !DILocation(line: 389, column: 67, scope: !8848)
!8860 = !DILocation(line: 393, column: 30, scope: !8848)
!8861 = !DILocation(line: 393, column: 67, scope: !8848)
!8862 = !DILocation(line: 397, column: 28, scope: !8848)
!8863 = !DILocation(line: 397, column: 36, scope: !8848)
!8864 = !DILocation(line: 400, column: 37, scope: !8848)
!8865 = !DILocation(line: 400, column: 45, scope: !8848)
!8866 = !DILocation(line: 400, column: 53, scope: !8848)
!8867 = !DILocation(line: 404, column: 24, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8848, file: !498, line: 404, column: 8)
!8869 = !DILocation(line: 404, column: 39, scope: !8868)
!8870 = !DILocation(line: 404, column: 8, scope: !8848)
!8871 = !DILocation(line: 0, scope: !8868)
!8872 = !DILocation(line: 416, column: 15, scope: !8848)
!8873 = !DILocation(line: 422, column: 40, scope: !8848)
!8874 = !DILocation(line: 425, column: 14, scope: !8848)
!8875 = !DILocation(line: 0, scope: !8837)
!8876 = !DILocation(line: 429, column: 20, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8804, file: !498, line: 429, column: 7)
!8878 = !DILocation(line: 437, column: 47, scope: !8804)
!8879 = !DILocation(line: 437, column: 45, scope: !8804)
!8880 = !DILocation(line: 437, column: 15, scope: !8804)
!8881 = !DILocation(line: 440, column: 82, scope: !8804)
!8882 = !{!8839, !2880, i64 0}
!8883 = !DILocation(line: 441, column: 46, scope: !8804)
!8884 = !{!8839, !2880, i64 2}
!8885 = !DILocation(line: 442, column: 45, scope: !8804)
!8886 = !{!8839, !2880, i64 12}
!8887 = !DILocation(line: 441, column: 59, scope: !8804)
!8888 = !DILocation(line: 440, column: 91, scope: !8804)
!8889 = !DILocation(line: 440, column: 53, scope: !8804)
!8890 = !DILocation(line: 440, column: 10, scope: !8804)
!8891 = !DILocation(line: 445, column: 17, scope: !8804)
!8892 = !DILocation(line: 446, column: 1, scope: !8804)
!8893 = distinct !DISubprogram(name: "SPI_StructInit", scope: !498, file: !498, line: 453, type: !8894, scopeLine: 454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8896)
!8894 = !DISubroutineType(types: !8895)
!8895 = !{null, !8746}
!8896 = !{!8897}
!8897 = !DILocalVariable(name: "SPI_InitStruct", arg: 1, scope: !8893, file: !498, line: 453, type: !8746)
!8898 = !DILocation(line: 0, scope: !8893)
!8899 = !DILocation(line: 457, column: 19, scope: !8893)
!8900 = !DILocation(line: 457, column: 33, scope: !8893)
!8901 = !DILocation(line: 459, column: 19, scope: !8893)
!8902 = !DILocation(line: 459, column: 28, scope: !8893)
!8903 = !DILocation(line: 461, column: 19, scope: !8893)
!8904 = !DILocation(line: 461, column: 32, scope: !8893)
!8905 = !DILocation(line: 463, column: 19, scope: !8893)
!8906 = !DILocation(line: 463, column: 28, scope: !8893)
!8907 = !DILocation(line: 465, column: 19, scope: !8893)
!8908 = !DILocation(line: 465, column: 28, scope: !8893)
!8909 = !DILocation(line: 467, column: 19, scope: !8893)
!8910 = !DILocation(line: 467, column: 27, scope: !8893)
!8911 = !DILocation(line: 469, column: 19, scope: !8893)
!8912 = !DILocation(line: 469, column: 41, scope: !8893)
!8913 = !DILocation(line: 471, column: 19, scope: !8893)
!8914 = !DILocation(line: 471, column: 32, scope: !8893)
!8915 = !DILocation(line: 473, column: 19, scope: !8893)
!8916 = !DILocation(line: 473, column: 37, scope: !8893)
!8917 = !DILocation(line: 474, column: 1, scope: !8893)
!8918 = distinct !DISubprogram(name: "I2S_StructInit", scope: !498, file: !498, line: 481, type: !8919, scopeLine: 482, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8921)
!8919 = !DISubroutineType(types: !8920)
!8920 = !{null, !8807}
!8921 = !{!8922}
!8922 = !DILocalVariable(name: "I2S_InitStruct", arg: 1, scope: !8918, file: !498, line: 481, type: !8807)
!8923 = !DILocation(line: 0, scope: !8918)
!8924 = !DILocation(line: 485, column: 19, scope: !8918)
!8925 = !DILocation(line: 485, column: 28, scope: !8918)
!8926 = !DILocation(line: 488, column: 19, scope: !8918)
!8927 = !DILocation(line: 488, column: 32, scope: !8918)
!8928 = !DILocation(line: 491, column: 19, scope: !8918)
!8929 = !DILocation(line: 491, column: 34, scope: !8918)
!8930 = !DILocation(line: 494, column: 19, scope: !8918)
!8931 = !DILocation(line: 494, column: 34, scope: !8918)
!8932 = !DILocation(line: 497, column: 19, scope: !8918)
!8933 = !DILocation(line: 497, column: 33, scope: !8918)
!8934 = !DILocation(line: 500, column: 19, scope: !8918)
!8935 = !DILocation(line: 500, column: 28, scope: !8918)
!8936 = !DILocation(line: 501, column: 1, scope: !8918)
!8937 = distinct !DISubprogram(name: "SPI_Cmd", scope: !498, file: !498, line: 510, type: !8938, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8940)
!8938 = !DISubroutineType(types: !8939)
!8939 = !{null, !500, !856}
!8940 = !{!8941, !8942}
!8941 = !DILocalVariable(name: "SPIx", arg: 1, scope: !8937, file: !498, line: 510, type: !500)
!8942 = !DILocalVariable(name: "NewState", arg: 2, scope: !8937, file: !498, line: 510, type: !856)
!8943 = !DILocation(line: 0, scope: !8937)
!8944 = !DILocation(line: 515, column: 16, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8937, file: !498, line: 515, column: 7)
!8946 = !DILocation(line: 0, scope: !8945)
!8947 = !DILocation(line: 515, column: 7, scope: !8937)
!8948 = !DILocation(line: 525, column: 1, scope: !8937)
!8949 = distinct !DISubprogram(name: "I2S_Cmd", scope: !498, file: !498, line: 535, type: !8938, scopeLine: 536, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8950)
!8950 = !{!8951, !8952}
!8951 = !DILocalVariable(name: "SPIx", arg: 1, scope: !8949, file: !498, line: 535, type: !500)
!8952 = !DILocalVariable(name: "NewState", arg: 2, scope: !8949, file: !498, line: 535, type: !856)
!8953 = !DILocation(line: 0, scope: !8949)
!8954 = !DILocation(line: 541, column: 16, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8949, file: !498, line: 541, column: 7)
!8956 = !DILocation(line: 0, scope: !8955)
!8957 = !DILocation(line: 541, column: 7, scope: !8949)
!8958 = !DILocation(line: 551, column: 1, scope: !8949)
!8959 = distinct !DISubprogram(name: "SPI_DataSizeConfig", scope: !498, file: !498, line: 562, type: !8960, scopeLine: 563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8962)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{null, !500, !64}
!8962 = !{!8963, !8964}
!8963 = !DILocalVariable(name: "SPIx", arg: 1, scope: !8959, file: !498, line: 562, type: !500)
!8964 = !DILocalVariable(name: "SPI_DataSize", arg: 2, scope: !8959, file: !498, line: 562, type: !64)
!8965 = !DILocation(line: 0, scope: !8959)
!8966 = !DILocation(line: 568, column: 9, scope: !8959)
!8967 = !DILocation(line: 568, column: 13, scope: !8959)
!8968 = !DILocation(line: 570, column: 13, scope: !8959)
!8969 = !DILocation(line: 571, column: 1, scope: !8959)
!8970 = distinct !DISubprogram(name: "SPI_BiDirectionalLineConfig", scope: !498, file: !498, line: 582, type: !8960, scopeLine: 583, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8971)
!8971 = !{!8972, !8973}
!8972 = !DILocalVariable(name: "SPIx", arg: 1, scope: !8970, file: !498, line: 582, type: !500)
!8973 = !DILocalVariable(name: "SPI_Direction", arg: 2, scope: !8970, file: !498, line: 582, type: !64)
!8974 = !DILocation(line: 0, scope: !8970)
!8975 = !DILocation(line: 587, column: 21, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8970, file: !498, line: 587, column: 7)
!8977 = !DILocation(line: 0, scope: !8976)
!8978 = !DILocation(line: 587, column: 7, scope: !8970)
!8979 = !DILocation(line: 597, column: 1, scope: !8970)
!8980 = distinct !DISubprogram(name: "SPI_NSSInternalSoftwareConfig", scope: !498, file: !498, line: 608, type: !8960, scopeLine: 609, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8981)
!8981 = !{!8982, !8983}
!8982 = !DILocalVariable(name: "SPIx", arg: 1, scope: !8980, file: !498, line: 608, type: !500)
!8983 = !DILocalVariable(name: "SPI_NSSInternalSoft", arg: 2, scope: !8980, file: !498, line: 608, type: !64)
!8984 = !DILocation(line: 0, scope: !8980)
!8985 = !DILocation(line: 613, column: 27, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8980, file: !498, line: 613, column: 7)
!8987 = !DILocation(line: 0, scope: !8986)
!8988 = !DILocation(line: 613, column: 7, scope: !8980)
!8989 = !DILocation(line: 623, column: 1, scope: !8980)
!8990 = distinct !DISubprogram(name: "SPI_SSOutputCmd", scope: !498, file: !498, line: 632, type: !8938, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !8991)
!8991 = !{!8992, !8993}
!8992 = !DILocalVariable(name: "SPIx", arg: 1, scope: !8990, file: !498, line: 632, type: !500)
!8993 = !DILocalVariable(name: "NewState", arg: 2, scope: !8990, file: !498, line: 632, type: !856)
!8994 = !DILocation(line: 0, scope: !8990)
!8995 = !DILocation(line: 637, column: 16, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8990, file: !498, line: 637, column: 7)
!8997 = !DILocation(line: 0, scope: !8996)
!8998 = !{!8767, !2880, i64 4}
!8999 = !DILocation(line: 637, column: 7, scope: !8990)
!9000 = !DILocation(line: 647, column: 1, scope: !8990)
!9001 = distinct !DISubprogram(name: "SPI_TIModeCmd", scope: !498, file: !498, line: 663, type: !8938, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9002)
!9002 = !{!9003, !9004}
!9003 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9001, file: !498, line: 663, type: !500)
!9004 = !DILocalVariable(name: "NewState", arg: 2, scope: !9001, file: !498, line: 663, type: !856)
!9005 = !DILocation(line: 0, scope: !9001)
!9006 = !DILocation(line: 669, column: 16, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9001, file: !498, line: 669, column: 7)
!9008 = !DILocation(line: 0, scope: !9007)
!9009 = !DILocation(line: 669, column: 7, scope: !9001)
!9010 = !DILocation(line: 679, column: 1, scope: !9001)
!9011 = distinct !DISubprogram(name: "I2S_FullDuplexConfig", scope: !498, file: !498, line: 700, type: !8805, scopeLine: 701, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9012)
!9012 = !{!9013, !9014, !9015, !9016}
!9013 = !DILocalVariable(name: "I2Sxext", arg: 1, scope: !9011, file: !498, line: 700, type: !500)
!9014 = !DILocalVariable(name: "I2S_InitStruct", arg: 2, scope: !9011, file: !498, line: 700, type: !8807)
!9015 = !DILocalVariable(name: "tmpreg", scope: !9011, file: !498, line: 702, type: !64)
!9016 = !DILocalVariable(name: "tmp", scope: !9011, file: !498, line: 702, type: !64)
!9017 = !DILocation(line: 0, scope: !9011)
!9018 = !DILocation(line: 713, column: 12, scope: !9011)
!9019 = !DILocation(line: 713, column: 20, scope: !9011)
!9020 = !DILocation(line: 714, column: 12, scope: !9011)
!9021 = !DILocation(line: 714, column: 18, scope: !9011)
!9022 = !DILocation(line: 717, column: 21, scope: !9011)
!9023 = !DILocation(line: 720, column: 24, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9011, file: !498, line: 720, column: 7)
!9025 = !DILocation(line: 720, column: 55, scope: !9024)
!9026 = !DILocation(line: 729, column: 5, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9028, file: !498, line: 727, column: 5)
!9028 = distinct !DILexicalBlock(scope: !9029, file: !498, line: 726, column: 9)
!9029 = distinct !DILexicalBlock(scope: !9024, file: !498, line: 725, column: 3)
!9030 = !DILocation(line: 735, column: 46, scope: !9011)
!9031 = !DILocation(line: 735, column: 88, scope: !9011)
!9032 = !DILocation(line: 736, column: 45, scope: !9011)
!9033 = !DILocation(line: 735, column: 59, scope: !9011)
!9034 = !DILocation(line: 734, column: 70, scope: !9011)
!9035 = !DILocation(line: 734, column: 53, scope: !9011)
!9036 = !DILocation(line: 734, column: 10, scope: !9011)
!9037 = !DILocation(line: 739, column: 20, scope: !9011)
!9038 = !DILocation(line: 740, column: 1, scope: !9011)
!9039 = distinct !DISubprogram(name: "SPI_I2S_ReceiveData", scope: !498, file: !498, line: 775, type: !9040, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9042)
!9040 = !DISubroutineType(types: !9041)
!9041 = !{!64, !500}
!9042 = !{!9043}
!9043 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9039, file: !498, line: 775, type: !500)
!9044 = !DILocation(line: 0, scope: !9039)
!9045 = !DILocation(line: 781, column: 16, scope: !9039)
!9046 = !{!8767, !2880, i64 12}
!9047 = !DILocation(line: 781, column: 3, scope: !9039)
!9048 = distinct !DISubprogram(name: "SPI_I2S_SendData", scope: !498, file: !498, line: 791, type: !8960, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9049)
!9049 = !{!9050, !9051}
!9050 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9048, file: !498, line: 791, type: !500)
!9051 = !DILocalVariable(name: "Data", arg: 2, scope: !9048, file: !498, line: 791, type: !64)
!9052 = !DILocation(line: 0, scope: !9048)
!9053 = !DILocation(line: 797, column: 9, scope: !9048)
!9054 = !DILocation(line: 797, column: 12, scope: !9048)
!9055 = !DILocation(line: 798, column: 1, scope: !9048)
!9056 = distinct !DISubprogram(name: "SPI_CalculateCRC", scope: !498, file: !498, line: 880, type: !8938, scopeLine: 881, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9057)
!9057 = !{!9058, !9059}
!9058 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9056, file: !498, line: 880, type: !500)
!9059 = !DILocalVariable(name: "NewState", arg: 2, scope: !9056, file: !498, line: 880, type: !856)
!9060 = !DILocation(line: 0, scope: !9056)
!9061 = !DILocation(line: 885, column: 16, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9056, file: !498, line: 885, column: 7)
!9063 = !DILocation(line: 0, scope: !9062)
!9064 = !DILocation(line: 885, column: 7, scope: !9056)
!9065 = !DILocation(line: 895, column: 1, scope: !9056)
!9066 = distinct !DISubprogram(name: "SPI_TransmitCRC", scope: !498, file: !498, line: 902, type: !8720, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9067)
!9067 = !{!9068}
!9068 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9066, file: !498, line: 902, type: !500)
!9069 = !DILocation(line: 0, scope: !9066)
!9070 = !DILocation(line: 908, column: 9, scope: !9066)
!9071 = !DILocation(line: 908, column: 13, scope: !9066)
!9072 = !DILocation(line: 909, column: 1, scope: !9066)
!9073 = distinct !DISubprogram(name: "SPI_GetCRC", scope: !498, file: !498, line: 920, type: !9074, scopeLine: 921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9076)
!9074 = !DISubroutineType(types: !9075)
!9075 = !{!64, !500, !60}
!9076 = !{!9077, !9078, !9079}
!9077 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9073, file: !498, line: 920, type: !500)
!9078 = !DILocalVariable(name: "SPI_CRC", arg: 2, scope: !9073, file: !498, line: 920, type: !60)
!9079 = !DILocalVariable(name: "crcreg", scope: !9073, file: !498, line: 922, type: !64)
!9080 = !DILocation(line: 0, scope: !9073)
!9081 = !DILocation(line: 926, column: 15, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9073, file: !498, line: 926, column: 7)
!9083 = !DILocation(line: 926, column: 7, scope: !9073)
!9084 = !DILocation(line: 0, scope: !9082)
!9085 = !DILocation(line: 937, column: 3, scope: !9073)
!9086 = distinct !DISubprogram(name: "SPI_GetCRCPolynomial", scope: !498, file: !498, line: 945, type: !9040, scopeLine: 946, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9087)
!9087 = !{!9088}
!9088 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9086, file: !498, line: 945, type: !500)
!9089 = !DILocation(line: 0, scope: !9086)
!9090 = !DILocation(line: 951, column: 16, scope: !9086)
!9091 = !DILocation(line: 951, column: 3, scope: !9086)
!9092 = distinct !DISubprogram(name: "SPI_I2S_DMACmd", scope: !498, file: !498, line: 982, type: !9093, scopeLine: 983, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9095)
!9093 = !DISubroutineType(types: !9094)
!9094 = !{null, !500, !64, !856}
!9095 = !{!9096, !9097, !9098}
!9096 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9092, file: !498, line: 982, type: !500)
!9097 = !DILocalVariable(name: "SPI_I2S_DMAReq", arg: 2, scope: !9092, file: !498, line: 982, type: !64)
!9098 = !DILocalVariable(name: "NewState", arg: 3, scope: !9092, file: !498, line: 982, type: !856)
!9099 = !DILocation(line: 0, scope: !9092)
!9100 = !DILocation(line: 989, column: 16, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9092, file: !498, line: 989, column: 7)
!9102 = !DILocation(line: 989, column: 7, scope: !9092)
!9103 = !DILocation(line: 992, column: 11, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9101, file: !498, line: 990, column: 3)
!9105 = !DILocation(line: 992, column: 15, scope: !9104)
!9106 = !DILocation(line: 993, column: 3, scope: !9104)
!9107 = !DILocation(line: 997, column: 28, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9101, file: !498, line: 995, column: 3)
!9109 = !DILocation(line: 997, column: 11, scope: !9108)
!9110 = !DILocation(line: 997, column: 15, scope: !9108)
!9111 = !DILocation(line: 999, column: 1, scope: !9092)
!9112 = distinct !DISubprogram(name: "SPI_I2S_ITConfig", scope: !498, file: !498, line: 1091, type: !9113, scopeLine: 1092, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9115)
!9113 = !DISubroutineType(types: !9114)
!9114 = !{null, !500, !60, !856}
!9115 = !{!9116, !9117, !9118, !9119, !9120}
!9116 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9112, file: !498, line: 1091, type: !500)
!9117 = !DILocalVariable(name: "SPI_I2S_IT", arg: 2, scope: !9112, file: !498, line: 1091, type: !60)
!9118 = !DILocalVariable(name: "NewState", arg: 3, scope: !9112, file: !498, line: 1091, type: !856)
!9119 = !DILocalVariable(name: "itpos", scope: !9112, file: !498, line: 1093, type: !64)
!9120 = !DILocalVariable(name: "itmask", scope: !9112, file: !498, line: 1093, type: !64)
!9121 = !DILocation(line: 0, scope: !9112)
!9122 = !DILocation(line: 1101, column: 22, scope: !9112)
!9123 = !DILocation(line: 1104, column: 27, scope: !9112)
!9124 = !DILocation(line: 1104, column: 24, scope: !9112)
!9125 = !DILocation(line: 1106, column: 16, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9112, file: !498, line: 1106, column: 7)
!9127 = !DILocation(line: 1106, column: 7, scope: !9112)
!9128 = !DILocation(line: 1109, column: 11, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9126, file: !498, line: 1107, column: 3)
!9130 = !DILocation(line: 1109, column: 15, scope: !9129)
!9131 = !DILocation(line: 1110, column: 3, scope: !9129)
!9132 = !DILocation(line: 1114, column: 28, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9126, file: !498, line: 1112, column: 3)
!9134 = !DILocation(line: 1114, column: 11, scope: !9133)
!9135 = !DILocation(line: 1114, column: 15, scope: !9133)
!9136 = !DILocation(line: 1116, column: 1, scope: !9112)
!9137 = distinct !DISubprogram(name: "SPI_I2S_GetFlagStatus", scope: !498, file: !498, line: 1135, type: !9138, scopeLine: 1136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9140)
!9138 = !DISubroutineType(types: !9139)
!9139 = !{!1276, !500, !64}
!9140 = !{!9141, !9142, !9143}
!9141 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9137, file: !498, line: 1135, type: !500)
!9142 = !DILocalVariable(name: "SPI_I2S_FLAG", arg: 2, scope: !9137, file: !498, line: 1135, type: !64)
!9143 = !DILocalVariable(name: "bitstatus", scope: !9137, file: !498, line: 1137, type: !1276)
!9144 = !DILocation(line: 0, scope: !9137)
!9145 = !DILocation(line: 1143, column: 14, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9137, file: !498, line: 1143, column: 7)
!9147 = !{!8767, !2880, i64 8}
!9148 = !DILocation(line: 1143, column: 17, scope: !9146)
!9149 = !DILocation(line: 1143, column: 33, scope: !9146)
!9150 = !DILocation(line: 1154, column: 3, scope: !9137)
!9151 = distinct !DISubprogram(name: "SPI_I2S_ClearFlag", scope: !498, file: !498, line: 1176, type: !8960, scopeLine: 1177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9152)
!9152 = !{!9153, !9154}
!9153 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9151, file: !498, line: 1176, type: !500)
!9154 = !DILocalVariable(name: "SPI_I2S_FLAG", arg: 2, scope: !9151, file: !498, line: 1176, type: !64)
!9155 = !DILocation(line: 0, scope: !9151)
!9156 = !DILocation(line: 1183, column: 24, scope: !9151)
!9157 = !DILocation(line: 1183, column: 9, scope: !9151)
!9158 = !DILocation(line: 1183, column: 12, scope: !9151)
!9159 = !DILocation(line: 1184, column: 1, scope: !9151)
!9160 = distinct !DISubprogram(name: "SPI_I2S_GetITStatus", scope: !498, file: !498, line: 1201, type: !9161, scopeLine: 1202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9163)
!9161 = !DISubroutineType(types: !9162)
!9162 = !{!1359, !500, !60}
!9163 = !{!9164, !9165, !9166, !9167, !9168, !9169}
!9164 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9160, file: !498, line: 1201, type: !500)
!9165 = !DILocalVariable(name: "SPI_I2S_IT", arg: 2, scope: !9160, file: !498, line: 1201, type: !60)
!9166 = !DILocalVariable(name: "bitstatus", scope: !9160, file: !498, line: 1203, type: !1359)
!9167 = !DILocalVariable(name: "itpos", scope: !9160, file: !498, line: 1204, type: !64)
!9168 = !DILocalVariable(name: "itmask", scope: !9160, file: !498, line: 1204, type: !64)
!9169 = !DILocalVariable(name: "enablestatus", scope: !9160, file: !498, line: 1204, type: !64)
!9170 = !DILocation(line: 0, scope: !9160)
!9171 = !DILocation(line: 1211, column: 31, scope: !9160)
!9172 = !DILocation(line: 1211, column: 16, scope: !9160)
!9173 = !DILocation(line: 1220, column: 25, scope: !9160)
!9174 = !DILocation(line: 1223, column: 15, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9160, file: !498, line: 1223, column: 7)
!9176 = !DILocation(line: 1223, column: 9, scope: !9175)
!9177 = !DILocation(line: 1223, column: 18, scope: !9175)
!9178 = !DILocation(line: 1223, column: 27, scope: !9175)
!9179 = !DILocation(line: 1223, column: 47, scope: !9175)
!9180 = !DILocation(line: 1214, column: 12, scope: !9160)
!9181 = !DILocation(line: 1217, column: 20, scope: !9160)
!9182 = !DILocation(line: 1217, column: 17, scope: !9160)
!9183 = !DILocation(line: 1220, column: 29, scope: !9160)
!9184 = !DILocation(line: 1223, column: 50, scope: !9175)
!9185 = !DILocation(line: 1223, column: 7, scope: !9160)
!9186 = !DILocation(line: 0, scope: !9175)
!9187 = !DILocation(line: 1234, column: 3, scope: !9160)
!9188 = distinct !DISubprogram(name: "SPI_I2S_ClearITPendingBit", scope: !498, file: !498, line: 1256, type: !9189, scopeLine: 1257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !497, retainedNodes: !9191)
!9189 = !DISubroutineType(types: !9190)
!9190 = !{null, !500, !60}
!9191 = !{!9192, !9193, !9194}
!9192 = !DILocalVariable(name: "SPIx", arg: 1, scope: !9188, file: !498, line: 1256, type: !500)
!9193 = !DILocalVariable(name: "SPI_I2S_IT", arg: 2, scope: !9188, file: !498, line: 1256, type: !60)
!9194 = !DILocalVariable(name: "itpos", scope: !9188, file: !498, line: 1258, type: !64)
!9195 = !DILocation(line: 0, scope: !9188)
!9196 = !DILocation(line: 1264, column: 31, scope: !9188)
!9197 = !DILocation(line: 1264, column: 16, scope: !9188)
!9198 = !DILocation(line: 1267, column: 24, scope: !9188)
!9199 = !DILocation(line: 1267, column: 9, scope: !9188)
!9200 = !DILocation(line: 1267, column: 12, scope: !9188)
!9201 = !DILocation(line: 1268, column: 1, scope: !9188)
!9202 = distinct !DISubprogram(name: "CRYP_DeInit", scope: !557, file: !557, line: 215, type: !1415, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !361)
!9203 = !DILocation(line: 218, column: 3, scope: !9202)
!9204 = !DILocation(line: 221, column: 3, scope: !9202)
!9205 = !DILocation(line: 222, column: 1, scope: !9202)
!9206 = distinct !DISubprogram(name: "CRYP_Init", scope: !557, file: !557, line: 231, type: !9207, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9217)
!9207 = !DISubroutineType(types: !9208)
!9208 = !{null, !9209}
!9209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9210, size: 32)
!9210 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_InitTypeDef", file: !7565, line: 59, baseType: !9211)
!9211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 47, size: 64, elements: !9212)
!9212 = !{!9213, !9214, !9215, !9216}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_AlgoDir", scope: !9211, file: !7565, line: 49, baseType: !64, size: 16)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_AlgoMode", scope: !9211, file: !7565, line: 51, baseType: !64, size: 16, offset: 16)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_DataType", scope: !9211, file: !7565, line: 54, baseType: !64, size: 16, offset: 32)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_KeySize", scope: !9211, file: !7565, line: 56, baseType: !64, size: 16, offset: 48)
!9217 = !{!9218}
!9218 = !DILocalVariable(name: "CRYP_InitStruct", arg: 1, scope: !9206, file: !557, line: 231, type: !9209)
!9219 = !DILocation(line: 0, scope: !9206)
!9220 = !DILocation(line: 239, column: 12, scope: !9206)
!9221 = !DILocation(line: 240, column: 32, scope: !9206)
!9222 = !DILocation(line: 240, column: 15, scope: !9206)
!9223 = !DILocation(line: 240, column: 12, scope: !9206)
!9224 = !DILocation(line: 243, column: 12, scope: !9206)
!9225 = !DILocation(line: 244, column: 32, scope: !9206)
!9226 = !DILocation(line: 244, column: 15, scope: !9206)
!9227 = !DILocation(line: 244, column: 12, scope: !9206)
!9228 = !DILocation(line: 247, column: 65, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9206, file: !557, line: 247, column: 7)
!9230 = !DILocation(line: 253, column: 14, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9229, file: !557, line: 251, column: 3)
!9232 = !DILocation(line: 254, column: 34, scope: !9231)
!9233 = !DILocation(line: 254, column: 17, scope: !9231)
!9234 = !DILocation(line: 254, column: 14, scope: !9231)
!9235 = !DILocation(line: 257, column: 3, scope: !9231)
!9236 = !DILocation(line: 260, column: 12, scope: !9206)
!9237 = !DILocation(line: 261, column: 32, scope: !9206)
!9238 = !DILocation(line: 261, column: 15, scope: !9206)
!9239 = !DILocation(line: 261, column: 12, scope: !9206)
!9240 = !DILocation(line: 262, column: 1, scope: !9206)
!9241 = distinct !DISubprogram(name: "CRYP_StructInit", scope: !557, file: !557, line: 270, type: !9207, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9242)
!9242 = !{!9243}
!9243 = !DILocalVariable(name: "CRYP_InitStruct", arg: 1, scope: !9241, file: !557, line: 270, type: !9209)
!9244 = !DILocation(line: 0, scope: !9241)
!9245 = !DILocation(line: 273, column: 20, scope: !9241)
!9246 = !DILocation(line: 273, column: 33, scope: !9241)
!9247 = !DILocation(line: 276, column: 20, scope: !9241)
!9248 = !DILocation(line: 276, column: 34, scope: !9241)
!9249 = !DILocation(line: 279, column: 20, scope: !9241)
!9250 = !DILocation(line: 279, column: 34, scope: !9241)
!9251 = !DILocation(line: 282, column: 20, scope: !9241)
!9252 = !DILocation(line: 282, column: 33, scope: !9241)
!9253 = !DILocation(line: 283, column: 1, scope: !9241)
!9254 = distinct !DISubprogram(name: "CRYP_KeyInit", scope: !557, file: !557, line: 292, type: !9255, scopeLine: 293, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9269)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{null, !9257}
!9257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9258, size: 32)
!9258 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_KeyInitTypeDef", file: !7565, line: 74, baseType: !9259)
!9259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 64, size: 256, elements: !9260)
!9260 = !{!9261, !9262, !9263, !9264, !9265, !9266, !9267, !9268}
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key0Left", scope: !9259, file: !7565, line: 66, baseType: !20, size: 32)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key0Right", scope: !9259, file: !7565, line: 67, baseType: !20, size: 32, offset: 32)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key1Left", scope: !9259, file: !7565, line: 68, baseType: !20, size: 32, offset: 64)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key1Right", scope: !9259, file: !7565, line: 69, baseType: !20, size: 32, offset: 96)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key2Left", scope: !9259, file: !7565, line: 70, baseType: !20, size: 32, offset: 128)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key2Right", scope: !9259, file: !7565, line: 71, baseType: !20, size: 32, offset: 160)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key3Left", scope: !9259, file: !7565, line: 72, baseType: !20, size: 32, offset: 192)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key3Right", scope: !9259, file: !7565, line: 73, baseType: !20, size: 32, offset: 224)
!9269 = !{!9270}
!9270 = !DILocalVariable(name: "CRYP_KeyInitStruct", arg: 1, scope: !9254, file: !557, line: 292, type: !9257)
!9271 = !DILocation(line: 0, scope: !9254)
!9272 = !DILocation(line: 295, column: 36, scope: !9254)
!9273 = !DILocation(line: 295, column: 14, scope: !9254)
!9274 = !{!2089, !840, i64 32}
!9275 = !DILocation(line: 296, column: 36, scope: !9254)
!9276 = !DILocation(line: 296, column: 14, scope: !9254)
!9277 = !DILocation(line: 297, column: 36, scope: !9254)
!9278 = !DILocation(line: 297, column: 14, scope: !9254)
!9279 = !DILocation(line: 298, column: 36, scope: !9254)
!9280 = !DILocation(line: 298, column: 14, scope: !9254)
!9281 = !DILocation(line: 299, column: 36, scope: !9254)
!9282 = !DILocation(line: 299, column: 14, scope: !9254)
!9283 = !{!2089, !840, i64 48}
!9284 = !DILocation(line: 300, column: 36, scope: !9254)
!9285 = !DILocation(line: 300, column: 14, scope: !9254)
!9286 = !{!2089, !840, i64 52}
!9287 = !DILocation(line: 301, column: 36, scope: !9254)
!9288 = !DILocation(line: 301, column: 14, scope: !9254)
!9289 = !DILocation(line: 302, column: 36, scope: !9254)
!9290 = !DILocation(line: 302, column: 14, scope: !9254)
!9291 = !{!2089, !840, i64 60}
!9292 = !DILocation(line: 303, column: 1, scope: !9254)
!9293 = distinct !DISubprogram(name: "CRYP_KeyStructInit", scope: !557, file: !557, line: 311, type: !9255, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9294)
!9294 = !{!9295}
!9295 = !DILocalVariable(name: "CRYP_KeyInitStruct", arg: 1, scope: !9293, file: !557, line: 311, type: !9257)
!9296 = !DILocation(line: 0, scope: !9293)
!9297 = !DILocation(line: 313, column: 23, scope: !9293)
!9298 = !DILocation(line: 313, column: 38, scope: !9293)
!9299 = !DILocation(line: 314, column: 23, scope: !9293)
!9300 = !DILocation(line: 314, column: 38, scope: !9293)
!9301 = !DILocation(line: 315, column: 23, scope: !9293)
!9302 = !DILocation(line: 315, column: 38, scope: !9293)
!9303 = !DILocation(line: 316, column: 23, scope: !9293)
!9304 = !DILocation(line: 316, column: 38, scope: !9293)
!9305 = !DILocation(line: 317, column: 23, scope: !9293)
!9306 = !DILocation(line: 317, column: 38, scope: !9293)
!9307 = !DILocation(line: 318, column: 23, scope: !9293)
!9308 = !DILocation(line: 318, column: 38, scope: !9293)
!9309 = !DILocation(line: 319, column: 23, scope: !9293)
!9310 = !DILocation(line: 319, column: 38, scope: !9293)
!9311 = !DILocation(line: 320, column: 23, scope: !9293)
!9312 = !DILocation(line: 320, column: 38, scope: !9293)
!9313 = !DILocation(line: 321, column: 1, scope: !9293)
!9314 = distinct !DISubprogram(name: "CRYP_IVInit", scope: !557, file: !557, line: 329, type: !9315, scopeLine: 330, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9325)
!9315 = !DISubroutineType(types: !9316)
!9316 = !{null, !9317}
!9317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9318, size: 32)
!9318 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_IVInitTypeDef", file: !7565, line: 84, baseType: !9319)
!9319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 78, size: 128, elements: !9320)
!9320 = !{!9321, !9322, !9323, !9324}
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0Left", scope: !9319, file: !7565, line: 80, baseType: !20, size: 32)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0Right", scope: !9319, file: !7565, line: 81, baseType: !20, size: 32, offset: 32)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1Left", scope: !9319, file: !7565, line: 82, baseType: !20, size: 32, offset: 64)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1Right", scope: !9319, file: !7565, line: 83, baseType: !20, size: 32, offset: 96)
!9325 = !{!9326}
!9326 = !DILocalVariable(name: "CRYP_IVInitStruct", arg: 1, scope: !9314, file: !557, line: 329, type: !9317)
!9327 = !DILocation(line: 0, scope: !9314)
!9328 = !DILocation(line: 331, column: 36, scope: !9314)
!9329 = !DILocation(line: 331, column: 15, scope: !9314)
!9330 = !{!2089, !840, i64 64}
!9331 = !DILocation(line: 332, column: 36, scope: !9314)
!9332 = !DILocation(line: 332, column: 15, scope: !9314)
!9333 = !{!2089, !840, i64 68}
!9334 = !DILocation(line: 333, column: 36, scope: !9314)
!9335 = !DILocation(line: 333, column: 15, scope: !9314)
!9336 = !{!2089, !840, i64 72}
!9337 = !DILocation(line: 334, column: 36, scope: !9314)
!9338 = !DILocation(line: 334, column: 15, scope: !9314)
!9339 = !DILocation(line: 335, column: 1, scope: !9314)
!9340 = distinct !DISubprogram(name: "CRYP_IVStructInit", scope: !557, file: !557, line: 343, type: !9315, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9341)
!9341 = !{!9342}
!9342 = !DILocalVariable(name: "CRYP_IVInitStruct", arg: 1, scope: !9340, file: !557, line: 343, type: !9317)
!9343 = !DILocation(line: 0, scope: !9340)
!9344 = !DILocation(line: 345, column: 22, scope: !9340)
!9345 = !DILocation(line: 345, column: 36, scope: !9340)
!9346 = !DILocation(line: 346, column: 22, scope: !9340)
!9347 = !DILocation(line: 346, column: 36, scope: !9340)
!9348 = !DILocation(line: 347, column: 22, scope: !9340)
!9349 = !DILocation(line: 347, column: 36, scope: !9340)
!9350 = !DILocation(line: 348, column: 22, scope: !9340)
!9351 = !DILocation(line: 348, column: 36, scope: !9340)
!9352 = !DILocation(line: 349, column: 1, scope: !9340)
!9353 = distinct !DISubprogram(name: "CRYP_FIFOFlush", scope: !557, file: !557, line: 358, type: !1415, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !361)
!9354 = !DILocation(line: 361, column: 12, scope: !9353)
!9355 = !DILocation(line: 362, column: 1, scope: !9353)
!9356 = distinct !DISubprogram(name: "CRYP_Cmd", scope: !557, file: !557, line: 370, type: !1502, scopeLine: 371, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9357)
!9357 = !{!9358}
!9358 = !DILocalVariable(name: "NewState", arg: 1, scope: !9356, file: !557, line: 370, type: !856)
!9359 = !DILocation(line: 0, scope: !9356)
!9360 = !DILocation(line: 375, column: 16, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9356, file: !557, line: 375, column: 7)
!9362 = !DILocation(line: 0, scope: !9361)
!9363 = !DILocation(line: 375, column: 7, scope: !9356)
!9364 = !DILocation(line: 385, column: 1, scope: !9356)
!9365 = distinct !DISubprogram(name: "CRYP_DataIn", scope: !557, file: !557, line: 413, type: !831, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9366)
!9366 = !{!9367}
!9367 = !DILocalVariable(name: "Data", arg: 1, scope: !9365, file: !557, line: 413, type: !20)
!9368 = !DILocation(line: 0, scope: !9365)
!9369 = !DILocation(line: 415, column: 12, scope: !9365)
!9370 = !DILocation(line: 416, column: 1, scope: !9365)
!9371 = distinct !DISubprogram(name: "CRYP_DataOut", scope: !557, file: !557, line: 423, type: !2372, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !361)
!9372 = !DILocation(line: 425, column: 16, scope: !9371)
!9373 = !{!2089, !840, i64 12}
!9374 = !DILocation(line: 425, column: 3, scope: !9371)
!9375 = distinct !DISubprogram(name: "CRYP_SaveContext", scope: !557, file: !557, line: 466, type: !9376, scopeLine: 468, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9395)
!9376 = !DISubroutineType(types: !9377)
!9377 = !{!358, !9378, !9257}
!9378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9379, size: 32)
!9379 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_Context", file: !7565, line: 107, baseType: !9380)
!9380 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 89, size: 416, elements: !9381)
!9381 = !{!9382, !9383, !9384, !9385, !9386, !9387, !9388, !9389, !9390, !9391, !9392, !9393, !9394}
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "CR_bits9to2", scope: !9380, file: !7565, line: 92, baseType: !20, size: 32)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0LR", scope: !9380, file: !7565, line: 94, baseType: !20, size: 32, offset: 32)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0RR", scope: !9380, file: !7565, line: 95, baseType: !20, size: 32, offset: 64)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1LR", scope: !9380, file: !7565, line: 96, baseType: !20, size: 32, offset: 96)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1RR", scope: !9380, file: !7565, line: 97, baseType: !20, size: 32, offset: 128)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_K0LR", scope: !9380, file: !7565, line: 99, baseType: !20, size: 32, offset: 160)
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_K0RR", scope: !9380, file: !7565, line: 100, baseType: !20, size: 32, offset: 192)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_K1LR", scope: !9380, file: !7565, line: 101, baseType: !20, size: 32, offset: 224)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_K1RR", scope: !9380, file: !7565, line: 102, baseType: !20, size: 32, offset: 256)
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_K2LR", scope: !9380, file: !7565, line: 103, baseType: !20, size: 32, offset: 288)
!9392 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_K2RR", scope: !9380, file: !7565, line: 104, baseType: !20, size: 32, offset: 320)
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_K3LR", scope: !9380, file: !7565, line: 105, baseType: !20, size: 32, offset: 352)
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_K3RR", scope: !9380, file: !7565, line: 106, baseType: !20, size: 32, offset: 384)
!9395 = !{!9396, !9397, !9398, !9399, !9400, !9401}
!9396 = !DILocalVariable(name: "CRYP_ContextSave", arg: 1, scope: !9375, file: !557, line: 466, type: !9378)
!9397 = !DILocalVariable(name: "CRYP_KeyInitStruct", arg: 2, scope: !9375, file: !557, line: 467, type: !9257)
!9398 = !DILocalVariable(name: "timeout", scope: !9375, file: !557, line: 469, type: !27)
!9399 = !DILocalVariable(name: "ckeckmask", scope: !9375, file: !557, line: 470, type: !20)
!9400 = !DILocalVariable(name: "bitstatus", scope: !9375, file: !557, line: 470, type: !20)
!9401 = !DILocalVariable(name: "status", scope: !9375, file: !557, line: 471, type: !358)
!9402 = !DILocation(line: 0, scope: !9375)
!9403 = !DILocation(line: 469, column: 3, scope: !9375)
!9404 = !DILocation(line: 469, column: 17, scope: !9375)
!9405 = !DILocation(line: 474, column: 15, scope: !9375)
!9406 = !{!2089, !840, i64 16}
!9407 = !DILocation(line: 480, column: 14, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9375, file: !557, line: 480, column: 7)
!9409 = !DILocation(line: 480, column: 17, scope: !9408)
!9410 = !DILocation(line: 480, column: 86, scope: !9408)
!9411 = !DILocation(line: 489, column: 3, scope: !9375)
!9412 = !DILocation(line: 491, column: 23, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9375, file: !557, line: 490, column: 3)
!9414 = !DILocation(line: 491, column: 26, scope: !9413)
!9415 = !DILocation(line: 492, column: 12, scope: !9413)
!9416 = !DILocation(line: 494, column: 11, scope: !9375)
!9417 = !DILocation(line: 494, column: 19, scope: !9375)
!9418 = !DILocation(line: 494, column: 35, scope: !9375)
!9419 = !DILocation(line: 493, column: 3, scope: !9413)
!9420 = distinct !{!9420, !9411, !9421}
!9421 = !DILocation(line: 494, column: 65, scope: !9375)
!9422 = !DILocation(line: 496, column: 14, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9375, file: !557, line: 496, column: 7)
!9424 = !DILocation(line: 496, column: 17, scope: !9423)
!9425 = !DILocation(line: 496, column: 30, scope: !9423)
!9426 = !DILocation(line: 496, column: 7, scope: !9375)
!9427 = !DILocation(line: 506, column: 17, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9423, file: !557, line: 501, column: 3)
!9429 = !DILocation(line: 507, column: 14, scope: !9428)
!9430 = !DILocation(line: 510, column: 44, scope: !9428)
!9431 = !DILocation(line: 510, column: 47, scope: !9428)
!9432 = !DILocation(line: 510, column: 23, scope: !9428)
!9433 = !DILocation(line: 510, column: 36, scope: !9428)
!9434 = !{!9435, !840, i64 0}
!9435 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !840, i64 32, !840, i64 36, !840, i64 40, !840, i64 44, !840, i64 48}
!9436 = !DILocation(line: 516, column: 42, scope: !9428)
!9437 = !DILocation(line: 516, column: 23, scope: !9428)
!9438 = !DILocation(line: 516, column: 34, scope: !9428)
!9439 = !{!9435, !840, i64 4}
!9440 = !DILocation(line: 517, column: 42, scope: !9428)
!9441 = !DILocation(line: 517, column: 23, scope: !9428)
!9442 = !DILocation(line: 517, column: 34, scope: !9428)
!9443 = !{!9435, !840, i64 8}
!9444 = !DILocation(line: 518, column: 42, scope: !9428)
!9445 = !DILocation(line: 518, column: 23, scope: !9428)
!9446 = !DILocation(line: 518, column: 34, scope: !9428)
!9447 = !{!9435, !840, i64 12}
!9448 = !DILocation(line: 519, column: 42, scope: !9428)
!9449 = !DILocation(line: 519, column: 23, scope: !9428)
!9450 = !DILocation(line: 519, column: 34, scope: !9428)
!9451 = !{!9435, !840, i64 16}
!9452 = !DILocation(line: 522, column: 55, scope: !9428)
!9453 = !DILocation(line: 522, column: 23, scope: !9428)
!9454 = !DILocation(line: 522, column: 33, scope: !9428)
!9455 = !{!9435, !840, i64 20}
!9456 = !DILocation(line: 523, column: 55, scope: !9428)
!9457 = !DILocation(line: 523, column: 23, scope: !9428)
!9458 = !DILocation(line: 523, column: 33, scope: !9428)
!9459 = !{!9435, !840, i64 24}
!9460 = !DILocation(line: 524, column: 55, scope: !9428)
!9461 = !DILocation(line: 524, column: 23, scope: !9428)
!9462 = !DILocation(line: 524, column: 33, scope: !9428)
!9463 = !{!9435, !840, i64 28}
!9464 = !DILocation(line: 525, column: 55, scope: !9428)
!9465 = !DILocation(line: 525, column: 23, scope: !9428)
!9466 = !DILocation(line: 525, column: 33, scope: !9428)
!9467 = !{!9435, !840, i64 32}
!9468 = !DILocation(line: 526, column: 55, scope: !9428)
!9469 = !DILocation(line: 526, column: 23, scope: !9428)
!9470 = !DILocation(line: 526, column: 33, scope: !9428)
!9471 = !{!9435, !840, i64 36}
!9472 = !DILocation(line: 527, column: 55, scope: !9428)
!9473 = !DILocation(line: 527, column: 23, scope: !9428)
!9474 = !DILocation(line: 527, column: 33, scope: !9428)
!9475 = !{!9435, !840, i64 40}
!9476 = !DILocation(line: 528, column: 55, scope: !9428)
!9477 = !DILocation(line: 528, column: 23, scope: !9428)
!9478 = !DILocation(line: 528, column: 33, scope: !9428)
!9479 = !{!9435, !840, i64 44}
!9480 = !DILocation(line: 529, column: 55, scope: !9428)
!9481 = !DILocation(line: 529, column: 23, scope: !9428)
!9482 = !DILocation(line: 529, column: 33, scope: !9428)
!9483 = !{!9435, !840, i64 48}
!9484 = !DILocation(line: 0, scope: !9423)
!9485 = !DILocation(line: 538, column: 1, scope: !9375)
!9486 = !DILocation(line: 537, column: 4, scope: !9375)
!9487 = distinct !DISubprogram(name: "CRYP_RestoreContext", scope: !557, file: !557, line: 551, type: !9488, scopeLine: 552, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9490)
!9488 = !DISubroutineType(types: !9489)
!9489 = !{null, !9378}
!9490 = !{!9491}
!9491 = !DILocalVariable(name: "CRYP_ContextRestore", arg: 1, scope: !9487, file: !557, line: 551, type: !9378)
!9492 = !DILocation(line: 0, scope: !9487)
!9493 = !DILocation(line: 555, column: 35, scope: !9487)
!9494 = !DILocation(line: 555, column: 12, scope: !9487)
!9495 = !DILocation(line: 558, column: 37, scope: !9487)
!9496 = !DILocation(line: 558, column: 14, scope: !9487)
!9497 = !DILocation(line: 559, column: 37, scope: !9487)
!9498 = !DILocation(line: 559, column: 14, scope: !9487)
!9499 = !DILocation(line: 560, column: 37, scope: !9487)
!9500 = !DILocation(line: 560, column: 14, scope: !9487)
!9501 = !DILocation(line: 561, column: 37, scope: !9487)
!9502 = !DILocation(line: 561, column: 14, scope: !9487)
!9503 = !DILocation(line: 562, column: 37, scope: !9487)
!9504 = !DILocation(line: 562, column: 14, scope: !9487)
!9505 = !DILocation(line: 563, column: 37, scope: !9487)
!9506 = !DILocation(line: 563, column: 14, scope: !9487)
!9507 = !DILocation(line: 564, column: 37, scope: !9487)
!9508 = !DILocation(line: 564, column: 14, scope: !9487)
!9509 = !DILocation(line: 565, column: 37, scope: !9487)
!9510 = !DILocation(line: 565, column: 14, scope: !9487)
!9511 = !DILocation(line: 568, column: 38, scope: !9487)
!9512 = !DILocation(line: 568, column: 15, scope: !9487)
!9513 = !DILocation(line: 569, column: 38, scope: !9487)
!9514 = !DILocation(line: 569, column: 15, scope: !9487)
!9515 = !DILocation(line: 570, column: 38, scope: !9487)
!9516 = !DILocation(line: 570, column: 15, scope: !9487)
!9517 = !DILocation(line: 571, column: 38, scope: !9487)
!9518 = !DILocation(line: 571, column: 15, scope: !9487)
!9519 = !DILocation(line: 574, column: 12, scope: !9487)
!9520 = !DILocation(line: 575, column: 1, scope: !9487)
!9521 = distinct !DISubprogram(name: "CRYP_DMACmd", scope: !557, file: !557, line: 612, type: !909, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9522)
!9522 = !{!9523, !9524}
!9523 = !DILocalVariable(name: "CRYP_DMAReq", arg: 1, scope: !9521, file: !557, line: 612, type: !60)
!9524 = !DILocalVariable(name: "NewState", arg: 2, scope: !9521, file: !557, line: 612, type: !856)
!9525 = !DILocation(line: 0, scope: !9521)
!9526 = !DILocation(line: 618, column: 16, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9521, file: !557, line: 618, column: 7)
!9528 = !DILocation(line: 618, column: 7, scope: !9521)
!9529 = !DILocation(line: 0, scope: !9527)
!9530 = !DILocation(line: 621, column: 17, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9527, file: !557, line: 619, column: 3)
!9532 = !DILocation(line: 622, column: 3, scope: !9531)
!9533 = !DILocation(line: 626, column: 29, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9527, file: !557, line: 624, column: 3)
!9535 = !DILocation(line: 626, column: 20, scope: !9534)
!9536 = !DILocation(line: 626, column: 17, scope: !9534)
!9537 = !DILocation(line: 628, column: 1, scope: !9521)
!9538 = distinct !DISubprogram(name: "CRYP_ITConfig", scope: !557, file: !557, line: 737, type: !909, scopeLine: 738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9539)
!9539 = !{!9540, !9541}
!9540 = !DILocalVariable(name: "CRYP_IT", arg: 1, scope: !9538, file: !557, line: 737, type: !60)
!9541 = !DILocalVariable(name: "NewState", arg: 2, scope: !9538, file: !557, line: 737, type: !856)
!9542 = !DILocation(line: 0, scope: !9538)
!9543 = !DILocation(line: 743, column: 16, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9538, file: !557, line: 743, column: 7)
!9545 = !DILocation(line: 743, column: 7, scope: !9538)
!9546 = !DILocation(line: 0, scope: !9544)
!9547 = !DILocation(line: 746, column: 17, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9544, file: !557, line: 744, column: 3)
!9549 = !{!2089, !840, i64 20}
!9550 = !DILocation(line: 747, column: 3, scope: !9548)
!9551 = !DILocation(line: 751, column: 29, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9544, file: !557, line: 749, column: 3)
!9553 = !DILocation(line: 751, column: 20, scope: !9552)
!9554 = !DILocation(line: 751, column: 17, scope: !9552)
!9555 = !DILocation(line: 753, column: 1, scope: !9538)
!9556 = distinct !DISubprogram(name: "CRYP_GetITStatus", scope: !557, file: !557, line: 765, type: !2020, scopeLine: 766, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9557)
!9557 = !{!9558, !9559}
!9558 = !DILocalVariable(name: "CRYP_IT", arg: 1, scope: !9556, file: !557, line: 765, type: !60)
!9559 = !DILocalVariable(name: "bitstatus", scope: !9556, file: !557, line: 767, type: !1359)
!9560 = !DILocation(line: 0, scope: !9556)
!9561 = !DILocation(line: 772, column: 14, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9556, file: !557, line: 772, column: 7)
!9563 = !{!2089, !840, i64 28}
!9564 = !DILocation(line: 772, column: 22, scope: !9562)
!9565 = !DILocation(line: 772, column: 19, scope: !9562)
!9566 = !DILocation(line: 772, column: 31, scope: !9562)
!9567 = !DILocation(line: 783, column: 3, scope: !9556)
!9568 = distinct !DISubprogram(name: "CRYP_GetFlagStatus", scope: !557, file: !557, line: 799, type: !1451, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !556, retainedNodes: !9569)
!9569 = !{!9570, !9571, !9572}
!9570 = !DILocalVariable(name: "CRYP_FLAG", arg: 1, scope: !9568, file: !557, line: 799, type: !60)
!9571 = !DILocalVariable(name: "bitstatus", scope: !9568, file: !557, line: 801, type: !1276)
!9572 = !DILocalVariable(name: "tempreg", scope: !9568, file: !557, line: 802, type: !20)
!9573 = !DILocation(line: 0, scope: !9568)
!9574 = !DILocation(line: 808, column: 8, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9568, file: !557, line: 808, column: 7)
!9576 = !DILocation(line: 808, column: 18, scope: !9575)
!9577 = !DILocation(line: 808, column: 31, scope: !9575)
!9578 = !DILocation(line: 0, scope: !9575)
!9579 = !DILocation(line: 819, column: 16, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9568, file: !557, line: 819, column: 7)
!9581 = !DILocation(line: 819, column: 30, scope: !9580)
!9582 = !DILocation(line: 819, column: 7, scope: !9568)
!9583 = !DILocation(line: 831, column: 3, scope: !9568)
!9584 = distinct !DISubprogram(name: "HASH_DeInit", scope: !585, file: !585, line: 171, type: !1415, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !361)
!9585 = !DILocation(line: 174, column: 3, scope: !9584)
!9586 = !DILocation(line: 176, column: 3, scope: !9584)
!9587 = !DILocation(line: 177, column: 1, scope: !9584)
!9588 = distinct !DISubprogram(name: "HASH_Init", scope: !585, file: !585, line: 191, type: !9589, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9600)
!9589 = !DISubroutineType(types: !9590)
!9590 = !{null, !9591}
!9591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9592, size: 32)
!9592 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_InitTypeDef", file: !9593, line: 58, baseType: !9594)
!9593 = !DIFile(filename: "inc/peripherals/stm32f4xx_hash.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!9594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9593, line: 47, size: 128, elements: !9595)
!9595 = !{!9596, !9597, !9598, !9599}
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_AlgoSelection", scope: !9594, file: !9593, line: 49, baseType: !20, size: 32)
!9597 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_AlgoMode", scope: !9594, file: !9593, line: 51, baseType: !20, size: 32, offset: 32)
!9598 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_DataType", scope: !9594, file: !9593, line: 53, baseType: !20, size: 32, offset: 64)
!9599 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_HMACKeyType", scope: !9594, file: !9593, line: 56, baseType: !20, size: 32, offset: 96)
!9600 = !{!9601}
!9601 = !DILocalVariable(name: "HASH_InitStruct", arg: 1, scope: !9588, file: !585, line: 191, type: !9591)
!9602 = !DILocation(line: 0, scope: !9588)
!9603 = !DILocation(line: 199, column: 12, scope: !9588)
!9604 = !{!9605, !840, i64 0}
!9605 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !841, i64 12, !840, i64 32, !840, i64 36, !841, i64 40, !841, i64 248}
!9606 = !DILocation(line: 200, column: 33, scope: !9588)
!9607 = !DILocation(line: 201, column: 33, scope: !9588)
!9608 = !DILocation(line: 200, column: 52, scope: !9588)
!9609 = !DILocation(line: 202, column: 33, scope: !9588)
!9610 = !DILocation(line: 201, column: 47, scope: !9588)
!9611 = !DILocation(line: 200, column: 12, scope: !9588)
!9612 = !DILocation(line: 205, column: 37, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9588, file: !585, line: 205, column: 6)
!9614 = !DILocation(line: 205, column: 6, scope: !9588)
!9615 = !DILocation(line: 208, column: 14, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9613, file: !585, line: 206, column: 3)
!9617 = !DILocation(line: 209, column: 34, scope: !9616)
!9618 = !DILocation(line: 209, column: 14, scope: !9616)
!9619 = !DILocation(line: 210, column: 3, scope: !9616)
!9620 = !DILocation(line: 214, column: 12, scope: !9588)
!9621 = !DILocation(line: 215, column: 1, scope: !9588)
!9622 = distinct !DISubprogram(name: "HASH_StructInit", scope: !585, file: !585, line: 225, type: !9589, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9623)
!9623 = !{!9624}
!9624 = !DILocalVariable(name: "HASH_InitStruct", arg: 1, scope: !9622, file: !585, line: 225, type: !9591)
!9625 = !DILocation(line: 0, scope: !9622)
!9626 = !DILocation(line: 228, column: 20, scope: !9622)
!9627 = !DILocation(line: 228, column: 39, scope: !9622)
!9628 = !DILocation(line: 231, column: 20, scope: !9622)
!9629 = !DILocation(line: 231, column: 34, scope: !9622)
!9630 = !DILocation(line: 234, column: 20, scope: !9622)
!9631 = !DILocation(line: 234, column: 34, scope: !9622)
!9632 = !DILocation(line: 237, column: 20, scope: !9622)
!9633 = !DILocation(line: 237, column: 37, scope: !9622)
!9634 = !DILocation(line: 238, column: 1, scope: !9622)
!9635 = distinct !DISubprogram(name: "HASH_Reset", scope: !585, file: !585, line: 249, type: !1415, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !361)
!9636 = !DILocation(line: 252, column: 12, scope: !9635)
!9637 = !DILocation(line: 253, column: 1, scope: !9635)
!9638 = distinct !DISubprogram(name: "HASH_SetLastWordValidBitsNbr", scope: !585, file: !585, line: 291, type: !9639, scopeLine: 292, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9641)
!9639 = !DISubroutineType(types: !9640)
!9640 = !{null, !64}
!9641 = !{!9642}
!9642 = !DILocalVariable(name: "ValidNumber", arg: 1, scope: !9638, file: !585, line: 291, type: !64)
!9643 = !DILocation(line: 0, scope: !9638)
!9644 = !DILocation(line: 297, column: 13, scope: !9638)
!9645 = !{!9605, !840, i64 8}
!9646 = !DILocation(line: 298, column: 16, scope: !9638)
!9647 = !DILocation(line: 298, column: 13, scope: !9638)
!9648 = !DILocation(line: 299, column: 1, scope: !9638)
!9649 = distinct !DISubprogram(name: "HASH_DataIn", scope: !585, file: !585, line: 306, type: !831, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9650)
!9650 = !{!9651}
!9651 = !DILocalVariable(name: "Data", arg: 1, scope: !9649, file: !585, line: 306, type: !20)
!9652 = !DILocation(line: 0, scope: !9649)
!9653 = !DILocation(line: 309, column: 13, scope: !9649)
!9654 = !{!9605, !840, i64 4}
!9655 = !DILocation(line: 310, column: 1, scope: !9649)
!9656 = distinct !DISubprogram(name: "HASH_GetInFIFOWordsNbr", scope: !585, file: !585, line: 317, type: !1610, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !361)
!9657 = !DILocation(line: 320, column: 18, scope: !9656)
!9658 = !DILocation(line: 320, column: 36, scope: !9656)
!9659 = !DILocation(line: 320, column: 10, scope: !9656)
!9660 = !DILocation(line: 320, column: 3, scope: !9656)
!9661 = distinct !DISubprogram(name: "HASH_GetDigest", scope: !585, file: !585, line: 331, type: !9662, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9669)
!9662 = !DISubroutineType(types: !9663)
!9663 = !{null, !9664}
!9664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9665, size: 32)
!9665 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_MsgDigest", file: !9593, line: 67, baseType: !9666)
!9666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9593, line: 63, size: 160, elements: !9667)
!9667 = !{!9668}
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "Data", scope: !9666, file: !9593, line: 65, baseType: !112, size: 160)
!9669 = !{!9670}
!9670 = !DILocalVariable(name: "HASH_MessageDigest", arg: 1, scope: !9661, file: !585, line: 331, type: !9664)
!9671 = !DILocation(line: 0, scope: !9661)
!9672 = !DILocation(line: 334, column: 33, scope: !9661)
!9673 = !DILocation(line: 334, column: 3, scope: !9661)
!9674 = !DILocation(line: 334, column: 31, scope: !9661)
!9675 = !DILocation(line: 335, column: 33, scope: !9661)
!9676 = !DILocation(line: 335, column: 3, scope: !9661)
!9677 = !DILocation(line: 335, column: 31, scope: !9661)
!9678 = !DILocation(line: 336, column: 33, scope: !9661)
!9679 = !DILocation(line: 336, column: 3, scope: !9661)
!9680 = !DILocation(line: 336, column: 31, scope: !9661)
!9681 = !DILocation(line: 337, column: 33, scope: !9661)
!9682 = !DILocation(line: 337, column: 3, scope: !9661)
!9683 = !DILocation(line: 337, column: 31, scope: !9661)
!9684 = !DILocation(line: 338, column: 33, scope: !9661)
!9685 = !DILocation(line: 338, column: 3, scope: !9661)
!9686 = !DILocation(line: 338, column: 31, scope: !9661)
!9687 = !DILocation(line: 339, column: 1, scope: !9661)
!9688 = distinct !DISubprogram(name: "HASH_StartDigest", scope: !585, file: !585, line: 346, type: !1415, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !361)
!9689 = !DILocation(line: 349, column: 13, scope: !9688)
!9690 = !DILocation(line: 350, column: 1, scope: !9688)
!9691 = distinct !DISubprogram(name: "HASH_SaveContext", scope: !585, file: !585, line: 389, type: !9692, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9703)
!9692 = !DISubroutineType(types: !9693)
!9693 = !{null, !9694}
!9694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9695, size: 32)
!9695 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_Context", file: !9593, line: 78, baseType: !9696)
!9696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9593, line: 72, size: 1728, elements: !9697)
!9697 = !{!9698, !9699, !9700, !9701}
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_IMR", scope: !9696, file: !9593, line: 74, baseType: !20, size: 32)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_STR", scope: !9696, file: !9593, line: 75, baseType: !20, size: 32, offset: 32)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_CR", scope: !9696, file: !9593, line: 76, baseType: !20, size: 32, offset: 64)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_CSR", scope: !9696, file: !9593, line: 77, baseType: !9702, size: 1632, offset: 96)
!9702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 1632, elements: !604)
!9703 = !{!9704, !9705}
!9704 = !DILocalVariable(name: "HASH_ContextSave", arg: 1, scope: !9691, file: !585, line: 389, type: !9694)
!9705 = !DILocalVariable(name: "i", scope: !9691, file: !585, line: 391, type: !60)
!9706 = !DILocation(line: 0, scope: !9691)
!9707 = !DILocation(line: 394, column: 38, scope: !9691)
!9708 = !{!9605, !840, i64 32}
!9709 = !DILocation(line: 394, column: 21, scope: !9691)
!9710 = !DILocation(line: 394, column: 30, scope: !9691)
!9711 = !{!9712, !840, i64 0}
!9712 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !841, i64 12}
!9713 = !DILocation(line: 395, column: 38, scope: !9691)
!9714 = !DILocation(line: 395, column: 21, scope: !9691)
!9715 = !DILocation(line: 395, column: 30, scope: !9691)
!9716 = !{!9712, !840, i64 4}
!9717 = !DILocation(line: 396, column: 38, scope: !9691)
!9718 = !DILocation(line: 396, column: 21, scope: !9691)
!9719 = !DILocation(line: 396, column: 30, scope: !9691)
!9720 = !{!9712, !840, i64 8}
!9721 = !DILocation(line: 397, column: 3, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9691, file: !585, line: 397, column: 3)
!9723 = !DILocation(line: 399, column: 38, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9725, file: !585, line: 398, column: 3)
!9725 = distinct !DILexicalBlock(scope: !9722, file: !585, line: 397, column: 3)
!9726 = !DILocation(line: 399, column: 6, scope: !9724)
!9727 = !DILocation(line: 399, column: 36, scope: !9724)
!9728 = !DILocation(line: 397, column: 19, scope: !9725)
!9729 = !DILocation(line: 397, column: 13, scope: !9725)
!9730 = distinct !{!9730, !9721, !9731}
!9731 = !DILocation(line: 400, column: 3, scope: !9722)
!9732 = !DILocation(line: 401, column: 1, scope: !9691)
!9733 = distinct !DISubprogram(name: "HASH_RestoreContext", scope: !585, file: !585, line: 411, type: !9692, scopeLine: 412, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9734)
!9734 = !{!9735, !9736}
!9735 = !DILocalVariable(name: "HASH_ContextRestore", arg: 1, scope: !9733, file: !585, line: 411, type: !9694)
!9736 = !DILocalVariable(name: "i", scope: !9733, file: !585, line: 413, type: !60)
!9737 = !DILocation(line: 0, scope: !9733)
!9738 = !DILocation(line: 416, column: 36, scope: !9733)
!9739 = !DILocation(line: 416, column: 13, scope: !9733)
!9740 = !DILocation(line: 417, column: 36, scope: !9733)
!9741 = !DILocation(line: 417, column: 13, scope: !9733)
!9742 = !DILocation(line: 418, column: 35, scope: !9733)
!9743 = !DILocation(line: 418, column: 12, scope: !9733)
!9744 = !DILocation(line: 421, column: 12, scope: !9733)
!9745 = !DILocation(line: 424, column: 3, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9733, file: !585, line: 424, column: 3)
!9747 = !DILocation(line: 426, column: 21, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9749, file: !585, line: 425, column: 3)
!9749 = distinct !DILexicalBlock(scope: !9746, file: !585, line: 424, column: 3)
!9750 = !DILocation(line: 426, column: 6, scope: !9748)
!9751 = !DILocation(line: 426, column: 19, scope: !9748)
!9752 = !DILocation(line: 424, column: 19, scope: !9749)
!9753 = !DILocation(line: 424, column: 13, scope: !9749)
!9754 = distinct !{!9754, !9745, !9755}
!9755 = !DILocation(line: 427, column: 3, scope: !9746)
!9756 = !DILocation(line: 428, column: 1, scope: !9733)
!9757 = distinct !DISubprogram(name: "HASH_DMACmd", scope: !585, file: !585, line: 460, type: !1502, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9758)
!9758 = !{!9759}
!9759 = !DILocalVariable(name: "NewState", arg: 1, scope: !9757, file: !585, line: 460, type: !856)
!9760 = !DILocation(line: 0, scope: !9757)
!9761 = !DILocation(line: 465, column: 16, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9757, file: !585, line: 465, column: 7)
!9763 = !DILocation(line: 0, scope: !9762)
!9764 = !DILocation(line: 465, column: 7, scope: !9757)
!9765 = !DILocation(line: 475, column: 1, scope: !9757)
!9766 = distinct !DISubprogram(name: "HASH_ITConfig", scope: !585, file: !585, line: 555, type: !909, scopeLine: 556, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9767)
!9767 = !{!9768, !9769}
!9768 = !DILocalVariable(name: "HASH_IT", arg: 1, scope: !9766, file: !585, line: 555, type: !60)
!9769 = !DILocalVariable(name: "NewState", arg: 2, scope: !9766, file: !585, line: 555, type: !856)
!9770 = !DILocation(line: 0, scope: !9766)
!9771 = !DILocation(line: 561, column: 16, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9766, file: !585, line: 561, column: 7)
!9773 = !DILocation(line: 561, column: 7, scope: !9766)
!9774 = !DILocation(line: 0, scope: !9772)
!9775 = !DILocation(line: 564, column: 15, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9772, file: !585, line: 562, column: 3)
!9777 = !DILocation(line: 565, column: 3, scope: !9776)
!9778 = !DILocation(line: 569, column: 28, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9772, file: !585, line: 567, column: 3)
!9780 = !DILocation(line: 569, column: 18, scope: !9779)
!9781 = !DILocation(line: 569, column: 15, scope: !9779)
!9782 = !DILocation(line: 571, column: 1, scope: !9766)
!9783 = distinct !DISubprogram(name: "HASH_GetFlagStatus", scope: !585, file: !585, line: 584, type: !9784, scopeLine: 585, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9786)
!9784 = !DISubroutineType(types: !9785)
!9785 = !{!1276, !64}
!9786 = !{!9787, !9788, !9789}
!9787 = !DILocalVariable(name: "HASH_FLAG", arg: 1, scope: !9783, file: !585, line: 584, type: !64)
!9788 = !DILocalVariable(name: "bitstatus", scope: !9783, file: !585, line: 586, type: !1276)
!9789 = !DILocalVariable(name: "tempreg", scope: !9783, file: !585, line: 587, type: !20)
!9790 = !DILocation(line: 0, scope: !9783)
!9791 = !DILocation(line: 593, column: 8, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9783, file: !585, line: 593, column: 7)
!9793 = !DILocation(line: 593, column: 18, scope: !9792)
!9794 = !DILocation(line: 593, column: 37, scope: !9792)
!9795 = !DILocation(line: 0, scope: !9792)
!9796 = !DILocation(line: 603, column: 16, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9783, file: !585, line: 603, column: 7)
!9798 = !DILocation(line: 603, column: 29, scope: !9797)
!9799 = !DILocation(line: 603, column: 7, scope: !9783)
!9800 = !DILocation(line: 615, column: 3, scope: !9783)
!9801 = distinct !DISubprogram(name: "HASH_ClearFlag", scope: !585, file: !585, line: 625, type: !9639, scopeLine: 626, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9802)
!9802 = !{!9803}
!9803 = !DILocalVariable(name: "HASH_FLAG", arg: 1, scope: !9801, file: !585, line: 625, type: !64)
!9804 = !DILocation(line: 0, scope: !9801)
!9805 = !DILocation(line: 631, column: 15, scope: !9801)
!9806 = !DILocation(line: 631, column: 14, scope: !9801)
!9807 = !DILocation(line: 631, column: 12, scope: !9801)
!9808 = !{!9605, !840, i64 36}
!9809 = !DILocation(line: 632, column: 1, scope: !9801)
!9810 = distinct !DISubprogram(name: "HASH_GetITStatus", scope: !585, file: !585, line: 641, type: !2020, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9811)
!9811 = !{!9812, !9813, !9814}
!9812 = !DILocalVariable(name: "HASH_IT", arg: 1, scope: !9810, file: !585, line: 641, type: !60)
!9813 = !DILocalVariable(name: "bitstatus", scope: !9810, file: !585, line: 643, type: !1359)
!9814 = !DILocalVariable(name: "tmpreg", scope: !9810, file: !585, line: 644, type: !20)
!9815 = !DILocation(line: 0, scope: !9810)
!9816 = !DILocation(line: 651, column: 19, scope: !9810)
!9817 = !DILocation(line: 653, column: 15, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9810, file: !585, line: 653, column: 7)
!9819 = !DILocation(line: 653, column: 31, scope: !9818)
!9820 = !DILocation(line: 653, column: 19, scope: !9818)
!9821 = !DILocation(line: 653, column: 29, scope: !9818)
!9822 = !DILocation(line: 653, column: 40, scope: !9818)
!9823 = !DILocation(line: 664, column: 3, scope: !9810)
!9824 = distinct !DISubprogram(name: "HASH_ClearITPendingBit", scope: !585, file: !585, line: 675, type: !1430, scopeLine: 676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !584, retainedNodes: !9825)
!9825 = !{!9826}
!9826 = !DILocalVariable(name: "HASH_IT", arg: 1, scope: !9824, file: !585, line: 675, type: !60)
!9827 = !DILocation(line: 0, scope: !9824)
!9828 = !DILocation(line: 681, column: 23, scope: !9824)
!9829 = !DILocation(line: 681, column: 14, scope: !9824)
!9830 = !DILocation(line: 681, column: 12, scope: !9824)
!9831 = !DILocation(line: 682, column: 1, scope: !9824)
!9832 = distinct !DISubprogram(name: "SYSCFG_DeInit", scope: !607, file: !607, line: 86, type: !1415, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !606, retainedNodes: !361)
!9833 = !DILocation(line: 88, column: 4, scope: !9832)
!9834 = !DILocation(line: 89, column: 4, scope: !9832)
!9835 = !DILocation(line: 90, column: 1, scope: !9832)
!9836 = distinct !DISubprogram(name: "SYSCFG_MemoryRemapConfig", scope: !607, file: !607, line: 102, type: !1430, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !606, retainedNodes: !9837)
!9837 = !{!9838}
!9838 = !DILocalVariable(name: "SYSCFG_MemoryRemap", arg: 1, scope: !9836, file: !607, line: 102, type: !60)
!9839 = !DILocation(line: 0, scope: !9836)
!9840 = !DILocation(line: 107, column: 20, scope: !9836)
!9841 = !DILocation(line: 107, column: 18, scope: !9836)
!9842 = !{!9843, !840, i64 0}
!9843 = !{!"", !840, i64 0, !840, i64 4, !841, i64 8, !841, i64 24, !840, i64 32}
!9844 = !DILocation(line: 108, column: 1, scope: !9836)
!9845 = distinct !DISubprogram(name: "SYSCFG_EXTILineConfig", scope: !607, file: !607, line: 119, type: !9846, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !606, retainedNodes: !9848)
!9846 = !DISubroutineType(types: !9847)
!9847 = !{null, !60, !60}
!9848 = !{!9849, !9850, !9851}
!9849 = !DILocalVariable(name: "EXTI_PortSourceGPIOx", arg: 1, scope: !9845, file: !607, line: 119, type: !60)
!9850 = !DILocalVariable(name: "EXTI_PinSourcex", arg: 2, scope: !9845, file: !607, line: 119, type: !60)
!9851 = !DILocalVariable(name: "tmp", scope: !9845, file: !607, line: 121, type: !20)
!9852 = !DILocation(line: 0, scope: !9845)
!9853 = !DILocation(line: 127, column: 38, scope: !9845)
!9854 = !DILocation(line: 127, column: 35, scope: !9845)
!9855 = !DILocation(line: 127, column: 26, scope: !9845)
!9856 = !DILocation(line: 128, column: 46, scope: !9845)
!9857 = !DILocation(line: 128, column: 34, scope: !9845)
!9858 = !DILocation(line: 128, column: 3, scope: !9845)
!9859 = !DILocation(line: 128, column: 43, scope: !9845)
!9860 = !DILocation(line: 129, column: 48, scope: !9845)
!9861 = !DILocation(line: 129, column: 80, scope: !9845)
!9862 = !DILocation(line: 129, column: 43, scope: !9845)
!9863 = !DILocation(line: 130, column: 1, scope: !9845)
!9864 = distinct !DISubprogram(name: "SYSCFG_ETH_MediaInterfaceConfig", scope: !607, file: !607, line: 140, type: !831, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !606, retainedNodes: !9865)
!9865 = !{!9866}
!9866 = !DILocalVariable(name: "SYSCFG_ETH_MediaInterface", arg: 1, scope: !9864, file: !607, line: 140, type: !20)
!9867 = !DILocation(line: 0, scope: !9864)
!9868 = !DILocation(line: 144, column: 42, scope: !9864)
!9869 = !DILocation(line: 145, column: 1, scope: !9864)
!9870 = distinct !DISubprogram(name: "SYSCFG_CompensationCellCmd", scope: !607, file: !607, line: 157, type: !1502, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !606, retainedNodes: !9871)
!9871 = !{!9872}
!9872 = !DILocalVariable(name: "NewState", arg: 1, scope: !9870, file: !607, line: 157, type: !856)
!9873 = !DILocation(line: 0, scope: !9870)
!9874 = !DILocation(line: 162, column: 38, scope: !9870)
!9875 = !DILocation(line: 163, column: 1, scope: !9870)
!9876 = distinct !DISubprogram(name: "SYSCFG_GetCompensationCellStatus", scope: !607, file: !607, line: 170, type: !4861, scopeLine: 171, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !606, retainedNodes: !9877)
!9877 = !{!9878}
!9878 = !DILocalVariable(name: "bitstatus", scope: !9876, file: !607, line: 172, type: !1276)
!9879 = !DILocation(line: 0, scope: !9876)
!9880 = !DILocation(line: 174, column: 16, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9876, file: !607, line: 174, column: 7)
!9882 = !{!9843, !840, i64 32}
!9883 = !DILocation(line: 182, column: 3, scope: !9876)
!9884 = distinct !DISubprogram(name: "CRYP_DES_ECB", scope: !620, file: !620, line: 94, type: !9885, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !9887)
!9885 = !DISubroutineType(types: !9886)
!9886 = !{!358, !60, !7555, !7555, !20, !7555}
!9887 = !{!9888, !9889, !9890, !9891, !9892, !9893, !9901, !9913, !9914, !9915, !9916, !9917, !9918, !9919}
!9888 = !DILocalVariable(name: "Mode", arg: 1, scope: !9884, file: !620, line: 94, type: !60)
!9889 = !DILocalVariable(name: "Key", arg: 2, scope: !9884, file: !620, line: 94, type: !7555)
!9890 = !DILocalVariable(name: "Input", arg: 3, scope: !9884, file: !620, line: 94, type: !7555)
!9891 = !DILocalVariable(name: "Ilength", arg: 4, scope: !9884, file: !620, line: 95, type: !20)
!9892 = !DILocalVariable(name: "Output", arg: 5, scope: !9884, file: !620, line: 95, type: !7555)
!9893 = !DILocalVariable(name: "DES_CRYP_InitStructure", scope: !9884, file: !620, line: 97, type: !9894)
!9894 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_InitTypeDef", file: !7565, line: 59, baseType: !9895)
!9895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 47, size: 64, elements: !9896)
!9896 = !{!9897, !9898, !9899, !9900}
!9897 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_AlgoDir", scope: !9895, file: !7565, line: 49, baseType: !64, size: 16)
!9898 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_AlgoMode", scope: !9895, file: !7565, line: 51, baseType: !64, size: 16, offset: 16)
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_DataType", scope: !9895, file: !7565, line: 54, baseType: !64, size: 16, offset: 32)
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_KeySize", scope: !9895, file: !7565, line: 56, baseType: !64, size: 16, offset: 48)
!9901 = !DILocalVariable(name: "DES_CRYP_KeyInitStructure", scope: !9884, file: !620, line: 98, type: !9902)
!9902 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_KeyInitTypeDef", file: !7565, line: 74, baseType: !9903)
!9903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 64, size: 256, elements: !9904)
!9904 = !{!9905, !9906, !9907, !9908, !9909, !9910, !9911, !9912}
!9905 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key0Left", scope: !9903, file: !7565, line: 66, baseType: !20, size: 32)
!9906 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key0Right", scope: !9903, file: !7565, line: 67, baseType: !20, size: 32, offset: 32)
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key1Left", scope: !9903, file: !7565, line: 68, baseType: !20, size: 32, offset: 64)
!9908 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key1Right", scope: !9903, file: !7565, line: 69, baseType: !20, size: 32, offset: 96)
!9909 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key2Left", scope: !9903, file: !7565, line: 70, baseType: !20, size: 32, offset: 128)
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key2Right", scope: !9903, file: !7565, line: 71, baseType: !20, size: 32, offset: 160)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key3Left", scope: !9903, file: !7565, line: 72, baseType: !20, size: 32, offset: 192)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key3Right", scope: !9903, file: !7565, line: 73, baseType: !20, size: 32, offset: 224)
!9913 = !DILocalVariable(name: "counter", scope: !9884, file: !620, line: 99, type: !27)
!9914 = !DILocalVariable(name: "busystatus", scope: !9884, file: !620, line: 100, type: !20)
!9915 = !DILocalVariable(name: "status", scope: !9884, file: !620, line: 101, type: !358)
!9916 = !DILocalVariable(name: "keyaddr", scope: !9884, file: !620, line: 102, type: !20)
!9917 = !DILocalVariable(name: "inputaddr", scope: !9884, file: !620, line: 103, type: !20)
!9918 = !DILocalVariable(name: "outputaddr", scope: !9884, file: !620, line: 104, type: !20)
!9919 = !DILocalVariable(name: "i", scope: !9884, file: !620, line: 105, type: !20)
!9920 = !DILocation(line: 0, scope: !9884)
!9921 = !DILocation(line: 97, column: 3, scope: !9884)
!9922 = !DILocation(line: 97, column: 20, scope: !9884)
!9923 = !DILocation(line: 98, column: 3, scope: !9884)
!9924 = !DILocation(line: 98, column: 23, scope: !9884)
!9925 = !DILocation(line: 99, column: 3, scope: !9884)
!9926 = !DILocation(line: 99, column: 17, scope: !9884)
!9927 = !DILocation(line: 102, column: 25, scope: !9884)
!9928 = !DILocation(line: 108, column: 3, scope: !9884)
!9929 = !DILocation(line: 111, column: 12, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9884, file: !620, line: 111, column: 7)
!9931 = !DILocation(line: 0, scope: !9930)
!9932 = !DILocation(line: 120, column: 26, scope: !9884)
!9933 = !DILocation(line: 120, column: 40, scope: !9884)
!9934 = !DILocation(line: 121, column: 26, scope: !9884)
!9935 = !DILocation(line: 121, column: 40, scope: !9884)
!9936 = !DILocation(line: 122, column: 3, scope: !9884)
!9937 = !DILocation(line: 125, column: 52, scope: !9884)
!9938 = !DILocation(line: 125, column: 51, scope: !9884)
!9939 = !DILocalVariable(name: "value", arg: 1, scope: !9940, file: !7612, line: 348, type: !20)
!9940 = distinct !DISubprogram(name: "__REV", scope: !7612, file: !7612, line: 348, type: !5897, scopeLine: 349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !9941)
!9941 = !{!9939, !9942}
!9942 = !DILocalVariable(name: "result", scope: !9940, file: !7612, line: 350, type: !20)
!9943 = !DILocation(line: 0, scope: !9940, inlinedAt: !9944)
!9944 = distinct !DILocation(line: 125, column: 45, scope: !9884)
!9945 = !DILocation(line: 352, column: 3, scope: !9940, inlinedAt: !9944)
!9946 = !{i32 681117}
!9947 = !DILocation(line: 125, column: 29, scope: !9884)
!9948 = !DILocation(line: 125, column: 43, scope: !9884)
!9949 = !DILocation(line: 126, column: 10, scope: !9884)
!9950 = !DILocation(line: 127, column: 52, scope: !9884)
!9951 = !DILocation(line: 127, column: 51, scope: !9884)
!9952 = !DILocation(line: 0, scope: !9940, inlinedAt: !9953)
!9953 = distinct !DILocation(line: 127, column: 45, scope: !9884)
!9954 = !DILocation(line: 352, column: 3, scope: !9940, inlinedAt: !9953)
!9955 = !DILocation(line: 127, column: 29, scope: !9884)
!9956 = !DILocation(line: 127, column: 43, scope: !9884)
!9957 = !DILocation(line: 128, column: 3, scope: !9884)
!9958 = !DILocation(line: 131, column: 3, scope: !9884)
!9959 = !DILocation(line: 134, column: 3, scope: !9884)
!9960 = !DILocation(line: 136, column: 15, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9962, file: !620, line: 136, column: 3)
!9962 = distinct !DILexicalBlock(scope: !9884, file: !620, line: 136, column: 3)
!9963 = !DILocation(line: 136, column: 3, scope: !9962)
!9964 = !DILocation(line: 104, column: 25, scope: !9884)
!9965 = !DILocation(line: 103, column: 25, scope: !9884)
!9966 = !DILocation(line: 140, column: 18, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9961, file: !620, line: 137, column: 3)
!9968 = !DILocation(line: 140, column: 17, scope: !9967)
!9969 = !DILocation(line: 140, column: 5, scope: !9967)
!9970 = !DILocation(line: 141, column: 14, scope: !9967)
!9971 = !DILocation(line: 142, column: 18, scope: !9967)
!9972 = !DILocation(line: 142, column: 17, scope: !9967)
!9973 = !DILocation(line: 142, column: 5, scope: !9967)
!9974 = !DILocation(line: 146, column: 13, scope: !9967)
!9975 = !DILocation(line: 147, column: 5, scope: !9967)
!9976 = !DILocation(line: 149, column: 20, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9967, file: !620, line: 148, column: 5)
!9978 = !DILocation(line: 150, column: 14, scope: !9977)
!9979 = !DILocation(line: 151, column: 14, scope: !9967)
!9980 = !DILocation(line: 151, column: 22, scope: !9967)
!9981 = !DILocation(line: 151, column: 42, scope: !9967)
!9982 = !DILocation(line: 151, column: 5, scope: !9977)
!9983 = distinct !{!9983, !9975, !9984}
!9984 = !DILocation(line: 151, column: 66, scope: !9967)
!9985 = !DILocation(line: 153, column: 9, scope: !9967)
!9986 = !DILocation(line: 143, column: 14, scope: !9967)
!9987 = !DILocation(line: 161, column: 34, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !620, line: 158, column: 5)
!9989 = distinct !DILexicalBlock(scope: !9967, file: !620, line: 153, column: 9)
!9990 = !DILocation(line: 161, column: 8, scope: !9988)
!9991 = !DILocation(line: 161, column: 32, scope: !9988)
!9992 = !DILocation(line: 162, column: 17, scope: !9988)
!9993 = !DILocation(line: 163, column: 34, scope: !9988)
!9994 = !DILocation(line: 163, column: 8, scope: !9988)
!9995 = !DILocation(line: 163, column: 32, scope: !9988)
!9996 = !DILocation(line: 164, column: 17, scope: !9988)
!9997 = !DILocation(line: 136, column: 49, scope: !9961)
!9998 = distinct !{!9998, !9963, !9999}
!9999 = !DILocation(line: 166, column: 3, scope: !9962)
!10000 = !DILocation(line: 169, column: 3, scope: !9884)
!10001 = !DILocation(line: 172, column: 1, scope: !9884)
!10002 = !DILocation(line: 171, column: 3, scope: !9884)
!10003 = distinct !DISubprogram(name: "CRYP_DES_CBC", scope: !620, file: !620, line: 189, type: !10004, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !10006)
!10004 = !DISubroutineType(types: !10005)
!10005 = !{!358, !60, !7555, !7555, !7555, !20, !7555}
!10006 = !{!10007, !10008, !10009, !10010, !10011, !10012, !10013, !10014, !10015, !10023, !10024, !10025, !10026, !10027, !10028, !10029, !10030}
!10007 = !DILocalVariable(name: "Mode", arg: 1, scope: !10003, file: !620, line: 189, type: !60)
!10008 = !DILocalVariable(name: "Key", arg: 2, scope: !10003, file: !620, line: 189, type: !7555)
!10009 = !DILocalVariable(name: "InitVectors", arg: 3, scope: !10003, file: !620, line: 189, type: !7555)
!10010 = !DILocalVariable(name: "Input", arg: 4, scope: !10003, file: !620, line: 190, type: !7555)
!10011 = !DILocalVariable(name: "Ilength", arg: 5, scope: !10003, file: !620, line: 190, type: !20)
!10012 = !DILocalVariable(name: "Output", arg: 6, scope: !10003, file: !620, line: 190, type: !7555)
!10013 = !DILocalVariable(name: "DES_CRYP_InitStructure", scope: !10003, file: !620, line: 192, type: !9894)
!10014 = !DILocalVariable(name: "DES_CRYP_KeyInitStructure", scope: !10003, file: !620, line: 193, type: !9902)
!10015 = !DILocalVariable(name: "DES_CRYP_IVInitStructure", scope: !10003, file: !620, line: 194, type: !10016)
!10016 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_IVInitTypeDef", file: !7565, line: 84, baseType: !10017)
!10017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 78, size: 128, elements: !10018)
!10018 = !{!10019, !10020, !10021, !10022}
!10019 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0Left", scope: !10017, file: !7565, line: 80, baseType: !20, size: 32)
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0Right", scope: !10017, file: !7565, line: 81, baseType: !20, size: 32, offset: 32)
!10021 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1Left", scope: !10017, file: !7565, line: 82, baseType: !20, size: 32, offset: 64)
!10022 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1Right", scope: !10017, file: !7565, line: 83, baseType: !20, size: 32, offset: 96)
!10023 = !DILocalVariable(name: "counter", scope: !10003, file: !620, line: 195, type: !27)
!10024 = !DILocalVariable(name: "busystatus", scope: !10003, file: !620, line: 196, type: !20)
!10025 = !DILocalVariable(name: "status", scope: !10003, file: !620, line: 197, type: !358)
!10026 = !DILocalVariable(name: "keyaddr", scope: !10003, file: !620, line: 198, type: !20)
!10027 = !DILocalVariable(name: "inputaddr", scope: !10003, file: !620, line: 199, type: !20)
!10028 = !DILocalVariable(name: "outputaddr", scope: !10003, file: !620, line: 200, type: !20)
!10029 = !DILocalVariable(name: "ivaddr", scope: !10003, file: !620, line: 201, type: !20)
!10030 = !DILocalVariable(name: "i", scope: !10003, file: !620, line: 202, type: !20)
!10031 = !DILocation(line: 0, scope: !10003)
!10032 = !DILocation(line: 192, column: 3, scope: !10003)
!10033 = !DILocation(line: 192, column: 20, scope: !10003)
!10034 = !DILocation(line: 193, column: 3, scope: !10003)
!10035 = !DILocation(line: 193, column: 23, scope: !10003)
!10036 = !DILocation(line: 194, column: 3, scope: !10003)
!10037 = !DILocation(line: 194, column: 22, scope: !10003)
!10038 = !DILocation(line: 195, column: 3, scope: !10003)
!10039 = !DILocation(line: 195, column: 17, scope: !10003)
!10040 = !DILocation(line: 198, column: 25, scope: !10003)
!10041 = !DILocation(line: 201, column: 25, scope: !10003)
!10042 = !DILocation(line: 205, column: 3, scope: !10003)
!10043 = !DILocation(line: 208, column: 11, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10003, file: !620, line: 208, column: 6)
!10045 = !DILocation(line: 0, scope: !10044)
!10046 = !DILocation(line: 217, column: 26, scope: !10003)
!10047 = !DILocation(line: 217, column: 40, scope: !10003)
!10048 = !DILocation(line: 218, column: 26, scope: !10003)
!10049 = !DILocation(line: 218, column: 40, scope: !10003)
!10050 = !DILocation(line: 219, column: 3, scope: !10003)
!10051 = !DILocation(line: 222, column: 52, scope: !10003)
!10052 = !DILocation(line: 222, column: 51, scope: !10003)
!10053 = !DILocation(line: 0, scope: !9940, inlinedAt: !10054)
!10054 = distinct !DILocation(line: 222, column: 45, scope: !10003)
!10055 = !DILocation(line: 352, column: 3, scope: !9940, inlinedAt: !10054)
!10056 = !DILocation(line: 222, column: 29, scope: !10003)
!10057 = !DILocation(line: 222, column: 43, scope: !10003)
!10058 = !DILocation(line: 223, column: 10, scope: !10003)
!10059 = !DILocation(line: 224, column: 52, scope: !10003)
!10060 = !DILocation(line: 224, column: 51, scope: !10003)
!10061 = !DILocation(line: 0, scope: !9940, inlinedAt: !10062)
!10062 = distinct !DILocation(line: 224, column: 45, scope: !10003)
!10063 = !DILocation(line: 352, column: 3, scope: !9940, inlinedAt: !10062)
!10064 = !DILocation(line: 224, column: 29, scope: !10003)
!10065 = !DILocation(line: 224, column: 43, scope: !10003)
!10066 = !DILocation(line: 225, column: 3, scope: !10003)
!10067 = !DILocation(line: 228, column: 50, scope: !10003)
!10068 = !DILocation(line: 228, column: 49, scope: !10003)
!10069 = !DILocation(line: 0, scope: !9940, inlinedAt: !10070)
!10070 = distinct !DILocation(line: 228, column: 43, scope: !10003)
!10071 = !DILocation(line: 352, column: 3, scope: !9940, inlinedAt: !10070)
!10072 = !DILocation(line: 228, column: 28, scope: !10003)
!10073 = !DILocation(line: 228, column: 41, scope: !10003)
!10074 = !DILocation(line: 229, column: 9, scope: !10003)
!10075 = !DILocation(line: 230, column: 50, scope: !10003)
!10076 = !DILocation(line: 230, column: 49, scope: !10003)
!10077 = !DILocation(line: 0, scope: !9940, inlinedAt: !10078)
!10078 = distinct !DILocation(line: 230, column: 43, scope: !10003)
!10079 = !DILocation(line: 352, column: 3, scope: !9940, inlinedAt: !10078)
!10080 = !DILocation(line: 230, column: 28, scope: !10003)
!10081 = !DILocation(line: 230, column: 41, scope: !10003)
!10082 = !DILocation(line: 231, column: 3, scope: !10003)
!10083 = !DILocation(line: 234, column: 3, scope: !10003)
!10084 = !DILocation(line: 237, column: 3, scope: !10003)
!10085 = !DILocation(line: 239, column: 15, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10087, file: !620, line: 239, column: 3)
!10087 = distinct !DILexicalBlock(scope: !10003, file: !620, line: 239, column: 3)
!10088 = !DILocation(line: 239, column: 3, scope: !10087)
!10089 = !DILocation(line: 200, column: 25, scope: !10003)
!10090 = !DILocation(line: 199, column: 25, scope: !10003)
!10091 = !DILocation(line: 242, column: 18, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10086, file: !620, line: 240, column: 3)
!10093 = !DILocation(line: 242, column: 17, scope: !10092)
!10094 = !DILocation(line: 242, column: 5, scope: !10092)
!10095 = !DILocation(line: 243, column: 14, scope: !10092)
!10096 = !DILocation(line: 244, column: 18, scope: !10092)
!10097 = !DILocation(line: 244, column: 17, scope: !10092)
!10098 = !DILocation(line: 244, column: 5, scope: !10092)
!10099 = !DILocation(line: 248, column: 13, scope: !10092)
!10100 = !DILocation(line: 249, column: 5, scope: !10092)
!10101 = !DILocation(line: 251, column: 20, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10092, file: !620, line: 250, column: 5)
!10103 = !DILocation(line: 252, column: 14, scope: !10102)
!10104 = !DILocation(line: 253, column: 14, scope: !10092)
!10105 = !DILocation(line: 253, column: 22, scope: !10092)
!10106 = !DILocation(line: 253, column: 42, scope: !10092)
!10107 = !DILocation(line: 253, column: 5, scope: !10102)
!10108 = distinct !{!10108, !10100, !10109}
!10109 = !DILocation(line: 253, column: 66, scope: !10092)
!10110 = !DILocation(line: 255, column: 9, scope: !10092)
!10111 = !DILocation(line: 245, column: 14, scope: !10092)
!10112 = !DILocation(line: 262, column: 34, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10114, file: !620, line: 260, column: 5)
!10114 = distinct !DILexicalBlock(scope: !10092, file: !620, line: 255, column: 9)
!10115 = !DILocation(line: 262, column: 8, scope: !10113)
!10116 = !DILocation(line: 262, column: 32, scope: !10113)
!10117 = !DILocation(line: 263, column: 17, scope: !10113)
!10118 = !DILocation(line: 264, column: 34, scope: !10113)
!10119 = !DILocation(line: 264, column: 8, scope: !10113)
!10120 = !DILocation(line: 264, column: 32, scope: !10113)
!10121 = !DILocation(line: 265, column: 17, scope: !10113)
!10122 = !DILocation(line: 239, column: 49, scope: !10086)
!10123 = distinct !{!10123, !10088, !10124}
!10124 = !DILocation(line: 267, column: 3, scope: !10087)
!10125 = !DILocation(line: 270, column: 3, scope: !10003)
!10126 = !DILocation(line: 273, column: 1, scope: !10003)
!10127 = !DILocation(line: 272, column: 3, scope: !10003)
!10128 = distinct !DISubprogram(name: "HASH_MD5", scope: !623, file: !623, line: 87, type: !10129, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !10131)
!10129 = !DISubroutineType(types: !10130)
!10130 = !{!358, !7555, !20, !7555}
!10131 = !{!10132, !10133, !10134, !10135, !10143, !10148, !10149, !10150, !10151, !10152, !10153, !10154}
!10132 = !DILocalVariable(name: "Input", arg: 1, scope: !10128, file: !623, line: 87, type: !7555)
!10133 = !DILocalVariable(name: "Ilen", arg: 2, scope: !10128, file: !623, line: 87, type: !20)
!10134 = !DILocalVariable(name: "Output", arg: 3, scope: !10128, file: !623, line: 87, type: !7555)
!10135 = !DILocalVariable(name: "MD5_HASH_InitStructure", scope: !10128, file: !623, line: 89, type: !10136)
!10136 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_InitTypeDef", file: !9593, line: 58, baseType: !10137)
!10137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9593, line: 47, size: 128, elements: !10138)
!10138 = !{!10139, !10140, !10141, !10142}
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_AlgoSelection", scope: !10137, file: !9593, line: 49, baseType: !20, size: 32)
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_AlgoMode", scope: !10137, file: !9593, line: 51, baseType: !20, size: 32, offset: 32)
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_DataType", scope: !10137, file: !9593, line: 53, baseType: !20, size: 32, offset: 64)
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_HMACKeyType", scope: !10137, file: !9593, line: 56, baseType: !20, size: 32, offset: 96)
!10143 = !DILocalVariable(name: "MD5_MessageDigest", scope: !10128, file: !623, line: 90, type: !10144)
!10144 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_MsgDigest", file: !9593, line: 67, baseType: !10145)
!10145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9593, line: 63, size: 160, elements: !10146)
!10146 = !{!10147}
!10147 = !DIDerivedType(tag: DW_TAG_member, name: "Data", scope: !10145, file: !9593, line: 65, baseType: !112, size: 160)
!10148 = !DILocalVariable(name: "nbvalidbitsdata", scope: !10128, file: !623, line: 91, type: !310)
!10149 = !DILocalVariable(name: "i", scope: !10128, file: !623, line: 92, type: !20)
!10150 = !DILocalVariable(name: "counter", scope: !10128, file: !623, line: 93, type: !27)
!10151 = !DILocalVariable(name: "busystatus", scope: !10128, file: !623, line: 94, type: !20)
!10152 = !DILocalVariable(name: "status", scope: !10128, file: !623, line: 95, type: !358)
!10153 = !DILocalVariable(name: "inputaddr", scope: !10128, file: !623, line: 96, type: !20)
!10154 = !DILocalVariable(name: "outputaddr", scope: !10128, file: !623, line: 97, type: !20)
!10155 = !DILocation(line: 0, scope: !10128)
!10156 = !DILocation(line: 89, column: 3, scope: !10128)
!10157 = !DILocation(line: 89, column: 20, scope: !10128)
!10158 = !DILocation(line: 90, column: 3, scope: !10128)
!10159 = !DILocation(line: 90, column: 18, scope: !10128)
!10160 = !DILocation(line: 91, column: 3, scope: !10128)
!10161 = !DILocation(line: 91, column: 17, scope: !10128)
!10162 = !DILocation(line: 93, column: 3, scope: !10128)
!10163 = !DILocation(line: 93, column: 17, scope: !10128)
!10164 = !DILocation(line: 97, column: 25, scope: !10128)
!10165 = !DILocation(line: 101, column: 21, scope: !10128)
!10166 = !DILocation(line: 101, column: 19, scope: !10128)
!10167 = !DILocation(line: 104, column: 3, scope: !10128)
!10168 = !DILocation(line: 107, column: 26, scope: !10128)
!10169 = !DILocation(line: 107, column: 45, scope: !10128)
!10170 = !DILocation(line: 108, column: 26, scope: !10128)
!10171 = !DILocation(line: 108, column: 40, scope: !10128)
!10172 = !DILocation(line: 109, column: 26, scope: !10128)
!10173 = !DILocation(line: 109, column: 40, scope: !10128)
!10174 = !DILocation(line: 110, column: 3, scope: !10128)
!10175 = !DILocation(line: 113, column: 32, scope: !10128)
!10176 = !DILocation(line: 113, column: 3, scope: !10128)
!10177 = !DILocation(line: 116, column: 13, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10179, file: !623, line: 116, column: 3)
!10179 = distinct !DILexicalBlock(scope: !10128, file: !623, line: 116, column: 3)
!10180 = !DILocation(line: 116, column: 3, scope: !10179)
!10181 = !DILocation(line: 96, column: 25, scope: !10128)
!10182 = !DILocation(line: 118, column: 18, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10178, file: !623, line: 117, column: 3)
!10184 = !DILocation(line: 118, column: 17, scope: !10183)
!10185 = !DILocation(line: 118, column: 5, scope: !10183)
!10186 = !DILocation(line: 119, column: 14, scope: !10183)
!10187 = !DILocation(line: 116, column: 21, scope: !10178)
!10188 = distinct !{!10188, !10180, !10189}
!10189 = !DILocation(line: 120, column: 3, scope: !10179)
!10190 = !DILocation(line: 123, column: 3, scope: !10128)
!10191 = !DILocation(line: 126, column: 3, scope: !10128)
!10192 = !DILocation(line: 128, column: 18, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10128, file: !623, line: 127, column: 3)
!10194 = !DILocation(line: 129, column: 12, scope: !10193)
!10195 = !DILocation(line: 130, column: 12, scope: !10128)
!10196 = !DILocation(line: 130, column: 20, scope: !10128)
!10197 = !DILocation(line: 130, column: 40, scope: !10128)
!10198 = !DILocation(line: 130, column: 3, scope: !10193)
!10199 = distinct !{!10199, !10191, !10200}
!10200 = !DILocation(line: 130, column: 64, scope: !10128)
!10201 = !DILocation(line: 132, column: 7, scope: !10128)
!10202 = !DILocation(line: 139, column: 5, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10204, file: !623, line: 137, column: 3)
!10204 = distinct !DILexicalBlock(scope: !10128, file: !623, line: 132, column: 7)
!10205 = !DILocation(line: 140, column: 39, scope: !10203)
!10206 = !DILocalVariable(name: "value", arg: 1, scope: !10207, file: !7612, line: 348, type: !20)
!10207 = distinct !DISubprogram(name: "__REV", scope: !7612, file: !7612, line: 348, type: !5897, scopeLine: 349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !10208)
!10208 = !{!10206, !10209}
!10209 = !DILocalVariable(name: "result", scope: !10207, file: !7612, line: 350, type: !20)
!10210 = !DILocation(line: 0, scope: !10207, inlinedAt: !10211)
!10211 = distinct !DILocation(line: 140, column: 33, scope: !10203)
!10212 = !DILocation(line: 352, column: 3, scope: !10207, inlinedAt: !10211)
!10213 = !{i32 677727}
!10214 = !DILocation(line: 140, column: 6, scope: !10203)
!10215 = !DILocation(line: 140, column: 31, scope: !10203)
!10216 = !DILocation(line: 141, column: 15, scope: !10203)
!10217 = !DILocation(line: 142, column: 39, scope: !10203)
!10218 = !DILocation(line: 0, scope: !10207, inlinedAt: !10219)
!10219 = distinct !DILocation(line: 142, column: 33, scope: !10203)
!10220 = !DILocation(line: 352, column: 3, scope: !10207, inlinedAt: !10219)
!10221 = !DILocation(line: 142, column: 6, scope: !10203)
!10222 = !DILocation(line: 142, column: 31, scope: !10203)
!10223 = !DILocation(line: 143, column: 15, scope: !10203)
!10224 = !DILocation(line: 144, column: 39, scope: !10203)
!10225 = !DILocation(line: 0, scope: !10207, inlinedAt: !10226)
!10226 = distinct !DILocation(line: 144, column: 33, scope: !10203)
!10227 = !DILocation(line: 352, column: 3, scope: !10207, inlinedAt: !10226)
!10228 = !DILocation(line: 144, column: 6, scope: !10203)
!10229 = !DILocation(line: 144, column: 31, scope: !10203)
!10230 = !DILocation(line: 145, column: 15, scope: !10203)
!10231 = !DILocation(line: 146, column: 39, scope: !10203)
!10232 = !DILocation(line: 0, scope: !10207, inlinedAt: !10233)
!10233 = distinct !DILocation(line: 146, column: 33, scope: !10203)
!10234 = !DILocation(line: 352, column: 3, scope: !10207, inlinedAt: !10233)
!10235 = !DILocation(line: 146, column: 6, scope: !10203)
!10236 = !DILocation(line: 146, column: 31, scope: !10203)
!10237 = !DILocation(line: 149, column: 1, scope: !10128)
!10238 = !DILocation(line: 148, column: 3, scope: !10128)
!10239 = distinct !DISubprogram(name: "HMAC_MD5", scope: !623, file: !623, line: 162, type: !10240, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !622, retainedNodes: !10242)
!10240 = !DISubroutineType(types: !10241)
!10241 = !{!358, !7555, !20, !7555, !20, !7555}
!10242 = !{!10243, !10244, !10245, !10246, !10247, !10248, !10249, !10250, !10251, !10252, !10253, !10254, !10255, !10256, !10257, !10258}
!10243 = !DILocalVariable(name: "Key", arg: 1, scope: !10239, file: !623, line: 162, type: !7555)
!10244 = !DILocalVariable(name: "Keylen", arg: 2, scope: !10239, file: !623, line: 162, type: !20)
!10245 = !DILocalVariable(name: "Input", arg: 3, scope: !10239, file: !623, line: 162, type: !7555)
!10246 = !DILocalVariable(name: "Ilen", arg: 4, scope: !10239, file: !623, line: 163, type: !20)
!10247 = !DILocalVariable(name: "Output", arg: 5, scope: !10239, file: !623, line: 163, type: !7555)
!10248 = !DILocalVariable(name: "MD5_HASH_InitStructure", scope: !10239, file: !623, line: 165, type: !10136)
!10249 = !DILocalVariable(name: "MD5_MessageDigest", scope: !10239, file: !623, line: 166, type: !10144)
!10250 = !DILocalVariable(name: "nbvalidbitsdata", scope: !10239, file: !623, line: 167, type: !310)
!10251 = !DILocalVariable(name: "nbvalidbitskey", scope: !10239, file: !623, line: 168, type: !310)
!10252 = !DILocalVariable(name: "i", scope: !10239, file: !623, line: 169, type: !20)
!10253 = !DILocalVariable(name: "counter", scope: !10239, file: !623, line: 170, type: !27)
!10254 = !DILocalVariable(name: "busystatus", scope: !10239, file: !623, line: 171, type: !20)
!10255 = !DILocalVariable(name: "status", scope: !10239, file: !623, line: 172, type: !358)
!10256 = !DILocalVariable(name: "keyaddr", scope: !10239, file: !623, line: 173, type: !20)
!10257 = !DILocalVariable(name: "inputaddr", scope: !10239, file: !623, line: 174, type: !20)
!10258 = !DILocalVariable(name: "outputaddr", scope: !10239, file: !623, line: 175, type: !20)
!10259 = !DILocation(line: 0, scope: !10239)
!10260 = !DILocation(line: 165, column: 3, scope: !10239)
!10261 = !DILocation(line: 165, column: 20, scope: !10239)
!10262 = !DILocation(line: 166, column: 3, scope: !10239)
!10263 = !DILocation(line: 166, column: 18, scope: !10239)
!10264 = !DILocation(line: 167, column: 3, scope: !10239)
!10265 = !DILocation(line: 167, column: 17, scope: !10239)
!10266 = !DILocation(line: 168, column: 3, scope: !10239)
!10267 = !DILocation(line: 168, column: 17, scope: !10239)
!10268 = !DILocation(line: 170, column: 3, scope: !10239)
!10269 = !DILocation(line: 170, column: 17, scope: !10239)
!10270 = !DILocation(line: 173, column: 25, scope: !10239)
!10271 = !DILocation(line: 174, column: 25, scope: !10239)
!10272 = !DILocation(line: 175, column: 25, scope: !10239)
!10273 = !DILocation(line: 178, column: 21, scope: !10239)
!10274 = !DILocation(line: 178, column: 19, scope: !10239)
!10275 = !DILocation(line: 181, column: 20, scope: !10239)
!10276 = !DILocation(line: 181, column: 18, scope: !10239)
!10277 = !DILocation(line: 184, column: 3, scope: !10239)
!10278 = !DILocation(line: 187, column: 26, scope: !10239)
!10279 = !DILocation(line: 187, column: 45, scope: !10239)
!10280 = !DILocation(line: 188, column: 26, scope: !10239)
!10281 = !DILocation(line: 188, column: 40, scope: !10239)
!10282 = !DILocation(line: 189, column: 26, scope: !10239)
!10283 = !DILocation(line: 189, column: 40, scope: !10239)
!10284 = !DILocation(line: 190, column: 13, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10239, file: !623, line: 190, column: 6)
!10286 = !DILocation(line: 0, scope: !10285)
!10287 = !DILocation(line: 200, column: 3, scope: !10239)
!10288 = !DILocation(line: 203, column: 32, scope: !10239)
!10289 = !DILocation(line: 203, column: 3, scope: !10239)
!10290 = !DILocation(line: 206, column: 13, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10292, file: !623, line: 206, column: 3)
!10292 = distinct !DILexicalBlock(scope: !10239, file: !623, line: 206, column: 3)
!10293 = !DILocation(line: 206, column: 3, scope: !10292)
!10294 = !DILocation(line: 208, column: 18, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10291, file: !623, line: 207, column: 3)
!10296 = !DILocation(line: 208, column: 17, scope: !10295)
!10297 = !DILocation(line: 208, column: 5, scope: !10295)
!10298 = !DILocation(line: 209, column: 12, scope: !10295)
!10299 = !DILocation(line: 206, column: 23, scope: !10291)
!10300 = distinct !{!10300, !10293, !10301}
!10301 = !DILocation(line: 210, column: 3, scope: !10292)
!10302 = !DILocation(line: 213, column: 3, scope: !10239)
!10303 = !DILocation(line: 216, column: 3, scope: !10239)
!10304 = !DILocation(line: 218, column: 18, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10239, file: !623, line: 217, column: 3)
!10306 = !DILocation(line: 219, column: 12, scope: !10305)
!10307 = !DILocation(line: 220, column: 12, scope: !10239)
!10308 = !DILocation(line: 220, column: 20, scope: !10239)
!10309 = !DILocation(line: 220, column: 40, scope: !10239)
!10310 = !DILocation(line: 220, column: 3, scope: !10305)
!10311 = distinct !{!10311, !10303, !10312}
!10312 = !DILocation(line: 220, column: 64, scope: !10239)
!10313 = !DILocation(line: 222, column: 7, scope: !10239)
!10314 = !DILocation(line: 229, column: 34, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10316, file: !623, line: 227, column: 3)
!10316 = distinct !DILexicalBlock(scope: !10239, file: !623, line: 222, column: 7)
!10317 = !DILocation(line: 229, column: 5, scope: !10315)
!10318 = !DILocation(line: 232, column: 15, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10320, file: !623, line: 232, column: 5)
!10320 = distinct !DILexicalBlock(scope: !10315, file: !623, line: 232, column: 5)
!10321 = !DILocation(line: 232, column: 5, scope: !10320)
!10322 = !DILocation(line: 234, column: 20, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10319, file: !623, line: 233, column: 5)
!10324 = !DILocation(line: 234, column: 19, scope: !10323)
!10325 = !DILocation(line: 234, column: 7, scope: !10323)
!10326 = !DILocation(line: 235, column: 16, scope: !10323)
!10327 = !DILocation(line: 232, column: 23, scope: !10319)
!10328 = distinct !{!10328, !10321, !10329}
!10329 = !DILocation(line: 236, column: 5, scope: !10320)
!10330 = !DILocation(line: 239, column: 5, scope: !10315)
!10331 = !DILocation(line: 242, column: 13, scope: !10315)
!10332 = !DILocation(line: 243, column: 5, scope: !10315)
!10333 = !DILocation(line: 245, column: 21, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10315, file: !623, line: 244, column: 5)
!10335 = !DILocation(line: 246, column: 15, scope: !10334)
!10336 = !DILocation(line: 247, column: 14, scope: !10315)
!10337 = !DILocation(line: 247, column: 22, scope: !10315)
!10338 = !DILocation(line: 247, column: 42, scope: !10315)
!10339 = !DILocation(line: 247, column: 5, scope: !10334)
!10340 = distinct !{!10340, !10332, !10341}
!10341 = !DILocation(line: 247, column: 66, scope: !10315)
!10342 = !DILocation(line: 249, column: 9, scope: !10315)
!10343 = !DILocation(line: 256, column: 36, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10345, file: !623, line: 254, column: 5)
!10345 = distinct !DILexicalBlock(scope: !10315, file: !623, line: 249, column: 9)
!10346 = !DILocation(line: 256, column: 7, scope: !10344)
!10347 = !DILocation(line: 260, column: 7, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10344, file: !623, line: 260, column: 7)
!10349 = !DILocation(line: 262, column: 22, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !623, line: 261, column: 7)
!10351 = distinct !DILexicalBlock(scope: !10348, file: !623, line: 260, column: 7)
!10352 = !DILocation(line: 262, column: 21, scope: !10350)
!10353 = !DILocation(line: 262, column: 9, scope: !10350)
!10354 = !DILocation(line: 263, column: 16, scope: !10350)
!10355 = !DILocation(line: 260, column: 27, scope: !10351)
!10356 = !DILocation(line: 260, column: 17, scope: !10351)
!10357 = distinct !{!10357, !10347, !10358}
!10358 = !DILocation(line: 264, column: 7, scope: !10348)
!10359 = !DILocation(line: 267, column: 8, scope: !10344)
!10360 = !DILocation(line: 270, column: 16, scope: !10344)
!10361 = !DILocation(line: 271, column: 8, scope: !10344)
!10362 = !DILocation(line: 273, column: 24, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10344, file: !623, line: 272, column: 8)
!10364 = !DILocation(line: 274, column: 18, scope: !10363)
!10365 = !DILocation(line: 275, column: 16, scope: !10344)
!10366 = !DILocation(line: 275, column: 24, scope: !10344)
!10367 = !DILocation(line: 275, column: 44, scope: !10344)
!10368 = !DILocation(line: 275, column: 7, scope: !10363)
!10369 = distinct !{!10369, !10361, !10370}
!10370 = !DILocation(line: 275, column: 68, scope: !10344)
!10371 = !DILocation(line: 277, column: 11, scope: !10344)
!10372 = !DILocation(line: 284, column: 10, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !623, line: 282, column: 7)
!10374 = distinct !DILexicalBlock(scope: !10344, file: !623, line: 277, column: 11)
!10375 = !DILocation(line: 285, column: 44, scope: !10373)
!10376 = !DILocation(line: 0, scope: !10207, inlinedAt: !10377)
!10377 = distinct !DILocation(line: 285, column: 38, scope: !10373)
!10378 = !DILocation(line: 352, column: 3, scope: !10207, inlinedAt: !10377)
!10379 = !DILocation(line: 285, column: 11, scope: !10373)
!10380 = !DILocation(line: 285, column: 36, scope: !10373)
!10381 = !DILocation(line: 286, column: 20, scope: !10373)
!10382 = !DILocation(line: 287, column: 44, scope: !10373)
!10383 = !DILocation(line: 0, scope: !10207, inlinedAt: !10384)
!10384 = distinct !DILocation(line: 287, column: 38, scope: !10373)
!10385 = !DILocation(line: 352, column: 3, scope: !10207, inlinedAt: !10384)
!10386 = !DILocation(line: 287, column: 11, scope: !10373)
!10387 = !DILocation(line: 287, column: 36, scope: !10373)
!10388 = !DILocation(line: 288, column: 20, scope: !10373)
!10389 = !DILocation(line: 289, column: 44, scope: !10373)
!10390 = !DILocation(line: 0, scope: !10207, inlinedAt: !10391)
!10391 = distinct !DILocation(line: 289, column: 38, scope: !10373)
!10392 = !DILocation(line: 352, column: 3, scope: !10207, inlinedAt: !10391)
!10393 = !DILocation(line: 289, column: 11, scope: !10373)
!10394 = !DILocation(line: 289, column: 36, scope: !10373)
!10395 = !DILocation(line: 290, column: 20, scope: !10373)
!10396 = !DILocation(line: 291, column: 44, scope: !10373)
!10397 = !DILocation(line: 0, scope: !10207, inlinedAt: !10398)
!10398 = distinct !DILocation(line: 291, column: 38, scope: !10373)
!10399 = !DILocation(line: 352, column: 3, scope: !10207, inlinedAt: !10398)
!10400 = !DILocation(line: 291, column: 11, scope: !10373)
!10401 = !DILocation(line: 291, column: 36, scope: !10373)
!10402 = !DILocation(line: 296, column: 1, scope: !10239)
!10403 = !DILocation(line: 295, column: 3, scope: !10239)
!10404 = distinct !DISubprogram(name: "TIM_DeInit", scope: !627, file: !627, line: 194, type: !10405, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10407)
!10405 = !DISubroutineType(types: !10406)
!10406 = !{null, !629}
!10407 = !{!10408}
!10408 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10404, file: !627, line: 194, type: !629)
!10409 = !DILocation(line: 0, scope: !10404)
!10410 = !DILocation(line: 199, column: 7, scope: !10404)
!10411 = !DILocation(line: 201, column: 5, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !627, line: 200, column: 3)
!10413 = distinct !DILexicalBlock(scope: !10404, file: !627, line: 199, column: 7)
!10414 = !DILocation(line: 202, column: 5, scope: !10412)
!10415 = !DILocation(line: 203, column: 3, scope: !10412)
!10416 = !DILocation(line: 206, column: 5, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10418, file: !627, line: 205, column: 3)
!10418 = distinct !DILexicalBlock(scope: !10413, file: !627, line: 204, column: 12)
!10419 = !DILocation(line: 207, column: 5, scope: !10417)
!10420 = !DILocation(line: 208, column: 3, scope: !10417)
!10421 = !DILocation(line: 211, column: 5, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10423, file: !627, line: 210, column: 3)
!10423 = distinct !DILexicalBlock(scope: !10418, file: !627, line: 209, column: 12)
!10424 = !DILocation(line: 212, column: 5, scope: !10422)
!10425 = !DILocation(line: 213, column: 3, scope: !10422)
!10426 = !DILocation(line: 216, column: 5, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !627, line: 215, column: 3)
!10428 = distinct !DILexicalBlock(scope: !10423, file: !627, line: 214, column: 12)
!10429 = !DILocation(line: 217, column: 5, scope: !10427)
!10430 = !DILocation(line: 218, column: 3, scope: !10427)
!10431 = !DILocation(line: 221, column: 5, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10433, file: !627, line: 220, column: 3)
!10433 = distinct !DILexicalBlock(scope: !10428, file: !627, line: 219, column: 12)
!10434 = !DILocation(line: 222, column: 5, scope: !10432)
!10435 = !DILocation(line: 223, column: 3, scope: !10432)
!10436 = !DILocation(line: 226, column: 5, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !627, line: 225, column: 3)
!10438 = distinct !DILexicalBlock(scope: !10433, file: !627, line: 224, column: 12)
!10439 = !DILocation(line: 227, column: 5, scope: !10437)
!10440 = !DILocation(line: 228, column: 3, scope: !10437)
!10441 = !DILocation(line: 231, column: 5, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10443, file: !627, line: 230, column: 3)
!10443 = distinct !DILexicalBlock(scope: !10438, file: !627, line: 229, column: 12)
!10444 = !DILocation(line: 232, column: 5, scope: !10442)
!10445 = !DILocation(line: 233, column: 3, scope: !10442)
!10446 = !DILocation(line: 236, column: 5, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10448, file: !627, line: 235, column: 3)
!10448 = distinct !DILexicalBlock(scope: !10443, file: !627, line: 234, column: 12)
!10449 = !DILocation(line: 237, column: 5, scope: !10447)
!10450 = !DILocation(line: 238, column: 3, scope: !10447)
!10451 = !DILocation(line: 241, column: 5, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10453, file: !627, line: 240, column: 3)
!10453 = distinct !DILexicalBlock(scope: !10448, file: !627, line: 239, column: 12)
!10454 = !DILocation(line: 242, column: 5, scope: !10452)
!10455 = !DILocation(line: 243, column: 4, scope: !10452)
!10456 = !DILocation(line: 246, column: 5, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !627, line: 245, column: 3)
!10458 = distinct !DILexicalBlock(scope: !10453, file: !627, line: 244, column: 12)
!10459 = !DILocation(line: 247, column: 5, scope: !10457)
!10460 = !DILocation(line: 248, column: 3, scope: !10457)
!10461 = !DILocation(line: 251, column: 5, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !627, line: 250, column: 3)
!10463 = distinct !DILexicalBlock(scope: !10458, file: !627, line: 249, column: 12)
!10464 = !DILocation(line: 252, column: 5, scope: !10462)
!10465 = !DILocation(line: 253, column: 3, scope: !10462)
!10466 = !DILocation(line: 256, column: 5, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10468, file: !627, line: 255, column: 3)
!10468 = distinct !DILexicalBlock(scope: !10463, file: !627, line: 254, column: 12)
!10469 = !DILocation(line: 257, column: 5, scope: !10467)
!10470 = !DILocation(line: 258, column: 3, scope: !10467)
!10471 = !DILocation(line: 261, column: 5, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10473, file: !627, line: 260, column: 3)
!10473 = distinct !DILexicalBlock(scope: !10468, file: !627, line: 259, column: 12)
!10474 = !DILocation(line: 262, column: 5, scope: !10472)
!10475 = !DILocation(line: 263, column: 3, scope: !10472)
!10476 = !DILocation(line: 268, column: 7, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10478, file: !627, line: 267, column: 5)
!10478 = distinct !DILexicalBlock(scope: !10479, file: !627, line: 266, column: 9)
!10479 = distinct !DILexicalBlock(scope: !10473, file: !627, line: 265, column: 3)
!10480 = !DILocation(line: 269, column: 7, scope: !10477)
!10481 = !DILocation(line: 270, column: 5, scope: !10477)
!10482 = !DILocation(line: 272, column: 1, scope: !10404)
!10483 = distinct !DISubprogram(name: "TIM_TimeBaseInit", scope: !627, file: !627, line: 282, type: !10484, scopeLine: 283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10496)
!10484 = !DISubroutineType(types: !10485)
!10485 = !{null, !629, !10486}
!10486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10487, size: 32)
!10487 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIM_TimeBaseInitTypeDef", file: !10488, line: 72, baseType: !10489)
!10488 = !DIFile(filename: "inc/peripherals/stm32f4xx_tim.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!10489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10488, line: 49, size: 96, elements: !10490)
!10490 = !{!10491, !10492, !10493, !10494, !10495}
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_Prescaler", scope: !10489, file: !10488, line: 51, baseType: !64, size: 16)
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_CounterMode", scope: !10489, file: !10488, line: 54, baseType: !64, size: 16, offset: 16)
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_Period", scope: !10489, file: !10488, line: 57, baseType: !20, size: 32, offset: 32)
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_ClockDivision", scope: !10489, file: !10488, line: 61, baseType: !64, size: 16, offset: 64)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_RepetitionCounter", scope: !10489, file: !10488, line: 64, baseType: !60, size: 8, offset: 80)
!10496 = !{!10497, !10498, !10499}
!10497 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10483, file: !627, line: 282, type: !629)
!10498 = !DILocalVariable(name: "TIM_TimeBaseInitStruct", arg: 2, scope: !10483, file: !627, line: 282, type: !10486)
!10499 = !DILocalVariable(name: "tmpcr1", scope: !10483, file: !627, line: 284, type: !64)
!10500 = !DILocation(line: 0, scope: !10483)
!10501 = !DILocation(line: 291, column: 18, scope: !10483)
!10502 = !{!10503, !2880, i64 0}
!10503 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !2880, i64 6, !2880, i64 8, !2880, i64 10, !2880, i64 12, !2880, i64 14, !2880, i64 16, !2880, i64 18, !2880, i64 20, !2880, i64 22, !2880, i64 24, !2880, i64 26, !2880, i64 28, !2880, i64 30, !2880, i64 32, !2880, i64 34, !840, i64 36, !2880, i64 40, !2880, i64 42, !840, i64 44, !2880, i64 48, !2880, i64 50, !840, i64 52, !840, i64 56, !840, i64 60, !840, i64 64, !2880, i64 68, !2880, i64 70, !2880, i64 72, !2880, i64 74, !2880, i64 76, !2880, i64 78, !2880, i64 80, !2880, i64 82}
!10504 = !DILocation(line: 293, column: 21, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10483, file: !627, line: 293, column: 6)
!10506 = !DILocation(line: 298, column: 12, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10505, file: !627, line: 296, column: 3)
!10508 = !DILocation(line: 299, column: 49, scope: !10507)
!10509 = !{!10510, !2880, i64 2}
!10510 = !{!"", !2880, i64 0, !2880, i64 2, !840, i64 4, !2880, i64 8, !841, i64 10}
!10511 = !DILocation(line: 299, column: 12, scope: !10507)
!10512 = !DILocation(line: 300, column: 3, scope: !10507)
!10513 = !DILocation(line: 302, column: 21, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10483, file: !627, line: 302, column: 6)
!10515 = !DILocation(line: 305, column: 12, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10514, file: !627, line: 303, column: 3)
!10517 = !DILocation(line: 306, column: 49, scope: !10516)
!10518 = !{!10510, !2880, i64 8}
!10519 = !DILocation(line: 306, column: 12, scope: !10516)
!10520 = !DILocation(line: 307, column: 3, scope: !10516)
!10521 = !DILocation(line: 309, column: 13, scope: !10483)
!10522 = !DILocation(line: 312, column: 39, scope: !10483)
!10523 = !{!10510, !840, i64 4}
!10524 = !DILocation(line: 312, column: 9, scope: !10483)
!10525 = !DILocation(line: 312, column: 13, scope: !10483)
!10526 = !{!10503, !840, i64 44}
!10527 = !DILocation(line: 315, column: 39, scope: !10483)
!10528 = !{!10510, !2880, i64 0}
!10529 = !DILocation(line: 315, column: 9, scope: !10483)
!10530 = !DILocation(line: 315, column: 13, scope: !10483)
!10531 = !{!10503, !2880, i64 40}
!10532 = !DILocation(line: 317, column: 22, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10483, file: !627, line: 317, column: 7)
!10534 = !DILocation(line: 320, column: 41, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10533, file: !627, line: 318, column: 3)
!10536 = !{!10510, !841, i64 10}
!10537 = !DILocation(line: 320, column: 17, scope: !10535)
!10538 = !DILocation(line: 320, column: 11, scope: !10535)
!10539 = !DILocation(line: 320, column: 15, scope: !10535)
!10540 = !{!10503, !2880, i64 48}
!10541 = !DILocation(line: 321, column: 3, scope: !10535)
!10542 = !DILocation(line: 325, column: 9, scope: !10483)
!10543 = !DILocation(line: 325, column: 13, scope: !10483)
!10544 = !{!10503, !2880, i64 20}
!10545 = !DILocation(line: 326, column: 1, scope: !10483)
!10546 = distinct !DISubprogram(name: "TIM_TimeBaseStructInit", scope: !627, file: !627, line: 334, type: !10547, scopeLine: 335, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10549)
!10547 = !DISubroutineType(types: !10548)
!10548 = !{null, !10486}
!10549 = !{!10550}
!10550 = !DILocalVariable(name: "TIM_TimeBaseInitStruct", arg: 1, scope: !10546, file: !627, line: 334, type: !10486)
!10551 = !DILocation(line: 0, scope: !10546)
!10552 = !DILocation(line: 337, column: 27, scope: !10546)
!10553 = !DILocation(line: 337, column: 38, scope: !10546)
!10554 = !DILocation(line: 338, column: 27, scope: !10546)
!10555 = !DILocation(line: 338, column: 41, scope: !10546)
!10556 = !DILocation(line: 339, column: 27, scope: !10546)
!10557 = !DILocation(line: 339, column: 45, scope: !10546)
!10558 = !DILocation(line: 340, column: 27, scope: !10546)
!10559 = !DILocation(line: 340, column: 43, scope: !10546)
!10560 = !DILocation(line: 341, column: 27, scope: !10546)
!10561 = !DILocation(line: 341, column: 49, scope: !10546)
!10562 = !DILocation(line: 342, column: 1, scope: !10546)
!10563 = distinct !DISubprogram(name: "TIM_PrescalerConfig", scope: !627, file: !627, line: 354, type: !10564, scopeLine: 355, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10566)
!10564 = !DISubroutineType(types: !10565)
!10565 = !{null, !629, !64, !64}
!10566 = !{!10567, !10568, !10569}
!10567 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10563, file: !627, line: 354, type: !629)
!10568 = !DILocalVariable(name: "Prescaler", arg: 2, scope: !10563, file: !627, line: 354, type: !64)
!10569 = !DILocalVariable(name: "TIM_PSCReloadMode", arg: 3, scope: !10563, file: !627, line: 354, type: !64)
!10570 = !DILocation(line: 0, scope: !10563)
!10571 = !DILocation(line: 360, column: 9, scope: !10563)
!10572 = !DILocation(line: 360, column: 13, scope: !10563)
!10573 = !DILocation(line: 362, column: 9, scope: !10563)
!10574 = !DILocation(line: 362, column: 13, scope: !10563)
!10575 = !DILocation(line: 363, column: 1, scope: !10563)
!10576 = distinct !DISubprogram(name: "TIM_CounterModeConfig", scope: !627, file: !627, line: 377, type: !10577, scopeLine: 378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10579)
!10577 = !DISubroutineType(types: !10578)
!10578 = !{null, !629, !64}
!10579 = !{!10580, !10581, !10582}
!10580 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10576, file: !627, line: 377, type: !629)
!10581 = !DILocalVariable(name: "TIM_CounterMode", arg: 2, scope: !10576, file: !627, line: 377, type: !64)
!10582 = !DILocalVariable(name: "tmpcr1", scope: !10576, file: !627, line: 379, type: !64)
!10583 = !DILocation(line: 0, scope: !10576)
!10584 = !DILocation(line: 385, column: 18, scope: !10576)
!10585 = !DILocation(line: 388, column: 10, scope: !10576)
!10586 = !DILocation(line: 391, column: 10, scope: !10576)
!10587 = !DILocation(line: 394, column: 13, scope: !10576)
!10588 = !DILocation(line: 395, column: 1, scope: !10576)
!10589 = distinct !DISubprogram(name: "TIM_SetCounter", scope: !627, file: !627, line: 403, type: !10590, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10592)
!10590 = !DISubroutineType(types: !10591)
!10591 = !{null, !629, !20}
!10592 = !{!10593, !10594}
!10593 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10589, file: !627, line: 403, type: !629)
!10594 = !DILocalVariable(name: "Counter", arg: 2, scope: !10589, file: !627, line: 403, type: !20)
!10595 = !DILocation(line: 0, scope: !10589)
!10596 = !DILocation(line: 409, column: 9, scope: !10589)
!10597 = !DILocation(line: 409, column: 13, scope: !10589)
!10598 = !{!10503, !840, i64 36}
!10599 = !DILocation(line: 410, column: 1, scope: !10589)
!10600 = distinct !DISubprogram(name: "TIM_SetAutoreload", scope: !627, file: !627, line: 418, type: !10590, scopeLine: 419, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10601)
!10601 = !{!10602, !10603}
!10602 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10600, file: !627, line: 418, type: !629)
!10603 = !DILocalVariable(name: "Autoreload", arg: 2, scope: !10600, file: !627, line: 418, type: !20)
!10604 = !DILocation(line: 0, scope: !10600)
!10605 = !DILocation(line: 424, column: 9, scope: !10600)
!10606 = !DILocation(line: 424, column: 13, scope: !10600)
!10607 = !DILocation(line: 425, column: 1, scope: !10600)
!10608 = distinct !DISubprogram(name: "TIM_GetCounter", scope: !627, file: !627, line: 432, type: !10609, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10611)
!10609 = !DISubroutineType(types: !10610)
!10610 = !{!20, !629}
!10611 = !{!10612}
!10612 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10608, file: !627, line: 432, type: !629)
!10613 = !DILocation(line: 0, scope: !10608)
!10614 = !DILocation(line: 438, column: 16, scope: !10608)
!10615 = !DILocation(line: 438, column: 3, scope: !10608)
!10616 = distinct !DISubprogram(name: "TIM_GetPrescaler", scope: !627, file: !627, line: 446, type: !10617, scopeLine: 447, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10619)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!64, !629}
!10619 = !{!10620}
!10620 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10616, file: !627, line: 446, type: !629)
!10621 = !DILocation(line: 0, scope: !10616)
!10622 = !DILocation(line: 452, column: 16, scope: !10616)
!10623 = !DILocation(line: 452, column: 3, scope: !10616)
!10624 = distinct !DISubprogram(name: "TIM_UpdateDisableConfig", scope: !627, file: !627, line: 462, type: !10625, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10627)
!10625 = !DISubroutineType(types: !10626)
!10626 = !{null, !629, !856}
!10627 = !{!10628, !10629}
!10628 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10624, file: !627, line: 462, type: !629)
!10629 = !DILocalVariable(name: "NewState", arg: 2, scope: !10624, file: !627, line: 462, type: !856)
!10630 = !DILocation(line: 0, scope: !10624)
!10631 = !DILocation(line: 468, column: 16, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10624, file: !627, line: 468, column: 7)
!10633 = !DILocation(line: 0, scope: !10632)
!10634 = !DILocation(line: 468, column: 7, scope: !10624)
!10635 = !DILocation(line: 478, column: 1, scope: !10624)
!10636 = distinct !DISubprogram(name: "TIM_UpdateRequestConfig", scope: !627, file: !627, line: 491, type: !10577, scopeLine: 492, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10637)
!10637 = !{!10638, !10639}
!10638 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10636, file: !627, line: 491, type: !629)
!10639 = !DILocalVariable(name: "TIM_UpdateSource", arg: 2, scope: !10636, file: !627, line: 491, type: !64)
!10640 = !DILocation(line: 0, scope: !10636)
!10641 = !DILocation(line: 497, column: 24, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10636, file: !627, line: 497, column: 7)
!10643 = !DILocation(line: 0, scope: !10642)
!10644 = !DILocation(line: 497, column: 7, scope: !10636)
!10645 = !DILocation(line: 507, column: 1, scope: !10636)
!10646 = distinct !DISubprogram(name: "TIM_ARRPreloadConfig", scope: !627, file: !627, line: 516, type: !10625, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10647)
!10647 = !{!10648, !10649}
!10648 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10646, file: !627, line: 516, type: !629)
!10649 = !DILocalVariable(name: "NewState", arg: 2, scope: !10646, file: !627, line: 516, type: !856)
!10650 = !DILocation(line: 0, scope: !10646)
!10651 = !DILocation(line: 522, column: 16, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10646, file: !627, line: 522, column: 7)
!10653 = !DILocation(line: 0, scope: !10652)
!10654 = !DILocation(line: 522, column: 7, scope: !10646)
!10655 = !DILocation(line: 532, column: 1, scope: !10646)
!10656 = distinct !DISubprogram(name: "TIM_SelectOnePulseMode", scope: !627, file: !627, line: 543, type: !10577, scopeLine: 544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10657)
!10657 = !{!10658, !10659}
!10658 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10656, file: !627, line: 543, type: !629)
!10659 = !DILocalVariable(name: "TIM_OPMode", arg: 2, scope: !10656, file: !627, line: 543, type: !64)
!10660 = !DILocation(line: 0, scope: !10656)
!10661 = !DILocation(line: 550, column: 9, scope: !10656)
!10662 = !DILocation(line: 550, column: 13, scope: !10656)
!10663 = !DILocation(line: 553, column: 13, scope: !10656)
!10664 = !DILocation(line: 554, column: 1, scope: !10656)
!10665 = distinct !DISubprogram(name: "TIM_SetClockDivision", scope: !627, file: !627, line: 566, type: !10577, scopeLine: 567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10666)
!10666 = !{!10667, !10668}
!10667 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10665, file: !627, line: 566, type: !629)
!10668 = !DILocalVariable(name: "TIM_CKD", arg: 2, scope: !10665, file: !627, line: 566, type: !64)
!10669 = !DILocation(line: 0, scope: !10665)
!10670 = !DILocation(line: 573, column: 9, scope: !10665)
!10671 = !DILocation(line: 573, column: 13, scope: !10665)
!10672 = !DILocation(line: 576, column: 13, scope: !10665)
!10673 = !DILocation(line: 577, column: 1, scope: !10665)
!10674 = distinct !DISubprogram(name: "TIM_Cmd", scope: !627, file: !627, line: 586, type: !10625, scopeLine: 587, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10675)
!10675 = !{!10676, !10677}
!10676 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10674, file: !627, line: 586, type: !629)
!10677 = !DILocalVariable(name: "NewState", arg: 2, scope: !10674, file: !627, line: 586, type: !856)
!10678 = !DILocation(line: 0, scope: !10674)
!10679 = !DILocation(line: 592, column: 16, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10674, file: !627, line: 592, column: 7)
!10681 = !DILocation(line: 0, scope: !10680)
!10682 = !DILocation(line: 592, column: 7, scope: !10674)
!10683 = !DILocation(line: 602, column: 1, scope: !10674)
!10684 = distinct !DISubprogram(name: "TIM_OC1Init", scope: !627, file: !627, line: 665, type: !10685, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10699)
!10685 = !DISubroutineType(types: !10686)
!10686 = !{null, !629, !10687}
!10687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10688, size: 32)
!10688 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIM_OCInitTypeDef", file: !10488, line: 107, baseType: !10689)
!10689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10488, line: 78, size: 160, elements: !10690)
!10690 = !{!10691, !10692, !10693, !10694, !10695, !10696, !10697, !10698}
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_OCMode", scope: !10689, file: !10488, line: 80, baseType: !64, size: 16)
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_OutputState", scope: !10689, file: !10488, line: 83, baseType: !64, size: 16, offset: 16)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_OutputNState", scope: !10689, file: !10488, line: 86, baseType: !64, size: 16, offset: 32)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_Pulse", scope: !10689, file: !10488, line: 90, baseType: !20, size: 32, offset: 64)
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_OCPolarity", scope: !10689, file: !10488, line: 93, baseType: !64, size: 16, offset: 96)
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_OCNPolarity", scope: !10689, file: !10488, line: 96, baseType: !64, size: 16, offset: 112)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_OCIdleState", scope: !10689, file: !10488, line: 100, baseType: !64, size: 16, offset: 128)
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_OCNIdleState", scope: !10689, file: !10488, line: 104, baseType: !64, size: 16, offset: 144)
!10699 = !{!10700, !10701, !10702, !10703, !10704}
!10700 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10684, file: !627, line: 665, type: !629)
!10701 = !DILocalVariable(name: "TIM_OCInitStruct", arg: 2, scope: !10684, file: !627, line: 665, type: !10687)
!10702 = !DILocalVariable(name: "tmpccmrx", scope: !10684, file: !627, line: 667, type: !64)
!10703 = !DILocalVariable(name: "tmpccer", scope: !10684, file: !627, line: 667, type: !64)
!10704 = !DILocalVariable(name: "tmpcr2", scope: !10684, file: !627, line: 667, type: !64)
!10705 = !DILocation(line: 0, scope: !10684)
!10706 = !DILocation(line: 676, column: 9, scope: !10684)
!10707 = !DILocation(line: 676, column: 14, scope: !10684)
!10708 = !{!10503, !2880, i64 32}
!10709 = !DILocation(line: 679, column: 19, scope: !10684)
!10710 = !DILocation(line: 681, column: 19, scope: !10684)
!10711 = !{!10503, !2880, i64 4}
!10712 = !DILocation(line: 684, column: 20, scope: !10684)
!10713 = !{!10503, !2880, i64 24}
!10714 = !DILocation(line: 690, column: 33, scope: !10684)
!10715 = !{!10716, !2880, i64 0}
!10716 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !840, i64 8, !2880, i64 12, !2880, i64 14, !2880, i64 16, !2880, i64 18}
!10717 = !DILocation(line: 693, column: 11, scope: !10684)
!10718 = !DILocation(line: 695, column: 32, scope: !10684)
!10719 = !{!10716, !2880, i64 12}
!10720 = !DILocation(line: 695, column: 11, scope: !10684)
!10721 = !DILocation(line: 698, column: 32, scope: !10684)
!10722 = !{!10716, !2880, i64 2}
!10723 = !DILocation(line: 698, column: 11, scope: !10684)
!10724 = !DILocation(line: 700, column: 21, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10684, file: !627, line: 700, column: 6)
!10726 = !DILocation(line: 708, column: 13, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10725, file: !627, line: 701, column: 3)
!10728 = !DILocation(line: 710, column: 34, scope: !10727)
!10729 = !{!10716, !2880, i64 14}
!10730 = !DILocation(line: 712, column: 13, scope: !10727)
!10731 = !DILocation(line: 715, column: 34, scope: !10727)
!10732 = !{!10716, !2880, i64 4}
!10733 = !DILocation(line: 715, column: 13, scope: !10727)
!10734 = !DILocation(line: 718, column: 12, scope: !10727)
!10735 = !DILocation(line: 720, column: 33, scope: !10727)
!10736 = !{!10716, !2880, i64 16}
!10737 = !DILocation(line: 720, column: 12, scope: !10727)
!10738 = !DILocation(line: 722, column: 33, scope: !10727)
!10739 = !{!10716, !2880, i64 18}
!10740 = !DILocation(line: 722, column: 12, scope: !10727)
!10741 = !DILocation(line: 723, column: 3, scope: !10727)
!10742 = !DILocation(line: 688, column: 12, scope: !10684)
!10743 = !DILocation(line: 690, column: 12, scope: !10684)
!10744 = !DILocation(line: 725, column: 13, scope: !10684)
!10745 = !DILocation(line: 728, column: 15, scope: !10684)
!10746 = !DILocation(line: 731, column: 34, scope: !10684)
!10747 = !{!10716, !840, i64 8}
!10748 = !DILocation(line: 731, column: 9, scope: !10684)
!10749 = !DILocation(line: 731, column: 14, scope: !10684)
!10750 = !{!10503, !840, i64 52}
!10751 = !DILocation(line: 734, column: 14, scope: !10684)
!10752 = !DILocation(line: 735, column: 1, scope: !10684)
!10753 = distinct !DISubprogram(name: "TIM_OC2Init", scope: !627, file: !627, line: 746, type: !10685, scopeLine: 747, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10754)
!10754 = !{!10755, !10756, !10757, !10758, !10759}
!10755 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10753, file: !627, line: 746, type: !629)
!10756 = !DILocalVariable(name: "TIM_OCInitStruct", arg: 2, scope: !10753, file: !627, line: 746, type: !10687)
!10757 = !DILocalVariable(name: "tmpccmrx", scope: !10753, file: !627, line: 748, type: !64)
!10758 = !DILocalVariable(name: "tmpccer", scope: !10753, file: !627, line: 748, type: !64)
!10759 = !DILocalVariable(name: "tmpcr2", scope: !10753, file: !627, line: 748, type: !64)
!10760 = !DILocation(line: 0, scope: !10753)
!10761 = !DILocation(line: 757, column: 9, scope: !10753)
!10762 = !DILocation(line: 757, column: 14, scope: !10753)
!10763 = !DILocation(line: 760, column: 19, scope: !10753)
!10764 = !DILocation(line: 762, column: 19, scope: !10753)
!10765 = !DILocation(line: 765, column: 20, scope: !10753)
!10766 = !DILocation(line: 772, column: 44, scope: !10753)
!10767 = !DILocation(line: 775, column: 11, scope: !10753)
!10768 = !DILocation(line: 777, column: 43, scope: !10753)
!10769 = !DILocation(line: 777, column: 58, scope: !10753)
!10770 = !DILocation(line: 777, column: 11, scope: !10753)
!10771 = !DILocation(line: 780, column: 43, scope: !10753)
!10772 = !DILocation(line: 780, column: 59, scope: !10753)
!10773 = !DILocation(line: 780, column: 11, scope: !10753)
!10774 = !DILocation(line: 782, column: 21, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10753, file: !627, line: 782, column: 6)
!10776 = !DILocation(line: 790, column: 13, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10775, file: !627, line: 783, column: 3)
!10778 = !DILocation(line: 792, column: 45, scope: !10777)
!10779 = !DILocation(line: 792, column: 61, scope: !10777)
!10780 = !DILocation(line: 794, column: 13, scope: !10777)
!10781 = !DILocation(line: 797, column: 45, scope: !10777)
!10782 = !DILocation(line: 797, column: 62, scope: !10777)
!10783 = !DILocation(line: 797, column: 13, scope: !10777)
!10784 = !DILocation(line: 800, column: 12, scope: !10777)
!10785 = !DILocation(line: 802, column: 44, scope: !10777)
!10786 = !DILocation(line: 802, column: 60, scope: !10777)
!10787 = !DILocation(line: 802, column: 12, scope: !10777)
!10788 = !DILocation(line: 804, column: 44, scope: !10777)
!10789 = !DILocation(line: 804, column: 61, scope: !10777)
!10790 = !DILocation(line: 804, column: 12, scope: !10777)
!10791 = !DILocation(line: 805, column: 3, scope: !10777)
!10792 = !DILocation(line: 769, column: 12, scope: !10753)
!10793 = !DILocation(line: 772, column: 55, scope: !10753)
!10794 = !DILocation(line: 772, column: 12, scope: !10753)
!10795 = !DILocation(line: 807, column: 13, scope: !10753)
!10796 = !DILocation(line: 810, column: 15, scope: !10753)
!10797 = !DILocation(line: 813, column: 34, scope: !10753)
!10798 = !DILocation(line: 813, column: 9, scope: !10753)
!10799 = !DILocation(line: 813, column: 14, scope: !10753)
!10800 = !{!10503, !840, i64 56}
!10801 = !DILocation(line: 816, column: 14, scope: !10753)
!10802 = !DILocation(line: 817, column: 1, scope: !10753)
!10803 = distinct !DISubprogram(name: "TIM_OC3Init", scope: !627, file: !627, line: 827, type: !10685, scopeLine: 828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10804)
!10804 = !{!10805, !10806, !10807, !10808, !10809}
!10805 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10803, file: !627, line: 827, type: !629)
!10806 = !DILocalVariable(name: "TIM_OCInitStruct", arg: 2, scope: !10803, file: !627, line: 827, type: !10687)
!10807 = !DILocalVariable(name: "tmpccmrx", scope: !10803, file: !627, line: 829, type: !64)
!10808 = !DILocalVariable(name: "tmpccer", scope: !10803, file: !627, line: 829, type: !64)
!10809 = !DILocalVariable(name: "tmpcr2", scope: !10803, file: !627, line: 829, type: !64)
!10810 = !DILocation(line: 0, scope: !10803)
!10811 = !DILocation(line: 838, column: 9, scope: !10803)
!10812 = !DILocation(line: 838, column: 14, scope: !10803)
!10813 = !DILocation(line: 841, column: 19, scope: !10803)
!10814 = !DILocation(line: 843, column: 19, scope: !10803)
!10815 = !DILocation(line: 846, column: 20, scope: !10803)
!10816 = !{!10503, !2880, i64 28}
!10817 = !DILocation(line: 852, column: 33, scope: !10803)
!10818 = !DILocation(line: 855, column: 11, scope: !10803)
!10819 = !DILocation(line: 857, column: 43, scope: !10803)
!10820 = !DILocation(line: 857, column: 58, scope: !10803)
!10821 = !DILocation(line: 857, column: 11, scope: !10803)
!10822 = !DILocation(line: 860, column: 43, scope: !10803)
!10823 = !DILocation(line: 860, column: 59, scope: !10803)
!10824 = !DILocation(line: 860, column: 11, scope: !10803)
!10825 = !DILocation(line: 862, column: 21, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10803, file: !627, line: 862, column: 6)
!10827 = !DILocation(line: 870, column: 13, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10826, file: !627, line: 863, column: 3)
!10829 = !DILocation(line: 872, column: 45, scope: !10828)
!10830 = !DILocation(line: 872, column: 61, scope: !10828)
!10831 = !DILocation(line: 874, column: 13, scope: !10828)
!10832 = !DILocation(line: 877, column: 45, scope: !10828)
!10833 = !DILocation(line: 877, column: 62, scope: !10828)
!10834 = !DILocation(line: 877, column: 13, scope: !10828)
!10835 = !DILocation(line: 880, column: 12, scope: !10828)
!10836 = !DILocation(line: 882, column: 44, scope: !10828)
!10837 = !DILocation(line: 882, column: 60, scope: !10828)
!10838 = !DILocation(line: 882, column: 12, scope: !10828)
!10839 = !DILocation(line: 884, column: 44, scope: !10828)
!10840 = !DILocation(line: 884, column: 61, scope: !10828)
!10841 = !DILocation(line: 884, column: 12, scope: !10828)
!10842 = !DILocation(line: 885, column: 3, scope: !10828)
!10843 = !DILocation(line: 850, column: 12, scope: !10803)
!10844 = !DILocation(line: 852, column: 12, scope: !10803)
!10845 = !DILocation(line: 887, column: 13, scope: !10803)
!10846 = !DILocation(line: 890, column: 15, scope: !10803)
!10847 = !DILocation(line: 893, column: 34, scope: !10803)
!10848 = !DILocation(line: 893, column: 9, scope: !10803)
!10849 = !DILocation(line: 893, column: 14, scope: !10803)
!10850 = !{!10503, !840, i64 60}
!10851 = !DILocation(line: 896, column: 14, scope: !10803)
!10852 = !DILocation(line: 897, column: 1, scope: !10803)
!10853 = distinct !DISubprogram(name: "TIM_OC4Init", scope: !627, file: !627, line: 907, type: !10685, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10854)
!10854 = !{!10855, !10856, !10857, !10858, !10859}
!10855 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10853, file: !627, line: 907, type: !629)
!10856 = !DILocalVariable(name: "TIM_OCInitStruct", arg: 2, scope: !10853, file: !627, line: 907, type: !10687)
!10857 = !DILocalVariable(name: "tmpccmrx", scope: !10853, file: !627, line: 909, type: !64)
!10858 = !DILocalVariable(name: "tmpccer", scope: !10853, file: !627, line: 909, type: !64)
!10859 = !DILocalVariable(name: "tmpcr2", scope: !10853, file: !627, line: 909, type: !64)
!10860 = !DILocation(line: 0, scope: !10853)
!10861 = !DILocation(line: 918, column: 9, scope: !10853)
!10862 = !DILocation(line: 918, column: 14, scope: !10853)
!10863 = !DILocation(line: 921, column: 19, scope: !10853)
!10864 = !DILocation(line: 923, column: 19, scope: !10853)
!10865 = !DILocation(line: 926, column: 20, scope: !10853)
!10866 = !DILocation(line: 933, column: 44, scope: !10853)
!10867 = !DILocation(line: 938, column: 43, scope: !10853)
!10868 = !DILocation(line: 941, column: 43, scope: !10853)
!10869 = !DILocation(line: 943, column: 21, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10853, file: !627, line: 943, column: 6)
!10871 = !DILocation(line: 947, column: 12, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10870, file: !627, line: 944, column: 3)
!10873 = !DILocation(line: 949, column: 44, scope: !10872)
!10874 = !DILocation(line: 949, column: 60, scope: !10872)
!10875 = !DILocation(line: 949, column: 12, scope: !10872)
!10876 = !DILocation(line: 950, column: 3, scope: !10872)
!10877 = !DILocation(line: 936, column: 11, scope: !10853)
!10878 = !DILocation(line: 938, column: 58, scope: !10853)
!10879 = !DILocation(line: 938, column: 11, scope: !10853)
!10880 = !DILocation(line: 941, column: 59, scope: !10853)
!10881 = !DILocation(line: 941, column: 11, scope: !10853)
!10882 = !DILocation(line: 930, column: 12, scope: !10853)
!10883 = !DILocation(line: 933, column: 55, scope: !10853)
!10884 = !DILocation(line: 933, column: 12, scope: !10853)
!10885 = !DILocation(line: 952, column: 13, scope: !10853)
!10886 = !DILocation(line: 955, column: 15, scope: !10853)
!10887 = !DILocation(line: 958, column: 34, scope: !10853)
!10888 = !DILocation(line: 958, column: 9, scope: !10853)
!10889 = !DILocation(line: 958, column: 14, scope: !10853)
!10890 = !{!10503, !840, i64 64}
!10891 = !DILocation(line: 961, column: 14, scope: !10853)
!10892 = !DILocation(line: 962, column: 1, scope: !10853)
!10893 = distinct !DISubprogram(name: "TIM_OCStructInit", scope: !627, file: !627, line: 970, type: !10894, scopeLine: 971, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10896)
!10894 = !DISubroutineType(types: !10895)
!10895 = !{null, !10687}
!10896 = !{!10897}
!10897 = !DILocalVariable(name: "TIM_OCInitStruct", arg: 1, scope: !10893, file: !627, line: 970, type: !10687)
!10898 = !DILocation(line: 0, scope: !10893)
!10899 = !DILocation(line: 973, column: 21, scope: !10893)
!10900 = !DILocation(line: 973, column: 32, scope: !10893)
!10901 = !DILocation(line: 974, column: 21, scope: !10893)
!10902 = !DILocation(line: 974, column: 37, scope: !10893)
!10903 = !DILocation(line: 975, column: 21, scope: !10893)
!10904 = !DILocation(line: 975, column: 38, scope: !10893)
!10905 = !DILocation(line: 976, column: 21, scope: !10893)
!10906 = !DILocation(line: 976, column: 31, scope: !10893)
!10907 = !DILocation(line: 977, column: 21, scope: !10893)
!10908 = !DILocation(line: 977, column: 36, scope: !10893)
!10909 = !DILocation(line: 978, column: 21, scope: !10893)
!10910 = !DILocation(line: 978, column: 37, scope: !10893)
!10911 = !DILocation(line: 979, column: 21, scope: !10893)
!10912 = !DILocation(line: 979, column: 37, scope: !10893)
!10913 = !DILocation(line: 980, column: 21, scope: !10893)
!10914 = !DILocation(line: 980, column: 38, scope: !10893)
!10915 = !DILocation(line: 981, column: 1, scope: !10893)
!10916 = distinct !DISubprogram(name: "TIM_SelectOCxM", scope: !627, file: !627, line: 1006, type: !10564, scopeLine: 1007, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10917)
!10917 = !{!10918, !10919, !10920, !10921, !10922}
!10918 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10916, file: !627, line: 1006, type: !629)
!10919 = !DILocalVariable(name: "TIM_Channel", arg: 2, scope: !10916, file: !627, line: 1006, type: !64)
!10920 = !DILocalVariable(name: "TIM_OCMode", arg: 3, scope: !10916, file: !627, line: 1006, type: !64)
!10921 = !DILocalVariable(name: "tmp", scope: !10916, file: !627, line: 1008, type: !20)
!10922 = !DILocalVariable(name: "tmp1", scope: !10916, file: !627, line: 1009, type: !64)
!10923 = !DILocation(line: 0, scope: !10916)
!10924 = !DILocation(line: 1016, column: 9, scope: !10916)
!10925 = !DILocation(line: 1017, column: 7, scope: !10916)
!10926 = !DILocation(line: 1019, column: 26, scope: !10916)
!10927 = !DILocation(line: 1019, column: 23, scope: !10916)
!10928 = !DILocation(line: 1022, column: 9, scope: !10916)
!10929 = !DILocation(line: 1022, column: 14, scope: !10916)
!10930 = !DILocation(line: 1024, column: 37, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10916, file: !627, line: 1024, column: 6)
!10932 = !DILocation(line: 1026, column: 24, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10931, file: !627, line: 1025, column: 3)
!10934 = !DILocation(line: 1026, column: 9, scope: !10933)
!10935 = !DILocation(line: 1029, column: 6, scope: !10933)
!10936 = !DILocation(line: 1029, column: 28, scope: !10933)
!10937 = !DILocation(line: 1033, column: 3, scope: !10933)
!10938 = !DILocation(line: 1036, column: 35, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10931, file: !627, line: 1035, column: 3)
!10940 = !DILocation(line: 1036, column: 49, scope: !10939)
!10941 = !DILocation(line: 1036, column: 9, scope: !10939)
!10942 = !DILocation(line: 1039, column: 6, scope: !10939)
!10943 = !DILocation(line: 1039, column: 28, scope: !10939)
!10944 = !DILocation(line: 1042, column: 53, scope: !10939)
!10945 = !DILocation(line: 0, scope: !10931)
!10946 = !DILocation(line: 1044, column: 1, scope: !10916)
!10947 = distinct !DISubprogram(name: "TIM_SetCompare1", scope: !627, file: !627, line: 1052, type: !10590, scopeLine: 1053, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10948)
!10948 = !{!10949, !10950}
!10949 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10947, file: !627, line: 1052, type: !629)
!10950 = !DILocalVariable(name: "Compare1", arg: 2, scope: !10947, file: !627, line: 1052, type: !20)
!10951 = !DILocation(line: 0, scope: !10947)
!10952 = !DILocation(line: 1058, column: 9, scope: !10947)
!10953 = !DILocation(line: 1058, column: 14, scope: !10947)
!10954 = !DILocation(line: 1059, column: 1, scope: !10947)
!10955 = distinct !DISubprogram(name: "TIM_SetCompare2", scope: !627, file: !627, line: 1068, type: !10590, scopeLine: 1069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10956)
!10956 = !{!10957, !10958}
!10957 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10955, file: !627, line: 1068, type: !629)
!10958 = !DILocalVariable(name: "Compare2", arg: 2, scope: !10955, file: !627, line: 1068, type: !20)
!10959 = !DILocation(line: 0, scope: !10955)
!10960 = !DILocation(line: 1074, column: 9, scope: !10955)
!10961 = !DILocation(line: 1074, column: 14, scope: !10955)
!10962 = !DILocation(line: 1075, column: 1, scope: !10955)
!10963 = distinct !DISubprogram(name: "TIM_SetCompare3", scope: !627, file: !627, line: 1083, type: !10590, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10964)
!10964 = !{!10965, !10966}
!10965 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10963, file: !627, line: 1083, type: !629)
!10966 = !DILocalVariable(name: "Compare3", arg: 2, scope: !10963, file: !627, line: 1083, type: !20)
!10967 = !DILocation(line: 0, scope: !10963)
!10968 = !DILocation(line: 1089, column: 9, scope: !10963)
!10969 = !DILocation(line: 1089, column: 14, scope: !10963)
!10970 = !DILocation(line: 1090, column: 1, scope: !10963)
!10971 = distinct !DISubprogram(name: "TIM_SetCompare4", scope: !627, file: !627, line: 1098, type: !10590, scopeLine: 1099, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10972)
!10972 = !{!10973, !10974}
!10973 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10971, file: !627, line: 1098, type: !629)
!10974 = !DILocalVariable(name: "Compare4", arg: 2, scope: !10971, file: !627, line: 1098, type: !20)
!10975 = !DILocation(line: 0, scope: !10971)
!10976 = !DILocation(line: 1104, column: 9, scope: !10971)
!10977 = !DILocation(line: 1104, column: 14, scope: !10971)
!10978 = !DILocation(line: 1105, column: 1, scope: !10971)
!10979 = distinct !DISubprogram(name: "TIM_ForcedOC1Config", scope: !627, file: !627, line: 1116, type: !10577, scopeLine: 1117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10980)
!10980 = !{!10981, !10982, !10983}
!10981 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10979, file: !627, line: 1116, type: !629)
!10982 = !DILocalVariable(name: "TIM_ForcedAction", arg: 2, scope: !10979, file: !627, line: 1116, type: !64)
!10983 = !DILocalVariable(name: "tmpccmr1", scope: !10979, file: !627, line: 1118, type: !64)
!10984 = !DILocation(line: 0, scope: !10979)
!10985 = !DILocation(line: 1123, column: 20, scope: !10979)
!10986 = !DILocation(line: 1126, column: 12, scope: !10979)
!10987 = !DILocation(line: 1129, column: 12, scope: !10979)
!10988 = !DILocation(line: 1132, column: 15, scope: !10979)
!10989 = !DILocation(line: 1133, column: 1, scope: !10979)
!10990 = distinct !DISubprogram(name: "TIM_ForcedOC2Config", scope: !627, file: !627, line: 1145, type: !10577, scopeLine: 1146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !10991)
!10991 = !{!10992, !10993, !10994}
!10992 = !DILocalVariable(name: "TIMx", arg: 1, scope: !10990, file: !627, line: 1145, type: !629)
!10993 = !DILocalVariable(name: "TIM_ForcedAction", arg: 2, scope: !10990, file: !627, line: 1145, type: !64)
!10994 = !DILocalVariable(name: "tmpccmr1", scope: !10990, file: !627, line: 1147, type: !64)
!10995 = !DILocation(line: 0, scope: !10990)
!10996 = !DILocation(line: 1152, column: 20, scope: !10990)
!10997 = !DILocation(line: 1155, column: 12, scope: !10990)
!10998 = !DILocation(line: 1158, column: 43, scope: !10990)
!10999 = !DILocation(line: 1158, column: 12, scope: !10990)
!11000 = !DILocation(line: 1161, column: 15, scope: !10990)
!11001 = !DILocation(line: 1162, column: 1, scope: !10990)
!11002 = distinct !DISubprogram(name: "TIM_ForcedOC3Config", scope: !627, file: !627, line: 1173, type: !10577, scopeLine: 1174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11003)
!11003 = !{!11004, !11005, !11006}
!11004 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11002, file: !627, line: 1173, type: !629)
!11005 = !DILocalVariable(name: "TIM_ForcedAction", arg: 2, scope: !11002, file: !627, line: 1173, type: !64)
!11006 = !DILocalVariable(name: "tmpccmr2", scope: !11002, file: !627, line: 1175, type: !64)
!11007 = !DILocation(line: 0, scope: !11002)
!11008 = !DILocation(line: 1181, column: 20, scope: !11002)
!11009 = !DILocation(line: 1184, column: 12, scope: !11002)
!11010 = !DILocation(line: 1187, column: 12, scope: !11002)
!11011 = !DILocation(line: 1190, column: 15, scope: !11002)
!11012 = !DILocation(line: 1191, column: 1, scope: !11002)
!11013 = distinct !DISubprogram(name: "TIM_ForcedOC4Config", scope: !627, file: !627, line: 1202, type: !10577, scopeLine: 1203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11014)
!11014 = !{!11015, !11016, !11017}
!11015 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11013, file: !627, line: 1202, type: !629)
!11016 = !DILocalVariable(name: "TIM_ForcedAction", arg: 2, scope: !11013, file: !627, line: 1202, type: !64)
!11017 = !DILocalVariable(name: "tmpccmr2", scope: !11013, file: !627, line: 1204, type: !64)
!11018 = !DILocation(line: 0, scope: !11013)
!11019 = !DILocation(line: 1209, column: 20, scope: !11013)
!11020 = !DILocation(line: 1212, column: 12, scope: !11013)
!11021 = !DILocation(line: 1215, column: 43, scope: !11013)
!11022 = !DILocation(line: 1215, column: 12, scope: !11013)
!11023 = !DILocation(line: 1218, column: 15, scope: !11013)
!11024 = !DILocation(line: 1219, column: 1, scope: !11013)
!11025 = distinct !DISubprogram(name: "TIM_OC1PreloadConfig", scope: !627, file: !627, line: 1230, type: !10577, scopeLine: 1231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11026)
!11026 = !{!11027, !11028, !11029}
!11027 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11025, file: !627, line: 1230, type: !629)
!11028 = !DILocalVariable(name: "TIM_OCPreload", arg: 2, scope: !11025, file: !627, line: 1230, type: !64)
!11029 = !DILocalVariable(name: "tmpccmr1", scope: !11025, file: !627, line: 1232, type: !64)
!11030 = !DILocation(line: 0, scope: !11025)
!11031 = !DILocation(line: 1238, column: 20, scope: !11025)
!11032 = !DILocation(line: 1241, column: 12, scope: !11025)
!11033 = !DILocation(line: 1244, column: 12, scope: !11025)
!11034 = !DILocation(line: 1247, column: 15, scope: !11025)
!11035 = !DILocation(line: 1248, column: 1, scope: !11025)
!11036 = distinct !DISubprogram(name: "TIM_OC2PreloadConfig", scope: !627, file: !627, line: 1260, type: !10577, scopeLine: 1261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11037)
!11037 = !{!11038, !11039, !11040}
!11038 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11036, file: !627, line: 1260, type: !629)
!11039 = !DILocalVariable(name: "TIM_OCPreload", arg: 2, scope: !11036, file: !627, line: 1260, type: !64)
!11040 = !DILocalVariable(name: "tmpccmr1", scope: !11036, file: !627, line: 1262, type: !64)
!11041 = !DILocation(line: 0, scope: !11036)
!11042 = !DILocation(line: 1268, column: 20, scope: !11036)
!11043 = !DILocation(line: 1271, column: 12, scope: !11036)
!11044 = !DILocation(line: 1274, column: 40, scope: !11036)
!11045 = !DILocation(line: 1274, column: 12, scope: !11036)
!11046 = !DILocation(line: 1277, column: 15, scope: !11036)
!11047 = !DILocation(line: 1278, column: 1, scope: !11036)
!11048 = distinct !DISubprogram(name: "TIM_OC3PreloadConfig", scope: !627, file: !627, line: 1289, type: !10577, scopeLine: 1290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11049)
!11049 = !{!11050, !11051, !11052}
!11050 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11048, file: !627, line: 1289, type: !629)
!11051 = !DILocalVariable(name: "TIM_OCPreload", arg: 2, scope: !11048, file: !627, line: 1289, type: !64)
!11052 = !DILocalVariable(name: "tmpccmr2", scope: !11048, file: !627, line: 1291, type: !64)
!11053 = !DILocation(line: 0, scope: !11048)
!11054 = !DILocation(line: 1297, column: 20, scope: !11048)
!11055 = !DILocation(line: 1300, column: 12, scope: !11048)
!11056 = !DILocation(line: 1303, column: 12, scope: !11048)
!11057 = !DILocation(line: 1306, column: 15, scope: !11048)
!11058 = !DILocation(line: 1307, column: 1, scope: !11048)
!11059 = distinct !DISubprogram(name: "TIM_OC4PreloadConfig", scope: !627, file: !627, line: 1318, type: !10577, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11060)
!11060 = !{!11061, !11062, !11063}
!11061 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11059, file: !627, line: 1318, type: !629)
!11062 = !DILocalVariable(name: "TIM_OCPreload", arg: 2, scope: !11059, file: !627, line: 1318, type: !64)
!11063 = !DILocalVariable(name: "tmpccmr2", scope: !11059, file: !627, line: 1320, type: !64)
!11064 = !DILocation(line: 0, scope: !11059)
!11065 = !DILocation(line: 1326, column: 20, scope: !11059)
!11066 = !DILocation(line: 1329, column: 12, scope: !11059)
!11067 = !DILocation(line: 1332, column: 40, scope: !11059)
!11068 = !DILocation(line: 1332, column: 12, scope: !11059)
!11069 = !DILocation(line: 1335, column: 15, scope: !11059)
!11070 = !DILocation(line: 1336, column: 1, scope: !11059)
!11071 = distinct !DISubprogram(name: "TIM_OC1FastConfig", scope: !627, file: !627, line: 1347, type: !10577, scopeLine: 1348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11072)
!11072 = !{!11073, !11074, !11075}
!11073 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11071, file: !627, line: 1347, type: !629)
!11074 = !DILocalVariable(name: "TIM_OCFast", arg: 2, scope: !11071, file: !627, line: 1347, type: !64)
!11075 = !DILocalVariable(name: "tmpccmr1", scope: !11071, file: !627, line: 1349, type: !64)
!11076 = !DILocation(line: 0, scope: !11071)
!11077 = !DILocation(line: 1356, column: 20, scope: !11071)
!11078 = !DILocation(line: 1359, column: 12, scope: !11071)
!11079 = !DILocation(line: 1362, column: 12, scope: !11071)
!11080 = !DILocation(line: 1365, column: 15, scope: !11071)
!11081 = !DILocation(line: 1366, column: 1, scope: !11071)
!11082 = distinct !DISubprogram(name: "TIM_OC2FastConfig", scope: !627, file: !627, line: 1378, type: !10577, scopeLine: 1379, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11083)
!11083 = !{!11084, !11085, !11086}
!11084 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11082, file: !627, line: 1378, type: !629)
!11085 = !DILocalVariable(name: "TIM_OCFast", arg: 2, scope: !11082, file: !627, line: 1378, type: !64)
!11086 = !DILocalVariable(name: "tmpccmr1", scope: !11082, file: !627, line: 1380, type: !64)
!11087 = !DILocation(line: 0, scope: !11082)
!11088 = !DILocation(line: 1387, column: 20, scope: !11082)
!11089 = !DILocation(line: 1390, column: 12, scope: !11082)
!11090 = !DILocation(line: 1393, column: 37, scope: !11082)
!11091 = !DILocation(line: 1393, column: 12, scope: !11082)
!11092 = !DILocation(line: 1396, column: 15, scope: !11082)
!11093 = !DILocation(line: 1397, column: 1, scope: !11082)
!11094 = distinct !DISubprogram(name: "TIM_OC3FastConfig", scope: !627, file: !627, line: 1408, type: !10577, scopeLine: 1409, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11095)
!11095 = !{!11096, !11097, !11098}
!11096 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11094, file: !627, line: 1408, type: !629)
!11097 = !DILocalVariable(name: "TIM_OCFast", arg: 2, scope: !11094, file: !627, line: 1408, type: !64)
!11098 = !DILocalVariable(name: "tmpccmr2", scope: !11094, file: !627, line: 1410, type: !64)
!11099 = !DILocation(line: 0, scope: !11094)
!11100 = !DILocation(line: 1417, column: 20, scope: !11094)
!11101 = !DILocation(line: 1420, column: 12, scope: !11094)
!11102 = !DILocation(line: 1423, column: 12, scope: !11094)
!11103 = !DILocation(line: 1426, column: 15, scope: !11094)
!11104 = !DILocation(line: 1427, column: 1, scope: !11094)
!11105 = distinct !DISubprogram(name: "TIM_OC4FastConfig", scope: !627, file: !627, line: 1438, type: !10577, scopeLine: 1439, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11106)
!11106 = !{!11107, !11108, !11109}
!11107 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11105, file: !627, line: 1438, type: !629)
!11108 = !DILocalVariable(name: "TIM_OCFast", arg: 2, scope: !11105, file: !627, line: 1438, type: !64)
!11109 = !DILocalVariable(name: "tmpccmr2", scope: !11105, file: !627, line: 1440, type: !64)
!11110 = !DILocation(line: 0, scope: !11105)
!11111 = !DILocation(line: 1447, column: 20, scope: !11105)
!11112 = !DILocation(line: 1450, column: 12, scope: !11105)
!11113 = !DILocation(line: 1453, column: 37, scope: !11105)
!11114 = !DILocation(line: 1453, column: 12, scope: !11105)
!11115 = !DILocation(line: 1456, column: 15, scope: !11105)
!11116 = !DILocation(line: 1457, column: 1, scope: !11105)
!11117 = distinct !DISubprogram(name: "TIM_ClearOC1Ref", scope: !627, file: !627, line: 1468, type: !10577, scopeLine: 1469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11118)
!11118 = !{!11119, !11120, !11121}
!11119 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11117, file: !627, line: 1468, type: !629)
!11120 = !DILocalVariable(name: "TIM_OCClear", arg: 2, scope: !11117, file: !627, line: 1468, type: !64)
!11121 = !DILocalVariable(name: "tmpccmr1", scope: !11117, file: !627, line: 1470, type: !64)
!11122 = !DILocation(line: 0, scope: !11117)
!11123 = !DILocation(line: 1476, column: 20, scope: !11117)
!11124 = !DILocation(line: 1479, column: 12, scope: !11117)
!11125 = !DILocation(line: 1482, column: 12, scope: !11117)
!11126 = !DILocation(line: 1485, column: 15, scope: !11117)
!11127 = !DILocation(line: 1486, column: 1, scope: !11117)
!11128 = distinct !DISubprogram(name: "TIM_ClearOC2Ref", scope: !627, file: !627, line: 1498, type: !10577, scopeLine: 1499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11129)
!11129 = !{!11130, !11131, !11132}
!11130 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11128, file: !627, line: 1498, type: !629)
!11131 = !DILocalVariable(name: "TIM_OCClear", arg: 2, scope: !11128, file: !627, line: 1498, type: !64)
!11132 = !DILocalVariable(name: "tmpccmr1", scope: !11128, file: !627, line: 1500, type: !64)
!11133 = !DILocation(line: 0, scope: !11128)
!11134 = !DILocation(line: 1506, column: 20, scope: !11128)
!11135 = !DILocation(line: 1509, column: 12, scope: !11128)
!11136 = !DILocation(line: 1512, column: 38, scope: !11128)
!11137 = !DILocation(line: 1512, column: 12, scope: !11128)
!11138 = !DILocation(line: 1515, column: 15, scope: !11128)
!11139 = !DILocation(line: 1516, column: 1, scope: !11128)
!11140 = distinct !DISubprogram(name: "TIM_ClearOC3Ref", scope: !627, file: !627, line: 1527, type: !10577, scopeLine: 1528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11141)
!11141 = !{!11142, !11143, !11144}
!11142 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11140, file: !627, line: 1527, type: !629)
!11143 = !DILocalVariable(name: "TIM_OCClear", arg: 2, scope: !11140, file: !627, line: 1527, type: !64)
!11144 = !DILocalVariable(name: "tmpccmr2", scope: !11140, file: !627, line: 1529, type: !64)
!11145 = !DILocation(line: 0, scope: !11140)
!11146 = !DILocation(line: 1535, column: 20, scope: !11140)
!11147 = !DILocation(line: 1538, column: 12, scope: !11140)
!11148 = !DILocation(line: 1541, column: 12, scope: !11140)
!11149 = !DILocation(line: 1544, column: 15, scope: !11140)
!11150 = !DILocation(line: 1545, column: 1, scope: !11140)
!11151 = distinct !DISubprogram(name: "TIM_ClearOC4Ref", scope: !627, file: !627, line: 1556, type: !10577, scopeLine: 1557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11152)
!11152 = !{!11153, !11154, !11155}
!11153 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11151, file: !627, line: 1556, type: !629)
!11154 = !DILocalVariable(name: "TIM_OCClear", arg: 2, scope: !11151, file: !627, line: 1556, type: !64)
!11155 = !DILocalVariable(name: "tmpccmr2", scope: !11151, file: !627, line: 1558, type: !64)
!11156 = !DILocation(line: 0, scope: !11151)
!11157 = !DILocation(line: 1564, column: 20, scope: !11151)
!11158 = !DILocation(line: 1567, column: 12, scope: !11151)
!11159 = !DILocation(line: 1570, column: 38, scope: !11151)
!11160 = !DILocation(line: 1570, column: 12, scope: !11151)
!11161 = !DILocation(line: 1573, column: 15, scope: !11151)
!11162 = !DILocation(line: 1574, column: 1, scope: !11151)
!11163 = distinct !DISubprogram(name: "TIM_OC1PolarityConfig", scope: !627, file: !627, line: 1585, type: !10577, scopeLine: 1586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11164)
!11164 = !{!11165, !11166, !11167}
!11165 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11163, file: !627, line: 1585, type: !629)
!11166 = !DILocalVariable(name: "TIM_OCPolarity", arg: 2, scope: !11163, file: !627, line: 1585, type: !64)
!11167 = !DILocalVariable(name: "tmpccer", scope: !11163, file: !627, line: 1587, type: !64)
!11168 = !DILocation(line: 0, scope: !11163)
!11169 = !DILocation(line: 1593, column: 19, scope: !11163)
!11170 = !DILocation(line: 1596, column: 11, scope: !11163)
!11171 = !DILocation(line: 1597, column: 11, scope: !11163)
!11172 = !DILocation(line: 1600, column: 14, scope: !11163)
!11173 = !DILocation(line: 1601, column: 1, scope: !11163)
!11174 = distinct !DISubprogram(name: "TIM_OC1NPolarityConfig", scope: !627, file: !627, line: 1612, type: !10577, scopeLine: 1613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11175)
!11175 = !{!11176, !11177, !11178}
!11176 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11174, file: !627, line: 1612, type: !629)
!11177 = !DILocalVariable(name: "TIM_OCNPolarity", arg: 2, scope: !11174, file: !627, line: 1612, type: !64)
!11178 = !DILocalVariable(name: "tmpccer", scope: !11174, file: !627, line: 1614, type: !64)
!11179 = !DILocation(line: 0, scope: !11174)
!11180 = !DILocation(line: 1619, column: 19, scope: !11174)
!11181 = !DILocation(line: 1622, column: 11, scope: !11174)
!11182 = !DILocation(line: 1623, column: 11, scope: !11174)
!11183 = !DILocation(line: 1626, column: 14, scope: !11174)
!11184 = !DILocation(line: 1627, column: 1, scope: !11174)
!11185 = distinct !DISubprogram(name: "TIM_OC2PolarityConfig", scope: !627, file: !627, line: 1639, type: !10577, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11186)
!11186 = !{!11187, !11188, !11189}
!11187 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11185, file: !627, line: 1639, type: !629)
!11188 = !DILocalVariable(name: "TIM_OCPolarity", arg: 2, scope: !11185, file: !627, line: 1639, type: !64)
!11189 = !DILocalVariable(name: "tmpccer", scope: !11185, file: !627, line: 1641, type: !64)
!11190 = !DILocation(line: 0, scope: !11185)
!11191 = !DILocation(line: 1647, column: 19, scope: !11185)
!11192 = !DILocation(line: 1650, column: 11, scope: !11185)
!11193 = !DILocation(line: 1651, column: 40, scope: !11185)
!11194 = !DILocation(line: 1651, column: 11, scope: !11185)
!11195 = !DILocation(line: 1654, column: 14, scope: !11185)
!11196 = !DILocation(line: 1655, column: 1, scope: !11185)
!11197 = distinct !DISubprogram(name: "TIM_OC2NPolarityConfig", scope: !627, file: !627, line: 1666, type: !10577, scopeLine: 1667, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11198)
!11198 = !{!11199, !11200, !11201}
!11199 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11197, file: !627, line: 1666, type: !629)
!11200 = !DILocalVariable(name: "TIM_OCNPolarity", arg: 2, scope: !11197, file: !627, line: 1666, type: !64)
!11201 = !DILocalVariable(name: "tmpccer", scope: !11197, file: !627, line: 1668, type: !64)
!11202 = !DILocation(line: 0, scope: !11197)
!11203 = !DILocation(line: 1674, column: 19, scope: !11197)
!11204 = !DILocation(line: 1677, column: 11, scope: !11197)
!11205 = !DILocation(line: 1678, column: 41, scope: !11197)
!11206 = !DILocation(line: 1678, column: 11, scope: !11197)
!11207 = !DILocation(line: 1681, column: 14, scope: !11197)
!11208 = !DILocation(line: 1682, column: 1, scope: !11197)
!11209 = distinct !DISubprogram(name: "TIM_OC3PolarityConfig", scope: !627, file: !627, line: 1693, type: !10577, scopeLine: 1694, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11210)
!11210 = !{!11211, !11212, !11213}
!11211 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11209, file: !627, line: 1693, type: !629)
!11212 = !DILocalVariable(name: "TIM_OCPolarity", arg: 2, scope: !11209, file: !627, line: 1693, type: !64)
!11213 = !DILocalVariable(name: "tmpccer", scope: !11209, file: !627, line: 1695, type: !64)
!11214 = !DILocation(line: 0, scope: !11209)
!11215 = !DILocation(line: 1701, column: 19, scope: !11209)
!11216 = !DILocation(line: 1704, column: 11, scope: !11209)
!11217 = !DILocation(line: 1705, column: 40, scope: !11209)
!11218 = !DILocation(line: 1705, column: 11, scope: !11209)
!11219 = !DILocation(line: 1708, column: 14, scope: !11209)
!11220 = !DILocation(line: 1709, column: 1, scope: !11209)
!11221 = distinct !DISubprogram(name: "TIM_OC3NPolarityConfig", scope: !627, file: !627, line: 1720, type: !10577, scopeLine: 1721, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11222)
!11222 = !{!11223, !11224, !11225}
!11223 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11221, file: !627, line: 1720, type: !629)
!11224 = !DILocalVariable(name: "TIM_OCNPolarity", arg: 2, scope: !11221, file: !627, line: 1720, type: !64)
!11225 = !DILocalVariable(name: "tmpccer", scope: !11221, file: !627, line: 1722, type: !64)
!11226 = !DILocation(line: 0, scope: !11221)
!11227 = !DILocation(line: 1728, column: 19, scope: !11221)
!11228 = !DILocation(line: 1731, column: 11, scope: !11221)
!11229 = !DILocation(line: 1732, column: 41, scope: !11221)
!11230 = !DILocation(line: 1732, column: 11, scope: !11221)
!11231 = !DILocation(line: 1735, column: 14, scope: !11221)
!11232 = !DILocation(line: 1736, column: 1, scope: !11221)
!11233 = distinct !DISubprogram(name: "TIM_OC4PolarityConfig", scope: !627, file: !627, line: 1747, type: !10577, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11234)
!11234 = !{!11235, !11236, !11237}
!11235 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11233, file: !627, line: 1747, type: !629)
!11236 = !DILocalVariable(name: "TIM_OCPolarity", arg: 2, scope: !11233, file: !627, line: 1747, type: !64)
!11237 = !DILocalVariable(name: "tmpccer", scope: !11233, file: !627, line: 1749, type: !64)
!11238 = !DILocation(line: 0, scope: !11233)
!11239 = !DILocation(line: 1755, column: 19, scope: !11233)
!11240 = !DILocation(line: 1758, column: 11, scope: !11233)
!11241 = !DILocation(line: 1759, column: 40, scope: !11233)
!11242 = !DILocation(line: 1759, column: 11, scope: !11233)
!11243 = !DILocation(line: 1762, column: 14, scope: !11233)
!11244 = !DILocation(line: 1763, column: 1, scope: !11233)
!11245 = distinct !DISubprogram(name: "TIM_CCxCmd", scope: !627, file: !627, line: 1778, type: !10564, scopeLine: 1779, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11246)
!11246 = !{!11247, !11248, !11249, !11250}
!11247 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11245, file: !627, line: 1778, type: !629)
!11248 = !DILocalVariable(name: "TIM_Channel", arg: 2, scope: !11245, file: !627, line: 1778, type: !64)
!11249 = !DILocalVariable(name: "TIM_CCx", arg: 3, scope: !11245, file: !627, line: 1778, type: !64)
!11250 = !DILocalVariable(name: "tmp", scope: !11245, file: !627, line: 1780, type: !64)
!11251 = !DILocation(line: 0, scope: !11245)
!11252 = !DILocation(line: 1787, column: 25, scope: !11245)
!11253 = !DILocation(line: 1787, column: 22, scope: !11245)
!11254 = !DILocation(line: 1790, column: 9, scope: !11245)
!11255 = !DILocation(line: 1790, column: 14, scope: !11245)
!11256 = !DILocation(line: 1793, column: 29, scope: !11245)
!11257 = !DILocation(line: 1793, column: 37, scope: !11245)
!11258 = !DILocation(line: 1793, column: 14, scope: !11245)
!11259 = !DILocation(line: 1794, column: 1, scope: !11245)
!11260 = distinct !DISubprogram(name: "TIM_CCxNCmd", scope: !627, file: !627, line: 1808, type: !10564, scopeLine: 1809, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11261)
!11261 = !{!11262, !11263, !11264, !11265}
!11262 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11260, file: !627, line: 1808, type: !629)
!11263 = !DILocalVariable(name: "TIM_Channel", arg: 2, scope: !11260, file: !627, line: 1808, type: !64)
!11264 = !DILocalVariable(name: "TIM_CCxN", arg: 3, scope: !11260, file: !627, line: 1808, type: !64)
!11265 = !DILocalVariable(name: "tmp", scope: !11260, file: !627, line: 1810, type: !64)
!11266 = !DILocation(line: 0, scope: !11260)
!11267 = !DILocation(line: 1817, column: 26, scope: !11260)
!11268 = !DILocation(line: 1817, column: 23, scope: !11260)
!11269 = !DILocation(line: 1820, column: 9, scope: !11260)
!11270 = !DILocation(line: 1820, column: 14, scope: !11260)
!11271 = !DILocation(line: 1823, column: 29, scope: !11260)
!11272 = !DILocation(line: 1823, column: 38, scope: !11260)
!11273 = !DILocation(line: 1823, column: 14, scope: !11260)
!11274 = !DILocation(line: 1824, column: 1, scope: !11260)
!11275 = distinct !DISubprogram(name: "TIM_ICInit", scope: !627, file: !627, line: 1890, type: !11276, scopeLine: 1891, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11287)
!11276 = !DISubroutineType(types: !11277)
!11277 = !{null, !629, !11278}
!11278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11279, size: 32)
!11279 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIM_ICInitTypeDef", file: !10488, line: 130, baseType: !11280)
!11280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10488, line: 113, size: 80, elements: !11281)
!11281 = !{!11282, !11283, !11284, !11285, !11286}
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_Channel", scope: !11280, file: !10488, line: 116, baseType: !64, size: 16)
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_ICPolarity", scope: !11280, file: !10488, line: 119, baseType: !64, size: 16, offset: 16)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_ICSelection", scope: !11280, file: !10488, line: 122, baseType: !64, size: 16, offset: 32)
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_ICPrescaler", scope: !11280, file: !10488, line: 125, baseType: !64, size: 16, offset: 48)
!11286 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_ICFilter", scope: !11280, file: !10488, line: 128, baseType: !64, size: 16, offset: 64)
!11287 = !{!11288, !11289}
!11288 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11275, file: !627, line: 1890, type: !629)
!11289 = !DILocalVariable(name: "TIM_ICInitStruct", arg: 2, scope: !11275, file: !627, line: 1890, type: !11278)
!11290 = !DILocation(line: 0, scope: !11275)
!11291 = !DILocation(line: 1899, column: 25, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11275, file: !627, line: 1899, column: 7)
!11293 = !{!11294, !2880, i64 0}
!11294 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !2880, i64 6, !2880, i64 8}
!11295 = !DILocation(line: 1899, column: 7, scope: !11275)
!11296 = !DILocation(line: 1902, column: 40, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11292, file: !627, line: 1900, column: 3)
!11298 = !{!11294, !2880, i64 2}
!11299 = !DILocation(line: 1903, column: 34, scope: !11297)
!11300 = !{!11294, !2880, i64 4}
!11301 = !DILocation(line: 1904, column: 34, scope: !11297)
!11302 = !{!11294, !2880, i64 8}
!11303 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11304, file: !627, line: 3191, type: !629)
!11304 = distinct !DISubprogram(name: "TI1_Config", scope: !627, file: !627, line: 3191, type: !11305, scopeLine: 3193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11307)
!11305 = !DISubroutineType(types: !11306)
!11306 = !{null, !629, !64, !64, !64}
!11307 = !{!11303, !11308, !11309, !11310, !11311, !11312}
!11308 = !DILocalVariable(name: "TIM_ICPolarity", arg: 2, scope: !11304, file: !627, line: 3191, type: !64)
!11309 = !DILocalVariable(name: "TIM_ICSelection", arg: 3, scope: !11304, file: !627, line: 3191, type: !64)
!11310 = !DILocalVariable(name: "TIM_ICFilter", arg: 4, scope: !11304, file: !627, line: 3192, type: !64)
!11311 = !DILocalVariable(name: "tmpccmr1", scope: !11304, file: !627, line: 3194, type: !64)
!11312 = !DILocalVariable(name: "tmpccer", scope: !11304, file: !627, line: 3194, type: !64)
!11313 = !DILocation(line: 0, scope: !11304, inlinedAt: !11314)
!11314 = distinct !DILocation(line: 1902, column: 5, scope: !11297)
!11315 = !DILocation(line: 3197, column: 9, scope: !11304, inlinedAt: !11314)
!11316 = !DILocation(line: 3197, column: 14, scope: !11304, inlinedAt: !11314)
!11317 = !DILocation(line: 3198, column: 20, scope: !11304, inlinedAt: !11314)
!11318 = !DILocation(line: 3199, column: 19, scope: !11304, inlinedAt: !11314)
!11319 = !DILocation(line: 3202, column: 12, scope: !11304, inlinedAt: !11314)
!11320 = !DILocation(line: 3203, column: 68, scope: !11304, inlinedAt: !11314)
!11321 = !DILocation(line: 3203, column: 42, scope: !11304, inlinedAt: !11314)
!11322 = !DILocation(line: 3203, column: 12, scope: !11304, inlinedAt: !11314)
!11323 = !DILocation(line: 3206, column: 11, scope: !11304, inlinedAt: !11314)
!11324 = !DILocation(line: 3207, column: 11, scope: !11304, inlinedAt: !11314)
!11325 = !DILocation(line: 3210, column: 15, scope: !11304, inlinedAt: !11314)
!11326 = !DILocation(line: 3211, column: 14, scope: !11304, inlinedAt: !11314)
!11327 = !DILocation(line: 1906, column: 49, scope: !11297)
!11328 = !{!11294, !2880, i64 6}
!11329 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11330, file: !627, line: 2085, type: !629)
!11330 = distinct !DISubprogram(name: "TIM_SetIC1Prescaler", scope: !627, file: !627, line: 2085, type: !10577, scopeLine: 2086, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11331)
!11331 = !{!11329, !11332}
!11332 = !DILocalVariable(name: "TIM_ICPSC", arg: 2, scope: !11330, file: !627, line: 2085, type: !64)
!11333 = !DILocation(line: 0, scope: !11330, inlinedAt: !11334)
!11334 = distinct !DILocation(line: 1906, column: 5, scope: !11297)
!11335 = !DILocation(line: 2092, column: 15, scope: !11330, inlinedAt: !11334)
!11336 = !DILocation(line: 1907, column: 3, scope: !11297)
!11337 = !DILocation(line: 1912, column: 40, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !627, line: 1909, column: 3)
!11339 = distinct !DILexicalBlock(scope: !11292, file: !627, line: 1908, column: 12)
!11340 = !DILocation(line: 1913, column: 34, scope: !11338)
!11341 = !DILocation(line: 1914, column: 34, scope: !11338)
!11342 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11343, file: !627, line: 3232, type: !629)
!11343 = distinct !DISubprogram(name: "TI2_Config", scope: !627, file: !627, line: 3232, type: !11305, scopeLine: 3234, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11344)
!11344 = !{!11342, !11345, !11346, !11347, !11348, !11349, !11350}
!11345 = !DILocalVariable(name: "TIM_ICPolarity", arg: 2, scope: !11343, file: !627, line: 3232, type: !64)
!11346 = !DILocalVariable(name: "TIM_ICSelection", arg: 3, scope: !11343, file: !627, line: 3232, type: !64)
!11347 = !DILocalVariable(name: "TIM_ICFilter", arg: 4, scope: !11343, file: !627, line: 3233, type: !64)
!11348 = !DILocalVariable(name: "tmpccmr1", scope: !11343, file: !627, line: 3235, type: !64)
!11349 = !DILocalVariable(name: "tmpccer", scope: !11343, file: !627, line: 3235, type: !64)
!11350 = !DILocalVariable(name: "tmp", scope: !11343, file: !627, line: 3235, type: !64)
!11351 = !DILocation(line: 0, scope: !11343, inlinedAt: !11352)
!11352 = distinct !DILocation(line: 1912, column: 5, scope: !11338)
!11353 = !DILocation(line: 3238, column: 9, scope: !11343, inlinedAt: !11352)
!11354 = !DILocation(line: 3238, column: 14, scope: !11343, inlinedAt: !11352)
!11355 = !DILocation(line: 3239, column: 20, scope: !11343, inlinedAt: !11352)
!11356 = !DILocation(line: 3240, column: 19, scope: !11343, inlinedAt: !11352)
!11357 = !DILocation(line: 3241, column: 35, scope: !11343, inlinedAt: !11352)
!11358 = !DILocation(line: 3244, column: 12, scope: !11343, inlinedAt: !11352)
!11359 = !DILocation(line: 3245, column: 39, scope: !11343, inlinedAt: !11352)
!11360 = !DILocation(line: 3246, column: 42, scope: !11343, inlinedAt: !11352)
!11361 = !DILocation(line: 3245, column: 12, scope: !11343, inlinedAt: !11352)
!11362 = !DILocation(line: 3246, column: 12, scope: !11343, inlinedAt: !11352)
!11363 = !DILocation(line: 3249, column: 11, scope: !11343, inlinedAt: !11352)
!11364 = !DILocation(line: 3250, column: 11, scope: !11343, inlinedAt: !11352)
!11365 = !DILocation(line: 3253, column: 15, scope: !11343, inlinedAt: !11352)
!11366 = !DILocation(line: 3254, column: 14, scope: !11343, inlinedAt: !11352)
!11367 = !DILocation(line: 1916, column: 49, scope: !11338)
!11368 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11369, file: !627, line: 2110, type: !629)
!11369 = distinct !DISubprogram(name: "TIM_SetIC2Prescaler", scope: !627, file: !627, line: 2110, type: !10577, scopeLine: 2111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11370)
!11370 = !{!11368, !11371}
!11371 = !DILocalVariable(name: "TIM_ICPSC", arg: 2, scope: !11369, file: !627, line: 2110, type: !64)
!11372 = !DILocation(line: 0, scope: !11369, inlinedAt: !11373)
!11373 = distinct !DILocation(line: 1916, column: 5, scope: !11338)
!11374 = !DILocation(line: 2117, column: 15, scope: !11369, inlinedAt: !11373)
!11375 = !DILocation(line: 2120, column: 39, scope: !11369, inlinedAt: !11373)
!11376 = !DILocation(line: 1917, column: 3, scope: !11338)
!11377 = !DILocation(line: 1918, column: 42, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11339, file: !627, line: 1918, column: 12)
!11379 = !DILocation(line: 0, scope: !11378)
!11380 = !DILocation(line: 1918, column: 12, scope: !11339)
!11381 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11382, file: !627, line: 3274, type: !629)
!11382 = distinct !DISubprogram(name: "TI3_Config", scope: !627, file: !627, line: 3274, type: !11305, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11383)
!11383 = !{!11381, !11384, !11385, !11386, !11387, !11388, !11389}
!11384 = !DILocalVariable(name: "TIM_ICPolarity", arg: 2, scope: !11382, file: !627, line: 3274, type: !64)
!11385 = !DILocalVariable(name: "TIM_ICSelection", arg: 3, scope: !11382, file: !627, line: 3274, type: !64)
!11386 = !DILocalVariable(name: "TIM_ICFilter", arg: 4, scope: !11382, file: !627, line: 3275, type: !64)
!11387 = !DILocalVariable(name: "tmpccmr2", scope: !11382, file: !627, line: 3277, type: !64)
!11388 = !DILocalVariable(name: "tmpccer", scope: !11382, file: !627, line: 3277, type: !64)
!11389 = !DILocalVariable(name: "tmp", scope: !11382, file: !627, line: 3277, type: !64)
!11390 = !DILocation(line: 0, scope: !11382, inlinedAt: !11391)
!11391 = distinct !DILocation(line: 1922, column: 5, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11378, file: !627, line: 1919, column: 3)
!11393 = !DILocation(line: 3280, column: 14, scope: !11382, inlinedAt: !11391)
!11394 = !DILocation(line: 3281, column: 20, scope: !11382, inlinedAt: !11391)
!11395 = !DILocation(line: 3282, column: 19, scope: !11382, inlinedAt: !11391)
!11396 = !DILocation(line: 3283, column: 35, scope: !11382, inlinedAt: !11391)
!11397 = !DILocation(line: 3286, column: 12, scope: !11382, inlinedAt: !11391)
!11398 = !DILocation(line: 3287, column: 68, scope: !11382, inlinedAt: !11391)
!11399 = !DILocation(line: 3287, column: 42, scope: !11382, inlinedAt: !11391)
!11400 = !DILocation(line: 3287, column: 12, scope: !11382, inlinedAt: !11391)
!11401 = !DILocation(line: 3290, column: 11, scope: !11382, inlinedAt: !11391)
!11402 = !DILocation(line: 3291, column: 11, scope: !11382, inlinedAt: !11391)
!11403 = !DILocation(line: 3294, column: 15, scope: !11382, inlinedAt: !11391)
!11404 = !DILocation(line: 3295, column: 14, scope: !11382, inlinedAt: !11391)
!11405 = !DILocation(line: 1926, column: 49, scope: !11392)
!11406 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11407, file: !627, line: 2134, type: !629)
!11407 = distinct !DISubprogram(name: "TIM_SetIC3Prescaler", scope: !627, file: !627, line: 2134, type: !10577, scopeLine: 2135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11408)
!11408 = !{!11406, !11409}
!11409 = !DILocalVariable(name: "TIM_ICPSC", arg: 2, scope: !11407, file: !627, line: 2134, type: !64)
!11410 = !DILocation(line: 0, scope: !11407, inlinedAt: !11411)
!11411 = distinct !DILocation(line: 1926, column: 5, scope: !11392)
!11412 = !DILocation(line: 2141, column: 15, scope: !11407, inlinedAt: !11411)
!11413 = !DILocation(line: 1927, column: 3, scope: !11392)
!11414 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11415, file: !627, line: 3315, type: !629)
!11415 = distinct !DISubprogram(name: "TI4_Config", scope: !627, file: !627, line: 3315, type: !11305, scopeLine: 3317, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11416)
!11416 = !{!11414, !11417, !11418, !11419, !11420, !11421, !11422}
!11417 = !DILocalVariable(name: "TIM_ICPolarity", arg: 2, scope: !11415, file: !627, line: 3315, type: !64)
!11418 = !DILocalVariable(name: "TIM_ICSelection", arg: 3, scope: !11415, file: !627, line: 3315, type: !64)
!11419 = !DILocalVariable(name: "TIM_ICFilter", arg: 4, scope: !11415, file: !627, line: 3316, type: !64)
!11420 = !DILocalVariable(name: "tmpccmr2", scope: !11415, file: !627, line: 3318, type: !64)
!11421 = !DILocalVariable(name: "tmpccer", scope: !11415, file: !627, line: 3318, type: !64)
!11422 = !DILocalVariable(name: "tmp", scope: !11415, file: !627, line: 3318, type: !64)
!11423 = !DILocation(line: 0, scope: !11415, inlinedAt: !11424)
!11424 = distinct !DILocation(line: 1932, column: 5, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11378, file: !627, line: 1929, column: 3)
!11426 = !DILocation(line: 3321, column: 14, scope: !11415, inlinedAt: !11424)
!11427 = !DILocation(line: 3322, column: 20, scope: !11415, inlinedAt: !11424)
!11428 = !DILocation(line: 3323, column: 19, scope: !11415, inlinedAt: !11424)
!11429 = !DILocation(line: 3324, column: 35, scope: !11415, inlinedAt: !11424)
!11430 = !DILocation(line: 3327, column: 12, scope: !11415, inlinedAt: !11424)
!11431 = !DILocation(line: 3328, column: 42, scope: !11415, inlinedAt: !11424)
!11432 = !DILocation(line: 3329, column: 39, scope: !11415, inlinedAt: !11424)
!11433 = !DILocation(line: 3328, column: 12, scope: !11415, inlinedAt: !11424)
!11434 = !DILocation(line: 3329, column: 12, scope: !11415, inlinedAt: !11424)
!11435 = !DILocation(line: 3332, column: 11, scope: !11415, inlinedAt: !11424)
!11436 = !DILocation(line: 3333, column: 11, scope: !11415, inlinedAt: !11424)
!11437 = !DILocation(line: 3336, column: 15, scope: !11415, inlinedAt: !11424)
!11438 = !DILocation(line: 3337, column: 14, scope: !11415, inlinedAt: !11424)
!11439 = !DILocation(line: 1936, column: 49, scope: !11425)
!11440 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11441, file: !627, line: 2158, type: !629)
!11441 = distinct !DISubprogram(name: "TIM_SetIC4Prescaler", scope: !627, file: !627, line: 2158, type: !10577, scopeLine: 2159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11442)
!11442 = !{!11440, !11443}
!11443 = !DILocalVariable(name: "TIM_ICPSC", arg: 2, scope: !11441, file: !627, line: 2158, type: !64)
!11444 = !DILocation(line: 0, scope: !11441, inlinedAt: !11445)
!11445 = distinct !DILocation(line: 1936, column: 5, scope: !11425)
!11446 = !DILocation(line: 2165, column: 15, scope: !11441, inlinedAt: !11445)
!11447 = !DILocation(line: 2168, column: 39, scope: !11441, inlinedAt: !11445)
!11448 = !DILocation(line: 0, scope: !11292)
!11449 = !DILocation(line: 1938, column: 1, scope: !11275)
!11450 = !DILocation(line: 0, scope: !11330)
!11451 = !DILocation(line: 2092, column: 9, scope: !11330)
!11452 = !DILocation(line: 2092, column: 15, scope: !11330)
!11453 = !DILocation(line: 2095, column: 15, scope: !11330)
!11454 = !DILocation(line: 2096, column: 1, scope: !11330)
!11455 = !DILocation(line: 0, scope: !11369)
!11456 = !DILocation(line: 2117, column: 9, scope: !11369)
!11457 = !DILocation(line: 2117, column: 15, scope: !11369)
!11458 = !DILocation(line: 2120, column: 39, scope: !11369)
!11459 = !DILocation(line: 2120, column: 15, scope: !11369)
!11460 = !DILocation(line: 2121, column: 1, scope: !11369)
!11461 = !DILocation(line: 0, scope: !11407)
!11462 = !DILocation(line: 2141, column: 9, scope: !11407)
!11463 = !DILocation(line: 2141, column: 15, scope: !11407)
!11464 = !DILocation(line: 2144, column: 15, scope: !11407)
!11465 = !DILocation(line: 2145, column: 1, scope: !11407)
!11466 = !DILocation(line: 0, scope: !11441)
!11467 = !DILocation(line: 2165, column: 9, scope: !11441)
!11468 = !DILocation(line: 2165, column: 15, scope: !11441)
!11469 = !DILocation(line: 2168, column: 39, scope: !11441)
!11470 = !DILocation(line: 2168, column: 15, scope: !11441)
!11471 = !DILocation(line: 2169, column: 1, scope: !11441)
!11472 = distinct !DISubprogram(name: "TIM_ICStructInit", scope: !627, file: !627, line: 1946, type: !11473, scopeLine: 1947, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11475)
!11473 = !DISubroutineType(types: !11474)
!11474 = !{null, !11278}
!11475 = !{!11476}
!11476 = !DILocalVariable(name: "TIM_ICInitStruct", arg: 1, scope: !11472, file: !627, line: 1946, type: !11278)
!11477 = !DILocation(line: 0, scope: !11472)
!11478 = !DILocation(line: 1949, column: 21, scope: !11472)
!11479 = !DILocation(line: 1949, column: 33, scope: !11472)
!11480 = !DILocation(line: 1950, column: 21, scope: !11472)
!11481 = !DILocation(line: 1950, column: 36, scope: !11472)
!11482 = !DILocation(line: 1951, column: 21, scope: !11472)
!11483 = !DILocation(line: 1951, column: 37, scope: !11472)
!11484 = !DILocation(line: 1952, column: 21, scope: !11472)
!11485 = !DILocation(line: 1952, column: 37, scope: !11472)
!11486 = !DILocation(line: 1953, column: 21, scope: !11472)
!11487 = !DILocation(line: 1953, column: 34, scope: !11472)
!11488 = !DILocation(line: 1954, column: 1, scope: !11472)
!11489 = distinct !DISubprogram(name: "TIM_PWMIConfig", scope: !627, file: !627, line: 1965, type: !11276, scopeLine: 1966, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11490)
!11490 = !{!11491, !11492, !11493, !11494}
!11491 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11489, file: !627, line: 1965, type: !629)
!11492 = !DILocalVariable(name: "TIM_ICInitStruct", arg: 2, scope: !11489, file: !627, line: 1965, type: !11278)
!11493 = !DILocalVariable(name: "icoppositepolarity", scope: !11489, file: !627, line: 1967, type: !64)
!11494 = !DILocalVariable(name: "icoppositeselection", scope: !11489, file: !627, line: 1968, type: !64)
!11495 = !DILocation(line: 0, scope: !11489)
!11496 = !DILocation(line: 1974, column: 25, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11489, file: !627, line: 1974, column: 7)
!11498 = !DILocation(line: 1974, column: 40, scope: !11497)
!11499 = !DILocation(line: 1983, column: 25, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11489, file: !627, line: 1983, column: 7)
!11501 = !DILocation(line: 1983, column: 41, scope: !11500)
!11502 = !DILocation(line: 1983, column: 7, scope: !11489)
!11503 = !DILocation(line: 1991, column: 25, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11489, file: !627, line: 1991, column: 7)
!11505 = !DILocation(line: 1991, column: 37, scope: !11504)
!11506 = !DILocation(line: 0, scope: !11504)
!11507 = !DILocation(line: 1991, column: 7, scope: !11489)
!11508 = !DILocation(line: 0, scope: !11304, inlinedAt: !11509)
!11509 = distinct !DILocation(line: 1994, column: 5, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11504, file: !627, line: 1992, column: 3)
!11511 = !DILocation(line: 3197, column: 14, scope: !11304, inlinedAt: !11509)
!11512 = !DILocation(line: 3198, column: 20, scope: !11304, inlinedAt: !11509)
!11513 = !DILocation(line: 3199, column: 19, scope: !11304, inlinedAt: !11509)
!11514 = !DILocation(line: 3202, column: 12, scope: !11304, inlinedAt: !11509)
!11515 = !DILocation(line: 3203, column: 68, scope: !11304, inlinedAt: !11509)
!11516 = !DILocation(line: 3203, column: 42, scope: !11304, inlinedAt: !11509)
!11517 = !DILocation(line: 3203, column: 12, scope: !11304, inlinedAt: !11509)
!11518 = !DILocation(line: 3206, column: 11, scope: !11304, inlinedAt: !11509)
!11519 = !DILocation(line: 3207, column: 11, scope: !11304, inlinedAt: !11509)
!11520 = !DILocation(line: 3210, column: 15, scope: !11304, inlinedAt: !11509)
!11521 = !DILocation(line: 3211, column: 14, scope: !11304, inlinedAt: !11509)
!11522 = !DILocation(line: 1997, column: 49, scope: !11510)
!11523 = !DILocation(line: 0, scope: !11330, inlinedAt: !11524)
!11524 = distinct !DILocation(line: 1997, column: 5, scope: !11510)
!11525 = !DILocation(line: 2092, column: 15, scope: !11330, inlinedAt: !11524)
!11526 = !DILocation(line: 2095, column: 15, scope: !11330, inlinedAt: !11524)
!11527 = !DILocation(line: 0, scope: !11343, inlinedAt: !11528)
!11528 = distinct !DILocation(line: 1999, column: 5, scope: !11510)
!11529 = !DILocation(line: 3238, column: 14, scope: !11343, inlinedAt: !11528)
!11530 = !DILocation(line: 3239, column: 20, scope: !11343, inlinedAt: !11528)
!11531 = !DILocation(line: 3240, column: 19, scope: !11343, inlinedAt: !11528)
!11532 = !DILocation(line: 3241, column: 35, scope: !11343, inlinedAt: !11528)
!11533 = !DILocation(line: 3244, column: 12, scope: !11343, inlinedAt: !11528)
!11534 = !DILocation(line: 3245, column: 39, scope: !11343, inlinedAt: !11528)
!11535 = !DILocation(line: 3246, column: 42, scope: !11343, inlinedAt: !11528)
!11536 = !DILocation(line: 3245, column: 12, scope: !11343, inlinedAt: !11528)
!11537 = !DILocation(line: 3246, column: 12, scope: !11343, inlinedAt: !11528)
!11538 = !DILocation(line: 3249, column: 11, scope: !11343, inlinedAt: !11528)
!11539 = !DILocation(line: 3250, column: 11, scope: !11343, inlinedAt: !11528)
!11540 = !DILocation(line: 3253, column: 15, scope: !11343, inlinedAt: !11528)
!11541 = !DILocation(line: 3254, column: 14, scope: !11343, inlinedAt: !11528)
!11542 = !DILocation(line: 0, scope: !11369, inlinedAt: !11543)
!11543 = distinct !DILocation(line: 2001, column: 5, scope: !11510)
!11544 = !DILocation(line: 2117, column: 15, scope: !11369, inlinedAt: !11543)
!11545 = !DILocation(line: 2120, column: 39, scope: !11369, inlinedAt: !11543)
!11546 = !DILocation(line: 2002, column: 3, scope: !11510)
!11547 = !DILocation(line: 0, scope: !11343, inlinedAt: !11548)
!11548 = distinct !DILocation(line: 2006, column: 5, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11504, file: !627, line: 2004, column: 3)
!11550 = !DILocation(line: 3238, column: 14, scope: !11343, inlinedAt: !11548)
!11551 = !DILocation(line: 3239, column: 20, scope: !11343, inlinedAt: !11548)
!11552 = !DILocation(line: 3240, column: 19, scope: !11343, inlinedAt: !11548)
!11553 = !DILocation(line: 3241, column: 35, scope: !11343, inlinedAt: !11548)
!11554 = !DILocation(line: 3244, column: 12, scope: !11343, inlinedAt: !11548)
!11555 = !DILocation(line: 3245, column: 39, scope: !11343, inlinedAt: !11548)
!11556 = !DILocation(line: 3246, column: 42, scope: !11343, inlinedAt: !11548)
!11557 = !DILocation(line: 3245, column: 12, scope: !11343, inlinedAt: !11548)
!11558 = !DILocation(line: 3246, column: 12, scope: !11343, inlinedAt: !11548)
!11559 = !DILocation(line: 3249, column: 11, scope: !11343, inlinedAt: !11548)
!11560 = !DILocation(line: 3250, column: 11, scope: !11343, inlinedAt: !11548)
!11561 = !DILocation(line: 3253, column: 15, scope: !11343, inlinedAt: !11548)
!11562 = !DILocation(line: 3254, column: 14, scope: !11343, inlinedAt: !11548)
!11563 = !DILocation(line: 2009, column: 49, scope: !11549)
!11564 = !DILocation(line: 0, scope: !11369, inlinedAt: !11565)
!11565 = distinct !DILocation(line: 2009, column: 5, scope: !11549)
!11566 = !DILocation(line: 2117, column: 15, scope: !11369, inlinedAt: !11565)
!11567 = !DILocation(line: 2120, column: 39, scope: !11369, inlinedAt: !11565)
!11568 = !DILocation(line: 2120, column: 15, scope: !11369, inlinedAt: !11565)
!11569 = !DILocation(line: 0, scope: !11304, inlinedAt: !11570)
!11570 = distinct !DILocation(line: 2011, column: 5, scope: !11549)
!11571 = !DILocation(line: 3197, column: 14, scope: !11304, inlinedAt: !11570)
!11572 = !DILocation(line: 3198, column: 20, scope: !11304, inlinedAt: !11570)
!11573 = !DILocation(line: 3199, column: 19, scope: !11304, inlinedAt: !11570)
!11574 = !DILocation(line: 3202, column: 12, scope: !11304, inlinedAt: !11570)
!11575 = !DILocation(line: 3203, column: 68, scope: !11304, inlinedAt: !11570)
!11576 = !DILocation(line: 3203, column: 42, scope: !11304, inlinedAt: !11570)
!11577 = !DILocation(line: 3203, column: 12, scope: !11304, inlinedAt: !11570)
!11578 = !DILocation(line: 3206, column: 11, scope: !11304, inlinedAt: !11570)
!11579 = !DILocation(line: 3207, column: 11, scope: !11304, inlinedAt: !11570)
!11580 = !DILocation(line: 3210, column: 15, scope: !11304, inlinedAt: !11570)
!11581 = !DILocation(line: 3211, column: 14, scope: !11304, inlinedAt: !11570)
!11582 = !DILocation(line: 0, scope: !11330, inlinedAt: !11583)
!11583 = distinct !DILocation(line: 2013, column: 5, scope: !11549)
!11584 = !DILocation(line: 2092, column: 15, scope: !11330, inlinedAt: !11583)
!11585 = !DILocation(line: 2015, column: 1, scope: !11489)
!11586 = distinct !DISubprogram(name: "TIM_GetCapture1", scope: !627, file: !627, line: 2022, type: !10609, scopeLine: 2023, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11587)
!11587 = !{!11588}
!11588 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11586, file: !627, line: 2022, type: !629)
!11589 = !DILocation(line: 0, scope: !11586)
!11590 = !DILocation(line: 2028, column: 16, scope: !11586)
!11591 = !DILocation(line: 2028, column: 3, scope: !11586)
!11592 = distinct !DISubprogram(name: "TIM_GetCapture2", scope: !627, file: !627, line: 2037, type: !10609, scopeLine: 2038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11593)
!11593 = !{!11594}
!11594 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11592, file: !627, line: 2037, type: !629)
!11595 = !DILocation(line: 0, scope: !11592)
!11596 = !DILocation(line: 2043, column: 16, scope: !11592)
!11597 = !DILocation(line: 2043, column: 3, scope: !11592)
!11598 = distinct !DISubprogram(name: "TIM_GetCapture3", scope: !627, file: !627, line: 2051, type: !10609, scopeLine: 2052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11599)
!11599 = !{!11600}
!11600 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11598, file: !627, line: 2051, type: !629)
!11601 = !DILocation(line: 0, scope: !11598)
!11602 = !DILocation(line: 2057, column: 16, scope: !11598)
!11603 = !DILocation(line: 2057, column: 3, scope: !11598)
!11604 = distinct !DISubprogram(name: "TIM_GetCapture4", scope: !627, file: !627, line: 2065, type: !10609, scopeLine: 2066, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11605)
!11605 = !{!11606}
!11606 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11604, file: !627, line: 2065, type: !629)
!11607 = !DILocation(line: 0, scope: !11604)
!11608 = !DILocation(line: 2071, column: 16, scope: !11604)
!11609 = !DILocation(line: 2071, column: 3, scope: !11604)
!11610 = distinct !DISubprogram(name: "TIM_BDTRConfig", scope: !627, file: !627, line: 2211, type: !11611, scopeLine: 2212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11624)
!11611 = !DISubroutineType(types: !11612)
!11612 = !{null, !629, !11613}
!11613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11614, size: 32)
!11614 = !DIDerivedType(tag: DW_TAG_typedef, name: "TIM_BDTRInitTypeDef", file: !10488, line: 161, baseType: !11615)
!11615 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10488, line: 137, size: 112, elements: !11616)
!11616 = !{!11617, !11618, !11619, !11620, !11621, !11622, !11623}
!11617 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_OSSRState", scope: !11615, file: !10488, line: 140, baseType: !64, size: 16)
!11618 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_OSSIState", scope: !11615, file: !10488, line: 143, baseType: !64, size: 16, offset: 16)
!11619 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_LOCKLevel", scope: !11615, file: !10488, line: 146, baseType: !64, size: 16, offset: 32)
!11620 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_DeadTime", scope: !11615, file: !10488, line: 149, baseType: !64, size: 16, offset: 48)
!11621 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_Break", scope: !11615, file: !10488, line: 153, baseType: !64, size: 16, offset: 64)
!11622 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_BreakPolarity", scope: !11615, file: !10488, line: 156, baseType: !64, size: 16, offset: 80)
!11623 = !DIDerivedType(tag: DW_TAG_member, name: "TIM_AutomaticOutput", scope: !11615, file: !10488, line: 159, baseType: !64, size: 16, offset: 96)
!11624 = !{!11625, !11626}
!11625 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11610, file: !627, line: 2211, type: !629)
!11626 = !DILocalVariable(name: "TIM_BDTRInitStruct", arg: 2, scope: !11610, file: !627, line: 2211, type: !11613)
!11627 = !DILocation(line: 0, scope: !11610)
!11628 = !DILocation(line: 2224, column: 46, scope: !11610)
!11629 = !{!11630, !2880, i64 0}
!11630 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !2880, i64 6, !2880, i64 8, !2880, i64 10, !2880, i64 12}
!11631 = !DILocation(line: 2224, column: 82, scope: !11610)
!11632 = !{!11630, !2880, i64 2}
!11633 = !DILocation(line: 2224, column: 60, scope: !11610)
!11634 = !DILocation(line: 2225, column: 34, scope: !11610)
!11635 = !{!11630, !2880, i64 4}
!11636 = !DILocation(line: 2224, column: 96, scope: !11610)
!11637 = !DILocation(line: 2225, column: 70, scope: !11610)
!11638 = !{!11630, !2880, i64 6}
!11639 = !DILocation(line: 2225, column: 48, scope: !11610)
!11640 = !DILocation(line: 2226, column: 34, scope: !11610)
!11641 = !{!11630, !2880, i64 8}
!11642 = !DILocation(line: 2225, column: 83, scope: !11610)
!11643 = !DILocation(line: 2226, column: 66, scope: !11610)
!11644 = !{!11630, !2880, i64 10}
!11645 = !DILocation(line: 2226, column: 44, scope: !11610)
!11646 = !DILocation(line: 2227, column: 34, scope: !11610)
!11647 = !{!11630, !2880, i64 12}
!11648 = !DILocation(line: 2226, column: 84, scope: !11610)
!11649 = !DILocation(line: 2224, column: 9, scope: !11610)
!11650 = !DILocation(line: 2224, column: 14, scope: !11610)
!11651 = !{!10503, !2880, i64 68}
!11652 = !DILocation(line: 2228, column: 1, scope: !11610)
!11653 = distinct !DISubprogram(name: "TIM_BDTRStructInit", scope: !627, file: !627, line: 2236, type: !11654, scopeLine: 2237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11656)
!11654 = !DISubroutineType(types: !11655)
!11655 = !{null, !11613}
!11656 = !{!11657}
!11657 = !DILocalVariable(name: "TIM_BDTRInitStruct", arg: 1, scope: !11653, file: !627, line: 2236, type: !11613)
!11658 = !DILocation(line: 0, scope: !11653)
!11659 = !DILocation(line: 2239, column: 23, scope: !11653)
!11660 = !DILocation(line: 2239, column: 37, scope: !11653)
!11661 = !DILocation(line: 2240, column: 23, scope: !11653)
!11662 = !DILocation(line: 2240, column: 37, scope: !11653)
!11663 = !DILocation(line: 2241, column: 23, scope: !11653)
!11664 = !DILocation(line: 2241, column: 37, scope: !11653)
!11665 = !DILocation(line: 2242, column: 23, scope: !11653)
!11666 = !DILocation(line: 2242, column: 36, scope: !11653)
!11667 = !DILocation(line: 2243, column: 23, scope: !11653)
!11668 = !DILocation(line: 2243, column: 33, scope: !11653)
!11669 = !DILocation(line: 2244, column: 23, scope: !11653)
!11670 = !DILocation(line: 2244, column: 41, scope: !11653)
!11671 = !DILocation(line: 2245, column: 23, scope: !11653)
!11672 = !DILocation(line: 2245, column: 43, scope: !11653)
!11673 = !DILocation(line: 2246, column: 1, scope: !11653)
!11674 = distinct !DISubprogram(name: "TIM_CtrlPWMOutputs", scope: !627, file: !627, line: 2255, type: !10625, scopeLine: 2256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11675)
!11675 = !{!11676, !11677}
!11676 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11674, file: !627, line: 2255, type: !629)
!11677 = !DILocalVariable(name: "NewState", arg: 2, scope: !11674, file: !627, line: 2255, type: !856)
!11678 = !DILocation(line: 0, scope: !11674)
!11679 = !DILocation(line: 2261, column: 16, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11674, file: !627, line: 2261, column: 7)
!11681 = !DILocation(line: 0, scope: !11680)
!11682 = !DILocation(line: 2261, column: 7, scope: !11674)
!11683 = !DILocation(line: 2271, column: 1, scope: !11674)
!11684 = distinct !DISubprogram(name: "TIM_SelectCOM", scope: !627, file: !627, line: 2280, type: !10625, scopeLine: 2281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11685)
!11685 = !{!11686, !11687}
!11686 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11684, file: !627, line: 2280, type: !629)
!11687 = !DILocalVariable(name: "NewState", arg: 2, scope: !11684, file: !627, line: 2280, type: !856)
!11688 = !DILocation(line: 0, scope: !11684)
!11689 = !DILocation(line: 2286, column: 16, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11684, file: !627, line: 2286, column: 7)
!11691 = !DILocation(line: 0, scope: !11690)
!11692 = !DILocation(line: 2286, column: 7, scope: !11684)
!11693 = !DILocation(line: 2296, column: 1, scope: !11684)
!11694 = distinct !DISubprogram(name: "TIM_CCPreloadControl", scope: !627, file: !627, line: 2305, type: !10625, scopeLine: 2306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11695)
!11695 = !{!11696, !11697}
!11696 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11694, file: !627, line: 2305, type: !629)
!11697 = !DILocalVariable(name: "NewState", arg: 2, scope: !11694, file: !627, line: 2305, type: !856)
!11698 = !DILocation(line: 0, scope: !11694)
!11699 = !DILocation(line: 2310, column: 16, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11694, file: !627, line: 2310, column: 7)
!11701 = !DILocation(line: 0, scope: !11700)
!11702 = !DILocation(line: 2310, column: 7, scope: !11694)
!11703 = !DILocation(line: 2320, column: 1, scope: !11694)
!11704 = distinct !DISubprogram(name: "TIM_ITConfig", scope: !627, file: !627, line: 2362, type: !11705, scopeLine: 2363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11707)
!11705 = !DISubroutineType(types: !11706)
!11706 = !{null, !629, !64, !856}
!11707 = !{!11708, !11709, !11710}
!11708 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11704, file: !627, line: 2362, type: !629)
!11709 = !DILocalVariable(name: "TIM_IT", arg: 2, scope: !11704, file: !627, line: 2362, type: !64)
!11710 = !DILocalVariable(name: "NewState", arg: 3, scope: !11704, file: !627, line: 2362, type: !856)
!11711 = !DILocation(line: 0, scope: !11704)
!11712 = !DILocation(line: 2369, column: 16, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11704, file: !627, line: 2369, column: 7)
!11714 = !DILocation(line: 2369, column: 7, scope: !11704)
!11715 = !DILocation(line: 2372, column: 11, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11713, file: !627, line: 2370, column: 3)
!11717 = !DILocation(line: 2372, column: 16, scope: !11716)
!11718 = !{!10503, !2880, i64 12}
!11719 = !DILocation(line: 2373, column: 3, scope: !11716)
!11720 = !DILocation(line: 2377, column: 29, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11713, file: !627, line: 2375, column: 3)
!11722 = !DILocation(line: 2377, column: 11, scope: !11721)
!11723 = !DILocation(line: 2377, column: 16, scope: !11721)
!11724 = !DILocation(line: 2379, column: 1, scope: !11704)
!11725 = distinct !DISubprogram(name: "TIM_GenerateEvent", scope: !627, file: !627, line: 2400, type: !10577, scopeLine: 2401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11726)
!11726 = !{!11727, !11728}
!11727 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11725, file: !627, line: 2400, type: !629)
!11728 = !DILocalVariable(name: "TIM_EventSource", arg: 2, scope: !11725, file: !627, line: 2400, type: !64)
!11729 = !DILocation(line: 0, scope: !11725)
!11730 = !DILocation(line: 2407, column: 9, scope: !11725)
!11731 = !DILocation(line: 2407, column: 13, scope: !11725)
!11732 = !DILocation(line: 2408, column: 1, scope: !11725)
!11733 = distinct !DISubprogram(name: "TIM_GetFlagStatus", scope: !627, file: !627, line: 2433, type: !11734, scopeLine: 2434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11736)
!11734 = !DISubroutineType(types: !11735)
!11735 = !{!1276, !629, !64}
!11736 = !{!11737, !11738, !11739}
!11737 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11733, file: !627, line: 2433, type: !629)
!11738 = !DILocalVariable(name: "TIM_FLAG", arg: 2, scope: !11733, file: !627, line: 2433, type: !64)
!11739 = !DILocalVariable(name: "bitstatus", scope: !11733, file: !627, line: 2435, type: !1359)
!11740 = !DILocation(line: 0, scope: !11733)
!11741 = !DILocation(line: 2441, column: 14, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11733, file: !627, line: 2441, column: 7)
!11743 = !{!10503, !2880, i64 16}
!11744 = !DILocation(line: 2441, column: 17, scope: !11742)
!11745 = !DILocation(line: 2441, column: 29, scope: !11742)
!11746 = !DILocation(line: 2449, column: 3, scope: !11733)
!11747 = distinct !DISubprogram(name: "TIM_ClearFlag", scope: !627, file: !627, line: 2475, type: !10577, scopeLine: 2476, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11748)
!11748 = !{!11749, !11750}
!11749 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11747, file: !627, line: 2475, type: !629)
!11750 = !DILocalVariable(name: "TIM_FLAG", arg: 2, scope: !11747, file: !627, line: 2475, type: !64)
!11751 = !DILocation(line: 0, scope: !11747)
!11752 = !DILocation(line: 2481, column: 24, scope: !11747)
!11753 = !DILocation(line: 2481, column: 9, scope: !11747)
!11754 = !DILocation(line: 2481, column: 12, scope: !11747)
!11755 = !DILocation(line: 2482, column: 1, scope: !11747)
!11756 = distinct !DISubprogram(name: "TIM_GetITStatus", scope: !627, file: !627, line: 2503, type: !11757, scopeLine: 2504, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11759)
!11757 = !DISubroutineType(types: !11758)
!11758 = !{!1359, !629, !64}
!11759 = !{!11760, !11761, !11762, !11763, !11764}
!11760 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11756, file: !627, line: 2503, type: !629)
!11761 = !DILocalVariable(name: "TIM_IT", arg: 2, scope: !11756, file: !627, line: 2503, type: !64)
!11762 = !DILocalVariable(name: "bitstatus", scope: !11756, file: !627, line: 2505, type: !1359)
!11763 = !DILocalVariable(name: "itstatus", scope: !11756, file: !627, line: 2506, type: !64)
!11764 = !DILocalVariable(name: "itenable", scope: !11756, file: !627, line: 2506, type: !64)
!11765 = !DILocation(line: 0, scope: !11756)
!11766 = !DILocation(line: 2511, column: 20, scope: !11756)
!11767 = !DILocation(line: 2511, column: 23, scope: !11756)
!11768 = !DILocation(line: 2513, column: 20, scope: !11756)
!11769 = !DILocation(line: 2514, column: 17, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11756, file: !627, line: 2514, column: 7)
!11771 = !DILocation(line: 2514, column: 37, scope: !11770)
!11772 = !DILocation(line: 2522, column: 3, scope: !11756)
!11773 = distinct !DISubprogram(name: "TIM_ClearITPendingBit", scope: !627, file: !627, line: 2544, type: !10577, scopeLine: 2545, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11774)
!11774 = !{!11775, !11776}
!11775 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11773, file: !627, line: 2544, type: !629)
!11776 = !DILocalVariable(name: "TIM_IT", arg: 2, scope: !11773, file: !627, line: 2544, type: !64)
!11777 = !DILocation(line: 0, scope: !11773)
!11778 = !DILocation(line: 2550, column: 24, scope: !11773)
!11779 = !DILocation(line: 2550, column: 9, scope: !11773)
!11780 = !DILocation(line: 2550, column: 12, scope: !11773)
!11781 = !DILocation(line: 2551, column: 1, scope: !11773)
!11782 = distinct !DISubprogram(name: "TIM_DMAConfig", scope: !627, file: !627, line: 2581, type: !10564, scopeLine: 2582, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11783)
!11783 = !{!11784, !11785, !11786}
!11784 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11782, file: !627, line: 2581, type: !629)
!11785 = !DILocalVariable(name: "TIM_DMABase", arg: 2, scope: !11782, file: !627, line: 2581, type: !64)
!11786 = !DILocalVariable(name: "TIM_DMABurstLength", arg: 3, scope: !11782, file: !627, line: 2581, type: !64)
!11787 = !DILocation(line: 0, scope: !11782)
!11788 = !DILocation(line: 2589, column: 27, scope: !11782)
!11789 = !DILocation(line: 2589, column: 9, scope: !11782)
!11790 = !DILocation(line: 2589, column: 13, scope: !11782)
!11791 = !{!10503, !2880, i64 72}
!11792 = !DILocation(line: 2590, column: 1, scope: !11782)
!11793 = distinct !DISubprogram(name: "TIM_DMACmd", scope: !627, file: !627, line: 2608, type: !11705, scopeLine: 2609, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11794)
!11794 = !{!11795, !11796, !11797}
!11795 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11793, file: !627, line: 2608, type: !629)
!11796 = !DILocalVariable(name: "TIM_DMASource", arg: 2, scope: !11793, file: !627, line: 2608, type: !64)
!11797 = !DILocalVariable(name: "NewState", arg: 3, scope: !11793, file: !627, line: 2608, type: !856)
!11798 = !DILocation(line: 0, scope: !11793)
!11799 = !DILocation(line: 2615, column: 16, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11793, file: !627, line: 2615, column: 7)
!11801 = !DILocation(line: 2615, column: 7, scope: !11793)
!11802 = !DILocation(line: 2618, column: 11, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11800, file: !627, line: 2616, column: 3)
!11804 = !DILocation(line: 2618, column: 16, scope: !11803)
!11805 = !DILocation(line: 2619, column: 3, scope: !11803)
!11806 = !DILocation(line: 2623, column: 29, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11800, file: !627, line: 2621, column: 3)
!11808 = !DILocation(line: 2623, column: 11, scope: !11807)
!11809 = !DILocation(line: 2623, column: 16, scope: !11807)
!11810 = !DILocation(line: 2625, column: 1, scope: !11793)
!11811 = distinct !DISubprogram(name: "TIM_SelectCCDMA", scope: !627, file: !627, line: 2634, type: !10625, scopeLine: 2635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11812)
!11812 = !{!11813, !11814}
!11813 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11811, file: !627, line: 2634, type: !629)
!11814 = !DILocalVariable(name: "NewState", arg: 2, scope: !11811, file: !627, line: 2634, type: !856)
!11815 = !DILocation(line: 0, scope: !11811)
!11816 = !DILocation(line: 2640, column: 16, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11811, file: !627, line: 2640, column: 7)
!11818 = !DILocation(line: 0, scope: !11817)
!11819 = !DILocation(line: 2640, column: 7, scope: !11811)
!11820 = !DILocation(line: 2650, column: 1, scope: !11811)
!11821 = distinct !DISubprogram(name: "TIM_InternalClockConfig", scope: !627, file: !627, line: 2673, type: !10405, scopeLine: 2674, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11822)
!11822 = !{!11823}
!11823 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11821, file: !627, line: 2673, type: !629)
!11824 = !DILocation(line: 0, scope: !11821)
!11825 = !DILocation(line: 2679, column: 9, scope: !11821)
!11826 = !DILocation(line: 2679, column: 14, scope: !11821)
!11827 = !{!10503, !2880, i64 8}
!11828 = !DILocation(line: 2680, column: 1, scope: !11821)
!11829 = distinct !DISubprogram(name: "TIM_ITRxExternalClockConfig", scope: !627, file: !627, line: 2694, type: !10577, scopeLine: 2695, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11830)
!11830 = !{!11831, !11832}
!11831 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11829, file: !627, line: 2694, type: !629)
!11832 = !DILocalVariable(name: "TIM_InputTriggerSource", arg: 2, scope: !11829, file: !627, line: 2694, type: !64)
!11833 = !DILocation(line: 0, scope: !11829)
!11834 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11835, file: !627, line: 2879, type: !629)
!11835 = distinct !DISubprogram(name: "TIM_SelectInputTrigger", scope: !627, file: !627, line: 2879, type: !10577, scopeLine: 2880, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11836)
!11836 = !{!11834, !11837, !11838}
!11837 = !DILocalVariable(name: "TIM_InputTriggerSource", arg: 2, scope: !11835, file: !627, line: 2879, type: !64)
!11838 = !DILocalVariable(name: "tmpsmcr", scope: !11835, file: !627, line: 2881, type: !64)
!11839 = !DILocation(line: 0, scope: !11835, inlinedAt: !11840)
!11840 = distinct !DILocation(line: 2701, column: 3, scope: !11829)
!11841 = !DILocation(line: 2888, column: 19, scope: !11835, inlinedAt: !11840)
!11842 = !DILocation(line: 2891, column: 11, scope: !11835, inlinedAt: !11840)
!11843 = !DILocation(line: 2894, column: 11, scope: !11835, inlinedAt: !11840)
!11844 = !DILocation(line: 2897, column: 14, scope: !11835, inlinedAt: !11840)
!11845 = !DILocation(line: 2704, column: 14, scope: !11829)
!11846 = !DILocation(line: 2705, column: 1, scope: !11829)
!11847 = !DILocation(line: 0, scope: !11835)
!11848 = !DILocation(line: 2888, column: 19, scope: !11835)
!11849 = !DILocation(line: 2891, column: 11, scope: !11835)
!11850 = !DILocation(line: 2894, column: 11, scope: !11835)
!11851 = !DILocation(line: 2897, column: 14, scope: !11835)
!11852 = !DILocation(line: 2898, column: 1, scope: !11835)
!11853 = distinct !DISubprogram(name: "TIM_TIxExternalClockConfig", scope: !627, file: !627, line: 2724, type: !11305, scopeLine: 2726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11854)
!11854 = !{!11855, !11856, !11857, !11858}
!11855 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11853, file: !627, line: 2724, type: !629)
!11856 = !DILocalVariable(name: "TIM_TIxExternalCLKSource", arg: 2, scope: !11853, file: !627, line: 2724, type: !64)
!11857 = !DILocalVariable(name: "TIM_ICPolarity", arg: 3, scope: !11853, file: !627, line: 2725, type: !64)
!11858 = !DILocalVariable(name: "ICFilter", arg: 4, scope: !11853, file: !627, line: 2725, type: !64)
!11859 = !DILocation(line: 0, scope: !11853)
!11860 = !DILocation(line: 2733, column: 32, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11853, file: !627, line: 2733, column: 7)
!11862 = !DILocation(line: 0, scope: !11861)
!11863 = !DILocation(line: 2733, column: 7, scope: !11853)
!11864 = !DILocation(line: 0, scope: !11343, inlinedAt: !11865)
!11865 = distinct !DILocation(line: 2735, column: 5, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11861, file: !627, line: 2734, column: 3)
!11867 = !DILocation(line: 3238, column: 14, scope: !11343, inlinedAt: !11865)
!11868 = !DILocation(line: 3239, column: 20, scope: !11343, inlinedAt: !11865)
!11869 = !DILocation(line: 3240, column: 19, scope: !11343, inlinedAt: !11865)
!11870 = !DILocation(line: 3241, column: 35, scope: !11343, inlinedAt: !11865)
!11871 = !DILocation(line: 3244, column: 12, scope: !11343, inlinedAt: !11865)
!11872 = !DILocation(line: 3245, column: 39, scope: !11343, inlinedAt: !11865)
!11873 = !DILocation(line: 3246, column: 12, scope: !11343, inlinedAt: !11865)
!11874 = !DILocation(line: 3249, column: 11, scope: !11343, inlinedAt: !11865)
!11875 = !DILocation(line: 2736, column: 3, scope: !11866)
!11876 = !DILocation(line: 0, scope: !11304, inlinedAt: !11877)
!11877 = distinct !DILocation(line: 2739, column: 5, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11861, file: !627, line: 2738, column: 3)
!11879 = !DILocation(line: 3197, column: 14, scope: !11304, inlinedAt: !11877)
!11880 = !DILocation(line: 3198, column: 20, scope: !11304, inlinedAt: !11877)
!11881 = !DILocation(line: 3199, column: 19, scope: !11304, inlinedAt: !11877)
!11882 = !DILocation(line: 3202, column: 12, scope: !11304, inlinedAt: !11877)
!11883 = !DILocation(line: 3203, column: 68, scope: !11304, inlinedAt: !11877)
!11884 = !DILocation(line: 3203, column: 12, scope: !11304, inlinedAt: !11877)
!11885 = !DILocation(line: 3206, column: 11, scope: !11304, inlinedAt: !11877)
!11886 = !DILocation(line: 0, scope: !11835, inlinedAt: !11887)
!11887 = distinct !DILocation(line: 2742, column: 3, scope: !11853)
!11888 = !DILocation(line: 2888, column: 19, scope: !11835, inlinedAt: !11887)
!11889 = !DILocation(line: 2891, column: 11, scope: !11835, inlinedAt: !11887)
!11890 = !DILocation(line: 2894, column: 11, scope: !11835, inlinedAt: !11887)
!11891 = !DILocation(line: 2897, column: 14, scope: !11835, inlinedAt: !11887)
!11892 = !DILocation(line: 2744, column: 14, scope: !11853)
!11893 = !DILocation(line: 2745, column: 1, scope: !11853)
!11894 = distinct !DISubprogram(name: "TIM_ETRClockMode1Config", scope: !627, file: !627, line: 2764, type: !11305, scopeLine: 2766, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11895)
!11895 = !{!11896, !11897, !11898, !11899, !11900}
!11896 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11894, file: !627, line: 2764, type: !629)
!11897 = !DILocalVariable(name: "TIM_ExtTRGPrescaler", arg: 2, scope: !11894, file: !627, line: 2764, type: !64)
!11898 = !DILocalVariable(name: "TIM_ExtTRGPolarity", arg: 3, scope: !11894, file: !627, line: 2765, type: !64)
!11899 = !DILocalVariable(name: "ExtTRGFilter", arg: 4, scope: !11894, file: !627, line: 2765, type: !64)
!11900 = !DILocalVariable(name: "tmpsmcr", scope: !11894, file: !627, line: 2767, type: !64)
!11901 = !DILocation(line: 0, scope: !11894)
!11902 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11903, file: !627, line: 2999, type: !629)
!11903 = distinct !DISubprogram(name: "TIM_ETRConfig", scope: !627, file: !627, line: 2999, type: !11305, scopeLine: 3001, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11904)
!11904 = !{!11902, !11905, !11906, !11907, !11908}
!11905 = !DILocalVariable(name: "TIM_ExtTRGPrescaler", arg: 2, scope: !11903, file: !627, line: 2999, type: !64)
!11906 = !DILocalVariable(name: "TIM_ExtTRGPolarity", arg: 3, scope: !11903, file: !627, line: 3000, type: !64)
!11907 = !DILocalVariable(name: "ExtTRGFilter", arg: 4, scope: !11903, file: !627, line: 3000, type: !64)
!11908 = !DILocalVariable(name: "tmpsmcr", scope: !11903, file: !627, line: 3002, type: !64)
!11909 = !DILocation(line: 0, scope: !11903, inlinedAt: !11910)
!11910 = distinct !DILocation(line: 2775, column: 3, scope: !11894)
!11911 = !DILocation(line: 3010, column: 19, scope: !11903, inlinedAt: !11910)
!11912 = !DILocation(line: 3013, column: 11, scope: !11903, inlinedAt: !11910)
!11913 = !DILocation(line: 3016, column: 103, scope: !11903, inlinedAt: !11910)
!11914 = !DILocation(line: 3016, column: 77, scope: !11903, inlinedAt: !11910)
!11915 = !DILocation(line: 3016, column: 45, scope: !11903, inlinedAt: !11910)
!11916 = !DILocation(line: 3016, column: 11, scope: !11903, inlinedAt: !11910)
!11917 = !DILocation(line: 3019, column: 14, scope: !11903, inlinedAt: !11910)
!11918 = !DILocation(line: 2778, column: 19, scope: !11894)
!11919 = !DILocation(line: 2788, column: 11, scope: !11894)
!11920 = !DILocation(line: 2791, column: 14, scope: !11894)
!11921 = !DILocation(line: 2792, column: 1, scope: !11894)
!11922 = !DILocation(line: 0, scope: !11903)
!11923 = !DILocation(line: 3010, column: 19, scope: !11903)
!11924 = !DILocation(line: 3013, column: 11, scope: !11903)
!11925 = !DILocation(line: 3016, column: 103, scope: !11903)
!11926 = !DILocation(line: 3016, column: 77, scope: !11903)
!11927 = !DILocation(line: 3016, column: 45, scope: !11903)
!11928 = !DILocation(line: 3016, column: 11, scope: !11903)
!11929 = !DILocation(line: 3019, column: 14, scope: !11903)
!11930 = !DILocation(line: 3020, column: 1, scope: !11903)
!11931 = distinct !DISubprogram(name: "TIM_ETRClockMode2Config", scope: !627, file: !627, line: 2811, type: !11305, scopeLine: 2813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11932)
!11932 = !{!11933, !11934, !11935, !11936}
!11933 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11931, file: !627, line: 2811, type: !629)
!11934 = !DILocalVariable(name: "TIM_ExtTRGPrescaler", arg: 2, scope: !11931, file: !627, line: 2811, type: !64)
!11935 = !DILocalVariable(name: "TIM_ExtTRGPolarity", arg: 3, scope: !11931, file: !627, line: 2812, type: !64)
!11936 = !DILocalVariable(name: "ExtTRGFilter", arg: 4, scope: !11931, file: !627, line: 2812, type: !64)
!11937 = !DILocation(line: 0, scope: !11931)
!11938 = !DILocation(line: 0, scope: !11903, inlinedAt: !11939)
!11939 = distinct !DILocation(line: 2821, column: 3, scope: !11931)
!11940 = !DILocation(line: 3010, column: 19, scope: !11903, inlinedAt: !11939)
!11941 = !DILocation(line: 3013, column: 11, scope: !11903, inlinedAt: !11939)
!11942 = !DILocation(line: 3016, column: 103, scope: !11903, inlinedAt: !11939)
!11943 = !DILocation(line: 3016, column: 77, scope: !11903, inlinedAt: !11939)
!11944 = !DILocation(line: 3016, column: 45, scope: !11903, inlinedAt: !11939)
!11945 = !DILocation(line: 3016, column: 11, scope: !11903, inlinedAt: !11939)
!11946 = !DILocation(line: 3019, column: 14, scope: !11903, inlinedAt: !11939)
!11947 = !DILocation(line: 2824, column: 14, scope: !11931)
!11948 = !DILocation(line: 2825, column: 1, scope: !11931)
!11949 = distinct !DISubprogram(name: "TIM_SelectOutputTrigger", scope: !627, file: !627, line: 2922, type: !10577, scopeLine: 2923, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11950)
!11950 = !{!11951, !11952}
!11951 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11949, file: !627, line: 2922, type: !629)
!11952 = !DILocalVariable(name: "TIM_TRGOSource", arg: 2, scope: !11949, file: !627, line: 2922, type: !64)
!11953 = !DILocation(line: 0, scope: !11949)
!11954 = !DILocation(line: 2929, column: 9, scope: !11949)
!11955 = !DILocation(line: 2929, column: 13, scope: !11949)
!11956 = !DILocation(line: 2931, column: 13, scope: !11949)
!11957 = !DILocation(line: 2932, column: 1, scope: !11949)
!11958 = distinct !DISubprogram(name: "TIM_SelectSlaveMode", scope: !627, file: !627, line: 2946, type: !10577, scopeLine: 2947, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11959)
!11959 = !{!11960, !11961}
!11960 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11958, file: !627, line: 2946, type: !629)
!11961 = !DILocalVariable(name: "TIM_SlaveMode", arg: 2, scope: !11958, file: !627, line: 2946, type: !64)
!11962 = !DILocation(line: 0, scope: !11958)
!11963 = !DILocation(line: 2953, column: 9, scope: !11958)
!11964 = !DILocation(line: 2953, column: 14, scope: !11958)
!11965 = !DILocation(line: 2956, column: 14, scope: !11958)
!11966 = !DILocation(line: 2957, column: 1, scope: !11958)
!11967 = distinct !DISubprogram(name: "TIM_SelectMasterSlaveMode", scope: !627, file: !627, line: 2969, type: !10577, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11968)
!11968 = !{!11969, !11970}
!11969 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11967, file: !627, line: 2969, type: !629)
!11970 = !DILocalVariable(name: "TIM_MasterSlaveMode", arg: 2, scope: !11967, file: !627, line: 2969, type: !64)
!11971 = !DILocation(line: 0, scope: !11967)
!11972 = !DILocation(line: 2976, column: 9, scope: !11967)
!11973 = !DILocation(line: 2976, column: 14, scope: !11967)
!11974 = !DILocation(line: 2979, column: 14, scope: !11967)
!11975 = !DILocation(line: 2980, column: 1, scope: !11967)
!11976 = distinct !DISubprogram(name: "TIM_EncoderInterfaceConfig", scope: !627, file: !627, line: 3057, type: !11305, scopeLine: 3059, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !11977)
!11977 = !{!11978, !11979, !11980, !11981, !11982, !11983, !11984}
!11978 = !DILocalVariable(name: "TIMx", arg: 1, scope: !11976, file: !627, line: 3057, type: !629)
!11979 = !DILocalVariable(name: "TIM_EncoderMode", arg: 2, scope: !11976, file: !627, line: 3057, type: !64)
!11980 = !DILocalVariable(name: "TIM_IC1Polarity", arg: 3, scope: !11976, file: !627, line: 3058, type: !64)
!11981 = !DILocalVariable(name: "TIM_IC2Polarity", arg: 4, scope: !11976, file: !627, line: 3058, type: !64)
!11982 = !DILocalVariable(name: "tmpsmcr", scope: !11976, file: !627, line: 3060, type: !64)
!11983 = !DILocalVariable(name: "tmpccmr1", scope: !11976, file: !627, line: 3061, type: !64)
!11984 = !DILocalVariable(name: "tmpccer", scope: !11976, file: !627, line: 3062, type: !64)
!11985 = !DILocation(line: 0, scope: !11976)
!11986 = !DILocation(line: 3071, column: 19, scope: !11976)
!11987 = !DILocation(line: 3074, column: 20, scope: !11976)
!11988 = !DILocation(line: 3077, column: 19, scope: !11976)
!11989 = !DILocation(line: 3080, column: 11, scope: !11976)
!11990 = !DILocation(line: 3081, column: 11, scope: !11976)
!11991 = !DILocation(line: 3084, column: 12, scope: !11976)
!11992 = !DILocation(line: 3085, column: 12, scope: !11976)
!11993 = !DILocation(line: 3088, column: 11, scope: !11976)
!11994 = !DILocation(line: 3089, column: 70, scope: !11976)
!11995 = !DILocation(line: 3089, column: 41, scope: !11976)
!11996 = !DILocation(line: 3089, column: 11, scope: !11976)
!11997 = !DILocation(line: 3092, column: 14, scope: !11976)
!11998 = !DILocation(line: 3095, column: 15, scope: !11976)
!11999 = !DILocation(line: 3098, column: 14, scope: !11976)
!12000 = !DILocation(line: 3099, column: 1, scope: !11976)
!12001 = distinct !DISubprogram(name: "TIM_SelectHallSensor", scope: !627, file: !627, line: 3109, type: !10625, scopeLine: 3110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !12002)
!12002 = !{!12003, !12004}
!12003 = !DILocalVariable(name: "TIMx", arg: 1, scope: !12001, file: !627, line: 3109, type: !629)
!12004 = !DILocalVariable(name: "NewState", arg: 2, scope: !12001, file: !627, line: 3109, type: !856)
!12005 = !DILocation(line: 0, scope: !12001)
!12006 = !DILocation(line: 3115, column: 16, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12001, file: !627, line: 3115, column: 7)
!12008 = !DILocation(line: 0, scope: !12007)
!12009 = !DILocation(line: 3115, column: 7, scope: !12001)
!12010 = !DILocation(line: 3125, column: 1, scope: !12001)
!12011 = distinct !DISubprogram(name: "TIM_RemapConfig", scope: !627, file: !627, line: 3160, type: !10577, scopeLine: 3161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !626, retainedNodes: !12012)
!12012 = !{!12013, !12014}
!12013 = !DILocalVariable(name: "TIMx", arg: 1, scope: !12011, file: !627, line: 3160, type: !629)
!12014 = !DILocalVariable(name: "TIM_Remap", arg: 2, scope: !12011, file: !627, line: 3160, type: !64)
!12015 = !DILocation(line: 0, scope: !12011)
!12016 = !DILocation(line: 3167, column: 9, scope: !12011)
!12017 = !DILocation(line: 3167, column: 12, scope: !12011)
!12018 = !{!10503, !2880, i64 80}
!12019 = !DILocation(line: 3168, column: 1, scope: !12011)
!12020 = distinct !DISubprogram(name: "CRYP_TDES_ECB", scope: !670, file: !670, line: 96, type: !9885, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !12021)
!12021 = !{!12022, !12023, !12024, !12025, !12026, !12027, !12035, !12047, !12048, !12049, !12050, !12051, !12052, !12053}
!12022 = !DILocalVariable(name: "Mode", arg: 1, scope: !12020, file: !670, line: 96, type: !60)
!12023 = !DILocalVariable(name: "Key", arg: 2, scope: !12020, file: !670, line: 96, type: !7555)
!12024 = !DILocalVariable(name: "Input", arg: 3, scope: !12020, file: !670, line: 96, type: !7555)
!12025 = !DILocalVariable(name: "Ilength", arg: 4, scope: !12020, file: !670, line: 97, type: !20)
!12026 = !DILocalVariable(name: "Output", arg: 5, scope: !12020, file: !670, line: 97, type: !7555)
!12027 = !DILocalVariable(name: "TDES_CRYP_InitStructure", scope: !12020, file: !670, line: 99, type: !12028)
!12028 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_InitTypeDef", file: !7565, line: 59, baseType: !12029)
!12029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 47, size: 64, elements: !12030)
!12030 = !{!12031, !12032, !12033, !12034}
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_AlgoDir", scope: !12029, file: !7565, line: 49, baseType: !64, size: 16)
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_AlgoMode", scope: !12029, file: !7565, line: 51, baseType: !64, size: 16, offset: 16)
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_DataType", scope: !12029, file: !7565, line: 54, baseType: !64, size: 16, offset: 32)
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_KeySize", scope: !12029, file: !7565, line: 56, baseType: !64, size: 16, offset: 48)
!12035 = !DILocalVariable(name: "TDES_CRYP_KeyInitStructure", scope: !12020, file: !670, line: 100, type: !12036)
!12036 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_KeyInitTypeDef", file: !7565, line: 74, baseType: !12037)
!12037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 64, size: 256, elements: !12038)
!12038 = !{!12039, !12040, !12041, !12042, !12043, !12044, !12045, !12046}
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key0Left", scope: !12037, file: !7565, line: 66, baseType: !20, size: 32)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key0Right", scope: !12037, file: !7565, line: 67, baseType: !20, size: 32, offset: 32)
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key1Left", scope: !12037, file: !7565, line: 68, baseType: !20, size: 32, offset: 64)
!12042 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key1Right", scope: !12037, file: !7565, line: 69, baseType: !20, size: 32, offset: 96)
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key2Left", scope: !12037, file: !7565, line: 70, baseType: !20, size: 32, offset: 128)
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key2Right", scope: !12037, file: !7565, line: 71, baseType: !20, size: 32, offset: 160)
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key3Left", scope: !12037, file: !7565, line: 72, baseType: !20, size: 32, offset: 192)
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_Key3Right", scope: !12037, file: !7565, line: 73, baseType: !20, size: 32, offset: 224)
!12047 = !DILocalVariable(name: "counter", scope: !12020, file: !670, line: 101, type: !27)
!12048 = !DILocalVariable(name: "busystatus", scope: !12020, file: !670, line: 102, type: !20)
!12049 = !DILocalVariable(name: "status", scope: !12020, file: !670, line: 103, type: !358)
!12050 = !DILocalVariable(name: "keyaddr", scope: !12020, file: !670, line: 104, type: !20)
!12051 = !DILocalVariable(name: "inputaddr", scope: !12020, file: !670, line: 105, type: !20)
!12052 = !DILocalVariable(name: "outputaddr", scope: !12020, file: !670, line: 106, type: !20)
!12053 = !DILocalVariable(name: "i", scope: !12020, file: !670, line: 107, type: !20)
!12054 = !DILocation(line: 0, scope: !12020)
!12055 = !DILocation(line: 99, column: 3, scope: !12020)
!12056 = !DILocation(line: 99, column: 20, scope: !12020)
!12057 = !DILocation(line: 100, column: 3, scope: !12020)
!12058 = !DILocation(line: 100, column: 23, scope: !12020)
!12059 = !DILocation(line: 101, column: 3, scope: !12020)
!12060 = !DILocation(line: 101, column: 17, scope: !12020)
!12061 = !DILocation(line: 104, column: 25, scope: !12020)
!12062 = !DILocation(line: 110, column: 3, scope: !12020)
!12063 = !DILocation(line: 113, column: 11, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12020, file: !670, line: 113, column: 6)
!12065 = !DILocation(line: 0, scope: !12064)
!12066 = !DILocation(line: 122, column: 27, scope: !12020)
!12067 = !DILocation(line: 122, column: 41, scope: !12020)
!12068 = !DILocation(line: 123, column: 27, scope: !12020)
!12069 = !DILocation(line: 123, column: 41, scope: !12020)
!12070 = !DILocation(line: 124, column: 3, scope: !12020)
!12071 = !DILocation(line: 127, column: 53, scope: !12020)
!12072 = !DILocation(line: 127, column: 52, scope: !12020)
!12073 = !DILocalVariable(name: "value", arg: 1, scope: !12074, file: !7612, line: 348, type: !20)
!12074 = distinct !DISubprogram(name: "__REV", scope: !7612, file: !7612, line: 348, type: !5897, scopeLine: 349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !12075)
!12075 = !{!12073, !12076}
!12076 = !DILocalVariable(name: "result", scope: !12074, file: !7612, line: 350, type: !20)
!12077 = !DILocation(line: 0, scope: !12074, inlinedAt: !12078)
!12078 = distinct !DILocation(line: 127, column: 46, scope: !12020)
!12079 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12078)
!12080 = !{i32 681841}
!12081 = !DILocation(line: 127, column: 30, scope: !12020)
!12082 = !DILocation(line: 127, column: 44, scope: !12020)
!12083 = !DILocation(line: 128, column: 10, scope: !12020)
!12084 = !DILocation(line: 129, column: 53, scope: !12020)
!12085 = !DILocation(line: 129, column: 52, scope: !12020)
!12086 = !DILocation(line: 0, scope: !12074, inlinedAt: !12087)
!12087 = distinct !DILocation(line: 129, column: 46, scope: !12020)
!12088 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12087)
!12089 = !DILocation(line: 129, column: 30, scope: !12020)
!12090 = !DILocation(line: 129, column: 44, scope: !12020)
!12091 = !DILocation(line: 130, column: 10, scope: !12020)
!12092 = !DILocation(line: 131, column: 53, scope: !12020)
!12093 = !DILocation(line: 131, column: 52, scope: !12020)
!12094 = !DILocation(line: 0, scope: !12074, inlinedAt: !12095)
!12095 = distinct !DILocation(line: 131, column: 46, scope: !12020)
!12096 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12095)
!12097 = !DILocation(line: 131, column: 30, scope: !12020)
!12098 = !DILocation(line: 131, column: 44, scope: !12020)
!12099 = !DILocation(line: 132, column: 10, scope: !12020)
!12100 = !DILocation(line: 133, column: 53, scope: !12020)
!12101 = !DILocation(line: 133, column: 52, scope: !12020)
!12102 = !DILocation(line: 0, scope: !12074, inlinedAt: !12103)
!12103 = distinct !DILocation(line: 133, column: 46, scope: !12020)
!12104 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12103)
!12105 = !DILocation(line: 133, column: 30, scope: !12020)
!12106 = !DILocation(line: 133, column: 44, scope: !12020)
!12107 = !DILocation(line: 134, column: 10, scope: !12020)
!12108 = !DILocation(line: 135, column: 53, scope: !12020)
!12109 = !DILocation(line: 135, column: 52, scope: !12020)
!12110 = !DILocation(line: 0, scope: !12074, inlinedAt: !12111)
!12111 = distinct !DILocation(line: 135, column: 46, scope: !12020)
!12112 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12111)
!12113 = !DILocation(line: 135, column: 30, scope: !12020)
!12114 = !DILocation(line: 135, column: 44, scope: !12020)
!12115 = !DILocation(line: 136, column: 10, scope: !12020)
!12116 = !DILocation(line: 137, column: 53, scope: !12020)
!12117 = !DILocation(line: 137, column: 52, scope: !12020)
!12118 = !DILocation(line: 0, scope: !12074, inlinedAt: !12119)
!12119 = distinct !DILocation(line: 137, column: 46, scope: !12020)
!12120 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12119)
!12121 = !DILocation(line: 137, column: 30, scope: !12020)
!12122 = !DILocation(line: 137, column: 44, scope: !12020)
!12123 = !DILocation(line: 138, column: 3, scope: !12020)
!12124 = !DILocation(line: 141, column: 3, scope: !12020)
!12125 = !DILocation(line: 144, column: 3, scope: !12020)
!12126 = !DILocation(line: 146, column: 15, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12128, file: !670, line: 146, column: 3)
!12128 = distinct !DILexicalBlock(scope: !12020, file: !670, line: 146, column: 3)
!12129 = !DILocation(line: 146, column: 3, scope: !12128)
!12130 = !DILocation(line: 106, column: 25, scope: !12020)
!12131 = !DILocation(line: 105, column: 25, scope: !12020)
!12132 = !DILocation(line: 149, column: 18, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12127, file: !670, line: 147, column: 3)
!12134 = !DILocation(line: 149, column: 17, scope: !12133)
!12135 = !DILocation(line: 149, column: 5, scope: !12133)
!12136 = !DILocation(line: 150, column: 14, scope: !12133)
!12137 = !DILocation(line: 151, column: 18, scope: !12133)
!12138 = !DILocation(line: 151, column: 17, scope: !12133)
!12139 = !DILocation(line: 151, column: 5, scope: !12133)
!12140 = !DILocation(line: 155, column: 13, scope: !12133)
!12141 = !DILocation(line: 156, column: 5, scope: !12133)
!12142 = !DILocation(line: 158, column: 20, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12133, file: !670, line: 157, column: 5)
!12144 = !DILocation(line: 159, column: 14, scope: !12143)
!12145 = !DILocation(line: 160, column: 14, scope: !12133)
!12146 = !DILocation(line: 160, column: 22, scope: !12133)
!12147 = !DILocation(line: 160, column: 43, scope: !12133)
!12148 = !DILocation(line: 160, column: 5, scope: !12143)
!12149 = distinct !{!12149, !12141, !12150}
!12150 = !DILocation(line: 160, column: 67, scope: !12133)
!12151 = !DILocation(line: 162, column: 9, scope: !12133)
!12152 = !DILocation(line: 152, column: 14, scope: !12133)
!12153 = !DILocation(line: 170, column: 34, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12155, file: !670, line: 167, column: 5)
!12155 = distinct !DILexicalBlock(scope: !12133, file: !670, line: 162, column: 9)
!12156 = !DILocation(line: 170, column: 8, scope: !12154)
!12157 = !DILocation(line: 170, column: 32, scope: !12154)
!12158 = !DILocation(line: 171, column: 17, scope: !12154)
!12159 = !DILocation(line: 172, column: 34, scope: !12154)
!12160 = !DILocation(line: 172, column: 8, scope: !12154)
!12161 = !DILocation(line: 172, column: 32, scope: !12154)
!12162 = !DILocation(line: 173, column: 17, scope: !12154)
!12163 = !DILocation(line: 146, column: 49, scope: !12127)
!12164 = distinct !{!12164, !12129, !12165}
!12165 = !DILocation(line: 175, column: 3, scope: !12128)
!12166 = !DILocation(line: 178, column: 3, scope: !12020)
!12167 = !DILocation(line: 181, column: 1, scope: !12020)
!12168 = !DILocation(line: 180, column: 3, scope: !12020)
!12169 = distinct !DISubprogram(name: "CRYP_TDES_CBC", scope: !670, file: !670, line: 198, type: !10004, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !12170)
!12170 = !{!12171, !12172, !12173, !12174, !12175, !12176, !12177, !12178, !12179, !12187, !12188, !12189, !12190, !12191, !12192, !12193, !12194}
!12171 = !DILocalVariable(name: "Mode", arg: 1, scope: !12169, file: !670, line: 198, type: !60)
!12172 = !DILocalVariable(name: "Key", arg: 2, scope: !12169, file: !670, line: 198, type: !7555)
!12173 = !DILocalVariable(name: "InitVectors", arg: 3, scope: !12169, file: !670, line: 198, type: !7555)
!12174 = !DILocalVariable(name: "Input", arg: 4, scope: !12169, file: !670, line: 199, type: !7555)
!12175 = !DILocalVariable(name: "Ilength", arg: 5, scope: !12169, file: !670, line: 199, type: !20)
!12176 = !DILocalVariable(name: "Output", arg: 6, scope: !12169, file: !670, line: 199, type: !7555)
!12177 = !DILocalVariable(name: "TDES_CRYP_InitStructure", scope: !12169, file: !670, line: 201, type: !12028)
!12178 = !DILocalVariable(name: "TDES_CRYP_KeyInitStructure", scope: !12169, file: !670, line: 202, type: !12036)
!12179 = !DILocalVariable(name: "TDES_CRYP_IVInitStructure", scope: !12169, file: !670, line: 203, type: !12180)
!12180 = !DIDerivedType(tag: DW_TAG_typedef, name: "CRYP_IVInitTypeDef", file: !7565, line: 84, baseType: !12181)
!12181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7565, line: 78, size: 128, elements: !12182)
!12182 = !{!12183, !12184, !12185, !12186}
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0Left", scope: !12181, file: !7565, line: 80, baseType: !20, size: 32)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV0Right", scope: !12181, file: !7565, line: 81, baseType: !20, size: 32, offset: 32)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1Left", scope: !12181, file: !7565, line: 82, baseType: !20, size: 32, offset: 64)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "CRYP_IV1Right", scope: !12181, file: !7565, line: 83, baseType: !20, size: 32, offset: 96)
!12187 = !DILocalVariable(name: "counter", scope: !12169, file: !670, line: 204, type: !27)
!12188 = !DILocalVariable(name: "busystatus", scope: !12169, file: !670, line: 205, type: !20)
!12189 = !DILocalVariable(name: "status", scope: !12169, file: !670, line: 206, type: !358)
!12190 = !DILocalVariable(name: "keyaddr", scope: !12169, file: !670, line: 207, type: !20)
!12191 = !DILocalVariable(name: "inputaddr", scope: !12169, file: !670, line: 208, type: !20)
!12192 = !DILocalVariable(name: "outputaddr", scope: !12169, file: !670, line: 209, type: !20)
!12193 = !DILocalVariable(name: "ivaddr", scope: !12169, file: !670, line: 210, type: !20)
!12194 = !DILocalVariable(name: "i", scope: !12169, file: !670, line: 211, type: !20)
!12195 = !DILocation(line: 0, scope: !12169)
!12196 = !DILocation(line: 201, column: 3, scope: !12169)
!12197 = !DILocation(line: 201, column: 20, scope: !12169)
!12198 = !DILocation(line: 202, column: 3, scope: !12169)
!12199 = !DILocation(line: 202, column: 23, scope: !12169)
!12200 = !DILocation(line: 203, column: 3, scope: !12169)
!12201 = !DILocation(line: 203, column: 22, scope: !12169)
!12202 = !DILocation(line: 204, column: 3, scope: !12169)
!12203 = !DILocation(line: 204, column: 17, scope: !12169)
!12204 = !DILocation(line: 207, column: 25, scope: !12169)
!12205 = !DILocation(line: 210, column: 25, scope: !12169)
!12206 = !DILocation(line: 214, column: 3, scope: !12169)
!12207 = !DILocation(line: 217, column: 11, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12169, file: !670, line: 217, column: 6)
!12209 = !DILocation(line: 0, scope: !12208)
!12210 = !DILocation(line: 225, column: 27, scope: !12169)
!12211 = !DILocation(line: 225, column: 41, scope: !12169)
!12212 = !DILocation(line: 226, column: 27, scope: !12169)
!12213 = !DILocation(line: 226, column: 41, scope: !12169)
!12214 = !DILocation(line: 228, column: 3, scope: !12169)
!12215 = !DILocation(line: 231, column: 53, scope: !12169)
!12216 = !DILocation(line: 231, column: 52, scope: !12169)
!12217 = !DILocation(line: 0, scope: !12074, inlinedAt: !12218)
!12218 = distinct !DILocation(line: 231, column: 46, scope: !12169)
!12219 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12218)
!12220 = !DILocation(line: 231, column: 30, scope: !12169)
!12221 = !DILocation(line: 231, column: 44, scope: !12169)
!12222 = !DILocation(line: 232, column: 10, scope: !12169)
!12223 = !DILocation(line: 233, column: 53, scope: !12169)
!12224 = !DILocation(line: 233, column: 52, scope: !12169)
!12225 = !DILocation(line: 0, scope: !12074, inlinedAt: !12226)
!12226 = distinct !DILocation(line: 233, column: 46, scope: !12169)
!12227 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12226)
!12228 = !DILocation(line: 233, column: 30, scope: !12169)
!12229 = !DILocation(line: 233, column: 44, scope: !12169)
!12230 = !DILocation(line: 234, column: 10, scope: !12169)
!12231 = !DILocation(line: 235, column: 53, scope: !12169)
!12232 = !DILocation(line: 235, column: 52, scope: !12169)
!12233 = !DILocation(line: 0, scope: !12074, inlinedAt: !12234)
!12234 = distinct !DILocation(line: 235, column: 46, scope: !12169)
!12235 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12234)
!12236 = !DILocation(line: 235, column: 30, scope: !12169)
!12237 = !DILocation(line: 235, column: 44, scope: !12169)
!12238 = !DILocation(line: 236, column: 10, scope: !12169)
!12239 = !DILocation(line: 237, column: 53, scope: !12169)
!12240 = !DILocation(line: 237, column: 52, scope: !12169)
!12241 = !DILocation(line: 0, scope: !12074, inlinedAt: !12242)
!12242 = distinct !DILocation(line: 237, column: 46, scope: !12169)
!12243 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12242)
!12244 = !DILocation(line: 237, column: 30, scope: !12169)
!12245 = !DILocation(line: 237, column: 44, scope: !12169)
!12246 = !DILocation(line: 238, column: 10, scope: !12169)
!12247 = !DILocation(line: 239, column: 53, scope: !12169)
!12248 = !DILocation(line: 239, column: 52, scope: !12169)
!12249 = !DILocation(line: 0, scope: !12074, inlinedAt: !12250)
!12250 = distinct !DILocation(line: 239, column: 46, scope: !12169)
!12251 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12250)
!12252 = !DILocation(line: 239, column: 30, scope: !12169)
!12253 = !DILocation(line: 239, column: 44, scope: !12169)
!12254 = !DILocation(line: 240, column: 10, scope: !12169)
!12255 = !DILocation(line: 241, column: 53, scope: !12169)
!12256 = !DILocation(line: 241, column: 52, scope: !12169)
!12257 = !DILocation(line: 0, scope: !12074, inlinedAt: !12258)
!12258 = distinct !DILocation(line: 241, column: 46, scope: !12169)
!12259 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12258)
!12260 = !DILocation(line: 241, column: 30, scope: !12169)
!12261 = !DILocation(line: 241, column: 44, scope: !12169)
!12262 = !DILocation(line: 242, column: 3, scope: !12169)
!12263 = !DILocation(line: 245, column: 51, scope: !12169)
!12264 = !DILocation(line: 245, column: 50, scope: !12169)
!12265 = !DILocation(line: 0, scope: !12074, inlinedAt: !12266)
!12266 = distinct !DILocation(line: 245, column: 44, scope: !12169)
!12267 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12266)
!12268 = !DILocation(line: 245, column: 29, scope: !12169)
!12269 = !DILocation(line: 245, column: 42, scope: !12169)
!12270 = !DILocation(line: 246, column: 9, scope: !12169)
!12271 = !DILocation(line: 247, column: 51, scope: !12169)
!12272 = !DILocation(line: 247, column: 50, scope: !12169)
!12273 = !DILocation(line: 0, scope: !12074, inlinedAt: !12274)
!12274 = distinct !DILocation(line: 247, column: 44, scope: !12169)
!12275 = !DILocation(line: 352, column: 3, scope: !12074, inlinedAt: !12274)
!12276 = !DILocation(line: 247, column: 29, scope: !12169)
!12277 = !DILocation(line: 247, column: 42, scope: !12169)
!12278 = !DILocation(line: 248, column: 3, scope: !12169)
!12279 = !DILocation(line: 251, column: 3, scope: !12169)
!12280 = !DILocation(line: 254, column: 3, scope: !12169)
!12281 = !DILocation(line: 256, column: 15, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12283, file: !670, line: 256, column: 3)
!12283 = distinct !DILexicalBlock(scope: !12169, file: !670, line: 256, column: 3)
!12284 = !DILocation(line: 256, column: 3, scope: !12283)
!12285 = !DILocation(line: 209, column: 25, scope: !12169)
!12286 = !DILocation(line: 208, column: 25, scope: !12169)
!12287 = !DILocation(line: 259, column: 18, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12282, file: !670, line: 257, column: 3)
!12289 = !DILocation(line: 259, column: 17, scope: !12288)
!12290 = !DILocation(line: 259, column: 5, scope: !12288)
!12291 = !DILocation(line: 260, column: 14, scope: !12288)
!12292 = !DILocation(line: 261, column: 18, scope: !12288)
!12293 = !DILocation(line: 261, column: 17, scope: !12288)
!12294 = !DILocation(line: 261, column: 5, scope: !12288)
!12295 = !DILocation(line: 265, column: 13, scope: !12288)
!12296 = !DILocation(line: 266, column: 5, scope: !12288)
!12297 = !DILocation(line: 268, column: 20, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12288, file: !670, line: 267, column: 5)
!12299 = !DILocation(line: 269, column: 14, scope: !12298)
!12300 = !DILocation(line: 270, column: 14, scope: !12288)
!12301 = !DILocation(line: 270, column: 22, scope: !12288)
!12302 = !DILocation(line: 270, column: 43, scope: !12288)
!12303 = !DILocation(line: 270, column: 5, scope: !12298)
!12304 = distinct !{!12304, !12296, !12305}
!12305 = !DILocation(line: 270, column: 67, scope: !12288)
!12306 = !DILocation(line: 272, column: 9, scope: !12288)
!12307 = !DILocation(line: 262, column: 14, scope: !12288)
!12308 = !DILocation(line: 280, column: 34, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12310, file: !670, line: 277, column: 5)
!12310 = distinct !DILexicalBlock(scope: !12288, file: !670, line: 272, column: 9)
!12311 = !DILocation(line: 280, column: 8, scope: !12309)
!12312 = !DILocation(line: 280, column: 32, scope: !12309)
!12313 = !DILocation(line: 281, column: 17, scope: !12309)
!12314 = !DILocation(line: 282, column: 34, scope: !12309)
!12315 = !DILocation(line: 282, column: 8, scope: !12309)
!12316 = !DILocation(line: 282, column: 32, scope: !12309)
!12317 = !DILocation(line: 283, column: 17, scope: !12309)
!12318 = !DILocation(line: 256, column: 49, scope: !12282)
!12319 = distinct !{!12319, !12284, !12320}
!12320 = !DILocation(line: 285, column: 3, scope: !12283)
!12321 = !DILocation(line: 288, column: 3, scope: !12169)
!12322 = !DILocation(line: 291, column: 1, scope: !12169)
!12323 = !DILocation(line: 290, column: 3, scope: !12169)
!12324 = distinct !DISubprogram(name: "HASH_SHA1", scope: !672, file: !672, line: 87, type: !10129, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !12325)
!12325 = !{!12326, !12327, !12328, !12329, !12337, !12342, !12343, !12344, !12345, !12346, !12347, !12348}
!12326 = !DILocalVariable(name: "Input", arg: 1, scope: !12324, file: !672, line: 87, type: !7555)
!12327 = !DILocalVariable(name: "Ilen", arg: 2, scope: !12324, file: !672, line: 87, type: !20)
!12328 = !DILocalVariable(name: "Output", arg: 3, scope: !12324, file: !672, line: 87, type: !7555)
!12329 = !DILocalVariable(name: "SHA1_HASH_InitStructure", scope: !12324, file: !672, line: 89, type: !12330)
!12330 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_InitTypeDef", file: !9593, line: 58, baseType: !12331)
!12331 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9593, line: 47, size: 128, elements: !12332)
!12332 = !{!12333, !12334, !12335, !12336}
!12333 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_AlgoSelection", scope: !12331, file: !9593, line: 49, baseType: !20, size: 32)
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_AlgoMode", scope: !12331, file: !9593, line: 51, baseType: !20, size: 32, offset: 32)
!12335 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_DataType", scope: !12331, file: !9593, line: 53, baseType: !20, size: 32, offset: 64)
!12336 = !DIDerivedType(tag: DW_TAG_member, name: "HASH_HMACKeyType", scope: !12331, file: !9593, line: 56, baseType: !20, size: 32, offset: 96)
!12337 = !DILocalVariable(name: "SHA1_MessageDigest", scope: !12324, file: !672, line: 90, type: !12338)
!12338 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_MsgDigest", file: !9593, line: 67, baseType: !12339)
!12339 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9593, line: 63, size: 160, elements: !12340)
!12340 = !{!12341}
!12341 = !DIDerivedType(tag: DW_TAG_member, name: "Data", scope: !12339, file: !9593, line: 65, baseType: !112, size: 160)
!12342 = !DILocalVariable(name: "nbvalidbitsdata", scope: !12324, file: !672, line: 91, type: !310)
!12343 = !DILocalVariable(name: "i", scope: !12324, file: !672, line: 92, type: !20)
!12344 = !DILocalVariable(name: "counter", scope: !12324, file: !672, line: 93, type: !27)
!12345 = !DILocalVariable(name: "busystatus", scope: !12324, file: !672, line: 94, type: !20)
!12346 = !DILocalVariable(name: "status", scope: !12324, file: !672, line: 95, type: !358)
!12347 = !DILocalVariable(name: "inputaddr", scope: !12324, file: !672, line: 96, type: !20)
!12348 = !DILocalVariable(name: "outputaddr", scope: !12324, file: !672, line: 97, type: !20)
!12349 = !DILocation(line: 0, scope: !12324)
!12350 = !DILocation(line: 89, column: 3, scope: !12324)
!12351 = !DILocation(line: 89, column: 20, scope: !12324)
!12352 = !DILocation(line: 90, column: 3, scope: !12324)
!12353 = !DILocation(line: 90, column: 18, scope: !12324)
!12354 = !DILocation(line: 91, column: 3, scope: !12324)
!12355 = !DILocation(line: 91, column: 17, scope: !12324)
!12356 = !DILocation(line: 93, column: 3, scope: !12324)
!12357 = !DILocation(line: 93, column: 17, scope: !12324)
!12358 = !DILocation(line: 97, column: 25, scope: !12324)
!12359 = !DILocation(line: 100, column: 21, scope: !12324)
!12360 = !DILocation(line: 100, column: 19, scope: !12324)
!12361 = !DILocation(line: 103, column: 3, scope: !12324)
!12362 = !DILocation(line: 106, column: 27, scope: !12324)
!12363 = !DILocation(line: 106, column: 46, scope: !12324)
!12364 = !DILocation(line: 107, column: 27, scope: !12324)
!12365 = !DILocation(line: 107, column: 41, scope: !12324)
!12366 = !DILocation(line: 108, column: 27, scope: !12324)
!12367 = !DILocation(line: 108, column: 41, scope: !12324)
!12368 = !DILocation(line: 109, column: 3, scope: !12324)
!12369 = !DILocation(line: 112, column: 32, scope: !12324)
!12370 = !DILocation(line: 112, column: 3, scope: !12324)
!12371 = !DILocation(line: 115, column: 13, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12373, file: !672, line: 115, column: 3)
!12373 = distinct !DILexicalBlock(scope: !12324, file: !672, line: 115, column: 3)
!12374 = !DILocation(line: 115, column: 3, scope: !12373)
!12375 = !DILocation(line: 96, column: 25, scope: !12324)
!12376 = !DILocation(line: 117, column: 18, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12372, file: !672, line: 116, column: 3)
!12378 = !DILocation(line: 117, column: 17, scope: !12377)
!12379 = !DILocation(line: 117, column: 5, scope: !12377)
!12380 = !DILocation(line: 118, column: 14, scope: !12377)
!12381 = !DILocation(line: 115, column: 21, scope: !12372)
!12382 = distinct !{!12382, !12374, !12383}
!12383 = !DILocation(line: 119, column: 3, scope: !12373)
!12384 = !DILocation(line: 122, column: 3, scope: !12324)
!12385 = !DILocation(line: 125, column: 3, scope: !12324)
!12386 = !DILocation(line: 127, column: 18, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12324, file: !672, line: 126, column: 3)
!12388 = !DILocation(line: 128, column: 12, scope: !12387)
!12389 = !DILocation(line: 129, column: 12, scope: !12324)
!12390 = !DILocation(line: 129, column: 20, scope: !12324)
!12391 = !DILocation(line: 129, column: 41, scope: !12324)
!12392 = !DILocation(line: 129, column: 3, scope: !12387)
!12393 = distinct !{!12393, !12385, !12394}
!12394 = !DILocation(line: 129, column: 65, scope: !12324)
!12395 = !DILocation(line: 131, column: 7, scope: !12324)
!12396 = !DILocation(line: 138, column: 5, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12398, file: !672, line: 136, column: 3)
!12398 = distinct !DILexicalBlock(scope: !12324, file: !672, line: 131, column: 7)
!12399 = !DILocation(line: 139, column: 39, scope: !12397)
!12400 = !DILocalVariable(name: "value", arg: 1, scope: !12401, file: !7612, line: 348, type: !20)
!12401 = distinct !DISubprogram(name: "__REV", scope: !7612, file: !7612, line: 348, type: !5897, scopeLine: 349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !12402)
!12402 = !{!12400, !12403}
!12403 = !DILocalVariable(name: "result", scope: !12401, file: !7612, line: 350, type: !20)
!12404 = !DILocation(line: 0, scope: !12401, inlinedAt: !12405)
!12405 = distinct !DILocation(line: 139, column: 33, scope: !12397)
!12406 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12405)
!12407 = !{i32 677923}
!12408 = !DILocation(line: 139, column: 6, scope: !12397)
!12409 = !DILocation(line: 139, column: 31, scope: !12397)
!12410 = !DILocation(line: 140, column: 15, scope: !12397)
!12411 = !DILocation(line: 141, column: 39, scope: !12397)
!12412 = !DILocation(line: 0, scope: !12401, inlinedAt: !12413)
!12413 = distinct !DILocation(line: 141, column: 33, scope: !12397)
!12414 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12413)
!12415 = !DILocation(line: 141, column: 6, scope: !12397)
!12416 = !DILocation(line: 141, column: 31, scope: !12397)
!12417 = !DILocation(line: 142, column: 15, scope: !12397)
!12418 = !DILocation(line: 143, column: 39, scope: !12397)
!12419 = !DILocation(line: 0, scope: !12401, inlinedAt: !12420)
!12420 = distinct !DILocation(line: 143, column: 33, scope: !12397)
!12421 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12420)
!12422 = !DILocation(line: 143, column: 6, scope: !12397)
!12423 = !DILocation(line: 143, column: 31, scope: !12397)
!12424 = !DILocation(line: 144, column: 15, scope: !12397)
!12425 = !DILocation(line: 145, column: 39, scope: !12397)
!12426 = !DILocation(line: 0, scope: !12401, inlinedAt: !12427)
!12427 = distinct !DILocation(line: 145, column: 33, scope: !12397)
!12428 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12427)
!12429 = !DILocation(line: 145, column: 6, scope: !12397)
!12430 = !DILocation(line: 145, column: 31, scope: !12397)
!12431 = !DILocation(line: 146, column: 15, scope: !12397)
!12432 = !DILocation(line: 147, column: 39, scope: !12397)
!12433 = !DILocation(line: 0, scope: !12401, inlinedAt: !12434)
!12434 = distinct !DILocation(line: 147, column: 33, scope: !12397)
!12435 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12434)
!12436 = !DILocation(line: 147, column: 6, scope: !12397)
!12437 = !DILocation(line: 147, column: 31, scope: !12397)
!12438 = !DILocation(line: 150, column: 1, scope: !12324)
!12439 = !DILocation(line: 149, column: 3, scope: !12324)
!12440 = distinct !DISubprogram(name: "HMAC_SHA1", scope: !672, file: !672, line: 163, type: !10240, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !12441)
!12441 = !{!12442, !12443, !12444, !12445, !12446, !12447, !12448, !12449, !12450, !12451, !12452, !12453, !12454, !12455, !12456, !12457}
!12442 = !DILocalVariable(name: "Key", arg: 1, scope: !12440, file: !672, line: 163, type: !7555)
!12443 = !DILocalVariable(name: "Keylen", arg: 2, scope: !12440, file: !672, line: 163, type: !20)
!12444 = !DILocalVariable(name: "Input", arg: 3, scope: !12440, file: !672, line: 163, type: !7555)
!12445 = !DILocalVariable(name: "Ilen", arg: 4, scope: !12440, file: !672, line: 164, type: !20)
!12446 = !DILocalVariable(name: "Output", arg: 5, scope: !12440, file: !672, line: 164, type: !7555)
!12447 = !DILocalVariable(name: "SHA1_HASH_InitStructure", scope: !12440, file: !672, line: 166, type: !12330)
!12448 = !DILocalVariable(name: "SHA1_MessageDigest", scope: !12440, file: !672, line: 167, type: !12338)
!12449 = !DILocalVariable(name: "nbvalidbitsdata", scope: !12440, file: !672, line: 168, type: !310)
!12450 = !DILocalVariable(name: "nbvalidbitskey", scope: !12440, file: !672, line: 169, type: !310)
!12451 = !DILocalVariable(name: "i", scope: !12440, file: !672, line: 170, type: !20)
!12452 = !DILocalVariable(name: "counter", scope: !12440, file: !672, line: 171, type: !27)
!12453 = !DILocalVariable(name: "busystatus", scope: !12440, file: !672, line: 172, type: !20)
!12454 = !DILocalVariable(name: "status", scope: !12440, file: !672, line: 173, type: !358)
!12455 = !DILocalVariable(name: "keyaddr", scope: !12440, file: !672, line: 174, type: !20)
!12456 = !DILocalVariable(name: "inputaddr", scope: !12440, file: !672, line: 175, type: !20)
!12457 = !DILocalVariable(name: "outputaddr", scope: !12440, file: !672, line: 176, type: !20)
!12458 = !DILocation(line: 0, scope: !12440)
!12459 = !DILocation(line: 166, column: 3, scope: !12440)
!12460 = !DILocation(line: 166, column: 20, scope: !12440)
!12461 = !DILocation(line: 167, column: 3, scope: !12440)
!12462 = !DILocation(line: 167, column: 18, scope: !12440)
!12463 = !DILocation(line: 168, column: 3, scope: !12440)
!12464 = !DILocation(line: 168, column: 17, scope: !12440)
!12465 = !DILocation(line: 169, column: 3, scope: !12440)
!12466 = !DILocation(line: 169, column: 17, scope: !12440)
!12467 = !DILocation(line: 171, column: 3, scope: !12440)
!12468 = !DILocation(line: 171, column: 17, scope: !12440)
!12469 = !DILocation(line: 174, column: 25, scope: !12440)
!12470 = !DILocation(line: 175, column: 25, scope: !12440)
!12471 = !DILocation(line: 176, column: 25, scope: !12440)
!12472 = !DILocation(line: 179, column: 21, scope: !12440)
!12473 = !DILocation(line: 179, column: 19, scope: !12440)
!12474 = !DILocation(line: 182, column: 20, scope: !12440)
!12475 = !DILocation(line: 182, column: 18, scope: !12440)
!12476 = !DILocation(line: 185, column: 3, scope: !12440)
!12477 = !DILocation(line: 188, column: 27, scope: !12440)
!12478 = !DILocation(line: 188, column: 46, scope: !12440)
!12479 = !DILocation(line: 189, column: 27, scope: !12440)
!12480 = !DILocation(line: 189, column: 41, scope: !12440)
!12481 = !DILocation(line: 190, column: 27, scope: !12440)
!12482 = !DILocation(line: 190, column: 41, scope: !12440)
!12483 = !DILocation(line: 191, column: 13, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12440, file: !672, line: 191, column: 6)
!12485 = !DILocation(line: 0, scope: !12484)
!12486 = !DILocation(line: 201, column: 3, scope: !12440)
!12487 = !DILocation(line: 204, column: 32, scope: !12440)
!12488 = !DILocation(line: 204, column: 3, scope: !12440)
!12489 = !DILocation(line: 207, column: 13, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12491, file: !672, line: 207, column: 3)
!12491 = distinct !DILexicalBlock(scope: !12440, file: !672, line: 207, column: 3)
!12492 = !DILocation(line: 207, column: 3, scope: !12491)
!12493 = !DILocation(line: 209, column: 18, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12490, file: !672, line: 208, column: 3)
!12495 = !DILocation(line: 209, column: 17, scope: !12494)
!12496 = !DILocation(line: 209, column: 5, scope: !12494)
!12497 = !DILocation(line: 210, column: 12, scope: !12494)
!12498 = !DILocation(line: 207, column: 23, scope: !12490)
!12499 = distinct !{!12499, !12492, !12500}
!12500 = !DILocation(line: 211, column: 3, scope: !12491)
!12501 = !DILocation(line: 214, column: 3, scope: !12440)
!12502 = !DILocation(line: 217, column: 3, scope: !12440)
!12503 = !DILocation(line: 219, column: 18, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12440, file: !672, line: 218, column: 3)
!12505 = !DILocation(line: 220, column: 12, scope: !12504)
!12506 = !DILocation(line: 221, column: 12, scope: !12440)
!12507 = !DILocation(line: 221, column: 20, scope: !12440)
!12508 = !DILocation(line: 221, column: 41, scope: !12440)
!12509 = !DILocation(line: 221, column: 3, scope: !12504)
!12510 = distinct !{!12510, !12502, !12511}
!12511 = !DILocation(line: 221, column: 65, scope: !12440)
!12512 = !DILocation(line: 223, column: 7, scope: !12440)
!12513 = !DILocation(line: 230, column: 34, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !672, line: 228, column: 3)
!12515 = distinct !DILexicalBlock(scope: !12440, file: !672, line: 223, column: 7)
!12516 = !DILocation(line: 230, column: 5, scope: !12514)
!12517 = !DILocation(line: 233, column: 15, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12519, file: !672, line: 233, column: 5)
!12519 = distinct !DILexicalBlock(scope: !12514, file: !672, line: 233, column: 5)
!12520 = !DILocation(line: 233, column: 5, scope: !12519)
!12521 = !DILocation(line: 235, column: 20, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12518, file: !672, line: 234, column: 5)
!12523 = !DILocation(line: 235, column: 19, scope: !12522)
!12524 = !DILocation(line: 235, column: 7, scope: !12522)
!12525 = !DILocation(line: 236, column: 16, scope: !12522)
!12526 = !DILocation(line: 233, column: 23, scope: !12518)
!12527 = distinct !{!12527, !12520, !12528}
!12528 = !DILocation(line: 237, column: 5, scope: !12519)
!12529 = !DILocation(line: 240, column: 5, scope: !12514)
!12530 = !DILocation(line: 244, column: 13, scope: !12514)
!12531 = !DILocation(line: 245, column: 5, scope: !12514)
!12532 = !DILocation(line: 247, column: 20, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12514, file: !672, line: 246, column: 5)
!12534 = !DILocation(line: 248, column: 14, scope: !12533)
!12535 = !DILocation(line: 249, column: 14, scope: !12514)
!12536 = !DILocation(line: 249, column: 22, scope: !12514)
!12537 = !DILocation(line: 249, column: 43, scope: !12514)
!12538 = !DILocation(line: 249, column: 5, scope: !12533)
!12539 = distinct !{!12539, !12531, !12540}
!12540 = !DILocation(line: 249, column: 67, scope: !12514)
!12541 = !DILocation(line: 251, column: 9, scope: !12514)
!12542 = !DILocation(line: 258, column: 36, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12544, file: !672, line: 256, column: 5)
!12544 = distinct !DILexicalBlock(scope: !12514, file: !672, line: 251, column: 9)
!12545 = !DILocation(line: 258, column: 7, scope: !12543)
!12546 = !DILocation(line: 262, column: 7, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12543, file: !672, line: 262, column: 7)
!12548 = !DILocation(line: 264, column: 22, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12550, file: !672, line: 263, column: 7)
!12550 = distinct !DILexicalBlock(scope: !12547, file: !672, line: 262, column: 7)
!12551 = !DILocation(line: 264, column: 21, scope: !12549)
!12552 = !DILocation(line: 264, column: 9, scope: !12549)
!12553 = !DILocation(line: 265, column: 16, scope: !12549)
!12554 = !DILocation(line: 262, column: 27, scope: !12550)
!12555 = !DILocation(line: 262, column: 17, scope: !12550)
!12556 = distinct !{!12556, !12546, !12557}
!12557 = !DILocation(line: 266, column: 7, scope: !12547)
!12558 = !DILocation(line: 269, column: 7, scope: !12543)
!12559 = !DILocation(line: 272, column: 15, scope: !12543)
!12560 = !DILocation(line: 273, column: 7, scope: !12543)
!12561 = !DILocation(line: 275, column: 22, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12543, file: !672, line: 274, column: 7)
!12563 = !DILocation(line: 276, column: 16, scope: !12562)
!12564 = !DILocation(line: 277, column: 16, scope: !12543)
!12565 = !DILocation(line: 277, column: 24, scope: !12543)
!12566 = !DILocation(line: 277, column: 45, scope: !12543)
!12567 = !DILocation(line: 277, column: 7, scope: !12562)
!12568 = distinct !{!12568, !12560, !12569}
!12569 = !DILocation(line: 277, column: 69, scope: !12543)
!12570 = !DILocation(line: 279, column: 11, scope: !12543)
!12571 = !DILocation(line: 286, column: 9, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12573, file: !672, line: 284, column: 7)
!12573 = distinct !DILexicalBlock(scope: !12543, file: !672, line: 279, column: 11)
!12574 = !DILocation(line: 287, column: 43, scope: !12572)
!12575 = !DILocation(line: 0, scope: !12401, inlinedAt: !12576)
!12576 = distinct !DILocation(line: 287, column: 37, scope: !12572)
!12577 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12576)
!12578 = !DILocation(line: 287, column: 10, scope: !12572)
!12579 = !DILocation(line: 287, column: 35, scope: !12572)
!12580 = !DILocation(line: 288, column: 19, scope: !12572)
!12581 = !DILocation(line: 289, column: 43, scope: !12572)
!12582 = !DILocation(line: 0, scope: !12401, inlinedAt: !12583)
!12583 = distinct !DILocation(line: 289, column: 37, scope: !12572)
!12584 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12583)
!12585 = !DILocation(line: 289, column: 10, scope: !12572)
!12586 = !DILocation(line: 289, column: 35, scope: !12572)
!12587 = !DILocation(line: 290, column: 19, scope: !12572)
!12588 = !DILocation(line: 291, column: 43, scope: !12572)
!12589 = !DILocation(line: 0, scope: !12401, inlinedAt: !12590)
!12590 = distinct !DILocation(line: 291, column: 37, scope: !12572)
!12591 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12590)
!12592 = !DILocation(line: 291, column: 10, scope: !12572)
!12593 = !DILocation(line: 291, column: 35, scope: !12572)
!12594 = !DILocation(line: 292, column: 19, scope: !12572)
!12595 = !DILocation(line: 293, column: 43, scope: !12572)
!12596 = !DILocation(line: 0, scope: !12401, inlinedAt: !12597)
!12597 = distinct !DILocation(line: 293, column: 37, scope: !12572)
!12598 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12597)
!12599 = !DILocation(line: 293, column: 10, scope: !12572)
!12600 = !DILocation(line: 293, column: 35, scope: !12572)
!12601 = !DILocation(line: 294, column: 19, scope: !12572)
!12602 = !DILocation(line: 295, column: 43, scope: !12572)
!12603 = !DILocation(line: 0, scope: !12401, inlinedAt: !12604)
!12604 = distinct !DILocation(line: 295, column: 37, scope: !12572)
!12605 = !DILocation(line: 352, column: 3, scope: !12401, inlinedAt: !12604)
!12606 = !DILocation(line: 295, column: 10, scope: !12572)
!12607 = !DILocation(line: 295, column: 35, scope: !12572)
!12608 = !DILocation(line: 300, column: 1, scope: !12440)
!12609 = !DILocation(line: 299, column: 3, scope: !12440)
!12610 = distinct !DISubprogram(name: "USART_DeInit", scope: !674, file: !674, line: 178, type: !12611, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12613)
!12611 = !DISubroutineType(types: !12612)
!12612 = !{null, !676}
!12613 = !{!12614}
!12614 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12610, file: !674, line: 178, type: !676)
!12615 = !DILocation(line: 0, scope: !12610)
!12616 = !DILocation(line: 183, column: 7, scope: !12610)
!12617 = !DILocation(line: 185, column: 5, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !674, line: 184, column: 3)
!12619 = distinct !DILexicalBlock(scope: !12610, file: !674, line: 183, column: 7)
!12620 = !DILocation(line: 186, column: 5, scope: !12618)
!12621 = !DILocation(line: 187, column: 3, scope: !12618)
!12622 = !DILocation(line: 190, column: 5, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12624, file: !674, line: 189, column: 3)
!12624 = distinct !DILexicalBlock(scope: !12619, file: !674, line: 188, column: 12)
!12625 = !DILocation(line: 191, column: 5, scope: !12623)
!12626 = !DILocation(line: 192, column: 3, scope: !12623)
!12627 = !DILocation(line: 195, column: 5, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !674, line: 194, column: 3)
!12629 = distinct !DILexicalBlock(scope: !12624, file: !674, line: 193, column: 12)
!12630 = !DILocation(line: 196, column: 5, scope: !12628)
!12631 = !DILocation(line: 197, column: 3, scope: !12628)
!12632 = !DILocation(line: 200, column: 5, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !674, line: 199, column: 3)
!12634 = distinct !DILexicalBlock(scope: !12629, file: !674, line: 198, column: 12)
!12635 = !DILocation(line: 201, column: 5, scope: !12633)
!12636 = !DILocation(line: 202, column: 3, scope: !12633)
!12637 = !DILocation(line: 205, column: 5, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12639, file: !674, line: 204, column: 3)
!12639 = distinct !DILexicalBlock(scope: !12634, file: !674, line: 203, column: 12)
!12640 = !DILocation(line: 206, column: 5, scope: !12638)
!12641 = !DILocation(line: 207, column: 3, scope: !12638)
!12642 = !DILocation(line: 212, column: 7, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12644, file: !674, line: 211, column: 5)
!12644 = distinct !DILexicalBlock(scope: !12645, file: !674, line: 210, column: 9)
!12645 = distinct !DILexicalBlock(scope: !12639, file: !674, line: 209, column: 3)
!12646 = !DILocation(line: 213, column: 7, scope: !12643)
!12647 = !DILocation(line: 214, column: 5, scope: !12643)
!12648 = !DILocation(line: 216, column: 1, scope: !12610)
!12649 = distinct !DISubprogram(name: "USART_Init", scope: !674, file: !674, line: 227, type: !12650, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12663)
!12650 = !DISubroutineType(types: !12651)
!12651 = !{null, !676, !12652}
!12652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12653, size: 32)
!12653 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_InitTypeDef", file: !12654, line: 75, baseType: !12655)
!12654 = !DIFile(filename: "inc/peripherals/stm32f4xx_usart.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!12655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12654, line: 48, size: 128, elements: !12656)
!12656 = !{!12657, !12658, !12659, !12660, !12661, !12662}
!12657 = !DIDerivedType(tag: DW_TAG_member, name: "USART_BaudRate", scope: !12655, file: !12654, line: 50, baseType: !20, size: 32)
!12658 = !DIDerivedType(tag: DW_TAG_member, name: "USART_WordLength", scope: !12655, file: !12654, line: 56, baseType: !64, size: 16, offset: 32)
!12659 = !DIDerivedType(tag: DW_TAG_member, name: "USART_StopBits", scope: !12655, file: !12654, line: 59, baseType: !64, size: 16, offset: 48)
!12660 = !DIDerivedType(tag: DW_TAG_member, name: "USART_Parity", scope: !12655, file: !12654, line: 62, baseType: !64, size: 16, offset: 64)
!12661 = !DIDerivedType(tag: DW_TAG_member, name: "USART_Mode", scope: !12655, file: !12654, line: 69, baseType: !64, size: 16, offset: 80)
!12662 = !DIDerivedType(tag: DW_TAG_member, name: "USART_HardwareFlowControl", scope: !12655, file: !12654, line: 72, baseType: !64, size: 16, offset: 96)
!12663 = !{!12664, !12665, !12666, !12667, !12668, !12669, !12670}
!12664 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12649, file: !674, line: 227, type: !676)
!12665 = !DILocalVariable(name: "USART_InitStruct", arg: 2, scope: !12649, file: !674, line: 227, type: !12652)
!12666 = !DILocalVariable(name: "tmpreg", scope: !12649, file: !674, line: 229, type: !20)
!12667 = !DILocalVariable(name: "apbclock", scope: !12649, file: !674, line: 229, type: !20)
!12668 = !DILocalVariable(name: "integerdivider", scope: !12649, file: !674, line: 230, type: !20)
!12669 = !DILocalVariable(name: "fractionaldivider", scope: !12649, file: !674, line: 231, type: !20)
!12670 = !DILocalVariable(name: "RCC_ClocksStatus", scope: !12649, file: !674, line: 232, type: !12671)
!12671 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClocksTypeDef", file: !1651, line: 48, baseType: !12672)
!12672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1651, line: 42, size: 128, elements: !12673)
!12673 = !{!12674, !12675, !12676, !12677}
!12674 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLK_Frequency", scope: !12672, file: !1651, line: 44, baseType: !20, size: 32)
!12675 = !DIDerivedType(tag: DW_TAG_member, name: "HCLK_Frequency", scope: !12672, file: !1651, line: 45, baseType: !20, size: 32, offset: 32)
!12676 = !DIDerivedType(tag: DW_TAG_member, name: "PCLK1_Frequency", scope: !12672, file: !1651, line: 46, baseType: !20, size: 32, offset: 64)
!12677 = !DIDerivedType(tag: DW_TAG_member, name: "PCLK2_Frequency", scope: !12672, file: !1651, line: 47, baseType: !20, size: 32, offset: 96)
!12678 = !DILocation(line: 0, scope: !12649)
!12679 = !DILocation(line: 232, column: 3, scope: !12649)
!12680 = !DILocation(line: 232, column: 21, scope: !12649)
!12681 = !DILocation(line: 244, column: 25, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12649, file: !674, line: 244, column: 7)
!12683 = !DILocation(line: 250, column: 20, scope: !12649)
!12684 = !{!12685, !2880, i64 16}
!12685 = !{!"", !2880, i64 0, !2880, i64 2, !2880, i64 4, !2880, i64 6, !2880, i64 8, !2880, i64 10, !2880, i64 12, !2880, i64 14, !2880, i64 16, !2880, i64 18, !2880, i64 20, !2880, i64 22, !2880, i64 24, !2880, i64 26}
!12686 = !DILocation(line: 253, column: 10, scope: !12649)
!12687 = !DILocation(line: 257, column: 41, scope: !12649)
!12688 = !{!12689, !2880, i64 6}
!12689 = !{!"", !840, i64 0, !2880, i64 4, !2880, i64 6, !2880, i64 8, !2880, i64 10, !2880, i64 12}
!12690 = !DILocation(line: 257, column: 10, scope: !12649)
!12691 = !DILocation(line: 260, column: 15, scope: !12649)
!12692 = !DILocation(line: 263, column: 20, scope: !12649)
!12693 = !{!12685, !2880, i64 12}
!12694 = !DILocation(line: 266, column: 10, scope: !12649)
!12695 = !DILocation(line: 272, column: 41, scope: !12649)
!12696 = !{!12689, !2880, i64 4}
!12697 = !DILocation(line: 272, column: 78, scope: !12649)
!12698 = !{!12689, !2880, i64 8}
!12699 = !DILocation(line: 273, column: 31, scope: !12649)
!12700 = !{!12689, !2880, i64 10}
!12701 = !DILocation(line: 272, column: 58, scope: !12649)
!12702 = !DILocation(line: 272, column: 91, scope: !12649)
!12703 = !DILocation(line: 272, column: 10, scope: !12649)
!12704 = !DILocation(line: 276, column: 15, scope: !12649)
!12705 = !DILocation(line: 279, column: 20, scope: !12649)
!12706 = !{!12685, !2880, i64 20}
!12707 = !DILocation(line: 282, column: 10, scope: !12649)
!12708 = !DILocation(line: 286, column: 31, scope: !12649)
!12709 = !{!12689, !2880, i64 12}
!12710 = !DILocation(line: 286, column: 10, scope: !12649)
!12711 = !DILocation(line: 289, column: 15, scope: !12649)
!12712 = !DILocation(line: 293, column: 3, scope: !12649)
!12713 = !DILocation(line: 295, column: 26, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12649, file: !674, line: 295, column: 7)
!12715 = !DILocation(line: 297, column: 33, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12714, file: !674, line: 296, column: 3)
!12717 = !DILocation(line: 298, column: 3, scope: !12716)
!12718 = !DILocation(line: 301, column: 33, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12714, file: !674, line: 300, column: 3)
!12720 = !DILocation(line: 0, scope: !12714)
!12721 = !DILocation(line: 305, column: 16, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12649, file: !674, line: 305, column: 7)
!12723 = !DILocation(line: 305, column: 39, scope: !12722)
!12724 = !DILocation(line: 0, scope: !12722)
!12725 = !{!12689, !840, i64 0}
!12726 = !DILocation(line: 305, column: 7, scope: !12649)
!12727 = !DILocation(line: 315, column: 28, scope: !12649)
!12728 = !DILocation(line: 318, column: 45, scope: !12649)
!12729 = !DILocation(line: 318, column: 38, scope: !12649)
!12730 = !DILocation(line: 321, column: 16, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12649, file: !674, line: 321, column: 7)
!12732 = !DILocation(line: 321, column: 39, scope: !12731)
!12733 = !DILocation(line: 321, column: 7, scope: !12649)
!12734 = !DILocation(line: 0, scope: !12731)
!12735 = !DILocation(line: 315, column: 35, scope: !12649)
!12736 = !DILocation(line: 331, column: 17, scope: !12649)
!12737 = !DILocation(line: 331, column: 11, scope: !12649)
!12738 = !DILocation(line: 331, column: 15, scope: !12649)
!12739 = !{!12685, !2880, i64 8}
!12740 = !DILocation(line: 332, column: 1, scope: !12649)
!12741 = distinct !DISubprogram(name: "USART_StructInit", scope: !674, file: !674, line: 340, type: !12742, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12744)
!12742 = !DISubroutineType(types: !12743)
!12743 = !{null, !12652}
!12744 = !{!12745}
!12745 = !DILocalVariable(name: "USART_InitStruct", arg: 1, scope: !12741, file: !674, line: 340, type: !12652)
!12746 = !DILocation(line: 0, scope: !12741)
!12747 = !DILocation(line: 343, column: 21, scope: !12741)
!12748 = !DILocation(line: 343, column: 36, scope: !12741)
!12749 = !DILocation(line: 344, column: 21, scope: !12741)
!12750 = !DILocation(line: 344, column: 38, scope: !12741)
!12751 = !DILocation(line: 345, column: 21, scope: !12741)
!12752 = !DILocation(line: 345, column: 36, scope: !12741)
!12753 = !DILocation(line: 346, column: 21, scope: !12741)
!12754 = !DILocation(line: 346, column: 34, scope: !12741)
!12755 = !DILocation(line: 347, column: 21, scope: !12741)
!12756 = !DILocation(line: 347, column: 32, scope: !12741)
!12757 = !DILocation(line: 348, column: 21, scope: !12741)
!12758 = !DILocation(line: 348, column: 47, scope: !12741)
!12759 = !DILocation(line: 349, column: 1, scope: !12741)
!12760 = distinct !DISubprogram(name: "USART_ClockInit", scope: !674, file: !674, line: 360, type: !12761, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12771)
!12761 = !DISubroutineType(types: !12762)
!12762 = !{null, !676, !12763}
!12763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12764, size: 32)
!12764 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_ClockInitTypeDef", file: !12654, line: 96, baseType: !12765)
!12765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12654, line: 81, size: 64, elements: !12766)
!12766 = !{!12767, !12768, !12769, !12770}
!12767 = !DIDerivedType(tag: DW_TAG_member, name: "USART_Clock", scope: !12765, file: !12654, line: 84, baseType: !64, size: 16)
!12768 = !DIDerivedType(tag: DW_TAG_member, name: "USART_CPOL", scope: !12765, file: !12654, line: 87, baseType: !64, size: 16, offset: 16)
!12769 = !DIDerivedType(tag: DW_TAG_member, name: "USART_CPHA", scope: !12765, file: !12654, line: 90, baseType: !64, size: 16, offset: 32)
!12770 = !DIDerivedType(tag: DW_TAG_member, name: "USART_LastBit", scope: !12765, file: !12654, line: 93, baseType: !64, size: 16, offset: 48)
!12771 = !{!12772, !12773, !12774}
!12772 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12760, file: !674, line: 360, type: !676)
!12773 = !DILocalVariable(name: "USART_ClockInitStruct", arg: 2, scope: !12760, file: !674, line: 360, type: !12763)
!12774 = !DILocalVariable(name: "tmpreg", scope: !12760, file: !674, line: 362, type: !20)
!12775 = !DILocation(line: 0, scope: !12760)
!12776 = !DILocation(line: 371, column: 20, scope: !12760)
!12777 = !DILocation(line: 373, column: 10, scope: !12760)
!12778 = !DILocation(line: 379, column: 46, scope: !12760)
!12779 = !DILocation(line: 379, column: 83, scope: !12760)
!12780 = !DILocation(line: 380, column: 41, scope: !12760)
!12781 = !DILocation(line: 380, column: 77, scope: !12760)
!12782 = !DILocation(line: 379, column: 58, scope: !12760)
!12783 = !DILocation(line: 379, column: 94, scope: !12760)
!12784 = !DILocation(line: 380, column: 52, scope: !12760)
!12785 = !DILocation(line: 379, column: 10, scope: !12760)
!12786 = !DILocation(line: 382, column: 15, scope: !12760)
!12787 = !DILocation(line: 383, column: 1, scope: !12760)
!12788 = distinct !DISubprogram(name: "USART_ClockStructInit", scope: !674, file: !674, line: 391, type: !12789, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12791)
!12789 = !DISubroutineType(types: !12790)
!12790 = !{null, !12763}
!12791 = !{!12792}
!12792 = !DILocalVariable(name: "USART_ClockInitStruct", arg: 1, scope: !12788, file: !674, line: 391, type: !12763)
!12793 = !DILocation(line: 0, scope: !12788)
!12794 = !DILocation(line: 394, column: 26, scope: !12788)
!12795 = !DILocation(line: 394, column: 38, scope: !12788)
!12796 = !DILocation(line: 395, column: 26, scope: !12788)
!12797 = !DILocation(line: 395, column: 37, scope: !12788)
!12798 = !DILocation(line: 396, column: 26, scope: !12788)
!12799 = !DILocation(line: 396, column: 37, scope: !12788)
!12800 = !DILocation(line: 397, column: 26, scope: !12788)
!12801 = !DILocation(line: 397, column: 40, scope: !12788)
!12802 = !DILocation(line: 398, column: 1, scope: !12788)
!12803 = distinct !DISubprogram(name: "USART_Cmd", scope: !674, file: !674, line: 408, type: !12804, scopeLine: 409, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12806)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{null, !676, !856}
!12806 = !{!12807, !12808}
!12807 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12803, file: !674, line: 408, type: !676)
!12808 = !DILocalVariable(name: "NewState", arg: 2, scope: !12803, file: !674, line: 408, type: !856)
!12809 = !DILocation(line: 0, scope: !12803)
!12810 = !DILocation(line: 414, column: 16, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12803, file: !674, line: 414, column: 7)
!12812 = !DILocation(line: 0, scope: !12811)
!12813 = !DILocation(line: 414, column: 7, scope: !12803)
!12814 = !DILocation(line: 424, column: 1, scope: !12803)
!12815 = distinct !DISubprogram(name: "USART_SetPrescaler", scope: !674, file: !674, line: 434, type: !12816, scopeLine: 435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12818)
!12816 = !DISubroutineType(types: !12817)
!12817 = !{null, !676, !60}
!12818 = !{!12819, !12820}
!12819 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12815, file: !674, line: 434, type: !676)
!12820 = !DILocalVariable(name: "USART_Prescaler", arg: 2, scope: !12815, file: !674, line: 434, type: !60)
!12821 = !DILocation(line: 0, scope: !12815)
!12822 = !DILocation(line: 440, column: 11, scope: !12815)
!12823 = !DILocation(line: 440, column: 16, scope: !12815)
!12824 = !{!12685, !2880, i64 24}
!12825 = !DILocation(line: 442, column: 19, scope: !12815)
!12826 = !DILocation(line: 442, column: 16, scope: !12815)
!12827 = !DILocation(line: 443, column: 1, scope: !12815)
!12828 = distinct !DISubprogram(name: "USART_OverSampling8Cmd", scope: !674, file: !674, line: 455, type: !12804, scopeLine: 456, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12829)
!12829 = !{!12830, !12831}
!12830 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12828, file: !674, line: 455, type: !676)
!12831 = !DILocalVariable(name: "NewState", arg: 2, scope: !12828, file: !674, line: 455, type: !856)
!12832 = !DILocation(line: 0, scope: !12828)
!12833 = !DILocation(line: 461, column: 16, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12828, file: !674, line: 461, column: 7)
!12835 = !DILocation(line: 0, scope: !12834)
!12836 = !DILocation(line: 461, column: 7, scope: !12828)
!12837 = !DILocation(line: 471, column: 1, scope: !12828)
!12838 = distinct !DISubprogram(name: "USART_OneBitMethodCmd", scope: !674, file: !674, line: 481, type: !12804, scopeLine: 482, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12839)
!12839 = !{!12840, !12841}
!12840 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12838, file: !674, line: 481, type: !676)
!12841 = !DILocalVariable(name: "NewState", arg: 2, scope: !12838, file: !674, line: 481, type: !856)
!12842 = !DILocation(line: 0, scope: !12838)
!12843 = !DILocation(line: 487, column: 16, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12838, file: !674, line: 487, column: 7)
!12845 = !DILocation(line: 0, scope: !12844)
!12846 = !DILocation(line: 487, column: 7, scope: !12838)
!12847 = !DILocation(line: 497, column: 1, scope: !12838)
!12848 = distinct !DISubprogram(name: "USART_SendData", scope: !674, file: !674, line: 538, type: !12849, scopeLine: 539, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12851)
!12849 = !DISubroutineType(types: !12850)
!12850 = !{null, !676, !64}
!12851 = !{!12852, !12853}
!12852 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12848, file: !674, line: 538, type: !676)
!12853 = !DILocalVariable(name: "Data", arg: 2, scope: !12848, file: !674, line: 538, type: !64)
!12854 = !DILocation(line: 0, scope: !12848)
!12855 = !DILocation(line: 545, column: 22, scope: !12848)
!12856 = !DILocation(line: 545, column: 11, scope: !12848)
!12857 = !DILocation(line: 545, column: 14, scope: !12848)
!12858 = !{!12685, !2880, i64 4}
!12859 = !DILocation(line: 546, column: 1, scope: !12848)
!12860 = distinct !DISubprogram(name: "USART_ReceiveData", scope: !674, file: !674, line: 554, type: !12861, scopeLine: 555, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12863)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{!64, !676}
!12863 = !{!12864}
!12864 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12860, file: !674, line: 554, type: !676)
!12865 = !DILocation(line: 0, scope: !12860)
!12866 = !DILocation(line: 560, column: 29, scope: !12860)
!12867 = !DILocation(line: 560, column: 32, scope: !12860)
!12868 = !DILocation(line: 560, column: 3, scope: !12860)
!12869 = distinct !DISubprogram(name: "USART_SetAddress", scope: !674, file: !674, line: 605, type: !12816, scopeLine: 606, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12870)
!12870 = !{!12871, !12872}
!12871 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12869, file: !674, line: 605, type: !676)
!12872 = !DILocalVariable(name: "USART_Address", arg: 2, scope: !12869, file: !674, line: 605, type: !60)
!12873 = !DILocation(line: 0, scope: !12869)
!12874 = !DILocation(line: 612, column: 11, scope: !12869)
!12875 = !DILocation(line: 612, column: 15, scope: !12869)
!12876 = !DILocation(line: 614, column: 18, scope: !12869)
!12877 = !DILocation(line: 614, column: 15, scope: !12869)
!12878 = !DILocation(line: 615, column: 1, scope: !12869)
!12879 = distinct !DISubprogram(name: "USART_ReceiverWakeUpCmd", scope: !674, file: !674, line: 625, type: !12804, scopeLine: 626, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12880)
!12880 = !{!12881, !12882}
!12881 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12879, file: !674, line: 625, type: !676)
!12882 = !DILocalVariable(name: "NewState", arg: 2, scope: !12879, file: !674, line: 625, type: !856)
!12883 = !DILocation(line: 0, scope: !12879)
!12884 = !DILocation(line: 631, column: 16, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12879, file: !674, line: 631, column: 7)
!12886 = !DILocation(line: 0, scope: !12885)
!12887 = !DILocation(line: 631, column: 7, scope: !12879)
!12888 = !DILocation(line: 641, column: 1, scope: !12879)
!12889 = distinct !DISubprogram(name: "USART_WakeUpConfig", scope: !674, file: !674, line: 652, type: !12849, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12890)
!12890 = !{!12891, !12892}
!12891 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12889, file: !674, line: 652, type: !676)
!12892 = !DILocalVariable(name: "USART_WakeUp", arg: 2, scope: !12889, file: !674, line: 652, type: !64)
!12893 = !DILocation(line: 0, scope: !12889)
!12894 = !DILocation(line: 658, column: 11, scope: !12889)
!12895 = !DILocation(line: 658, column: 15, scope: !12889)
!12896 = !DILocation(line: 659, column: 15, scope: !12889)
!12897 = !DILocation(line: 660, column: 1, scope: !12889)
!12898 = distinct !DISubprogram(name: "USART_LINBreakDetectLengthConfig", scope: !674, file: !674, line: 721, type: !12849, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12899)
!12899 = !{!12900, !12901}
!12900 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12898, file: !674, line: 721, type: !676)
!12901 = !DILocalVariable(name: "USART_LINBreakDetectLength", arg: 2, scope: !12898, file: !674, line: 721, type: !64)
!12902 = !DILocation(line: 0, scope: !12898)
!12903 = !DILocation(line: 727, column: 11, scope: !12898)
!12904 = !DILocation(line: 727, column: 15, scope: !12898)
!12905 = !DILocation(line: 728, column: 15, scope: !12898)
!12906 = !DILocation(line: 729, column: 1, scope: !12898)
!12907 = distinct !DISubprogram(name: "USART_LINCmd", scope: !674, file: !674, line: 739, type: !12804, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12908)
!12908 = !{!12909, !12910}
!12909 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12907, file: !674, line: 739, type: !676)
!12910 = !DILocalVariable(name: "NewState", arg: 2, scope: !12907, file: !674, line: 739, type: !856)
!12911 = !DILocation(line: 0, scope: !12907)
!12912 = !DILocation(line: 745, column: 16, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12907, file: !674, line: 745, column: 7)
!12914 = !DILocation(line: 0, scope: !12913)
!12915 = !DILocation(line: 745, column: 7, scope: !12907)
!12916 = !DILocation(line: 755, column: 1, scope: !12907)
!12917 = distinct !DISubprogram(name: "USART_SendBreak", scope: !674, file: !674, line: 763, type: !12611, scopeLine: 764, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12918)
!12918 = !{!12919}
!12919 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12917, file: !674, line: 763, type: !676)
!12920 = !DILocation(line: 0, scope: !12917)
!12921 = !DILocation(line: 769, column: 11, scope: !12917)
!12922 = !DILocation(line: 769, column: 15, scope: !12917)
!12923 = !DILocation(line: 770, column: 1, scope: !12917)
!12924 = distinct !DISubprogram(name: "USART_HalfDuplexCmd", scope: !674, file: !674, line: 816, type: !12804, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12925)
!12925 = !{!12926, !12927}
!12926 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12924, file: !674, line: 816, type: !676)
!12927 = !DILocalVariable(name: "NewState", arg: 2, scope: !12924, file: !674, line: 816, type: !856)
!12928 = !DILocation(line: 0, scope: !12924)
!12929 = !DILocation(line: 822, column: 16, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12924, file: !674, line: 822, column: 7)
!12931 = !DILocation(line: 0, scope: !12930)
!12932 = !DILocation(line: 822, column: 7, scope: !12924)
!12933 = !DILocation(line: 832, column: 1, scope: !12924)
!12934 = distinct !DISubprogram(name: "USART_SetGuardTime", scope: !674, file: !674, line: 901, type: !12816, scopeLine: 902, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12935)
!12935 = !{!12936, !12937}
!12936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12934, file: !674, line: 901, type: !676)
!12937 = !DILocalVariable(name: "USART_GuardTime", arg: 2, scope: !12934, file: !674, line: 901, type: !60)
!12938 = !DILocation(line: 0, scope: !12934)
!12939 = !DILocation(line: 907, column: 11, scope: !12934)
!12940 = !DILocation(line: 907, column: 16, scope: !12934)
!12941 = !DILocation(line: 909, column: 30, scope: !12934)
!12942 = !DILocation(line: 909, column: 56, scope: !12934)
!12943 = !DILocation(line: 909, column: 16, scope: !12934)
!12944 = !DILocation(line: 910, column: 1, scope: !12934)
!12945 = distinct !DISubprogram(name: "USART_SmartCardCmd", scope: !674, file: !674, line: 920, type: !12804, scopeLine: 921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12946)
!12946 = !{!12947, !12948}
!12947 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12945, file: !674, line: 920, type: !676)
!12948 = !DILocalVariable(name: "NewState", arg: 2, scope: !12945, file: !674, line: 920, type: !856)
!12949 = !DILocation(line: 0, scope: !12945)
!12950 = !DILocation(line: 925, column: 16, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12945, file: !674, line: 925, column: 7)
!12952 = !DILocation(line: 0, scope: !12951)
!12953 = !DILocation(line: 925, column: 7, scope: !12945)
!12954 = !DILocation(line: 935, column: 1, scope: !12945)
!12955 = distinct !DISubprogram(name: "USART_SmartCardNACKCmd", scope: !674, file: !674, line: 945, type: !12804, scopeLine: 946, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12956)
!12956 = !{!12957, !12958}
!12957 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12955, file: !674, line: 945, type: !676)
!12958 = !DILocalVariable(name: "NewState", arg: 2, scope: !12955, file: !674, line: 945, type: !856)
!12959 = !DILocation(line: 0, scope: !12955)
!12960 = !DILocation(line: 950, column: 16, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12955, file: !674, line: 950, column: 7)
!12962 = !DILocation(line: 0, scope: !12961)
!12963 = !DILocation(line: 950, column: 7, scope: !12955)
!12964 = !DILocation(line: 960, column: 1, scope: !12955)
!12965 = distinct !DISubprogram(name: "USART_IrDAConfig", scope: !674, file: !674, line: 1016, type: !12849, scopeLine: 1017, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12966)
!12966 = !{!12967, !12968}
!12967 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12965, file: !674, line: 1016, type: !676)
!12968 = !DILocalVariable(name: "USART_IrDAMode", arg: 2, scope: !12965, file: !674, line: 1016, type: !64)
!12969 = !DILocation(line: 0, scope: !12965)
!12970 = !DILocation(line: 1022, column: 11, scope: !12965)
!12971 = !DILocation(line: 1022, column: 15, scope: !12965)
!12972 = !DILocation(line: 1023, column: 15, scope: !12965)
!12973 = !DILocation(line: 1024, column: 1, scope: !12965)
!12974 = distinct !DISubprogram(name: "USART_IrDACmd", scope: !674, file: !674, line: 1034, type: !12804, scopeLine: 1035, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12975)
!12975 = !{!12976, !12977}
!12976 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12974, file: !674, line: 1034, type: !676)
!12977 = !DILocalVariable(name: "NewState", arg: 2, scope: !12974, file: !674, line: 1034, type: !856)
!12978 = !DILocation(line: 0, scope: !12974)
!12979 = !DILocation(line: 1040, column: 16, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12974, file: !674, line: 1040, column: 7)
!12981 = !DILocation(line: 0, scope: !12980)
!12982 = !DILocation(line: 1040, column: 7, scope: !12974)
!12983 = !DILocation(line: 1050, column: 1, scope: !12974)
!12984 = distinct !DISubprogram(name: "USART_DMACmd", scope: !674, file: !674, line: 1080, type: !12985, scopeLine: 1081, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !12987)
!12985 = !DISubroutineType(types: !12986)
!12986 = !{null, !676, !64, !856}
!12987 = !{!12988, !12989, !12990}
!12988 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12984, file: !674, line: 1080, type: !676)
!12989 = !DILocalVariable(name: "USART_DMAReq", arg: 2, scope: !12984, file: !674, line: 1080, type: !64)
!12990 = !DILocalVariable(name: "NewState", arg: 3, scope: !12984, file: !674, line: 1080, type: !856)
!12991 = !DILocation(line: 0, scope: !12984)
!12992 = !DILocation(line: 1087, column: 16, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12984, file: !674, line: 1087, column: 7)
!12994 = !DILocation(line: 1087, column: 7, scope: !12984)
!12995 = !DILocation(line: 1091, column: 13, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12993, file: !674, line: 1088, column: 3)
!12997 = !DILocation(line: 1091, column: 17, scope: !12996)
!12998 = !DILocation(line: 1092, column: 3, scope: !12996)
!12999 = !DILocation(line: 1097, column: 30, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12993, file: !674, line: 1094, column: 3)
!13001 = !DILocation(line: 1097, column: 13, scope: !13000)
!13002 = !DILocation(line: 1097, column: 17, scope: !13000)
!13003 = !DILocation(line: 1099, column: 1, scope: !12984)
!13004 = distinct !DISubprogram(name: "USART_ITConfig", scope: !674, file: !674, line: 1208, type: !12985, scopeLine: 1209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !13005)
!13005 = !{!13006, !13007, !13008, !13009, !13010, !13011, !13012}
!13006 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13004, file: !674, line: 1208, type: !676)
!13007 = !DILocalVariable(name: "USART_IT", arg: 2, scope: !13004, file: !674, line: 1208, type: !64)
!13008 = !DILocalVariable(name: "NewState", arg: 3, scope: !13004, file: !674, line: 1208, type: !856)
!13009 = !DILocalVariable(name: "usartreg", scope: !13004, file: !674, line: 1210, type: !20)
!13010 = !DILocalVariable(name: "itpos", scope: !13004, file: !674, line: 1210, type: !20)
!13011 = !DILocalVariable(name: "itmask", scope: !13004, file: !674, line: 1210, type: !20)
!13012 = !DILocalVariable(name: "usartxbase", scope: !13004, file: !674, line: 1211, type: !20)
!13013 = !DILocation(line: 0, scope: !13004)
!13014 = !DILocation(line: 1223, column: 16, scope: !13004)
!13015 = !DILocation(line: 1226, column: 35, scope: !13004)
!13016 = !DILocation(line: 1229, column: 20, scope: !13004)
!13017 = !DILocation(line: 1230, column: 30, scope: !13004)
!13018 = !DILocation(line: 1232, column: 7, scope: !13004)
!13019 = !DILocation(line: 0, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13004, file: !674, line: 1232, column: 7)
!13021 = !DILocation(line: 1244, column: 16, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13004, file: !674, line: 1244, column: 7)
!13023 = !DILocation(line: 1244, column: 7, scope: !13004)
!13024 = !DILocation(line: 1246, column: 6, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13022, file: !674, line: 1245, column: 3)
!13026 = !DILocation(line: 1246, column: 34, scope: !13025)
!13027 = !DILocation(line: 1247, column: 3, scope: !13025)
!13028 = !DILocation(line: 1250, column: 36, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13022, file: !674, line: 1249, column: 3)
!13030 = !DILocation(line: 1250, column: 6, scope: !13029)
!13031 = !DILocation(line: 1250, column: 33, scope: !13029)
!13032 = !DILocation(line: 1252, column: 1, scope: !13004)
!13033 = distinct !DISubprogram(name: "USART_GetFlagStatus", scope: !674, file: !674, line: 1272, type: !13034, scopeLine: 1273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !13036)
!13034 = !DISubroutineType(types: !13035)
!13035 = !{!1276, !676, !64}
!13036 = !{!13037, !13038, !13039}
!13037 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13033, file: !674, line: 1272, type: !676)
!13038 = !DILocalVariable(name: "USART_FLAG", arg: 2, scope: !13033, file: !674, line: 1272, type: !64)
!13039 = !DILocalVariable(name: "bitstatus", scope: !13033, file: !674, line: 1274, type: !1276)
!13040 = !DILocation(line: 0, scope: !13033)
!13041 = !DILocation(line: 1285, column: 16, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13033, file: !674, line: 1285, column: 7)
!13043 = !{!12685, !2880, i64 0}
!13044 = !DILocation(line: 1285, column: 19, scope: !13042)
!13045 = !DILocation(line: 1285, column: 33, scope: !13042)
!13046 = !DILocation(line: 1293, column: 3, scope: !13033)
!13047 = distinct !DISubprogram(name: "USART_ClearFlag", scope: !674, file: !674, line: 1321, type: !12849, scopeLine: 1322, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !13048)
!13048 = !{!13049, !13050}
!13049 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13047, file: !674, line: 1321, type: !676)
!13050 = !DILocalVariable(name: "USART_FLAG", arg: 2, scope: !13047, file: !674, line: 1321, type: !64)
!13051 = !DILocation(line: 0, scope: !13047)
!13052 = !DILocation(line: 1333, column: 26, scope: !13047)
!13053 = !DILocation(line: 1333, column: 11, scope: !13047)
!13054 = !DILocation(line: 1333, column: 14, scope: !13047)
!13055 = !DILocation(line: 1334, column: 1, scope: !13047)
!13056 = distinct !DISubprogram(name: "USART_GetITStatus", scope: !674, file: !674, line: 1355, type: !13057, scopeLine: 1356, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !13059)
!13057 = !DISubroutineType(types: !13058)
!13058 = !{!1359, !676, !64}
!13059 = !{!13060, !13061, !13062, !13063, !13064, !13065}
!13060 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13056, file: !674, line: 1355, type: !676)
!13061 = !DILocalVariable(name: "USART_IT", arg: 2, scope: !13056, file: !674, line: 1355, type: !64)
!13062 = !DILocalVariable(name: "bitpos", scope: !13056, file: !674, line: 1357, type: !20)
!13063 = !DILocalVariable(name: "itmask", scope: !13056, file: !674, line: 1357, type: !20)
!13064 = !DILocalVariable(name: "usartreg", scope: !13056, file: !674, line: 1357, type: !20)
!13065 = !DILocalVariable(name: "bitstatus", scope: !13056, file: !674, line: 1358, type: !1359)
!13066 = !DILocation(line: 0, scope: !13056)
!13067 = !DILocation(line: 1364, column: 7, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13056, file: !674, line: 1364, column: 7)
!13069 = !DILocation(line: 1370, column: 35, scope: !13056)
!13070 = !DILocation(line: 1375, column: 7, scope: !13056)
!13071 = !DILocation(line: 1377, column: 23, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13073, file: !674, line: 1376, column: 3)
!13073 = distinct !DILexicalBlock(scope: !13056, file: !674, line: 1375, column: 7)
!13074 = !DILocation(line: 1378, column: 3, scope: !13072)
!13075 = !DILocation(line: 1381, column: 23, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13077, file: !674, line: 1380, column: 3)
!13077 = distinct !DILexicalBlock(scope: !13073, file: !674, line: 1379, column: 12)
!13078 = !DILocation(line: 1382, column: 3, scope: !13076)
!13079 = !DILocation(line: 1385, column: 23, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13077, file: !674, line: 1384, column: 3)
!13081 = !DILocation(line: 1372, column: 21, scope: !13056)
!13082 = !DILocation(line: 1373, column: 27, scope: !13056)
!13083 = !DILocation(line: 0, scope: !13073)
!13084 = !DILocation(line: 1388, column: 21, scope: !13056)
!13085 = !DILocation(line: 1389, column: 27, scope: !13056)
!13086 = !DILocation(line: 1390, column: 21, scope: !13056)
!13087 = !DILocation(line: 1390, column: 13, scope: !13056)
!13088 = !DILocation(line: 1390, column: 10, scope: !13056)
!13089 = !DILocation(line: 1391, column: 15, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13056, file: !674, line: 1391, column: 7)
!13091 = !DILocation(line: 1391, column: 34, scope: !13090)
!13092 = !DILocation(line: 1400, column: 3, scope: !13056)
!13093 = distinct !DISubprogram(name: "USART_ClearITPendingBit", scope: !674, file: !674, line: 1429, type: !12849, scopeLine: 1430, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !673, retainedNodes: !13094)
!13094 = !{!13095, !13096, !13097, !13098}
!13095 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13093, file: !674, line: 1429, type: !676)
!13096 = !DILocalVariable(name: "USART_IT", arg: 2, scope: !13093, file: !674, line: 1429, type: !64)
!13097 = !DILocalVariable(name: "bitpos", scope: !13093, file: !674, line: 1431, type: !64)
!13098 = !DILocalVariable(name: "itmask", scope: !13093, file: !674, line: 1431, type: !64)
!13099 = !DILocation(line: 0, scope: !13093)
!13100 = !DILocation(line: 1442, column: 21, scope: !13093)
!13101 = !DILocation(line: 1443, column: 31, scope: !13093)
!13102 = !DILocation(line: 1443, column: 28, scope: !13093)
!13103 = !DILocation(line: 1444, column: 16, scope: !13093)
!13104 = !DILocation(line: 1444, column: 11, scope: !13093)
!13105 = !DILocation(line: 1444, column: 14, scope: !13093)
!13106 = !DILocation(line: 1445, column: 1, scope: !13093)
!13107 = distinct !DISubprogram(name: "DAC_DeInit", scope: !695, file: !695, line: 174, type: !1415, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !361)
!13108 = !DILocation(line: 177, column: 3, scope: !13107)
!13109 = !DILocation(line: 179, column: 3, scope: !13107)
!13110 = !DILocation(line: 180, column: 1, scope: !13107)
!13111 = distinct !DISubprogram(name: "DAC_Init", scope: !695, file: !695, line: 193, type: !13112, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13123)
!13112 = !DISubroutineType(types: !13113)
!13113 = !{null, !20, !13114}
!13114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13115, size: 32)
!13115 = !DIDerivedType(tag: DW_TAG_typedef, name: "DAC_InitTypeDef", file: !13116, line: 63, baseType: !13117)
!13116 = !DIFile(filename: "inc/peripherals/stm32f4xx_dac.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!13117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13116, line: 48, size: 128, elements: !13118)
!13118 = !{!13119, !13120, !13121, !13122}
!13119 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_Trigger", scope: !13117, file: !13116, line: 50, baseType: !20, size: 32)
!13120 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_WaveGeneration", scope: !13117, file: !13116, line: 53, baseType: !20, size: 32, offset: 32)
!13121 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_LFSRUnmask_TriangleAmplitude", scope: !13117, file: !13116, line: 57, baseType: !20, size: 32, offset: 64)
!13122 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_OutputBuffer", scope: !13117, file: !13116, line: 61, baseType: !20, size: 32, offset: 96)
!13123 = !{!13124, !13125, !13126, !13127}
!13124 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13111, file: !695, line: 193, type: !20)
!13125 = !DILocalVariable(name: "DAC_InitStruct", arg: 2, scope: !13111, file: !695, line: 193, type: !13114)
!13126 = !DILocalVariable(name: "tmpreg1", scope: !13111, file: !695, line: 195, type: !20)
!13127 = !DILocalVariable(name: "tmpreg2", scope: !13111, file: !695, line: 195, type: !20)
!13128 = !DILocation(line: 0, scope: !13111)
!13129 = !DILocation(line: 205, column: 18, scope: !13111)
!13130 = !{!13131, !840, i64 0}
!13131 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !840, i64 32, !840, i64 36, !840, i64 40, !840, i64 44, !840, i64 48, !840, i64 52}
!13132 = !DILocation(line: 207, column: 30, scope: !13111)
!13133 = !DILocation(line: 207, column: 14, scope: !13111)
!13134 = !DILocation(line: 207, column: 11, scope: !13111)
!13135 = !DILocation(line: 214, column: 30, scope: !13111)
!13136 = !DILocation(line: 214, column: 60, scope: !13111)
!13137 = !DILocation(line: 214, column: 42, scope: !13111)
!13138 = !DILocation(line: 215, column: 30, scope: !13111)
!13139 = !DILocation(line: 214, column: 79, scope: !13111)
!13140 = !DILocation(line: 216, column: 30, scope: !13111)
!13141 = !DILocation(line: 215, column: 63, scope: !13111)
!13142 = !DILocation(line: 218, column: 22, scope: !13111)
!13143 = !DILocation(line: 218, column: 11, scope: !13111)
!13144 = !DILocation(line: 220, column: 11, scope: !13111)
!13145 = !DILocation(line: 221, column: 1, scope: !13111)
!13146 = distinct !DISubprogram(name: "DAC_StructInit", scope: !695, file: !695, line: 229, type: !13147, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13149)
!13147 = !DISubroutineType(types: !13148)
!13148 = !{null, !13114}
!13149 = !{!13150}
!13150 = !DILocalVariable(name: "DAC_InitStruct", arg: 1, scope: !13146, file: !695, line: 229, type: !13114)
!13151 = !DILocation(line: 0, scope: !13146)
!13152 = !DILocation(line: 233, column: 19, scope: !13146)
!13153 = !DILocation(line: 233, column: 31, scope: !13146)
!13154 = !DILocation(line: 235, column: 19, scope: !13146)
!13155 = !DILocation(line: 235, column: 38, scope: !13146)
!13156 = !DILocation(line: 237, column: 19, scope: !13146)
!13157 = !DILocation(line: 237, column: 52, scope: !13146)
!13158 = !DILocation(line: 239, column: 19, scope: !13146)
!13159 = !DILocation(line: 239, column: 36, scope: !13146)
!13160 = !DILocation(line: 240, column: 1, scope: !13146)
!13161 = distinct !DISubprogram(name: "DAC_Cmd", scope: !695, file: !695, line: 253, type: !1743, scopeLine: 254, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13162)
!13162 = !{!13163, !13164}
!13163 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13161, file: !695, line: 253, type: !20)
!13164 = !DILocalVariable(name: "NewState", arg: 2, scope: !13161, file: !695, line: 253, type: !856)
!13165 = !DILocation(line: 0, scope: !13161)
!13166 = !DILocation(line: 259, column: 16, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13161, file: !695, line: 259, column: 7)
!13168 = !DILocation(line: 0, scope: !13167)
!13169 = !DILocation(line: 259, column: 7, scope: !13161)
!13170 = !DILocation(line: 262, column: 13, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13167, file: !695, line: 260, column: 3)
!13172 = !DILocation(line: 263, column: 3, scope: !13171)
!13173 = !DILocation(line: 267, column: 17, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13167, file: !695, line: 265, column: 3)
!13175 = !DILocation(line: 267, column: 13, scope: !13174)
!13176 = !DILocation(line: 269, column: 1, scope: !13161)
!13177 = distinct !DISubprogram(name: "DAC_SoftwareTriggerCmd", scope: !695, file: !695, line: 281, type: !1743, scopeLine: 282, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13178)
!13178 = !{!13179, !13180}
!13179 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13177, file: !695, line: 281, type: !20)
!13180 = !DILocalVariable(name: "NewState", arg: 2, scope: !13177, file: !695, line: 281, type: !856)
!13181 = !DILocation(line: 0, scope: !13177)
!13182 = !DILocation(line: 287, column: 16, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13177, file: !695, line: 287, column: 7)
!13184 = !DILocation(line: 0, scope: !13183)
!13185 = !DILocation(line: 287, column: 7, scope: !13177)
!13186 = !DILocation(line: 290, column: 18, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13183, file: !695, line: 288, column: 3)
!13188 = !{!13131, !840, i64 4}
!13189 = !DILocation(line: 291, column: 3, scope: !13187)
!13190 = !DILocation(line: 295, column: 21, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13183, file: !695, line: 293, column: 3)
!13192 = !DILocation(line: 295, column: 18, scope: !13191)
!13193 = !DILocation(line: 297, column: 1, scope: !13177)
!13194 = distinct !DISubprogram(name: "DAC_DualSoftwareTriggerCmd", scope: !695, file: !695, line: 305, type: !1502, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13195)
!13195 = !{!13196}
!13196 = !DILocalVariable(name: "NewState", arg: 1, scope: !13194, file: !695, line: 305, type: !856)
!13197 = !DILocation(line: 0, scope: !13194)
!13198 = !DILocation(line: 310, column: 16, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13194, file: !695, line: 310, column: 7)
!13200 = !DILocation(line: 0, scope: !13199)
!13201 = !DILocation(line: 310, column: 7, scope: !13194)
!13202 = !DILocation(line: 320, column: 1, scope: !13194)
!13203 = distinct !DISubprogram(name: "DAC_WaveGenerationCmd", scope: !695, file: !695, line: 336, type: !7124, scopeLine: 337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13204)
!13204 = !{!13205, !13206, !13207}
!13205 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13203, file: !695, line: 336, type: !20)
!13206 = !DILocalVariable(name: "DAC_Wave", arg: 2, scope: !13203, file: !695, line: 336, type: !20)
!13207 = !DILocalVariable(name: "NewState", arg: 3, scope: !13203, file: !695, line: 336, type: !856)
!13208 = !DILocation(line: 0, scope: !13203)
!13209 = !DILocation(line: 343, column: 16, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13203, file: !695, line: 343, column: 7)
!13211 = !DILocation(line: 0, scope: !13210)
!13212 = !DILocation(line: 343, column: 7, scope: !13203)
!13213 = !DILocation(line: 346, column: 13, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13210, file: !695, line: 344, column: 3)
!13215 = !DILocation(line: 347, column: 3, scope: !13214)
!13216 = !DILocation(line: 351, column: 16, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13210, file: !695, line: 349, column: 3)
!13218 = !DILocation(line: 351, column: 13, scope: !13217)
!13219 = !DILocation(line: 353, column: 1, scope: !13203)
!13220 = distinct !DISubprogram(name: "DAC_SetChannel1Data", scope: !695, file: !695, line: 365, type: !13221, scopeLine: 366, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13223)
!13221 = !DISubroutineType(types: !13222)
!13222 = !{null, !20, !64}
!13223 = !{!13224, !13225, !13226}
!13224 = !DILocalVariable(name: "DAC_Align", arg: 1, scope: !13220, file: !695, line: 365, type: !20)
!13225 = !DILocalVariable(name: "Data", arg: 2, scope: !13220, file: !695, line: 365, type: !64)
!13226 = !DILocalVariable(name: "tmp", scope: !13220, file: !695, line: 367, type: !27)
!13227 = !DILocation(line: 0, scope: !13220)
!13228 = !DILocation(line: 367, column: 3, scope: !13220)
!13229 = !DILocation(line: 367, column: 17, scope: !13220)
!13230 = !DILocation(line: 373, column: 7, scope: !13220)
!13231 = !DILocation(line: 374, column: 25, scope: !13220)
!13232 = !DILocation(line: 374, column: 7, scope: !13220)
!13233 = !DILocation(line: 377, column: 28, scope: !13220)
!13234 = !DILocation(line: 377, column: 22, scope: !13220)
!13235 = !DILocation(line: 377, column: 4, scope: !13220)
!13236 = !DILocation(line: 377, column: 26, scope: !13220)
!13237 = !DILocation(line: 378, column: 1, scope: !13220)
!13238 = distinct !DISubprogram(name: "DAC_SetChannel2Data", scope: !695, file: !695, line: 390, type: !13221, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13239)
!13239 = !{!13240, !13241, !13242}
!13240 = !DILocalVariable(name: "DAC_Align", arg: 1, scope: !13238, file: !695, line: 390, type: !20)
!13241 = !DILocalVariable(name: "Data", arg: 2, scope: !13238, file: !695, line: 390, type: !64)
!13242 = !DILocalVariable(name: "tmp", scope: !13238, file: !695, line: 392, type: !27)
!13243 = !DILocation(line: 0, scope: !13238)
!13244 = !DILocation(line: 392, column: 3, scope: !13238)
!13245 = !DILocation(line: 392, column: 17, scope: !13238)
!13246 = !DILocation(line: 398, column: 7, scope: !13238)
!13247 = !DILocation(line: 399, column: 25, scope: !13238)
!13248 = !DILocation(line: 399, column: 7, scope: !13238)
!13249 = !DILocation(line: 402, column: 27, scope: !13238)
!13250 = !DILocation(line: 402, column: 21, scope: !13238)
!13251 = !DILocation(line: 402, column: 4, scope: !13238)
!13252 = !DILocation(line: 402, column: 25, scope: !13238)
!13253 = !DILocation(line: 403, column: 1, scope: !13238)
!13254 = distinct !DISubprogram(name: "DAC_SetDualChannelData", scope: !695, file: !695, line: 418, type: !13255, scopeLine: 419, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13257)
!13255 = !DISubroutineType(types: !13256)
!13256 = !{null, !20, !64, !64}
!13257 = !{!13258, !13259, !13260, !13261, !13262}
!13258 = !DILocalVariable(name: "DAC_Align", arg: 1, scope: !13254, file: !695, line: 418, type: !20)
!13259 = !DILocalVariable(name: "Data2", arg: 2, scope: !13254, file: !695, line: 418, type: !64)
!13260 = !DILocalVariable(name: "Data1", arg: 3, scope: !13254, file: !695, line: 418, type: !64)
!13261 = !DILocalVariable(name: "data", scope: !13254, file: !695, line: 420, type: !20)
!13262 = !DILocalVariable(name: "tmp", scope: !13254, file: !695, line: 420, type: !20)
!13263 = !DILocation(line: 0, scope: !13254)
!13264 = !DILocation(line: 428, column: 17, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13254, file: !695, line: 428, column: 7)
!13266 = !DILocation(line: 0, scope: !13265)
!13267 = !DILocation(line: 428, column: 7, scope: !13254)
!13268 = !DILocation(line: 438, column: 7, scope: !13254)
!13269 = !DILocation(line: 441, column: 4, scope: !13254)
!13270 = !DILocation(line: 441, column: 25, scope: !13254)
!13271 = !DILocation(line: 442, column: 1, scope: !13254)
!13272 = distinct !DISubprogram(name: "DAC_GetDataOutputValue", scope: !695, file: !695, line: 452, type: !13273, scopeLine: 453, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13275)
!13273 = !DISubroutineType(types: !13274)
!13274 = !{!64, !20}
!13275 = !{!13276, !13277}
!13276 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13272, file: !695, line: 452, type: !20)
!13277 = !DILocalVariable(name: "tmp", scope: !13272, file: !695, line: 454, type: !27)
!13278 = !DILocation(line: 0, scope: !13272)
!13279 = !DILocation(line: 454, column: 3, scope: !13272)
!13280 = !DILocation(line: 454, column: 17, scope: !13272)
!13281 = !DILocation(line: 459, column: 7, scope: !13272)
!13282 = !DILocation(line: 460, column: 46, scope: !13272)
!13283 = !DILocation(line: 460, column: 21, scope: !13272)
!13284 = !DILocation(line: 460, column: 7, scope: !13272)
!13285 = !DILocation(line: 463, column: 40, scope: !13272)
!13286 = !DILocation(line: 463, column: 23, scope: !13272)
!13287 = !DILocation(line: 463, column: 22, scope: !13272)
!13288 = !DILocation(line: 463, column: 10, scope: !13272)
!13289 = !DILocation(line: 464, column: 1, scope: !13272)
!13290 = !DILocation(line: 463, column: 3, scope: !13272)
!13291 = distinct !DISubprogram(name: "DAC_DMACmd", scope: !695, file: !695, line: 497, type: !1743, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13292)
!13292 = !{!13293, !13294}
!13293 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13291, file: !695, line: 497, type: !20)
!13294 = !DILocalVariable(name: "NewState", arg: 2, scope: !13291, file: !695, line: 497, type: !856)
!13295 = !DILocation(line: 0, scope: !13291)
!13296 = !DILocation(line: 503, column: 16, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13291, file: !695, line: 503, column: 7)
!13298 = !DILocation(line: 0, scope: !13297)
!13299 = !DILocation(line: 503, column: 7, scope: !13291)
!13300 = !DILocation(line: 506, column: 13, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13297, file: !695, line: 504, column: 3)
!13302 = !DILocation(line: 507, column: 3, scope: !13301)
!13303 = !DILocation(line: 511, column: 17, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13297, file: !695, line: 509, column: 3)
!13305 = !DILocation(line: 511, column: 13, scope: !13304)
!13306 = !DILocation(line: 513, column: 1, scope: !13291)
!13307 = distinct !DISubprogram(name: "DAC_ITConfig", scope: !695, file: !695, line: 545, type: !7124, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13308)
!13308 = !{!13309, !13310, !13311}
!13309 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13307, file: !695, line: 545, type: !20)
!13310 = !DILocalVariable(name: "DAC_IT", arg: 2, scope: !13307, file: !695, line: 545, type: !20)
!13311 = !DILocalVariable(name: "NewState", arg: 3, scope: !13307, file: !695, line: 545, type: !856)
!13312 = !DILocation(line: 0, scope: !13307)
!13313 = !DILocation(line: 552, column: 16, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13307, file: !695, line: 552, column: 7)
!13315 = !DILocation(line: 0, scope: !13314)
!13316 = !DILocation(line: 552, column: 7, scope: !13307)
!13317 = !DILocation(line: 555, column: 13, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13314, file: !695, line: 553, column: 3)
!13319 = !DILocation(line: 556, column: 3, scope: !13318)
!13320 = !DILocation(line: 560, column: 17, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13314, file: !695, line: 558, column: 3)
!13322 = !DILocation(line: 560, column: 13, scope: !13321)
!13323 = !DILocation(line: 562, column: 1, scope: !13307)
!13324 = distinct !DISubprogram(name: "DAC_GetFlagStatus", scope: !695, file: !695, line: 577, type: !7167, scopeLine: 578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13325)
!13325 = !{!13326, !13327, !13328}
!13326 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13324, file: !695, line: 577, type: !20)
!13327 = !DILocalVariable(name: "DAC_FLAG", arg: 2, scope: !13324, file: !695, line: 577, type: !20)
!13328 = !DILocalVariable(name: "bitstatus", scope: !13324, file: !695, line: 579, type: !1276)
!13329 = !DILocation(line: 0, scope: !13324)
!13330 = !DILocation(line: 585, column: 13, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13324, file: !695, line: 585, column: 7)
!13332 = !{!13131, !840, i64 52}
!13333 = !DILocation(line: 585, column: 28, scope: !13331)
!13334 = !DILocation(line: 585, column: 16, scope: !13331)
!13335 = !DILocation(line: 585, column: 45, scope: !13331)
!13336 = !DILocation(line: 596, column: 3, scope: !13324)
!13337 = distinct !DISubprogram(name: "DAC_ClearFlag", scope: !695, file: !695, line: 612, type: !897, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13338)
!13338 = !{!13339, !13340}
!13339 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13337, file: !695, line: 612, type: !20)
!13340 = !DILocalVariable(name: "DAC_FLAG", arg: 2, scope: !13337, file: !695, line: 612, type: !20)
!13341 = !DILocation(line: 0, scope: !13337)
!13342 = !DILocation(line: 619, column: 23, scope: !13337)
!13343 = !DILocation(line: 619, column: 11, scope: !13337)
!13344 = !DILocation(line: 620, column: 1, scope: !13337)
!13345 = distinct !DISubprogram(name: "DAC_GetITStatus", scope: !695, file: !695, line: 635, type: !3644, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13346)
!13346 = !{!13347, !13348, !13349, !13350}
!13347 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13345, file: !695, line: 635, type: !20)
!13348 = !DILocalVariable(name: "DAC_IT", arg: 2, scope: !13345, file: !695, line: 635, type: !20)
!13349 = !DILocalVariable(name: "bitstatus", scope: !13345, file: !695, line: 637, type: !1359)
!13350 = !DILocalVariable(name: "enablestatus", scope: !13345, file: !695, line: 638, type: !20)
!13351 = !DILocation(line: 0, scope: !13345)
!13352 = !DILocation(line: 645, column: 24, scope: !13345)
!13353 = !DILocation(line: 645, column: 37, scope: !13345)
!13354 = !DILocation(line: 645, column: 27, scope: !13345)
!13355 = !DILocation(line: 648, column: 14, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13345, file: !695, line: 648, column: 7)
!13357 = !DILocation(line: 648, column: 17, scope: !13356)
!13358 = !DILocation(line: 648, column: 44, scope: !13356)
!13359 = !DILocation(line: 648, column: 64, scope: !13356)
!13360 = !DILocation(line: 659, column: 3, scope: !13345)
!13361 = distinct !DISubprogram(name: "DAC_ClearITPendingBit", scope: !695, file: !695, line: 675, type: !897, scopeLine: 676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !13362)
!13362 = !{!13363, !13364}
!13363 = !DILocalVariable(name: "DAC_Channel", arg: 1, scope: !13361, file: !695, line: 675, type: !20)
!13364 = !DILocalVariable(name: "DAC_IT", arg: 2, scope: !13361, file: !695, line: 675, type: !20)
!13365 = !DILocation(line: 0, scope: !13361)
!13366 = !DILocation(line: 682, column: 21, scope: !13361)
!13367 = !DILocation(line: 682, column: 11, scope: !13361)
!13368 = !DILocation(line: 683, column: 1, scope: !13361)
!13369 = distinct !DISubprogram(name: "I2C_DeInit", scope: !716, file: !716, line: 132, type: !13370, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13372)
!13370 = !DISubroutineType(types: !13371)
!13371 = !{null, !718}
!13372 = !{!13373}
!13373 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13369, file: !716, line: 132, type: !718)
!13374 = !DILocation(line: 0, scope: !13369)
!13375 = !DILocation(line: 137, column: 7, scope: !13369)
!13376 = !DILocation(line: 150, column: 3, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13378, file: !716, line: 145, column: 3)
!13378 = distinct !DILexicalBlock(scope: !13379, file: !716, line: 144, column: 12)
!13379 = distinct !DILexicalBlock(scope: !13369, file: !716, line: 137, column: 7)
!13380 = !DILocation(line: 159, column: 5, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13382, file: !716, line: 154, column: 5)
!13382 = distinct !DILexicalBlock(scope: !13383, file: !716, line: 153, column: 9)
!13383 = distinct !DILexicalBlock(scope: !13378, file: !716, line: 152, column: 3)
!13384 = !DILocation(line: 0, scope: !13379)
!13385 = !DILocation(line: 161, column: 1, scope: !13369)
!13386 = distinct !DISubprogram(name: "I2C_Init", scope: !716, file: !716, line: 175, type: !13387, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13400)
!13387 = !DISubroutineType(types: !13388)
!13388 = !{null, !718, !13389}
!13389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13390, size: 32)
!13390 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_InitTypeDef", file: !13391, line: 67, baseType: !13392)
!13391 = !DIFile(filename: "inc/peripherals/stm32f4xx_i2c.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!13392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13391, line: 48, size: 128, elements: !13393)
!13393 = !{!13394, !13395, !13396, !13397, !13398, !13399}
!13394 = !DIDerivedType(tag: DW_TAG_member, name: "I2C_ClockSpeed", scope: !13392, file: !13391, line: 50, baseType: !20, size: 32)
!13395 = !DIDerivedType(tag: DW_TAG_member, name: "I2C_Mode", scope: !13392, file: !13391, line: 53, baseType: !64, size: 16, offset: 32)
!13396 = !DIDerivedType(tag: DW_TAG_member, name: "I2C_DutyCycle", scope: !13392, file: !13391, line: 56, baseType: !64, size: 16, offset: 48)
!13397 = !DIDerivedType(tag: DW_TAG_member, name: "I2C_OwnAddress1", scope: !13392, file: !13391, line: 59, baseType: !64, size: 16, offset: 64)
!13398 = !DIDerivedType(tag: DW_TAG_member, name: "I2C_Ack", scope: !13392, file: !13391, line: 62, baseType: !64, size: 16, offset: 80)
!13399 = !DIDerivedType(tag: DW_TAG_member, name: "I2C_AcknowledgedAddress", scope: !13392, file: !13391, line: 65, baseType: !64, size: 16, offset: 96)
!13400 = !{!13401, !13402, !13403, !13404, !13405, !13406, !13407}
!13401 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13386, file: !716, line: 175, type: !718)
!13402 = !DILocalVariable(name: "I2C_InitStruct", arg: 2, scope: !13386, file: !716, line: 175, type: !13389)
!13403 = !DILocalVariable(name: "tmpreg", scope: !13386, file: !716, line: 177, type: !64)
!13404 = !DILocalVariable(name: "freqrange", scope: !13386, file: !716, line: 177, type: !64)
!13405 = !DILocalVariable(name: "result", scope: !13386, file: !716, line: 178, type: !64)
!13406 = !DILocalVariable(name: "pclk1", scope: !13386, file: !716, line: 179, type: !20)
!13407 = !DILocalVariable(name: "rcc_clocks", scope: !13386, file: !716, line: 180, type: !13408)
!13408 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClocksTypeDef", file: !1651, line: 48, baseType: !13409)
!13409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1651, line: 42, size: 128, elements: !13410)
!13410 = !{!13411, !13412, !13413, !13414}
!13411 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLK_Frequency", scope: !13409, file: !1651, line: 44, baseType: !20, size: 32)
!13412 = !DIDerivedType(tag: DW_TAG_member, name: "HCLK_Frequency", scope: !13409, file: !1651, line: 45, baseType: !20, size: 32, offset: 32)
!13413 = !DIDerivedType(tag: DW_TAG_member, name: "PCLK1_Frequency", scope: !13409, file: !1651, line: 46, baseType: !20, size: 32, offset: 64)
!13414 = !DIDerivedType(tag: DW_TAG_member, name: "PCLK2_Frequency", scope: !13409, file: !1651, line: 47, baseType: !20, size: 32, offset: 96)
!13415 = !DILocation(line: 0, scope: !13386)
!13416 = !DILocation(line: 180, column: 3, scope: !13386)
!13417 = !DILocation(line: 180, column: 22, scope: !13386)
!13418 = !DILocation(line: 192, column: 18, scope: !13386)
!13419 = !DILocation(line: 194, column: 10, scope: !13386)
!13420 = !DILocation(line: 196, column: 3, scope: !13386)
!13421 = !DILocation(line: 197, column: 22, scope: !13386)
!13422 = !DILocation(line: 199, column: 32, scope: !13386)
!13423 = !DILocation(line: 200, column: 10, scope: !13386)
!13424 = !DILocation(line: 202, column: 13, scope: !13386)
!13425 = !DILocation(line: 206, column: 9, scope: !13386)
!13426 = !DILocation(line: 206, column: 13, scope: !13386)
!13427 = !DILocation(line: 212, column: 23, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13386, file: !716, line: 212, column: 7)
!13429 = !DILocation(line: 212, column: 38, scope: !13428)
!13430 = !DILocation(line: 212, column: 7, scope: !13386)
!13431 = !DILocation(line: 215, column: 65, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13428, file: !716, line: 213, column: 3)
!13433 = !DILocation(line: 215, column: 31, scope: !13432)
!13434 = !DILocation(line: 215, column: 14, scope: !13432)
!13435 = !DILocation(line: 217, column: 9, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13432, file: !716, line: 217, column: 9)
!13437 = !DILocation(line: 217, column: 16, scope: !13436)
!13438 = !DILocation(line: 217, column: 9, scope: !13432)
!13439 = !DILocation(line: 226, column: 3, scope: !13432)
!13440 = !DILocation(line: 232, column: 25, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !716, line: 232, column: 9)
!13442 = distinct !DILexicalBlock(scope: !13428, file: !716, line: 231, column: 3)
!13443 = !DILocation(line: 232, column: 39, scope: !13441)
!13444 = !DILocation(line: 232, column: 9, scope: !13442)
!13445 = !DILocation(line: 235, column: 67, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13441, file: !716, line: 233, column: 5)
!13447 = !DILocation(line: 235, column: 33, scope: !13446)
!13448 = !DILocation(line: 235, column: 16, scope: !13446)
!13449 = !DILocation(line: 236, column: 5, scope: !13446)
!13450 = !DILocation(line: 240, column: 67, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13441, file: !716, line: 238, column: 5)
!13452 = !DILocation(line: 240, column: 33, scope: !13451)
!13453 = !DILocation(line: 242, column: 14, scope: !13451)
!13454 = !DILocation(line: 0, scope: !13441)
!13455 = !DILocation(line: 246, column: 17, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13442, file: !716, line: 246, column: 9)
!13457 = !DILocation(line: 246, column: 32, scope: !13456)
!13458 = !DILocation(line: 246, column: 9, scope: !13442)
!13459 = !DILocation(line: 252, column: 33, scope: !13442)
!13460 = !DILocation(line: 254, column: 42, scope: !13442)
!13461 = !DILocation(line: 254, column: 59, scope: !13442)
!13462 = !DILocation(line: 254, column: 19, scope: !13442)
!13463 = !DILocation(line: 0, scope: !13428)
!13464 = !DILocation(line: 258, column: 9, scope: !13386)
!13465 = !DILocation(line: 258, column: 13, scope: !13386)
!13466 = !DILocation(line: 260, column: 13, scope: !13386)
!13467 = !DILocation(line: 264, column: 18, scope: !13386)
!13468 = !DILocation(line: 266, column: 10, scope: !13386)
!13469 = !DILocation(line: 270, column: 50, scope: !13386)
!13470 = !DILocation(line: 270, column: 77, scope: !13386)
!13471 = !DILocation(line: 270, column: 59, scope: !13386)
!13472 = !DILocation(line: 270, column: 10, scope: !13386)
!13473 = !DILocation(line: 272, column: 13, scope: !13386)
!13474 = !DILocation(line: 276, column: 33, scope: !13386)
!13475 = !DILocation(line: 276, column: 75, scope: !13386)
!13476 = !DILocation(line: 276, column: 57, scope: !13386)
!13477 = !DILocation(line: 276, column: 9, scope: !13386)
!13478 = !DILocation(line: 276, column: 14, scope: !13386)
!13479 = !DILocation(line: 277, column: 1, scope: !13386)
!13480 = distinct !DISubprogram(name: "I2C_StructInit", scope: !716, file: !716, line: 284, type: !13481, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13483)
!13481 = !DISubroutineType(types: !13482)
!13482 = !{null, !13389}
!13483 = !{!13484}
!13484 = !DILocalVariable(name: "I2C_InitStruct", arg: 1, scope: !13480, file: !716, line: 284, type: !13389)
!13485 = !DILocation(line: 0, scope: !13480)
!13486 = !DILocation(line: 288, column: 19, scope: !13480)
!13487 = !DILocation(line: 288, column: 34, scope: !13480)
!13488 = !DILocation(line: 290, column: 19, scope: !13480)
!13489 = !DILocation(line: 290, column: 28, scope: !13480)
!13490 = !DILocation(line: 292, column: 19, scope: !13480)
!13491 = !DILocation(line: 292, column: 33, scope: !13480)
!13492 = !DILocation(line: 294, column: 19, scope: !13480)
!13493 = !DILocation(line: 294, column: 35, scope: !13480)
!13494 = !DILocation(line: 296, column: 19, scope: !13480)
!13495 = !DILocation(line: 296, column: 27, scope: !13480)
!13496 = !DILocation(line: 298, column: 19, scope: !13480)
!13497 = !DILocation(line: 298, column: 43, scope: !13480)
!13498 = !DILocation(line: 299, column: 1, scope: !13480)
!13499 = distinct !DISubprogram(name: "I2C_Cmd", scope: !716, file: !716, line: 308, type: !13500, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13502)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{null, !718, !856}
!13502 = !{!13503, !13504}
!13503 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13499, file: !716, line: 308, type: !718)
!13504 = !DILocalVariable(name: "NewState", arg: 2, scope: !13499, file: !716, line: 308, type: !856)
!13505 = !DILocation(line: 0, scope: !13499)
!13506 = !DILocation(line: 313, column: 16, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13499, file: !716, line: 313, column: 7)
!13508 = !DILocation(line: 0, scope: !13507)
!13509 = !DILocation(line: 313, column: 7, scope: !13499)
!13510 = !DILocation(line: 323, column: 1, scope: !13499)
!13511 = distinct !DISubprogram(name: "I2C_GenerateSTART", scope: !716, file: !716, line: 332, type: !13500, scopeLine: 333, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13512)
!13512 = !{!13513, !13514}
!13513 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13511, file: !716, line: 332, type: !718)
!13514 = !DILocalVariable(name: "NewState", arg: 2, scope: !13511, file: !716, line: 332, type: !856)
!13515 = !DILocation(line: 0, scope: !13511)
!13516 = !DILocation(line: 337, column: 16, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13511, file: !716, line: 337, column: 7)
!13518 = !DILocation(line: 0, scope: !13517)
!13519 = !DILocation(line: 337, column: 7, scope: !13511)
!13520 = !DILocation(line: 347, column: 1, scope: !13511)
!13521 = distinct !DISubprogram(name: "I2C_GenerateSTOP", scope: !716, file: !716, line: 356, type: !13500, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13522)
!13522 = !{!13523, !13524}
!13523 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13521, file: !716, line: 356, type: !718)
!13524 = !DILocalVariable(name: "NewState", arg: 2, scope: !13521, file: !716, line: 356, type: !856)
!13525 = !DILocation(line: 0, scope: !13521)
!13526 = !DILocation(line: 361, column: 16, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13521, file: !716, line: 361, column: 7)
!13528 = !DILocation(line: 0, scope: !13527)
!13529 = !DILocation(line: 361, column: 7, scope: !13521)
!13530 = !DILocation(line: 371, column: 1, scope: !13521)
!13531 = distinct !DISubprogram(name: "I2C_Send7bitAddress", scope: !716, file: !716, line: 384, type: !13532, scopeLine: 385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13534)
!13532 = !DISubroutineType(types: !13533)
!13533 = !{null, !718, !60, !60}
!13534 = !{!13535, !13536, !13537}
!13535 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13531, file: !716, line: 384, type: !718)
!13536 = !DILocalVariable(name: "Address", arg: 2, scope: !13531, file: !716, line: 384, type: !60)
!13537 = !DILocalVariable(name: "I2C_Direction", arg: 3, scope: !13531, file: !716, line: 384, type: !60)
!13538 = !DILocation(line: 0, scope: !13531)
!13539 = !DILocation(line: 390, column: 21, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13531, file: !716, line: 390, column: 7)
!13541 = !DILocation(line: 390, column: 7, scope: !13531)
!13542 = !DILocation(line: 401, column: 14, scope: !13531)
!13543 = !DILocation(line: 401, column: 9, scope: !13531)
!13544 = !DILocation(line: 401, column: 12, scope: !13531)
!13545 = !DILocation(line: 402, column: 1, scope: !13531)
!13546 = distinct !DISubprogram(name: "I2C_AcknowledgeConfig", scope: !716, file: !716, line: 411, type: !13500, scopeLine: 412, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13547)
!13547 = !{!13548, !13549}
!13548 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13546, file: !716, line: 411, type: !718)
!13549 = !DILocalVariable(name: "NewState", arg: 2, scope: !13546, file: !716, line: 411, type: !856)
!13550 = !DILocation(line: 0, scope: !13546)
!13551 = !DILocation(line: 416, column: 16, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13546, file: !716, line: 416, column: 7)
!13553 = !DILocation(line: 0, scope: !13552)
!13554 = !DILocation(line: 416, column: 7, scope: !13546)
!13555 = !DILocation(line: 426, column: 1, scope: !13546)
!13556 = distinct !DISubprogram(name: "I2C_OwnAddress2Config", scope: !716, file: !716, line: 434, type: !13557, scopeLine: 435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13559)
!13557 = !DISubroutineType(types: !13558)
!13558 = !{null, !718, !60}
!13559 = !{!13560, !13561, !13562}
!13560 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13556, file: !716, line: 434, type: !718)
!13561 = !DILocalVariable(name: "Address", arg: 2, scope: !13556, file: !716, line: 434, type: !60)
!13562 = !DILocalVariable(name: "tmpreg", scope: !13556, file: !716, line: 436, type: !64)
!13563 = !DILocation(line: 0, scope: !13556)
!13564 = !DILocation(line: 442, column: 18, scope: !13556)
!13565 = !DILocation(line: 445, column: 10, scope: !13556)
!13566 = !DILocation(line: 448, column: 42, scope: !13556)
!13567 = !DILocation(line: 448, column: 13, scope: !13556)
!13568 = !DILocation(line: 448, column: 10, scope: !13556)
!13569 = !DILocation(line: 451, column: 14, scope: !13556)
!13570 = !DILocation(line: 452, column: 1, scope: !13556)
!13571 = distinct !DISubprogram(name: "I2C_DualAddressCmd", scope: !716, file: !716, line: 461, type: !13500, scopeLine: 462, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13572)
!13572 = !{!13573, !13574}
!13573 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13571, file: !716, line: 461, type: !718)
!13574 = !DILocalVariable(name: "NewState", arg: 2, scope: !13571, file: !716, line: 461, type: !856)
!13575 = !DILocation(line: 0, scope: !13571)
!13576 = !DILocation(line: 466, column: 16, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13571, file: !716, line: 466, column: 7)
!13578 = !DILocation(line: 0, scope: !13577)
!13579 = !DILocation(line: 466, column: 7, scope: !13571)
!13580 = !DILocation(line: 476, column: 1, scope: !13571)
!13581 = distinct !DISubprogram(name: "I2C_GeneralCallCmd", scope: !716, file: !716, line: 485, type: !13500, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13582)
!13582 = !{!13583, !13584}
!13583 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13581, file: !716, line: 485, type: !718)
!13584 = !DILocalVariable(name: "NewState", arg: 2, scope: !13581, file: !716, line: 485, type: !856)
!13585 = !DILocation(line: 0, scope: !13581)
!13586 = !DILocation(line: 490, column: 16, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13581, file: !716, line: 490, column: 7)
!13588 = !DILocation(line: 0, scope: !13587)
!13589 = !DILocation(line: 490, column: 7, scope: !13581)
!13590 = !DILocation(line: 500, column: 1, scope: !13581)
!13591 = distinct !DISubprogram(name: "I2C_SoftwareResetCmd", scope: !716, file: !716, line: 511, type: !13500, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13592)
!13592 = !{!13593, !13594}
!13593 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13591, file: !716, line: 511, type: !718)
!13594 = !DILocalVariable(name: "NewState", arg: 2, scope: !13591, file: !716, line: 511, type: !856)
!13595 = !DILocation(line: 0, scope: !13591)
!13596 = !DILocation(line: 516, column: 16, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13591, file: !716, line: 516, column: 7)
!13598 = !DILocation(line: 0, scope: !13597)
!13599 = !DILocation(line: 516, column: 7, scope: !13591)
!13600 = !DILocation(line: 526, column: 1, scope: !13591)
!13601 = distinct !DISubprogram(name: "I2C_StretchClockCmd", scope: !716, file: !716, line: 535, type: !13500, scopeLine: 536, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13602)
!13602 = !{!13603, !13604}
!13603 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13601, file: !716, line: 535, type: !718)
!13604 = !DILocalVariable(name: "NewState", arg: 2, scope: !13601, file: !716, line: 535, type: !856)
!13605 = !DILocation(line: 0, scope: !13601)
!13606 = !DILocation(line: 540, column: 16, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13601, file: !716, line: 540, column: 7)
!13608 = !DILocation(line: 0, scope: !13607)
!13609 = !DILocation(line: 540, column: 7, scope: !13601)
!13610 = !DILocation(line: 550, column: 1, scope: !13601)
!13611 = distinct !DISubprogram(name: "I2C_FastModeDutyCycleConfig", scope: !716, file: !716, line: 561, type: !13612, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13614)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{null, !718, !64}
!13614 = !{!13615, !13616}
!13615 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13611, file: !716, line: 561, type: !718)
!13616 = !DILocalVariable(name: "I2C_DutyCycle", arg: 2, scope: !13611, file: !716, line: 561, type: !64)
!13617 = !DILocation(line: 0, scope: !13611)
!13618 = !DILocation(line: 566, column: 21, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13611, file: !716, line: 566, column: 7)
!13620 = !DILocation(line: 0, scope: !13619)
!13621 = !DILocation(line: 566, column: 7, scope: !13611)
!13622 = !DILocation(line: 576, column: 1, scope: !13611)
!13623 = distinct !DISubprogram(name: "I2C_NACKPositionConfig", scope: !716, file: !716, line: 599, type: !13612, scopeLine: 600, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13624)
!13624 = !{!13625, !13626}
!13625 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13623, file: !716, line: 599, type: !718)
!13626 = !DILocalVariable(name: "I2C_NACKPosition", arg: 2, scope: !13623, file: !716, line: 599, type: !64)
!13627 = !DILocation(line: 0, scope: !13623)
!13628 = !DILocation(line: 606, column: 24, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13623, file: !716, line: 606, column: 7)
!13630 = !DILocation(line: 0, scope: !13629)
!13631 = !DILocation(line: 606, column: 7, scope: !13623)
!13632 = !DILocation(line: 616, column: 1, scope: !13623)
!13633 = distinct !DISubprogram(name: "I2C_SMBusAlertConfig", scope: !716, file: !716, line: 627, type: !13612, scopeLine: 628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13634)
!13634 = !{!13635, !13636}
!13635 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13633, file: !716, line: 627, type: !718)
!13636 = !DILocalVariable(name: "I2C_SMBusAlert", arg: 2, scope: !13633, file: !716, line: 627, type: !64)
!13637 = !DILocation(line: 0, scope: !13633)
!13638 = !DILocation(line: 632, column: 22, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13633, file: !716, line: 632, column: 7)
!13640 = !DILocation(line: 0, scope: !13639)
!13641 = !DILocation(line: 632, column: 7, scope: !13633)
!13642 = !DILocation(line: 642, column: 1, scope: !13633)
!13643 = distinct !DISubprogram(name: "I2C_ARPCmd", scope: !716, file: !716, line: 651, type: !13500, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13644)
!13644 = !{!13645, !13646}
!13645 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13643, file: !716, line: 651, type: !718)
!13646 = !DILocalVariable(name: "NewState", arg: 2, scope: !13643, file: !716, line: 651, type: !856)
!13647 = !DILocation(line: 0, scope: !13643)
!13648 = !DILocation(line: 656, column: 16, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13643, file: !716, line: 656, column: 7)
!13650 = !DILocation(line: 0, scope: !13649)
!13651 = !DILocation(line: 656, column: 7, scope: !13643)
!13652 = !DILocation(line: 666, column: 1, scope: !13643)
!13653 = distinct !DISubprogram(name: "I2C_SendData", scope: !716, file: !716, line: 689, type: !13557, scopeLine: 690, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13654)
!13654 = !{!13655, !13656}
!13655 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13653, file: !716, line: 689, type: !718)
!13656 = !DILocalVariable(name: "Data", arg: 2, scope: !13653, file: !716, line: 689, type: !60)
!13657 = !DILocation(line: 0, scope: !13653)
!13658 = !DILocation(line: 694, column: 14, scope: !13653)
!13659 = !DILocation(line: 694, column: 9, scope: !13653)
!13660 = !DILocation(line: 694, column: 12, scope: !13653)
!13661 = !DILocation(line: 695, column: 1, scope: !13653)
!13662 = distinct !DISubprogram(name: "I2C_ReceiveData", scope: !716, file: !716, line: 702, type: !13663, scopeLine: 703, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13665)
!13663 = !DISubroutineType(types: !13664)
!13664 = !{!60, !718}
!13665 = !{!13666}
!13666 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13662, file: !716, line: 702, type: !718)
!13667 = !DILocation(line: 0, scope: !13662)
!13668 = !DILocation(line: 707, column: 25, scope: !13662)
!13669 = !DILocation(line: 707, column: 10, scope: !13662)
!13670 = !DILocation(line: 707, column: 3, scope: !13662)
!13671 = distinct !DISubprogram(name: "I2C_TransmitPEC", scope: !716, file: !716, line: 733, type: !13500, scopeLine: 734, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13672)
!13672 = !{!13673, !13674}
!13673 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13671, file: !716, line: 733, type: !718)
!13674 = !DILocalVariable(name: "NewState", arg: 2, scope: !13671, file: !716, line: 733, type: !856)
!13675 = !DILocation(line: 0, scope: !13671)
!13676 = !DILocation(line: 738, column: 16, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13671, file: !716, line: 738, column: 7)
!13678 = !DILocation(line: 0, scope: !13677)
!13679 = !DILocation(line: 738, column: 7, scope: !13671)
!13680 = !DILocation(line: 748, column: 1, scope: !13671)
!13681 = distinct !DISubprogram(name: "I2C_PECPositionConfig", scope: !716, file: !716, line: 764, type: !13612, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13682)
!13682 = !{!13683, !13684}
!13683 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13681, file: !716, line: 764, type: !718)
!13684 = !DILocalVariable(name: "I2C_PECPosition", arg: 2, scope: !13681, file: !716, line: 764, type: !64)
!13685 = !DILocation(line: 0, scope: !13681)
!13686 = !DILocation(line: 769, column: 23, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13681, file: !716, line: 769, column: 7)
!13688 = !DILocation(line: 0, scope: !13687)
!13689 = !DILocation(line: 769, column: 7, scope: !13681)
!13690 = !DILocation(line: 779, column: 1, scope: !13681)
!13691 = distinct !DISubprogram(name: "I2C_CalculatePEC", scope: !716, file: !716, line: 788, type: !13500, scopeLine: 789, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13692)
!13692 = !{!13693, !13694}
!13693 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13691, file: !716, line: 788, type: !718)
!13694 = !DILocalVariable(name: "NewState", arg: 2, scope: !13691, file: !716, line: 788, type: !856)
!13695 = !DILocation(line: 0, scope: !13691)
!13696 = !DILocation(line: 793, column: 16, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13691, file: !716, line: 793, column: 7)
!13698 = !DILocation(line: 0, scope: !13697)
!13699 = !DILocation(line: 793, column: 7, scope: !13691)
!13700 = !DILocation(line: 803, column: 1, scope: !13691)
!13701 = distinct !DISubprogram(name: "I2C_GetPEC", scope: !716, file: !716, line: 810, type: !13663, scopeLine: 811, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13702)
!13702 = !{!13703}
!13703 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13701, file: !716, line: 810, type: !718)
!13704 = !DILocation(line: 0, scope: !13701)
!13705 = !DILocation(line: 815, column: 18, scope: !13701)
!13706 = !{!8767, !2880, i64 24}
!13707 = !DILocation(line: 815, column: 23, scope: !13701)
!13708 = !DILocation(line: 815, column: 10, scope: !13701)
!13709 = !DILocation(line: 815, column: 3, scope: !13701)
!13710 = distinct !DISubprogram(name: "I2C_DMACmd", scope: !716, file: !716, line: 843, type: !13500, scopeLine: 844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13711)
!13711 = !{!13712, !13713}
!13712 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13710, file: !716, line: 843, type: !718)
!13713 = !DILocalVariable(name: "NewState", arg: 2, scope: !13710, file: !716, line: 843, type: !856)
!13714 = !DILocation(line: 0, scope: !13710)
!13715 = !DILocation(line: 848, column: 16, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13710, file: !716, line: 848, column: 7)
!13717 = !DILocation(line: 0, scope: !13716)
!13718 = !DILocation(line: 848, column: 7, scope: !13710)
!13719 = !DILocation(line: 858, column: 1, scope: !13710)
!13720 = distinct !DISubprogram(name: "I2C_DMALastTransferCmd", scope: !716, file: !716, line: 867, type: !13500, scopeLine: 868, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13721)
!13721 = !{!13722, !13723}
!13722 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13720, file: !716, line: 867, type: !718)
!13723 = !DILocalVariable(name: "NewState", arg: 2, scope: !13720, file: !716, line: 867, type: !856)
!13724 = !DILocation(line: 0, scope: !13720)
!13725 = !DILocation(line: 872, column: 16, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13720, file: !716, line: 872, column: 7)
!13727 = !DILocation(line: 0, scope: !13726)
!13728 = !DILocation(line: 872, column: 7, scope: !13720)
!13729 = !DILocation(line: 882, column: 1, scope: !13720)
!13730 = distinct !DISubprogram(name: "I2C_ReadRegister", scope: !716, file: !716, line: 1005, type: !13731, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13733)
!13731 = !DISubroutineType(types: !13732)
!13732 = !{!64, !718, !60}
!13733 = !{!13734, !13735, !13736}
!13734 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13730, file: !716, line: 1005, type: !718)
!13735 = !DILocalVariable(name: "I2C_Register", arg: 2, scope: !13730, file: !716, line: 1005, type: !60)
!13736 = !DILocalVariable(name: "tmp", scope: !13730, file: !716, line: 1007, type: !27)
!13737 = !DILocation(line: 0, scope: !13730)
!13738 = !DILocation(line: 1007, column: 3, scope: !13730)
!13739 = !DILocation(line: 1007, column: 17, scope: !13730)
!13740 = !DILocation(line: 1013, column: 9, scope: !13730)
!13741 = !DILocation(line: 1013, column: 7, scope: !13730)
!13742 = !DILocation(line: 1014, column: 10, scope: !13730)
!13743 = !DILocation(line: 1014, column: 7, scope: !13730)
!13744 = !DILocation(line: 1017, column: 30, scope: !13730)
!13745 = !DILocation(line: 1017, column: 12, scope: !13730)
!13746 = !DILocation(line: 1017, column: 11, scope: !13730)
!13747 = !DILocation(line: 1018, column: 1, scope: !13730)
!13748 = !DILocation(line: 1017, column: 3, scope: !13730)
!13749 = distinct !DISubprogram(name: "I2C_ITConfig", scope: !716, file: !716, line: 1032, type: !13750, scopeLine: 1033, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13752)
!13750 = !DISubroutineType(types: !13751)
!13751 = !{null, !718, !64, !856}
!13752 = !{!13753, !13754, !13755}
!13753 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13749, file: !716, line: 1032, type: !718)
!13754 = !DILocalVariable(name: "I2C_IT", arg: 2, scope: !13749, file: !716, line: 1032, type: !64)
!13755 = !DILocalVariable(name: "NewState", arg: 3, scope: !13749, file: !716, line: 1032, type: !856)
!13756 = !DILocation(line: 0, scope: !13749)
!13757 = !DILocation(line: 1039, column: 16, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13749, file: !716, line: 1039, column: 7)
!13759 = !DILocation(line: 1039, column: 7, scope: !13749)
!13760 = !DILocation(line: 1042, column: 11, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13758, file: !716, line: 1040, column: 3)
!13762 = !DILocation(line: 1042, column: 15, scope: !13761)
!13763 = !DILocation(line: 1043, column: 3, scope: !13761)
!13764 = !DILocation(line: 1047, column: 28, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13758, file: !716, line: 1045, column: 3)
!13766 = !DILocation(line: 1047, column: 11, scope: !13765)
!13767 = !DILocation(line: 1047, column: 15, scope: !13765)
!13768 = !DILocation(line: 1049, column: 1, scope: !13749)
!13769 = distinct !DISubprogram(name: "I2C_CheckEvent", scope: !716, file: !716, line: 1091, type: !13770, scopeLine: 1092, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13772)
!13770 = !DISubroutineType(types: !13771)
!13771 = !{!358, !718, !20}
!13772 = !{!13773, !13774, !13775, !13776, !13777, !13778}
!13773 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13769, file: !716, line: 1091, type: !718)
!13774 = !DILocalVariable(name: "I2C_EVENT", arg: 2, scope: !13769, file: !716, line: 1091, type: !20)
!13775 = !DILocalVariable(name: "lastevent", scope: !13769, file: !716, line: 1093, type: !20)
!13776 = !DILocalVariable(name: "flag1", scope: !13769, file: !716, line: 1094, type: !20)
!13777 = !DILocalVariable(name: "flag2", scope: !13769, file: !716, line: 1094, type: !20)
!13778 = !DILocalVariable(name: "status", scope: !13769, file: !716, line: 1095, type: !358)
!13779 = !DILocation(line: 0, scope: !13769)
!13780 = !DILocation(line: 1102, column: 17, scope: !13769)
!13781 = !{!8767, !2880, i64 20}
!13782 = !DILocation(line: 1102, column: 11, scope: !13769)
!13783 = !DILocation(line: 1103, column: 17, scope: !13769)
!13784 = !DILocation(line: 1103, column: 11, scope: !13769)
!13785 = !DILocation(line: 1104, column: 17, scope: !13769)
!13786 = !DILocation(line: 1107, column: 31, scope: !13769)
!13787 = !DILocation(line: 1110, column: 18, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13769, file: !716, line: 1110, column: 7)
!13789 = !DILocation(line: 1110, column: 31, scope: !13788)
!13790 = !DILocation(line: 1121, column: 3, scope: !13769)
!13791 = distinct !DISubprogram(name: "I2C_GetLastEvent", scope: !716, file: !716, line: 1139, type: !13792, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13794)
!13792 = !DISubroutineType(types: !13793)
!13793 = !{!20, !718}
!13794 = !{!13795, !13796, !13797, !13798}
!13795 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13791, file: !716, line: 1139, type: !718)
!13796 = !DILocalVariable(name: "lastevent", scope: !13791, file: !716, line: 1141, type: !20)
!13797 = !DILocalVariable(name: "flag1", scope: !13791, file: !716, line: 1142, type: !20)
!13798 = !DILocalVariable(name: "flag2", scope: !13791, file: !716, line: 1142, type: !20)
!13799 = !DILocation(line: 0, scope: !13791)
!13800 = !DILocation(line: 1148, column: 17, scope: !13791)
!13801 = !DILocation(line: 1148, column: 11, scope: !13791)
!13802 = !DILocation(line: 1149, column: 17, scope: !13791)
!13803 = !DILocation(line: 1149, column: 11, scope: !13791)
!13804 = !DILocation(line: 1150, column: 17, scope: !13791)
!13805 = !DILocation(line: 1153, column: 31, scope: !13791)
!13806 = !DILocation(line: 1156, column: 3, scope: !13791)
!13807 = distinct !DISubprogram(name: "I2C_GetFlagStatus", scope: !716, file: !716, line: 1194, type: !13808, scopeLine: 1195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13810)
!13808 = !DISubroutineType(types: !13809)
!13809 = !{!1276, !718, !20}
!13810 = !{!13811, !13812, !13813, !13814, !13815}
!13811 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13807, file: !716, line: 1194, type: !718)
!13812 = !DILocalVariable(name: "I2C_FLAG", arg: 2, scope: !13807, file: !716, line: 1194, type: !20)
!13813 = !DILocalVariable(name: "bitstatus", scope: !13807, file: !716, line: 1196, type: !1276)
!13814 = !DILocalVariable(name: "i2creg", scope: !13807, file: !716, line: 1197, type: !27)
!13815 = !DILocalVariable(name: "i2cxbase", scope: !13807, file: !716, line: 1197, type: !27)
!13816 = !DILocation(line: 0, scope: !13807)
!13817 = !DILocation(line: 1197, column: 3, scope: !13807)
!13818 = !DILocation(line: 1197, column: 17, scope: !13807)
!13819 = !DILocation(line: 1197, column: 29, scope: !13807)
!13820 = !DILocation(line: 1204, column: 14, scope: !13807)
!13821 = !DILocation(line: 1204, column: 12, scope: !13807)
!13822 = !DILocation(line: 1207, column: 21, scope: !13807)
!13823 = !DILocation(line: 1207, column: 10, scope: !13807)
!13824 = !DILocation(line: 1210, column: 12, scope: !13807)
!13825 = !DILocation(line: 1212, column: 6, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13807, file: !716, line: 1212, column: 6)
!13827 = !DILocation(line: 1212, column: 13, scope: !13826)
!13828 = !DILocation(line: 1212, column: 6, scope: !13807)
!13829 = !DILocation(line: 1215, column: 14, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13826, file: !716, line: 1213, column: 3)
!13831 = !DILocation(line: 1216, column: 3, scope: !13830)
!13832 = !DILocation(line: 1220, column: 36, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13826, file: !716, line: 1218, column: 3)
!13834 = !DILocation(line: 1222, column: 14, scope: !13833)
!13835 = !DILocation(line: 1225, column: 26, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !13807, file: !716, line: 1225, column: 6)
!13837 = !DILocation(line: 1225, column: 9, scope: !13836)
!13838 = !DILocation(line: 1225, column: 8, scope: !13836)
!13839 = !DILocation(line: 1225, column: 36, scope: !13836)
!13840 = !DILocation(line: 1225, column: 48, scope: !13836)
!13841 = !DILocation(line: 1238, column: 1, scope: !13807)
!13842 = !DILocation(line: 1237, column: 3, scope: !13807)
!13843 = distinct !DISubprogram(name: "I2C_ClearFlag", scope: !716, file: !716, line: 1271, type: !13844, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13846)
!13844 = !DISubroutineType(types: !13845)
!13845 = !{null, !718, !20}
!13846 = !{!13847, !13848, !13849}
!13847 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13843, file: !716, line: 1271, type: !718)
!13848 = !DILocalVariable(name: "I2C_FLAG", arg: 2, scope: !13843, file: !716, line: 1271, type: !20)
!13849 = !DILocalVariable(name: "flagpos", scope: !13843, file: !716, line: 1273, type: !20)
!13850 = !DILocation(line: 0, scope: !13843)
!13851 = !DILocation(line: 1280, column: 15, scope: !13843)
!13852 = !DILocation(line: 1280, column: 9, scope: !13843)
!13853 = !DILocation(line: 1280, column: 13, scope: !13843)
!13854 = !DILocation(line: 1281, column: 1, scope: !13843)
!13855 = distinct !DISubprogram(name: "I2C_GetITStatus", scope: !716, file: !716, line: 1305, type: !13856, scopeLine: 1306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13858)
!13856 = !DISubroutineType(types: !13857)
!13857 = !{!1359, !718, !20}
!13858 = !{!13859, !13860, !13861, !13862}
!13859 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13855, file: !716, line: 1305, type: !718)
!13860 = !DILocalVariable(name: "I2C_IT", arg: 2, scope: !13855, file: !716, line: 1305, type: !20)
!13861 = !DILocalVariable(name: "bitstatus", scope: !13855, file: !716, line: 1307, type: !1359)
!13862 = !DILocalVariable(name: "enablestatus", scope: !13855, file: !716, line: 1308, type: !20)
!13863 = !DILocation(line: 0, scope: !13855)
!13864 = !DILocation(line: 1315, column: 51, scope: !13855)
!13865 = !DILocation(line: 1315, column: 67, scope: !13855)
!13866 = !DILocation(line: 1315, column: 60, scope: !13855)
!13867 = !DILocation(line: 1315, column: 58, scope: !13855)
!13868 = !DILocation(line: 1321, column: 15, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13855, file: !716, line: 1321, column: 7)
!13870 = !DILocation(line: 1321, column: 9, scope: !13869)
!13871 = !DILocation(line: 1321, column: 19, scope: !13869)
!13872 = !DILocation(line: 1321, column: 29, scope: !13869)
!13873 = !DILocation(line: 1321, column: 49, scope: !13869)
!13874 = !DILocation(line: 1332, column: 3, scope: !13855)
!13875 = distinct !DISubprogram(name: "I2C_ClearITPendingBit", scope: !716, file: !716, line: 1365, type: !13844, scopeLine: 1366, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !715, retainedNodes: !13876)
!13876 = !{!13877, !13878, !13879}
!13877 = !DILocalVariable(name: "I2Cx", arg: 1, scope: !13875, file: !716, line: 1365, type: !718)
!13878 = !DILocalVariable(name: "I2C_IT", arg: 2, scope: !13875, file: !716, line: 1365, type: !20)
!13879 = !DILocalVariable(name: "flagpos", scope: !13875, file: !716, line: 1367, type: !20)
!13880 = !DILocation(line: 0, scope: !13875)
!13881 = !DILocation(line: 1376, column: 15, scope: !13875)
!13882 = !DILocation(line: 1376, column: 9, scope: !13875)
!13883 = !DILocation(line: 1376, column: 13, scope: !13875)
!13884 = !DILocation(line: 1377, column: 1, scope: !13875)
!13885 = distinct !DISubprogram(name: "WWDG_DeInit", scope: !741, file: !741, line: 134, type: !1415, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !740, retainedNodes: !361)
!13886 = !DILocation(line: 136, column: 3, scope: !13885)
!13887 = !DILocation(line: 137, column: 3, scope: !13885)
!13888 = !DILocation(line: 138, column: 1, scope: !13885)
!13889 = distinct !DISubprogram(name: "WWDG_SetPrescaler", scope: !741, file: !741, line: 150, type: !831, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !740, retainedNodes: !13890)
!13890 = !{!13891, !13892}
!13891 = !DILocalVariable(name: "WWDG_Prescaler", arg: 1, scope: !13889, file: !741, line: 150, type: !20)
!13892 = !DILocalVariable(name: "tmpreg", scope: !13889, file: !741, line: 152, type: !20)
!13893 = !DILocation(line: 0, scope: !13889)
!13894 = !DILocation(line: 156, column: 18, scope: !13889)
!13895 = !DILocation(line: 156, column: 22, scope: !13889)
!13896 = !DILocation(line: 158, column: 10, scope: !13889)
!13897 = !DILocation(line: 160, column: 13, scope: !13889)
!13898 = !DILocation(line: 161, column: 1, scope: !13889)
!13899 = distinct !DISubprogram(name: "WWDG_SetWindowValue", scope: !741, file: !741, line: 169, type: !1430, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !740, retainedNodes: !13900)
!13900 = !{!13901, !13902}
!13901 = !DILocalVariable(name: "WindowValue", arg: 1, scope: !13899, file: !741, line: 169, type: !60)
!13902 = !DILocalVariable(name: "tmpreg", scope: !13899, file: !741, line: 171, type: !27)
!13903 = !DILocation(line: 0, scope: !13899)
!13904 = !DILocation(line: 171, column: 3, scope: !13899)
!13905 = !DILocation(line: 171, column: 17, scope: !13899)
!13906 = !DILocation(line: 177, column: 18, scope: !13899)
!13907 = !DILocation(line: 177, column: 22, scope: !13899)
!13908 = !DILocation(line: 177, column: 10, scope: !13899)
!13909 = !DILocation(line: 180, column: 25, scope: !13899)
!13910 = !DILocation(line: 180, column: 10, scope: !13899)
!13911 = !DILocation(line: 183, column: 15, scope: !13899)
!13912 = !DILocation(line: 183, column: 13, scope: !13899)
!13913 = !DILocation(line: 184, column: 1, scope: !13899)
!13914 = distinct !DISubprogram(name: "WWDG_EnableIT", scope: !741, file: !741, line: 192, type: !1415, scopeLine: 193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !740, retainedNodes: !361)
!13915 = !DILocation(line: 194, column: 33, scope: !13914)
!13916 = !DILocation(line: 195, column: 1, scope: !13914)
!13917 = distinct !DISubprogram(name: "WWDG_SetCounter", scope: !741, file: !741, line: 204, type: !1430, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !740, retainedNodes: !13918)
!13918 = !{!13919}
!13919 = !DILocalVariable(name: "Counter", arg: 1, scope: !13917, file: !741, line: 204, type: !60)
!13920 = !DILocation(line: 0, scope: !13917)
!13921 = !DILocation(line: 210, column: 22, scope: !13917)
!13922 = !DILocation(line: 210, column: 12, scope: !13917)
!13923 = !DILocation(line: 211, column: 1, scope: !13917)
!13924 = distinct !DISubprogram(name: "WWDG_Enable", scope: !741, file: !741, line: 235, type: !1430, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !740, retainedNodes: !13925)
!13925 = !{!13926}
!13926 = !DILocalVariable(name: "Counter", arg: 1, scope: !13924, file: !741, line: 235, type: !60)
!13927 = !DILocation(line: 0, scope: !13924)
!13928 = !DILocation(line: 239, column: 27, scope: !13924)
!13929 = !DILocation(line: 239, column: 12, scope: !13924)
!13930 = !DILocation(line: 240, column: 1, scope: !13924)
!13931 = distinct !DISubprogram(name: "WWDG_GetFlagStatus", scope: !741, file: !741, line: 262, type: !4861, scopeLine: 263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !740, retainedNodes: !13932)
!13932 = !{!13933}
!13933 = !DILocalVariable(name: "bitstatus", scope: !13931, file: !741, line: 264, type: !1276)
!13934 = !DILocation(line: 0, scope: !13931)
!13935 = !DILocation(line: 266, column: 14, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13931, file: !741, line: 266, column: 7)
!13937 = !DILocation(line: 266, column: 18, scope: !13936)
!13938 = !DILocation(line: 274, column: 3, scope: !13931)
!13939 = distinct !DISubprogram(name: "WWDG_ClearFlag", scope: !741, file: !741, line: 282, type: !1415, scopeLine: 283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !740, retainedNodes: !361)
!13940 = !DILocation(line: 284, column: 12, scope: !13939)
!13941 = !DILocation(line: 285, column: 1, scope: !13939)
!13942 = distinct !DISubprogram(name: "DBGMCU_GetREVID", scope: !751, file: !751, line: 52, type: !2372, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !361)
!13943 = !DILocation(line: 54, column: 19, scope: !13942)
!13944 = !DILocation(line: 54, column: 26, scope: !13942)
!13945 = !DILocation(line: 54, column: 4, scope: !13942)
!13946 = distinct !DISubprogram(name: "DBGMCU_GetDEVID", scope: !751, file: !751, line: 62, type: !2372, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !361)
!13947 = !DILocation(line: 64, column: 19, scope: !13946)
!13948 = !DILocation(line: 64, column: 26, scope: !13946)
!13949 = !DILocation(line: 64, column: 4, scope: !13946)
!13950 = distinct !DISubprogram(name: "DBGMCU_Config", scope: !751, file: !751, line: 78, type: !1743, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !13951)
!13951 = !{!13952, !13953}
!13952 = !DILocalVariable(name: "DBGMCU_Periph", arg: 1, scope: !13950, file: !751, line: 78, type: !20)
!13953 = !DILocalVariable(name: "NewState", arg: 2, scope: !13950, file: !751, line: 78, type: !856)
!13954 = !DILocation(line: 0, scope: !13950)
!13955 = !DILocation(line: 83, column: 16, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13950, file: !751, line: 83, column: 7)
!13957 = !DILocation(line: 83, column: 7, scope: !13950)
!13958 = !DILocation(line: 85, column: 16, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13956, file: !751, line: 84, column: 3)
!13960 = !DILocation(line: 86, column: 3, scope: !13959)
!13961 = !DILocation(line: 89, column: 19, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13956, file: !751, line: 88, column: 3)
!13963 = !DILocation(line: 89, column: 16, scope: !13962)
!13964 = !DILocation(line: 0, scope: !13956)
!13965 = !DILocation(line: 91, column: 1, scope: !13950)
!13966 = distinct !DISubprogram(name: "DBGMCU_APB1PeriphConfig", scope: !751, file: !751, line: 117, type: !1743, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !13967)
!13967 = !{!13968, !13969}
!13968 = !DILocalVariable(name: "DBGMCU_Periph", arg: 1, scope: !13966, file: !751, line: 117, type: !20)
!13969 = !DILocalVariable(name: "NewState", arg: 2, scope: !13966, file: !751, line: 117, type: !856)
!13970 = !DILocation(line: 0, scope: !13966)
!13971 = !DILocation(line: 123, column: 16, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13966, file: !751, line: 123, column: 7)
!13973 = !DILocation(line: 123, column: 7, scope: !13966)
!13974 = !DILocation(line: 125, column: 20, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13972, file: !751, line: 124, column: 3)
!13976 = !DILocation(line: 126, column: 3, scope: !13975)
!13977 = !DILocation(line: 129, column: 23, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13972, file: !751, line: 128, column: 3)
!13979 = !DILocation(line: 129, column: 20, scope: !13978)
!13980 = !DILocation(line: 0, scope: !13972)
!13981 = !DILocation(line: 131, column: 1, scope: !13966)
!13982 = distinct !DISubprogram(name: "DBGMCU_APB2PeriphConfig", scope: !751, file: !751, line: 146, type: !1743, scopeLine: 147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !750, retainedNodes: !13983)
!13983 = !{!13984, !13985}
!13984 = !DILocalVariable(name: "DBGMCU_Periph", arg: 1, scope: !13982, file: !751, line: 146, type: !20)
!13985 = !DILocalVariable(name: "NewState", arg: 2, scope: !13982, file: !751, line: 146, type: !856)
!13986 = !DILocation(line: 0, scope: !13982)
!13987 = !DILocation(line: 152, column: 16, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13982, file: !751, line: 152, column: 7)
!13989 = !DILocation(line: 152, column: 7, scope: !13982)
!13990 = !DILocation(line: 154, column: 20, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13988, file: !751, line: 153, column: 3)
!13992 = !DILocation(line: 155, column: 3, scope: !13991)
!13993 = !DILocation(line: 158, column: 23, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13988, file: !751, line: 157, column: 3)
!13995 = !DILocation(line: 158, column: 20, scope: !13994)
!13996 = !DILocation(line: 0, scope: !13988)
!13997 = !DILocation(line: 160, column: 1, scope: !13982)
!13998 = distinct !DISubprogram(name: "IWDG_WriteAccessCmd", scope: !762, file: !762, line: 129, type: !9639, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !13999)
!13999 = !{!14000}
!14000 = !DILocalVariable(name: "IWDG_WriteAccess", arg: 1, scope: !13998, file: !762, line: 129, type: !64)
!14001 = !DILocation(line: 0, scope: !13998)
!14002 = !DILocation(line: 133, column: 14, scope: !13998)
!14003 = !DILocation(line: 133, column: 12, scope: !13998)
!14004 = !DILocation(line: 134, column: 1, scope: !13998)
!14005 = distinct !DISubprogram(name: "IWDG_SetPrescaler", scope: !762, file: !762, line: 149, type: !1430, scopeLine: 150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !14006)
!14006 = !{!14007}
!14007 = !DILocalVariable(name: "IWDG_Prescaler", arg: 1, scope: !14005, file: !762, line: 149, type: !60)
!14008 = !DILocation(line: 0, scope: !14005)
!14009 = !DILocation(line: 153, column: 14, scope: !14005)
!14010 = !DILocation(line: 153, column: 12, scope: !14005)
!14011 = !DILocation(line: 154, column: 1, scope: !14005)
!14012 = distinct !DISubprogram(name: "IWDG_SetReload", scope: !762, file: !762, line: 162, type: !9639, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !14013)
!14013 = !{!14014}
!14014 = !DILocalVariable(name: "Reload", arg: 1, scope: !14012, file: !762, line: 162, type: !64)
!14015 = !DILocation(line: 0, scope: !14012)
!14016 = !DILocation(line: 166, column: 15, scope: !14012)
!14017 = !DILocation(line: 166, column: 13, scope: !14012)
!14018 = !DILocation(line: 167, column: 1, scope: !14012)
!14019 = distinct !DISubprogram(name: "IWDG_ReloadCounter", scope: !762, file: !762, line: 175, type: !1415, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !361)
!14020 = !DILocation(line: 177, column: 12, scope: !14019)
!14021 = !DILocation(line: 178, column: 1, scope: !14019)
!14022 = distinct !DISubprogram(name: "IWDG_Enable", scope: !762, file: !762, line: 201, type: !1415, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !361)
!14023 = !DILocation(line: 203, column: 12, scope: !14022)
!14024 = !DILocation(line: 204, column: 1, scope: !14022)
!14025 = distinct !DISubprogram(name: "IWDG_GetFlagStatus", scope: !762, file: !762, line: 230, type: !9784, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !14026)
!14026 = !{!14027, !14028}
!14027 = !DILocalVariable(name: "IWDG_FLAG", arg: 1, scope: !14025, file: !762, line: 230, type: !64)
!14028 = !DILocalVariable(name: "bitstatus", scope: !14025, file: !762, line: 232, type: !1276)
!14029 = !DILocation(line: 0, scope: !14025)
!14030 = !DILocation(line: 235, column: 14, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14025, file: !762, line: 235, column: 7)
!14032 = !DILocation(line: 235, column: 19, scope: !14031)
!14033 = !DILocation(line: 235, column: 17, scope: !14031)
!14034 = !DILocation(line: 235, column: 30, scope: !14031)
!14035 = !DILocation(line: 244, column: 3, scope: !14025)
!14036 = distinct !DISubprogram(name: "DCMI_DeInit", scope: !774, file: !774, line: 122, type: !1415, scopeLine: 123, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !361)
!14037 = !DILocation(line: 124, column: 12, scope: !14036)
!14038 = !{!14039, !840, i64 0}
!14039 = !{!"", !840, i64 0, !840, i64 4, !840, i64 8, !840, i64 12, !840, i64 16, !840, i64 20, !840, i64 24, !840, i64 28, !840, i64 32, !840, i64 36, !840, i64 40}
!14040 = !DILocation(line: 125, column: 13, scope: !14036)
!14041 = !{!14039, !840, i64 12}
!14042 = !DILocation(line: 126, column: 13, scope: !14036)
!14043 = !{!14039, !840, i64 20}
!14044 = !DILocation(line: 127, column: 14, scope: !14036)
!14045 = !{!14039, !840, i64 24}
!14046 = !DILocation(line: 128, column: 14, scope: !14036)
!14047 = !{!14039, !840, i64 28}
!14048 = !DILocation(line: 129, column: 17, scope: !14036)
!14049 = !{!14039, !840, i64 32}
!14050 = !DILocation(line: 130, column: 17, scope: !14036)
!14051 = !{!14039, !840, i64 36}
!14052 = !DILocation(line: 131, column: 1, scope: !14036)
!14053 = distinct !DISubprogram(name: "DCMI_Init", scope: !774, file: !774, line: 139, type: !14054, scopeLine: 140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14068)
!14054 = !DISubroutineType(types: !14055)
!14055 = !{null, !14056}
!14056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14057, size: 32)
!14057 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCMI_InitTypeDef", file: !14058, line: 67, baseType: !14059)
!14058 = !DIFile(filename: "inc/peripherals/stm32f4xx_dcmi.h", directory: "/home/rvd5542/stm32f4-templates/lib")
!14059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14058, line: 45, size: 112, elements: !14060)
!14060 = !{!14061, !14062, !14063, !14064, !14065, !14066, !14067}
!14061 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_CaptureMode", scope: !14059, file: !14058, line: 47, baseType: !64, size: 16)
!14062 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_SynchroMode", scope: !14059, file: !14058, line: 50, baseType: !64, size: 16, offset: 16)
!14063 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_PCKPolarity", scope: !14059, file: !14058, line: 53, baseType: !64, size: 16, offset: 32)
!14064 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_VSPolarity", scope: !14059, file: !14058, line: 56, baseType: !64, size: 16, offset: 48)
!14065 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_HSPolarity", scope: !14059, file: !14058, line: 59, baseType: !64, size: 16, offset: 64)
!14066 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_CaptureRate", scope: !14059, file: !14058, line: 62, baseType: !64, size: 16, offset: 80)
!14067 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_ExtendedDataMode", scope: !14059, file: !14058, line: 65, baseType: !64, size: 16, offset: 96)
!14068 = !{!14069, !14070}
!14069 = !DILocalVariable(name: "DCMI_InitStruct", arg: 1, scope: !14053, file: !774, line: 139, type: !14056)
!14070 = !DILocalVariable(name: "temp", scope: !14053, file: !774, line: 141, type: !20)
!14071 = !DILocation(line: 0, scope: !14053)
!14072 = !DILocation(line: 154, column: 12, scope: !14053)
!14073 = !DILocation(line: 157, column: 16, scope: !14053)
!14074 = !DILocation(line: 159, column: 8, scope: !14053)
!14075 = !DILocation(line: 164, column: 39, scope: !14053)
!14076 = !DILocation(line: 165, column: 39, scope: !14053)
!14077 = !DILocation(line: 164, column: 56, scope: !14053)
!14078 = !DILocation(line: 166, column: 39, scope: !14053)
!14079 = !DILocation(line: 165, column: 56, scope: !14053)
!14080 = !DILocation(line: 167, column: 39, scope: !14053)
!14081 = !DILocation(line: 166, column: 56, scope: !14053)
!14082 = !DILocation(line: 168, column: 39, scope: !14053)
!14083 = !DILocation(line: 167, column: 55, scope: !14053)
!14084 = !DILocation(line: 169, column: 39, scope: !14053)
!14085 = !DILocation(line: 168, column: 55, scope: !14053)
!14086 = !DILocation(line: 170, column: 39, scope: !14053)
!14087 = !DILocation(line: 169, column: 56, scope: !14053)
!14088 = !DILocation(line: 164, column: 8, scope: !14053)
!14089 = !DILocation(line: 172, column: 12, scope: !14053)
!14090 = !DILocation(line: 173, column: 1, scope: !14053)
!14091 = distinct !DISubprogram(name: "DCMI_StructInit", scope: !774, file: !774, line: 181, type: !14054, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14092)
!14092 = !{!14093}
!14093 = !DILocalVariable(name: "DCMI_InitStruct", arg: 1, scope: !14091, file: !774, line: 181, type: !14056)
!14094 = !DILocation(line: 0, scope: !14091)
!14095 = !DILocation(line: 184, column: 20, scope: !14091)
!14096 = !DILocation(line: 184, column: 37, scope: !14091)
!14097 = !DILocation(line: 185, column: 20, scope: !14091)
!14098 = !DILocation(line: 185, column: 37, scope: !14091)
!14099 = !DILocation(line: 186, column: 20, scope: !14091)
!14100 = !DILocation(line: 186, column: 37, scope: !14091)
!14101 = !DILocation(line: 187, column: 20, scope: !14091)
!14102 = !DILocation(line: 187, column: 36, scope: !14091)
!14103 = !DILocation(line: 188, column: 20, scope: !14091)
!14104 = !DILocation(line: 188, column: 36, scope: !14091)
!14105 = !DILocation(line: 189, column: 20, scope: !14091)
!14106 = !DILocation(line: 189, column: 37, scope: !14091)
!14107 = !DILocation(line: 190, column: 20, scope: !14091)
!14108 = !DILocation(line: 190, column: 42, scope: !14091)
!14109 = !DILocation(line: 191, column: 1, scope: !14091)
!14110 = distinct !DISubprogram(name: "DCMI_CROPConfig", scope: !774, file: !774, line: 201, type: !14111, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14121)
!14111 = !DISubroutineType(types: !14112)
!14112 = !{null, !14113}
!14113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14114, size: 32)
!14114 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCMI_CROPInitTypeDef", file: !14058, line: 86, baseType: !14115)
!14115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14058, line: 72, size: 64, elements: !14116)
!14116 = !{!14117, !14118, !14119, !14120}
!14117 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_VerticalStartLine", scope: !14115, file: !14058, line: 74, baseType: !64, size: 16)
!14118 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_HorizontalOffsetCount", scope: !14115, file: !14058, line: 77, baseType: !64, size: 16, offset: 16)
!14119 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_VerticalLineCount", scope: !14115, file: !14058, line: 80, baseType: !64, size: 16, offset: 32)
!14120 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_CaptureCount", scope: !14115, file: !14058, line: 83, baseType: !64, size: 16, offset: 48)
!14121 = !{!14122}
!14122 = !DILocalVariable(name: "DCMI_CROPInitStruct", arg: 1, scope: !14110, file: !774, line: 201, type: !14113)
!14123 = !DILocation(line: 0, scope: !14110)
!14124 = !DILocation(line: 204, column: 61, scope: !14110)
!14125 = !DILocation(line: 204, column: 30, scope: !14110)
!14126 = !DILocation(line: 205, column: 51, scope: !14110)
!14127 = !DILocation(line: 205, column: 20, scope: !14110)
!14128 = !DILocation(line: 205, column: 74, scope: !14110)
!14129 = !DILocation(line: 204, column: 88, scope: !14110)
!14130 = !DILocation(line: 204, column: 17, scope: !14110)
!14131 = !DILocation(line: 208, column: 51, scope: !14110)
!14132 = !DILocation(line: 208, column: 30, scope: !14110)
!14133 = !DILocation(line: 209, column: 51, scope: !14110)
!14134 = !DILocation(line: 209, column: 20, scope: !14110)
!14135 = !DILocation(line: 209, column: 74, scope: !14110)
!14136 = !DILocation(line: 208, column: 69, scope: !14110)
!14137 = !DILocation(line: 208, column: 17, scope: !14110)
!14138 = !DILocation(line: 210, column: 1, scope: !14110)
!14139 = distinct !DISubprogram(name: "DCMI_CROPCmd", scope: !774, file: !774, line: 219, type: !1502, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14140)
!14140 = !{!14141}
!14141 = !DILocalVariable(name: "NewState", arg: 1, scope: !14139, file: !774, line: 219, type: !856)
!14142 = !DILocation(line: 0, scope: !14139)
!14143 = !DILocation(line: 224, column: 16, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14139, file: !774, line: 224, column: 7)
!14145 = !DILocation(line: 0, scope: !14144)
!14146 = !DILocation(line: 224, column: 7, scope: !14139)
!14147 = !DILocation(line: 234, column: 1, scope: !14139)
!14148 = distinct !DISubprogram(name: "DCMI_SetEmbeddedSynchroCodes", scope: !774, file: !774, line: 242, type: !14149, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14159)
!14149 = !DISubroutineType(types: !14150)
!14150 = !{null, !14151}
!14151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14152, size: 32)
!14152 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCMI_CodesInitTypeDef", file: !14058, line: 97, baseType: !14153)
!14153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14058, line: 91, size: 32, elements: !14154)
!14154 = !{!14155, !14156, !14157, !14158}
!14155 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_FrameStartCode", scope: !14153, file: !14058, line: 93, baseType: !60, size: 8)
!14156 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_LineStartCode", scope: !14153, file: !14058, line: 94, baseType: !60, size: 8, offset: 8)
!14157 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_LineEndCode", scope: !14153, file: !14058, line: 95, baseType: !60, size: 8, offset: 16)
!14158 = !DIDerivedType(tag: DW_TAG_member, name: "DCMI_FrameEndCode", scope: !14153, file: !14058, line: 96, baseType: !60, size: 8, offset: 24)
!14159 = !{!14160}
!14160 = !DILocalVariable(name: "DCMI_CodesInitStruct", arg: 1, scope: !14148, file: !774, line: 242, type: !14151)
!14161 = !DILocation(line: 0, scope: !14148)
!14162 = !DILocation(line: 244, column: 49, scope: !14148)
!14163 = !DILocation(line: 244, column: 27, scope: !14148)
!14164 = !DILocation(line: 245, column: 60, scope: !14148)
!14165 = !DILocation(line: 245, column: 28, scope: !14148)
!14166 = !DILocation(line: 245, column: 79, scope: !14148)
!14167 = !DILocation(line: 244, column: 69, scope: !14148)
!14168 = !DILocation(line: 246, column: 60, scope: !14148)
!14169 = !DILocation(line: 246, column: 28, scope: !14148)
!14170 = !DILocation(line: 246, column: 77, scope: !14148)
!14171 = !DILocation(line: 245, column: 84, scope: !14148)
!14172 = !DILocation(line: 247, column: 60, scope: !14148)
!14173 = !DILocation(line: 247, column: 28, scope: !14148)
!14174 = !DILocation(line: 247, column: 78, scope: !14148)
!14175 = !DILocation(line: 246, column: 83, scope: !14148)
!14176 = !DILocation(line: 244, column: 14, scope: !14148)
!14177 = !DILocation(line: 248, column: 1, scope: !14148)
!14178 = distinct !DISubprogram(name: "DCMI_JPEGCmd", scope: !774, file: !774, line: 257, type: !1502, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14179)
!14179 = !{!14180}
!14180 = !DILocalVariable(name: "NewState", arg: 1, scope: !14178, file: !774, line: 257, type: !856)
!14181 = !DILocation(line: 0, scope: !14178)
!14182 = !DILocation(line: 262, column: 16, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14178, file: !774, line: 262, column: 7)
!14184 = !DILocation(line: 0, scope: !14183)
!14185 = !DILocation(line: 262, column: 7, scope: !14178)
!14186 = !DILocation(line: 272, column: 1, scope: !14178)
!14187 = distinct !DISubprogram(name: "DCMI_Cmd", scope: !774, file: !774, line: 295, type: !1502, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14188)
!14188 = !{!14189}
!14189 = !DILocalVariable(name: "NewState", arg: 1, scope: !14187, file: !774, line: 295, type: !856)
!14190 = !DILocation(line: 0, scope: !14187)
!14191 = !DILocation(line: 300, column: 16, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14187, file: !774, line: 300, column: 7)
!14193 = !DILocation(line: 0, scope: !14192)
!14194 = !DILocation(line: 300, column: 7, scope: !14187)
!14195 = !DILocation(line: 310, column: 1, scope: !14187)
!14196 = distinct !DISubprogram(name: "DCMI_CaptureCmd", scope: !774, file: !774, line: 318, type: !1502, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14197)
!14197 = !{!14198}
!14198 = !DILocalVariable(name: "NewState", arg: 1, scope: !14196, file: !774, line: 318, type: !856)
!14199 = !DILocation(line: 0, scope: !14196)
!14200 = !DILocation(line: 323, column: 16, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14196, file: !774, line: 323, column: 7)
!14202 = !DILocation(line: 0, scope: !14201)
!14203 = !DILocation(line: 323, column: 7, scope: !14196)
!14204 = !DILocation(line: 333, column: 1, scope: !14196)
!14205 = distinct !DISubprogram(name: "DCMI_ReadData", scope: !774, file: !774, line: 340, type: !2372, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !361)
!14206 = !DILocation(line: 342, column: 16, scope: !14205)
!14207 = !{!14039, !840, i64 40}
!14208 = !DILocation(line: 342, column: 3, scope: !14205)
!14209 = distinct !DISubprogram(name: "DCMI_ITConfig", scope: !774, file: !774, line: 373, type: !14210, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14212)
!14210 = !DISubroutineType(types: !14211)
!14211 = !{null, !64, !856}
!14212 = !{!14213, !14214}
!14213 = !DILocalVariable(name: "DCMI_IT", arg: 1, scope: !14209, file: !774, line: 373, type: !64)
!14214 = !DILocalVariable(name: "NewState", arg: 2, scope: !14209, file: !774, line: 373, type: !856)
!14215 = !DILocation(line: 0, scope: !14209)
!14216 = !DILocation(line: 379, column: 16, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14209, file: !774, line: 379, column: 7)
!14218 = !DILocation(line: 379, column: 7, scope: !14209)
!14219 = !DILocation(line: 0, scope: !14217)
!14220 = !DILocation(line: 382, column: 15, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14217, file: !774, line: 380, column: 3)
!14222 = !DILocation(line: 383, column: 3, scope: !14221)
!14223 = !DILocation(line: 387, column: 29, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14217, file: !774, line: 385, column: 3)
!14225 = !DILocation(line: 387, column: 18, scope: !14224)
!14226 = !DILocation(line: 387, column: 15, scope: !14224)
!14227 = !DILocation(line: 389, column: 1, scope: !14209)
!14228 = distinct !DISubprogram(name: "DCMI_GetFlagStatus", scope: !774, file: !774, line: 410, type: !9784, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14229)
!14229 = !{!14230, !14231, !14232, !14233}
!14230 = !DILocalVariable(name: "DCMI_FLAG", arg: 1, scope: !14228, file: !774, line: 410, type: !64)
!14231 = !DILocalVariable(name: "bitstatus", scope: !14228, file: !774, line: 412, type: !1276)
!14232 = !DILocalVariable(name: "dcmireg", scope: !14228, file: !774, line: 413, type: !20)
!14233 = !DILocalVariable(name: "tempreg", scope: !14228, file: !774, line: 413, type: !20)
!14234 = !DILocation(line: 0, scope: !14228)
!14235 = !DILocation(line: 419, column: 14, scope: !14228)
!14236 = !DILocation(line: 419, column: 36, scope: !14228)
!14237 = !DILocation(line: 421, column: 7, scope: !14228)
!14238 = !DILocation(line: 428, column: 3, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14240, file: !774, line: 426, column: 3)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !774, line: 425, column: 12)
!14241 = distinct !DILexicalBlock(scope: !14228, file: !774, line: 421, column: 7)
!14242 = !DILocation(line: 0, scope: !14241)
!14243 = !DILocation(line: 434, column: 16, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14228, file: !774, line: 434, column: 7)
!14245 = !DILocation(line: 434, column: 29, scope: !14244)
!14246 = !DILocation(line: 443, column: 3, scope: !14228)
!14247 = distinct !DISubprogram(name: "DCMI_ClearFlag", scope: !774, file: !774, line: 457, type: !9639, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14248)
!14248 = !{!14249}
!14249 = !DILocalVariable(name: "DCMI_FLAG", arg: 1, scope: !14247, file: !774, line: 457, type: !64)
!14250 = !DILocation(line: 0, scope: !14247)
!14251 = !DILocation(line: 465, column: 15, scope: !14247)
!14252 = !DILocation(line: 465, column: 13, scope: !14247)
!14253 = !DILocation(line: 466, column: 1, scope: !14247)
!14254 = distinct !DISubprogram(name: "DCMI_GetITStatus", scope: !774, file: !774, line: 479, type: !14255, scopeLine: 480, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14257)
!14255 = !DISubroutineType(types: !14256)
!14256 = !{!1359, !64}
!14257 = !{!14258, !14259, !14260}
!14258 = !DILocalVariable(name: "DCMI_IT", arg: 1, scope: !14254, file: !774, line: 479, type: !64)
!14259 = !DILocalVariable(name: "bitstatus", scope: !14254, file: !774, line: 481, type: !1359)
!14260 = !DILocalVariable(name: "itstatus", scope: !14254, file: !774, line: 482, type: !20)
!14261 = !DILocation(line: 0, scope: !14254)
!14262 = !DILocation(line: 487, column: 20, scope: !14254)
!14263 = !{!14039, !840, i64 16}
!14264 = !DILocation(line: 487, column: 27, scope: !14254)
!14265 = !DILocation(line: 487, column: 25, scope: !14254)
!14266 = !DILocation(line: 489, column: 17, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14254, file: !774, line: 489, column: 7)
!14268 = !DILocation(line: 497, column: 3, scope: !14254)
!14269 = distinct !DISubprogram(name: "DCMI_ClearITPendingBit", scope: !774, file: !774, line: 511, type: !9639, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !773, retainedNodes: !14270)
!14270 = !{!14271}
!14271 = !DILocalVariable(name: "DCMI_IT", arg: 1, scope: !14269, file: !774, line: 511, type: !64)
!14272 = !DILocation(line: 0, scope: !14269)
!14273 = !DILocation(line: 516, column: 15, scope: !14269)
!14274 = !DILocation(line: 516, column: 13, scope: !14269)
!14275 = !DILocation(line: 517, column: 1, scope: !14269)
!14276 = distinct !DISubprogram(name: "PWR_DeInit", scope: !792, file: !792, line: 120, type: !1415, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !361)
!14277 = !DILocation(line: 122, column: 3, scope: !14276)
!14278 = !DILocation(line: 123, column: 3, scope: !14276)
!14279 = !DILocation(line: 124, column: 1, scope: !14276)
!14280 = distinct !DISubprogram(name: "PWR_BackupAccessCmd", scope: !792, file: !792, line: 135, type: !1502, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14281)
!14281 = !{!14282}
!14282 = !DILocalVariable(name: "NewState", arg: 1, scope: !14280, file: !792, line: 135, type: !856)
!14283 = !DILocation(line: 0, scope: !14280)
!14284 = !DILocation(line: 140, column: 32, scope: !14280)
!14285 = !DILocation(line: 141, column: 1, scope: !14280)
!14286 = distinct !DISubprogram(name: "PWR_PVDLevelConfig", scope: !792, file: !792, line: 181, type: !831, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14287)
!14287 = !{!14288, !14289}
!14288 = !DILocalVariable(name: "PWR_PVDLevel", arg: 1, scope: !14286, file: !792, line: 181, type: !20)
!14289 = !DILocalVariable(name: "tmpreg", scope: !14286, file: !792, line: 183, type: !20)
!14290 = !DILocation(line: 0, scope: !14286)
!14291 = !DILocation(line: 188, column: 17, scope: !14286)
!14292 = !DILocation(line: 191, column: 10, scope: !14286)
!14293 = !DILocation(line: 194, column: 10, scope: !14286)
!14294 = !DILocation(line: 197, column: 11, scope: !14286)
!14295 = !DILocation(line: 198, column: 1, scope: !14286)
!14296 = distinct !DISubprogram(name: "PWR_PVDCmd", scope: !792, file: !792, line: 206, type: !1502, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14297)
!14297 = !{!14298}
!14298 = !DILocalVariable(name: "NewState", arg: 1, scope: !14296, file: !792, line: 206, type: !856)
!14299 = !DILocation(line: 0, scope: !14296)
!14300 = !DILocation(line: 211, column: 33, scope: !14296)
!14301 = !DILocation(line: 212, column: 1, scope: !14296)
!14302 = distinct !DISubprogram(name: "PWR_WakeUpPinCmd", scope: !792, file: !792, line: 240, type: !1502, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14303)
!14303 = !{!14304}
!14304 = !DILocalVariable(name: "NewState", arg: 1, scope: !14302, file: !792, line: 240, type: !856)
!14305 = !DILocation(line: 0, scope: !14302)
!14306 = !DILocation(line: 245, column: 34, scope: !14302)
!14307 = !DILocation(line: 246, column: 1, scope: !14302)
!14308 = distinct !DISubprogram(name: "PWR_BackupRegulatorCmd", scope: !792, file: !792, line: 298, type: !1502, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14309)
!14309 = !{!14310}
!14310 = !DILocalVariable(name: "NewState", arg: 1, scope: !14308, file: !792, line: 298, type: !856)
!14311 = !DILocation(line: 0, scope: !14308)
!14312 = !DILocation(line: 303, column: 33, scope: !14308)
!14313 = !DILocation(line: 304, column: 1, scope: !14308)
!14314 = distinct !DISubprogram(name: "PWR_MainRegulatorModeConfig", scope: !792, file: !792, line: 318, type: !831, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14315)
!14315 = !{!14316}
!14316 = !DILocalVariable(name: "PWR_Regulator_Voltage", arg: 1, scope: !14314, file: !792, line: 318, type: !20)
!14317 = !DILocation(line: 0, scope: !14314)
!14318 = !DILocation(line: 323, column: 29, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14314, file: !792, line: 323, column: 7)
!14320 = !DILocation(line: 0, scope: !14319)
!14321 = !DILocation(line: 323, column: 7, scope: !14314)
!14322 = !DILocation(line: 331, column: 1, scope: !14314)
!14323 = distinct !DISubprogram(name: "PWR_FlashPowerDownCmd", scope: !792, file: !792, line: 360, type: !1502, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14324)
!14324 = !{!14325}
!14325 = !DILocalVariable(name: "NewState", arg: 1, scope: !14323, file: !792, line: 360, type: !856)
!14326 = !DILocation(line: 0, scope: !14323)
!14327 = !DILocation(line: 365, column: 33, scope: !14323)
!14328 = !DILocation(line: 366, column: 1, scope: !14323)
!14329 = distinct !DISubprogram(name: "PWR_EnterSTOPMode", scope: !792, file: !792, line: 500, type: !14330, scopeLine: 501, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14332)
!14330 = !DISubroutineType(types: !14331)
!14331 = !{null, !20, !60}
!14332 = !{!14333, !14334, !14335}
!14333 = !DILocalVariable(name: "PWR_Regulator", arg: 1, scope: !14329, file: !792, line: 500, type: !20)
!14334 = !DILocalVariable(name: "PWR_STOPEntry", arg: 2, scope: !14329, file: !792, line: 500, type: !60)
!14335 = !DILocalVariable(name: "tmpreg", scope: !14329, file: !792, line: 502, type: !20)
!14336 = !DILocation(line: 0, scope: !14329)
!14337 = !DILocation(line: 509, column: 17, scope: !14329)
!14338 = !DILocation(line: 511, column: 10, scope: !14329)
!14339 = !DILocation(line: 514, column: 10, scope: !14329)
!14340 = !DILocation(line: 517, column: 11, scope: !14329)
!14341 = !DILocation(line: 520, column: 12, scope: !14329)
!14342 = !DILocation(line: 523, column: 20, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14329, file: !792, line: 523, column: 6)
!14344 = !DILocation(line: 523, column: 6, scope: !14329)
!14345 = !DILocation(line: 282, column: 3, scope: !14346, inlinedAt: !14347)
!14346 = distinct !DISubprogram(name: "__WFI", scope: !7612, file: !7612, line: 280, type: !1415, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !361)
!14347 = distinct !DILocation(line: 526, column: 5, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14343, file: !792, line: 524, column: 3)
!14349 = !{i32 688688}
!14350 = !DILocation(line: 527, column: 3, scope: !14348)
!14351 = !DILocation(line: 293, column: 3, scope: !14352, inlinedAt: !14353)
!14352 = distinct !DISubprogram(name: "__WFE", scope: !7612, file: !7612, line: 291, type: !1415, scopeLine: 292, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !361)
!14353 = distinct !DILocation(line: 531, column: 5, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14343, file: !792, line: 529, column: 3)
!14355 = !{i32 688970}
!14356 = !DILocation(line: 534, column: 12, scope: !14329)
!14357 = !DILocation(line: 535, column: 1, scope: !14329)
!14358 = distinct !DISubprogram(name: "PWR_EnterSTANDBYMode", scope: !792, file: !792, line: 548, type: !1415, scopeLine: 549, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !361)
!14359 = !DILocation(line: 551, column: 11, scope: !14358)
!14360 = !DILocation(line: 554, column: 11, scope: !14358)
!14361 = !DILocation(line: 557, column: 12, scope: !14358)
!14362 = !DILocation(line: 282, column: 3, scope: !14346, inlinedAt: !14363)
!14363 = distinct !DILocation(line: 564, column: 3, scope: !14358)
!14364 = !DILocation(line: 565, column: 1, scope: !14358)
!14365 = distinct !DISubprogram(name: "PWR_GetFlagStatus", scope: !792, file: !792, line: 605, type: !2717, scopeLine: 606, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14366)
!14366 = !{!14367, !14368}
!14367 = !DILocalVariable(name: "PWR_FLAG", arg: 1, scope: !14365, file: !792, line: 605, type: !20)
!14368 = !DILocalVariable(name: "bitstatus", scope: !14365, file: !792, line: 607, type: !1276)
!14369 = !DILocation(line: 0, scope: !14365)
!14370 = !DILocation(line: 612, column: 13, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14365, file: !792, line: 612, column: 7)
!14372 = !DILocation(line: 612, column: 17, scope: !14371)
!14373 = !DILocation(line: 612, column: 29, scope: !14371)
!14374 = !DILocation(line: 621, column: 3, scope: !14365)
!14375 = distinct !DISubprogram(name: "PWR_ClearFlag", scope: !792, file: !792, line: 632, type: !831, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !14376)
!14376 = !{!14377}
!14377 = !DILocalVariable(name: "PWR_FLAG", arg: 1, scope: !14375, file: !792, line: 632, type: !20)
!14378 = !DILocation(line: 0, scope: !14375)
!14379 = !DILocation(line: 637, column: 24, scope: !14375)
!14380 = !DILocation(line: 637, column: 11, scope: !14375)
!14381 = !DILocation(line: 638, column: 1, scope: !14375)
